{"version":3,"sources":["../../component-lib/src/stores/reducer/settings/interface.ts","../../component-lib/src/stores/reducer/settings/reducer.ts","../../component-lib/src/stores/reducer/settings/hook.ts","../../component-lib/src/stores/reducer/modals/reducer.ts","../../component-lib/src/stores/reducer/modals/interface.ts","../../component-lib/src/stores/reducer/modals/hook.ts","../../common-resources/assets/svg/loading.svg","../../component-lib/src/components/basic-lib/btns/Button.tsx","../../component-lib/src/components/basic-lib/btns/BtnPercentage.tsx","../../component-lib/src/components/basic-lib/form/hooks/useFocusRef.ts","../../component-lib/src/components/panel/Interface.ts","../../component-lib/src/components/basic-lib/form/input/InputSearch.tsx","../../component-lib/src/components/panel/Amm/Interface.tsx","../../component-lib/src/components/panel/components/BasicACoinTrade.tsx","../../component-lib/src/components/panel/components/DepositWrap.tsx","../../component-lib/src/components/panel/components/ResetWrap.tsx","../../component-lib/src/components/panel/components/WithdrawWrap.tsx","../../component-lib/src/components/panel/components/TransferWrap.tsx","../../component-lib/src/components/panel/components/Styled.ts","../../component-lib/src/components/panel/components/tool/SlippagePanel.tsx","../../component-lib/src/components/panel/components/tool/ToolBarItems.tsx","../../component-lib/src/components/panel/components/tool/TradeMenuList.tsx","../../component-lib/src/components/panel/components/SwapWrap/SwapMenuList.tsx","../../component-lib/src/components/panel/components/SwapWrap/SwapTradeWrap.tsx","../../component-lib/src/components/panel/components/AmmWrap/styled.ts","../../component-lib/src/components/panel/components/AmmWrap/AmmDeposit.tsx","../../component-lib/src/components/panel/components/AmmWrap/AmmWithDraw.tsx","../../component-lib/src/components/panel/components/hook/BasicACoinPanelHook.tsx","../../component-lib/src/components/panel/components/tool/Refresh.tsx","../../component-lib/src/components/panel/Swap/index.tsx","../../component-lib/src/components/panel/Deposit/DepositPanel.tsx","../../component-lib/src/components/panel/Reset/ResetPanel.tsx","../../component-lib/src/components/panel/Withdraw/WithdrawPanel.tsx","../../component-lib/src/components/panel/Transfer/TransferPanel.tsx","../../component-lib/src/components/panel/ModalPanel.tsx","../../component-lib/src/components/styled.ts","../../component-lib/src/components/panel/Amm/AmmPanel.tsx","../../component-lib/src/components/basic-lib/form/input/InputSelect.tsx","../../component-lib/src/components/basic-lib/form/hooks/usePanelRef.ts","../../component-lib/src/components/basic-lib/form/input/style.ts","../../component-lib/src/components/basic-lib/form/input/InputButton.tsx","../../component-lib/src/components/basic-lib/form/input/DatePicker.tsx","../../component-lib/src/components/basic-lib/form/input/Default.tsx","../../component-lib/src/components/basic-lib/form/input/InputCoin.tsx","../../component-lib/src/components/basic-lib/lists/HeadMenuItem.tsx","../../component-lib/src/components/basic-lib/lists/CoinList.tsx","../../component-lib/src/components/basic-lib/lists/HeadToolbar.tsx","../../component-lib/src/components/basic-lib/lists/SubMenuList.tsx","../../component-lib/src/components/basic-lib/lists/index.ts","../../component-lib/src/components/basic-lib/lists/Notification.tsx","../../component-lib/src/components/basic-lib/panel/SwitchPanel.tsx","../../component-lib/src/components/basic-lib/panel/SubMenu.tsx","../../component-lib/src/components/basic-lib/empty/Empty.tsx","../../component-lib/src/components/basic-lib/tables/Table.tsx","../../component-lib/src/components/basic-lib/tables/components/RowRenders/RowDepthFormatter.tsx","../../component-lib/src/components/basic-lib/tables/components/HeaderRenderers/SortableHeaderCell.tsx","../../component-lib/src/components/basic-lib/tables/components/Formatters/ImageFormatter.tsx","../../component-lib/src/components/basic-lib/tables/components/Formatters/CellExpanderFormatter.tsx","../../component-lib/src/components/basic-lib/tables/components/Formatters/ChildRowDeleteButton.tsx","../../component-lib/src/components/basic-lib/popover/Interface.ts","../../component-lib/src/components/basic-lib/tables/components/Formatters/CellDepthFormatter.tsx","../../component-lib/src/components/basic-lib/popover/Popover.tsx","../../component-lib/src/components/basic-lib/resource/hook/useImage.ts","../../component-lib/src/components/tableList/orderHistoryTable/components/Filter.tsx","../../component-lib/src/components/basic-lib/table-pagination/TablePagination.tsx","../../component-lib/src/components/basic-lib/Tags/index.tsx","../../component-lib/src/components/tableList/QuoteTable/QuoteTable.tsx","../../component-lib/src/components/tableList/orderHistoryTable/SingleOrderHistoryTable.tsx","../../component-lib/src/components/tableList/transactionsTable/Interface.ts","../../component-lib/src/components/tableList/orderHistoryTable/OrderHistoryTable.tsx","../../component-lib/src/components/tableList/transactionsTable/components/Filter.tsx","../../component-lib/src/components/tableList/transactionsTable/TransactionTable.tsx","../../component-lib/src/components/tableList/assetsTable/components/Filter.tsx","../../component-lib/src/components/tableList/assetsTable/AssetsTable.tsx","../../component-lib/src/components/tableList/tradeTable/components/Filter.tsx","../../component-lib/src/components/tableList/ammRecordTable/Interface.ts","../../component-lib/src/components/tableList/tradeTable/TradeTable.tsx","../../component-lib/src/components/tableList/poolsTable/PoolsTable.tsx","../../component-lib/src/components/tableList/ammRecordTable/AmmReordTable.tsx","../../component-lib/src/components/basic-lib/tables/table.stories.tsx","../../component-lib/src/components/tableList/tradeFilterTable/componnents/HeaderCell.tsx","../../component-lib/src/components/tableList/myPoolTable/MyPoolTable.tsx","../../component-lib/src/components/tableList/tradeFilterTable/TradeFilterTable.tsx","../../component-lib/src/components/tableList/ammTable/components/Filter.tsx","../../component-lib/src/components/tableList/ammTable/interface.ts","../../component-lib/src/components/tableList/ammTable/AmmTable.tsx","../../component-lib/src/components/modal/WalletConnect/Interface.ts","../../common-resources/assets/svg/logo.svg","../../component-lib/src/components/block/SettingPanel.tsx","../../component-lib/src/components/modal/QRCode/QRCode.tsx","../../component-lib/src/components/modal/WalletConnect/ModalWalletConnect.tsx","../../component-lib/src/components/modal/WalletConnect/WalletConnectQRCode.tsx","../../component-lib/src/components/modal/AccountInfo/Interface.ts","../../component-lib/src/components/modal/ModalPanelBase.tsx","../../component-lib/src/components/modal/WalletConnect/WalletProcess.tsx","../../component-lib/src/components/modal/WalletConnect/ProviderMenu.tsx","../../component-lib/src/components/modal/WalletConnect/SuccessConnect.tsx","../../component-lib/src/components/modal/WalletConnect/FailedConnect.tsx","../../component-lib/src/components/modal/AccountInfo/AccountBase.tsx","../../component-lib/src/components/header/toolbar/Interface.ts","../../component-lib/src/components/modal/AccountInfo/HadAccount.tsx","../../component-lib/src/components/modal/AccountInfo/NoAccount.tsx","../../component-lib/src/components/modal/AccountInfo/ApproveAccount.tsx","../../component-lib/src/components/modal/AccountInfo/Depositing.tsx","../../component-lib/src/components/modal/AccountInfo/FailedGroup.tsx","../../component-lib/src/components/modal/AccountInfo/ModalAccount.tsx","../../component-lib/src/components/modal/AccountInfo/SuccessUnlock.tsx","../../component-lib/src/components/modal/AccountInfo/AccountProcess.tsx","../../component-lib/src/components/modal/AccountInfo/QRAddressPanel.tsx","../../component-lib/src/components/header/toolbar/WalletConnect.tsx","../../component-lib/src/components/charts/constant.ts","../../component-lib/src/components/header/toolbar/index.tsx","../../component-lib/src/components/header/Header.tsx","../../component-lib/src/components/block/TradeTitle.tsx","../../component-lib/src/components/block/AssetTitle.tsx","../../component-lib/src/components/charts/scaleAreaChart/data.tsx","../../component-lib/src/components/charts/scaleAreaChart/TrendChart/index.tsx","../../component-lib/src/components/charts/scaleAreaChart/DepthChart/index.tsx","../../component-lib/src/components/charts/doughnutChart/DoughnutChart.tsx","../../component-lib/src/components/charts/scaleAreaChart/KlineChart/KlineChart.tsx","../../component-lib/src/static.ts","../../component-lib/src/components/charts/scaleAreaChart/ScaleAreaChart.tsx","../../component-lib/src/components/block/MarketBlock.tsx","../../component-lib/src/components/block/AmmCard.tsx","../../component-lib/src/components/toast/index.tsx","../../component-lib/src/components/bottomRule/index.tsx","../../common-resources/static-resources/src/i18n/index.ts","../../common-resources/static-resources/src/i18n/en_US/index.ts","../../common-resources/static-resources/src/i18n/en_US/common.ts","../../common-resources/static-resources/src/i18n/en_US/layout.ts","../../common-resources/static-resources/src/i18n/en_US/tables.ts","../../common-resources/static-resources/src/i18n/en_US/error.ts","../../common-resources/static-resources/src/i18n/zh_CN/index.ts","../../common-resources/static-resources/src/i18n/zh_CN/common.ts","../../common-resources/static-resources/src/i18n/zh_CN/layout.ts","../../common-resources/static-resources/src/i18n/zh_CN/tables.ts","../../common-resources/static-resources/src/i18n/zh_CN/error.ts","../../common-resources/static-resources/src/themes/interface.ts","../../common-resources/static-resources/src/svg/Icon.tsx","../../common-resources/static-resources/src/themes/css/color-lib.ts","../../common-resources/static-resources/src/themes/css/reset.tsx","../../common-resources/static-resources/src/themes/fonts/english/Inter-Medium.ttf","../../common-resources/static-resources/src/themes/fonts/english/DINCondensed/363123_0_0.ttf","../../common-resources/static-resources/src/themes/css/global.tsx","../../common-resources/static-resources/src/themes/overrides/utils.ts","../../common-resources/static-resources/src/themes/overrides/overrides-mui.ts","../../common-resources/static-resources/src/themes/overrides/overrides-date-pick.ts","../../common-resources/static-resources/src/themes/overrides/muTheme.ts","../../common-resources/static-resources/src/themes/globalSetup.ts","../../common-resources/static-resources/src/loopring-interface/HeaderInterface.ts","../../common-resources/static-resources/src/loopring-interface/WallectInterface.ts","../../common-resources/static-resources/src/constant/connect.ts","../../common-resources/static-resources/src/themes/index.ts","../../common-resources/static-resources/src/constant/walletConnector.ts","../../common-resources/static-resources/src/constant/setting.ts","../../common-resources/static-resources/src/constant/market.ts","../../common-resources/static-resources/src/constant/chart.ts","../../common-resources/static-resources/src/constant/trade.ts","../../common-resources/static-resources/src/constant/router.tsx","../../common-resources/static-resources/src/constant/table.ts","../../common-resources/static-resources/src/constant/loopring.ts","../../common-resources/static-resources/src/constant/account.ts","../../common-resources/static-resources/src/constant/sagaStatus.ts","../../common-resources/static-resources/src/utils/util.ts","../../common-resources/static-resources/src/error/errorMap.ts","../../common-resources/static-resources/src/error/index.ts","../../common-resources/static-resources/provider.tsx","../../web3-provider/src/command.ts","../../web3-provider/src/walletServices.ts","../../web3-provider/src/walletConnect/provider.ts","../../web3-provider/src/metamask/provider.ts","../../web3-provider/src/providers.ts","../../web3-provider/src/hook.ts"],"names":["PlatFormType","initialState","themeMode","ThemeType","dark","language","i18n","platform","desktop","currency","Currency","dollar","upColor","UpColor","green","coinJson","imgConfig","slippage","settingsSlice","createSlice","name","reducers","setTheme","state","action","payload","setLanguage","changeLanguage","moment","updateLocale","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","w","ww","M","MM","y","yy","setPlatform","setCurrency","setUpColor","setSlippage","setCoinJson","actions","useSettings","settings","useSelector","dispatch","useDispatch","React","useCallback","value","ModalType","modalsSlice","isShowTransfer","isShow","props","isShowWithdraw","isShowDeposit","isShowResetAccount","isShowSwap","isShowAmm","isShowConnect","step","isShowAccount","setShowAmm","Object","keys","map","key","setShowSwap","setShowTransfer","setShowWithdraw","setShowDeposit","setShowResetAccount","setShowConnect","setShowAccount","useOpenModals","modals","Button","styled","MuButton","loading","theme","colorBase","primary","loadingSvg","ToggleButtonGroup","t","setValue","handleChange","size","tgItemJSXs","data","exclusive","onChange","_e","disabled","JSX","tlabel","ToggleButton","ModalCloseButton","onClose","Box","className","alignSelf","position","zIndex","marginTop","marginRight","IconButton","color","onClick","event","ModalBackButton","onBack","marginLeft","style","transform","QRButtonStyle","onQRClick","PointOnStyled","border","defaultFrame","d_W","d_R","c_key","PointStyled","Track","div","Thumb","BtnPercentage","selected","handleChanged","anchors","_anchors","length","_handleChanged","item","width","display","boxSizing","paddingY","flex","height","margin","component","alignItems","justifyContent","index","Fragment","left","Typography","fontSize","top","variant","useFocusRef","shouldFocusOn","callback","ref","useRef","useEffect","current","focus","TradeBtnStatus","SwitchType","SwapType","InputSearch","forwardRef","_ref","rest","OutlinedInput","placeholder","target","startAdornment","InputAdornment","AmmPanelType","BasicACoinTrade","tradeData","onChangeEvent","coinMap","walletMap","inputButtonDefaultProps","handleError","inputBtnRef","inputButtonProps","handleOnClick","_event","to","handleCountChange","_tradeData","tradeValue","belong","balance","error","message","inputBtnProps","subLabel","emptyText","placeholderText","maxAllow","InputButton","undefined","inputData","DepositWrap","title","description","depositBtnStatus","onDepositClick","isNewAccount","addressDefault","handleOnAddressChange","handleAddressError","wait","globalSetup","getDisabled","useState","address","setAddress","addressError","setAddressError","debounceAddress","debounce","handleClear","_handleOnAddressChange","label","Grid","paddingLeft","paddingRight","container","direction","textAlign","marginBottom","Trans","i18nKey","TypographyGood","helperText","fullWidth","IconClearStyled","LOADING","DISABLED","ResetWrap","resetBtnStatus","onResetClick","fee","TypographyStrong","count","price","WithdrawWrap","withdrawTypes","WithdrawTypes","withdrawType","chargeFeeTokenList","chargeFeeToken","onWithdrawClick","withdrawBtnStatus","handleFeeChange","handleWithdrawTypeChange","_withdrawType","setWithdrawType","feeIndex","setFeeIndex","_handleWithdrawTypeChange","e","_handleFeeChange","Number","minHeight","flexWrap","required","SelectProps","IconComponent","DropDownIcon","RadioGroup","row","FormControlLabel","control","Radio","id","select","withNoCheckIcon","ListItemText","sx","secondary","TransferWrap","onTransferClick","transferBtnStatus","LinearProgress","borderRadius","linearProgressClasses","colorPrimary","backgroundColor","textSecondary","bar","IconButtonStyled","fontDefault","h4","unit","CountDownStyled","css","h6","Styled","InputStyled","CurrencyInput","SlippagePanel","slippageList","cValue","setcValue","inputEle","handleContChange","_name","toggleData","reduce","pre","RegExp","test","toString","replace","isNaN","allowDecimals","decimalsLimit","onValueChange","maxLength","suffix","push","padding","newValue","ToolBarItemBack","edge","transformOrigin","TradeMenuList","_height","inputSelectProps","focusOnInput","allowScroll","panelRender","useTheme","backElement","useMemo","Link","filterBy","coinInfo","filterString","simpleName","InputSelect","CoinMenu","handleSelect","itemKey","EmptyDefault","SwapMenuList","tradeCalcData","swapData","type","sellCoinInfoMap","buyCoinInfoMap","handleOnChangeIndex","SwapTradeWrap","isStob","switchStobEvent","swapBtnStatus","onSwapClick","swapBtnI18nKey","tokenSellProps","tokenBuyProps","sellRef","buyRef","slippageArray","SlippageTolerance","concat","setError","_isStoB","setIsStoB","_onSwitchStob","ibData","covertOnClick","sell","buy","_onSlippageChange","customSlippage","popupState","close","__cache__","_error","propsSell","propsBuy","usePopupState","popupId","split","arg","priceImpact","parseFloat","toPrecision","EmptyValueTag","minimumReceived","flexDirection","flexBasis","isHideError","marginY","lineHeight","StoB","BtoS","spacing","paddingBottom","bindHover","minWidth","PopoverPure","bindPopover","anchorOrigin","vertical","horizontal","SvgStyled","AmmDepositWrap","ammDepositBtnStatus","ammCalcData","ammDepositBtnI18nKey","onAmmAddClick","tokenAProps","tokenBProps","ammData","coinARef","coinBRef","console","log","coinInfoMap","propsA","propsB","InputCoin","order","coinA","coinB","AtoB","feeJoin","AmmWithdrawWrap","ammWithdrawBtnStatus","onAmmRemoveClick","ammWithdrawBtnI18nKey","selectedPercentage","_selectedPercentage","setSelectedPercentage","flag","feeExit","useBasicTrade","handlePanelEvent","switchData","setSwitchData","setIndex","useDeepCompareEffect","_index","a","toolBarItemBack","CountDownIcon","memo","onRefreshData","countDownRef","refreshCount","setRefreshCount","nodeTimer","logoTimer","startCountDown","classList","add","remove","refreshTime","clearInterval","setInterval","decreaseNum","_refresh","clearTimeout","setTimeout","prev","cleanSubscribe","SwapPanel","withTranslation","withRef","swapTradeData","handleSwapPanelEvent","coinSell","coinBuy","setSwapData","countBuy","countSell","panelList","element","toolBarItem","SwitchPanel","DepositPanel","ResetPanel","WithdrawPanel","TransferPanel","Modal","open","content","_width","SwitchPanelStyled","boxShadow","ModalPanel","transferProps","withDrawProps","depositProps","resetProps","ammProps","swapProps","AmmPanel","AmmPanelTypeMap","boxLiner","TablePaddingX","pLeft","pRight","VipStyled","floatTag","custom","chg","success","textPrimary","baseTitleCss","AvatarIconPair","ButtonListRightStyled","modalContentBaseStyle","box","toolBarPanel","TableFilterStyled","AnimationArrow","WrapStyle","TabPanelBtn","Tabs","Tab","tabSelected","Deposit","ammDepositData","ammWithdrawData","disableDeposit","handleAmmAddChangeEvent","disableWithdraw","handleAmmRemoveChangeEvent","tokenDepositAProps","tokenDepositBProps","tokenWithDrawAProps","tokenWithDrawBProps","ammChgDepositData","setAmmChgDepositData","ammChgWithdrawData","setAmmChgWithdrawData","routerLocation","useLocation","search","customType","qs","parse","WithDraw","_onChangeAddEvent","_onChangeRemoveEvent","handleTabChange","paddingTop","Toolbar","SwipeableViewsStyled","axis","panel","WrapStyled","_InputSelect","handleContentChange","inputProps","debounceContentChange","_handleContentChange","panelRef","usePanelRef","IWrap","CoinWrap","h5","ISBtn","logoColor","IInput","_InputButton","sValue","setsValue","_handleError","_handleContChange","_handleMaxAllowClick","coinIcon","xs","FormLabel","getThousandFormattedNumbers","wrap","alignContent","endIcon","imgx","x","imgy","imgheight","imgwidth","alt","src","Avatar","allowNegativeValue","FormHelperText","DateTextField","TextField","DateRangeDelimiterStyled","DateRangeDelimiter","DateRangePicker","experimentalStyled","calendars","mask","inputFormat","openPickerIcon","OpenPickerButtonProps","renderInput","startProps","endProps","InputProps","endAdornment","readOnly","DatePicker","disableFuture","openTo","views","MuFormControlLabel","MuTextField","_InputCoin","Layer2Item","hr","MenuTab","StyledHeadMenuItem","Container","StyledLayer2Item","MenuItem","StyledHeaderMenuSub","Menu","StyledTabBtn","HeadMenuItem","layer","handleListKeyDown","children","router","clsx","RouterLink","path","textDecoration","HeaderMenuSub","renderList","bindMenu","getContentAnchorEl","_CoinMenu","ele","listProps","setSelect","virtuoso","rowIndex","list","walletCoin","handleListItemClick","initialTopMostItemIndex","itemContent","CoinItem","StyledCoinItem","ListItem","button","ListItemIcon","TabItemPlus","SubMenuItem","SubMenuList","subMenu","subList","ListItemAvatar","icon","marginX","Divider","MuiMenuItem","OutlineSelect","Select","OutlineSelectItem","SwipeableViews","_SwitchPanel","SubMenu","List","EmptyIconStyle","EmptyIcon","h1","tReady","defaultPic","renderPic","TableWrapperStyled","DataGridStyled","DataGrid","borderConfig","LoadingStyled","LoadingIcon","generateColumns","columnsRaw","column","isHidden","generateRows","rawData","columnMode","cell","_rawData","Table","EmptyRowsRenderer","sortInitDirection","sortDefaultKey","sortMethod","rowRenderer","frozeSort","rowClassFn","rowKeyGetter","onScroll","onRowClick","rowHeight","showLoading","columns","rows","setRows","columnKey","sortColumns","setSortColumns","sortedRows","reverse","onSortColumnsChange","slice","loopringColumns","c","headerRenderer","SortableHeaderCell","RenderEmptyMsg","span","rowClass","onRowsChange","emptyRowsRenderer","RowDepthStyled","_DepthRow","cellRenderer","CellRenderer","Cell","rowIdx","isRowSelected","copiedCellIdx","draggedOverCellIdx","viewportColumns","selectedCellProps","setDraggedOverRowIdx","onMouseEnter","onRowChange","selectCell","rowBeforeRender","selectRow","depthKey","ariaRowIndex","ariaSelected","idx","role","isCellSelected","colSpan","isCopied","isDraggedOver","dragHandleProps","onFocus","onKeyDown","DepthRow","RowBefore","headerSortCell","headerSortName","StyledArrowSort","sortdirection","ArrowSort","sortDirection","priority","onSort","sortable","ctrlKey","PopoverType","StyleDepth","CellDepthFormatter","DEFAULT_ANCHOR_ORIGIN","DEFAULT_TRANSFORM_ORIGIN","Popover","popoverContent","arrowHorizon","handleStateChange","right","isOpen","isHover","bindAction","bindTrigger","bindContent","CustomPopover","HoverMenu","MuiPopover","PopoverStyled","getRenderChild","popoverChildren","isValidElement","Children","child","cloneElement","Error","anchorReference","HoverPopover","FilterTradeTypes","StyledPaginationWrapper","StyledPagination","Pagination","TablePagination","onPageChange","page","pageSize","total","getCount","parseInt","String","_","NewTagIcon","SvgIcon","viewBox","fill","xmlns","fillRule","clipRule","TableStyled","currentHeight","QuoteTableChangedCell","isUpColorGreen","getColumnMode","history","handleStartClick","favoriteMarket","formatter","pair","isFavourite","includes","cursor","change","FloatTag","increase","toFixed","headerCellClass","tradePair","pathname","QuoteTable","withRouter","onVisibleRowsChange","addFavoriteMarket","removeFavoriteMarket","userSettings","defaultArgs","stopPropagation","sortColumn","sort","b","valueA","valueB","localeCompare","SingleOrderHistoryTable","from","keyFrom","valueFrom","keyTo","valueTo","renderValue","isFinite","formattedRawData","o","values","TransactionTradeTypes","TransactionStatus","StyledTextFiled","StyledDatePicker","StyledBtnBox","Filter","handleFilterChange","FilterTradeTypeList","allTypes","filterType","setFilterType","filterDate","setFilterDate","handleReset","handleSearch","LastDayPriceChangedCell","TradeTypes","Buy","getColumnModeOrderHistory","Date","fromNow","hidden","CellStatus","setIsOpen","RenderValue","TradeStatus","Processed","Expired","RenderPopover","actualValue","Processing","Cancelling","Cancelled","Waiting","triggerContent","amount","tradingPrice","filledPrice","time","click","OrderHistoryTable","pagination","showFilter","filter","actionColumns","Array","isArray","setPage","totalData","setTotalData","getRenderData","updateData","actionType","currFilterType","currFilterDate","resultData","diff","TableType","handlePageChange","currPage","originalData","filterToken","transactionTypeList","tokenTypeList","Set","token","date","CheckboxType","TYPE_COLOR_MAPPING","processed","processing","failed","status","find","svg","RenderValueWrapper","getColumnModeTransaction","deposit","transfer","minFractionDigits","toLocaleString","minimumFractionDigits","href","getFormattedHash","TransactionTable","setFilterToken","currFilterToken","side","startTime","format","endTime","TokenType","LpTokenAction","hideSmallBalance","setHideSmallBalance","hideLPToken","setHideLPToken","refHideSmallBalance","refHideLPToken","handleCheckboxChange","smallBalance","checked","handleFilterData","valueHideSmallBalance","valueHideLPToken","currHideSmallBalance","currHideLPToken","Checkbox","checkedIcon","lp","GridStyled","AssetsTable","showFiliter","onShowDeposit","onShowTransfer","onShowWithdraw","onLpDeposit","rightState","useHistory","getPopoverPopper","getPopoverTrigger","bindPopper","StyledToken","lpPairList","splice","join","tokenValue","getColumnModeAssets","single","getScrollIndex","startIndex","scrollTop","viewportRows","lan","AmmTradeType","TxStatus","filterPair","filterTradeTypeList","rawPairList","formattedRawPairList","currentheight","StyledSideCell","_currency","fromValue","toValue","TradeTable","setFilterPair","currFilterPair","Sell","BoxStyled","IconColumn","coinAInfo","coinBInfo","isNew","isActivity","coinAIcon","coinBIcon","amountDollar","amountYuan","PriceTag","Dollar","Yuan","volume","tradeFloat","maxWidth","APY","cellClass","window","location","PoolsTable","setFilterBy","newData","doUpdate","_handlePageChange","_rowIdx","currentTarget","swap","totalDollar","totalYuan","amountA","amountB","timeString","AmmRecordTable","Style","columnModeDefault","Template","args","useTranslation","Default","bind","Empty","FormatCell","FormatRow","SortColumn","columnModeCellDepth","p","columnModeSort","PoolTradeType","HeaderCell","_rest","sellData","buyData","showTag","priceDollar","priceYuan","change24","TypogStyle","body1","PoolStyle","handleWithdraw","handleDeposit","ammDetail","balanceA","balanceB","balanceYuan","balanceDollar","formattedYuan","formattedDollar","fontFamily","feeA","feeB","feeYuan","feeDollar","MyPoolTable","headerRowHeight","AmmSideTypes","WalletConnectStep","Join","tradeType","Exit","AmmTable","setFilterItems","StyledSwitch","Switch","BoxStyle","background","BtnCurrency","setState","_handleChange","labelId","autoWidth","yen","StyledDivider","RadioGroupStyle","BtnLanguage","LanguageType","en_US","zh_CN","SettingPanel","handleOnLanguageChange","handleOnCurrencyChange","handleColorChange","handleThemeClick","light","paddingX","textTransform","up","down","ModalContentStyled","QRCodePanel","url","ModalQRCode","ModalWalletConnect","animateTransitions","view","AccountStep","WalletConnectQRCode","onCopy","verticalAlign","InProgressBasic","providerName","describe","providerDescribe","ConnectProviders","MetaMask","WalletConnect","CompletedBasic","FailedBasic","onRetry","WalletConnectProcess","MetaMaskProcess","ProviderBtnStyled","ProviderMenu","gatewayList","unknown","defaultChecked","imgSrc","SuccessConnect","FailedConnect","WalletNotificationStatus","AccountBase","onDisconnect","accAddress","level","connectName","etherscanUrl","addressShort","getShortAddr","etherscanLink","connectBy","tOptions","formTarget","startIcon","HadAccount","mainBtn","NoAccount","goDeposit","ApproveAccount","goUpdateAccount","Depositing","FailedDeposit","FailedTokenAccess","symbol","FailedUnlock","ModalAccount","noClose","SuccessUnlock","ActiveAccountProcess","DepositingProcess","DepositApproveProcess","TokenAccessProcess","ProcessUnlock","QRAddressPanel","wordBreak","ChartType","timeUnit","WalletConnectBtnStyled","TestNetworkStyle","WalletConnectBtn","accountState","handleClick","setLabel","networkLabel","setNetworkLabel","btnClassname","setBtnClassname","setIcon","account","readyState","AccountStatus","UN_CONNECT","LOCKED","ACTIVATED","NO_ACCOUNT","DEPOSITING","ERROR_NETWORK","_chainId","findIndex","BtnDownload","i18nTitle","i18nDescription","Description","BtnNotification","BtnSetting","ToolBarStyled","StyledDiv","HeaderStyled","AppBar","LogoStyle","logoSVG","LoopringLogo","ToolBarItem","buttonComponent","render","ButtonComponentsMap","Download","Notification","Setting","HideOnScroll","setClassName","handleScroll","pageYOffset","addEventListener","passive","removeEventListener","Slide","appear","adirection","forwardedRef","in","Header","headerMenuData","headerToolBarData","getMenuButtons","toolbarList","ToolBarAvailableItem","getDrawerChoices","menuList","nodeMenuItem","selectedFlag","Memoized","HeaderMenuTabStatus","TradeTitleStyled","TradeTitle","none","sellCoinIcon","buyCoinIcon","tradeFloatType","changeDollar","decrease","NaN","closeDollar","closeYuan","AssetTitle","assetInfo","btnShowDepositStatus","btnShowTransferStatus","btnShowWithdrawStatus","setIsShow","priceTag","totalAsset","getSign","dataIndex","closeDimIdx","UP_COLOR","DOWN_COLOR","TooltipStyled","TrendChart","yAxisDomainPercent","handleMove","showTooltip","showArea","extraInfo","showXAxis","renderData","sign","priceTrend","setPriceTrend","currentIndex","setCurrentIndex","trendColor","hasData","handleMousemove","activeTooltipIndex","isUpdate","renderTooltipContent","timeStamp","handleMouseLeave","ResponsiveContainer","ComposedChart","onMouseMove","onMouseLeave","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","hide","dataKey","interval","axisLine","tickLine","tick","dy","textAnchor","YAxis","domain","dataMin","dataMax","Tooltip","stroke","strokeDasharray","Line","strokeLinecap","strokeWidth","dot","legendType","isAnimationActive","Area","fillOpacity","ASKS_COLOR","BIDS_COLOR","DepthChart","riseColor","asksColor","bidsColor","bids","asks","activePayload","formattedData","bidsPrices","asksPrices","bidsAmtTotals","asksAmtTotals","formattedBidsPrices","formattedAsksPrices","jointPrices","getDepthData","allowDuplicatedCategory","animationDuration","colors","StyledLegendItem","renderActiveShape","cx","cy","innerRadius","outerRadius","startAngle","endAngle","Sector","renderLegend","entry","StyledColoredRect","DoughnutChart","activeIndex","setActiveIndex","onPieEnter","onPieLeave","getFormattedData","others","result","PieChart","Pie","activeShape","radius","paddingAngle","minAngle","animationEasing","contentStyle","itemStyle","Legend","layout","align","CandleStickFill","StockChart","bottom","pricesDisplayFormat","xScaleProvider","discontinuousTimeScaleProviderBuilder","inputDateAccessor","macdAppearance","fillStyle","divergence","strokeStyle","macd","signal","zero","barChartExtents","candleChartExtents","high","low","yEdgeIndicator","candleStickColor","volumeColor","volumeSeries","openCloseColor","this","initialData","dateTimeFormat","ratio","macdCalculator","options","fast","slow","merge","accessor","sma5","sma","windowSize","sma10","sma30","sma60","bollinger","bollingerBand","bb","ema26","ema","ema12","macdYAccessor","macdOptions","calculatedData","xScale","xAccessor","displayXAccessor","max","xExtents","Math","chartHeight","timeDisplayFormat","timeFormat","ChartCanvas","seriesName","zoomAnchor","lastVisibleItemBasedZoomAnchor","Chart","yExtents","showGridLines","gridLinesStrokeStyle","showTicks","showTickLabel","tickLabelFill","tickFormat","CandlestickSeries","LineSeries","yAccessor","CurrentCoordinate","MouseCoordinateY","rectWidth","displayFormat","EdgeIndicator","itemType","lineStroke","MovingAverageTooltip","origin","textFill","OHLCTooltip","BollingerSeries","middle","BollingerBandTooltip","_w","_h","axisAt","orient","ticks","MouseCoordinateX","MACDSeries","MACDTooltip","appearance","CrossHairCursor","DayilyStockChart","withSize","withDeviceRatio","ScaleAreaChart","Trend","Depth","Kline","MarketBlockStyled","MarketBlock","chartData","isAbbreviate","textOverflow","abbreviateNumber","overflow","whiteSpace","DetailWrapperStyled","DividerWrapperStyled","AmmCard","activity","duration","myRewards","rewardToken","isPass","rewardValue","rewardValue2","Card","CardContent","CardActions","Toast","setOpen","severity","alertText","autoHideDuration","Snackbar","Alert","StyledBox","BottomRule","btnTxt","clickToConfirm","_isShow","trans","ETH","company","LRC","USDT","USDC","LRCA","LRCB","DPR","CCB","OKB","CRV","TEST","TEST2","TEST3","common","labelError","tokenEnter","tokenEnterPaymentToken","tokenMax","tokenHave","tokenEnterReceiveToken","tokenSelectToken","tokenExchange","tokenNotEnough","tokenSearchCoin","swapTolerance","swapPriceImpact","swapMinReceive","swapFee","swapBtn","goBack","resetTitle","restLabelEnterToken","resetDescription","resetFee","resetLabelBtn","depositTitle","depositTitleAndActive","depositLabelEnterToken","depositDescription","depositAndActiveDescription","depositLabelBtn","depositLabelLinkRecent","depositLabelRefer","depositLabelPlaceholder","withdrawTitle","withdrawLabelEnterToken","withdrawDescription","withdrawLabelBtn","withdrawLabelAddress","withdrawLabelAddressInput","withdrawLabelFee","withdrawTypeLabelFast","withdrawTypeLabelStandard","withdrawLabelLinkRecent","transferTitle","transferLabelEnterToken","transferDescription","transferLabelBtn","transferLabelAddress","transferLabelAddressInput","transferLabelFee","transferLabelLinkRecent","labelConnectWallet","labelCustomer","labelChange24h","labelDepth","labelTrend","label1W","label1H","label1D","labelCopyAddress","labelDisconnect","labelLockLayer2","labelUnLockLayer2","labelActiveLayer2","labelSwitchAccount","labelViewEth","labelQRCode","labelShowAccountInfo","labelAssetTitle","labelShowAccount","labelBtnDeposit","labelBtnTransfer","labelBtnWithdraw","labelLevel","labelOrderbook","labelDeposit","labelWithdraw","labelSetPublicKey","labelTitleSecurity","labelTitleResetL2Keypair","labelBtnReset","labelHadChangPassword","labelTitleForceWithdraw","descriptionForceWithdraw","labelBtnForceWithdraw","labelTitleExportAccount","descriptionExportAccount","labelBtnExportAccount","labelTitlePreferences","labelTitleLayout","whichColorIsUp","labelTradeFeeLevel","labelLanguage","labelCurrency","currencySetting","labelColors","labelTheme","labelthemeLight","labelthemeDark","labelgreen","labelred","langZH","langEN","labelUSDollar","labelCNYYuan","labelMaker","labelTaker","labelAssetsTitle","labelVolume","labelLiquidityDeposit","labelLiquidityWithdraw","labelAvailable","labelTokenAmount","labelRemoveLiquidityBtn","labelAddLiquidityBtn","labelEndLiquidityBtn","labelTradePanelHideOtherPairs","labelLPTokens","labelTrade","labelAmmList","labelMyPoolShare","labelFee","labelLPTotal","labelLiquidity","labelReward","labelMyReward","labelDate","labelBack","labelAPY","label24Volume","labelTVL","labelAmmTotalToken","labelNoActiveEvent","labelNew","labelAccount","labelAll","labelMe","labelMyTrade","labelRecent","labelMyAmm","labelMyAmmRecord","labelCurrentActivities","labelPastActivities","labelTotalPositionValue","labelFeeRewards","labelMiningRewards","labelLiquidityValue","labelCopyAddClip","labelPleaseInputWalletAddress","labelEmptyDefault","labelUnlockAccount","labelAssetsDistribution","labelTotalAssets","labelTxnPageTitle","labelTradePageTitle","labelAmmPageTitle","labelSwapSuccess","labelSwapFailed","labelJoinAmmSuccess","labelJoinAmmFailed","labelExitAmmSuccess","labelExitAmmFailed","labelConnectBy","labelWrongNetwork","labelActivatedAccountDeposit","labelProcessing","labelMetaMaskProcessing","labelMetaMaskProcessDescribe","labelWalletConnectProcessing","labelWalletConnectProcessDescribe","labelWalletConnectQRCode","labelSuccessConnect","labelSuccessConnectDescribe","labelCopyClipBoard","labelRejectOrError","labelWalletConnectProcessDescribe2","labelUnlockProcessing","labelDepositing","labelDepositingProcessing","labelFailedConnect","labelFailedDeposit","labelDepositApproveProcess","labelTokenAccess","labelFailedTokenAccess","labelSuccessUnlock","labelDepositApproveSuccess","labelActivateAccount","labelClose","labelRetry","labelQuotePageFavourite","labelQuotePageAll","labelQuotePageTradeRanking","labelFailedUnlock","labelFailedUpdateAcc","labelCreateLayer2Title","labelCancel","describeTitleNoAccount","describeTitleOpenAccounting","describeTitleOnErrorNetwork","describeTitleConnectToWallet","describeTitleLocked","labelLiquidityPageTitle","labelFilter","labelMiningPageTitle","labelMiningActiveDate","labelMiningLiquidity","labelMiningActivityReward","labelMiningMyShare","labelMiningMyReward","labelCookiesAgree","labelLimitMin","labelAgreeLoopringTxt","labelLayer2HistoryTransactions","labelLayer2HistoryTrades","labelLayer2HistoryAmmRecords","labelMarkets","labelMining","labelLayer2","loopringDomain","labelClassic","labelClassicDescription","labelAdvanced","labelAdvancedDescription","labelDownloadApp","labelDownloadAppTitle","labelDownloadBtn","labelNotification","themeSetting","languageSetting","notificationApprove","notificationPending","labelMyTrades","labelRecentTrades","labelAssets","labelTransactions","labelTrades","labelHistory","labelOrder","labelAmmRecords","labelAmmRecordsDes","rewards","labelOrders","selectLanguage","labelPools","labelAmmMining","labelMyLiquidity","labelOrderBookMining","labelMakerRebates","labelSetting","titleLoopring","labelLoopringDescribe","tables","labelStatus","labelAMM","labelTransfer","labelToken","labelAmount","labelLocked","labelActions","labelAllToken","labelHideSmallBalances","labelHideLPToken","labelOrderFilterAllTypes","labelOrderFilterBuy","labelOrderFilterSell","labelFilterReset","labelFilterSearch","labelOrderSide","labelOrderAmount","labelOrderAverage","labelOrderFilledAmount","labelOrderFilledPrice","labelOrderTime","labelOrderStatus","labelOrderTradingPrice","labelOrderTotal","labelQuotaPair","labelQuotaLastPrice","labelQuota24hChange","labelQuota24hHigh","labelQuota24hLow","labelQuota24Volume","labelQuoteAction","labelTradeFilterAllTypes","labelTradeFilterBuy","labelTradeFilterSell","labelTradeSide","labelTradeAmount","labelTradePrice","labelTradeFee","labelTradeTime","labelTxFilterAllTypes","labelTxFilterDeposit","labelTxFilterWithdraw","labelTxFilterTransfer","labelTxFilterAllTokens","labelTxSide","labelTxToken","labelTxFrom","labelTxTo","labelTxAmount","labelTxFee","labelTxMemo","labelTxTime","labelTxTxnHash","labelTxStatus","labelTradePair","labelPool","label24TradeVolume","label24Reward","labelTradePool","labelAction","labelFilterAllPairs","valueAddTOAMM","valueSwapForAMM","valueRemoveTOAMM","labelAmmTotalValue","labelAmmTokenAmount","labelAmmTime","labelFeeEarned","labelBuy","labelSell","labelAmmSide","labelAmmAmount","labelAmmLpTokenAmount","labelAmmFee","labelAmmRecordTime","labelAmmExit","labelAmmJoin","labelAmmFilterTypes","labelAmmFilterJoin","labelAmmFilterExit","labelPoolTableAddLiqudity","labelPoolTableRemoveLiqudity","labelConnectUs","errorBase","errorLoading","error404","labelFailedUnLocK","resources","enUS","zhCN","use","initReactI18next","init","ns","defaultNS","lng","load","fallbackLng","supportedLngs","keySeparator","interpolation","escapeValue","react","bindI18n","transEmptyNodeValue","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","useSuspense","AssetsIcon","CheckBoxIcon","CheckedIcon","ViewIcon","HideIcon","MoreIcon","StarHollowIcon","StarSolidIcon","DownloadIcon","NotificationIcon","SettingIcon","LinkIcon","CopyIcon","ReverseIcon","CalendarIcon","LinkedIcon","ExchangeIcon","CloseIcon","SearchIcon","QRIcon","AlertIcon","UnConnectIcon","LockIcon","CheckIcon","EmbarIcon","attributeType","attributeName","dur","repeatCount","MiningIcon","hexToRGB","hex","alpha","r","g","ColorDarkDefault","freeze","primaryHover","primaryPressed","secondaryHover","secondaryPressed","warning","textDisable","disable","borderHover","divide","boxSecondary","boxHover","popBg","globalBg","boxLinear","white","opacity","star","shadow","ColorLightDefault","h2","h3","body2","globalCss","textHint","blur","scrollbarDefault","reset","InterMedium","DINCondensed","pxToRem","px","oneRemPx","borderFunc","borderColor","default","defaultBorder","defaultRadius","FontDefault","MuiCheckbox","styleOverrides","root","checkboxDefault","MuiLink","MuiModal","MuiSwitch","borderWidth","track","thumb","MuiButton","fontWeight","text","contained","defaultDisable","textBtnDisabled","sizeLarge","sizeSmall","outlinedSizeSmall","outlined","MuiPaper","backgroundImage","MuiRadio","MuiInputLabel","MuiInputBase","pointerEvents","transition","MuiIconButton","MuiToggleButton","rgba","MuiButtonBase","defaultProps","disableRipple","MuiPaginationItem","MuiListItem","borderLeft","MuiTab","MuiDivider","dividerColor","MuPickDate","MuiPickersBasePicker","MuiPicker","MuiDateRangePickerViewDesktop","borderBottomColor","maxHeight","MuiPickersDesktopDateRangeCalendar","MuiPickersDateRangeDay","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","MuiDateRangePickerDay","MuiPickersToolbarButton","MuiPickersToolbar","MuiPickersDay","MuiPickersCalendar","MuiPickersCalendarHeader","MuiPickersYear","MuiPickersModalDialog","dialogAction","getTheme","createMuiTheme","palette","mode","main","contrastText","contrastThreshold","tonalOffset","paper","hoverOpacity","hover","active","typography","subtitle1","fontColor","components","MuiCard","MuiCardContent","MuiCardActions","MuiToolbar","MuiSvgIcon","MuiTabs","MuiTextField","MuiMenu","MuiList","MuiListItemAvatar","shape","WalletStatus","AvatarCoinStyled","ChartUnit","WithdrawType","HeadMenuTabKey","NavListIndex","notificationList","subMenuLayer2","assetsGroup","transactionsGroup","settingGroup","subMenuLiquidity","poolsGroup","headerRoot","fnType","SagaStatus","option","suffixNum","hash","firstSix","lastFour","trim","substr","ErrorMap","LOADING_WHOLE_SITE","messageKey","NO_SUPPORT_PAIR","NO_SDK","NO_NETWORK_ERROR","NO_TOKEN_MAP","NO_ENOUGH_BALANCE","NO_TOKEN_KEY_LIST","GET_X_TOKEN_TICKER_ERROR","BUILD_AMM_MAP_WITH_TICKER","TRADE_LITE_SET_PAIR_ERROR","SOCKET_ERROR","TRADE_404","CustomError","_options","_date","_messageKey","captureStackTrace","now","provider","Provider","ProviderComposer","providers","Commands","ErrorType","ProcessingType","subject","Subject","AvaiableNetwork","walletServices","sendProcess","next","opts","sendError","errorType","errorObj","sendConnect","web3","accounts","eth","getAccounts","chainId","getChainId","i","sendDisconnect","code","reason","onSocket","asObservable","RPC_URLS","process","WalletConnectProvide","WalletConnectProvider","rpc","bridge","pollingInterval","qrcode","connector","connected","createSession","uri","qrCodeUrl","enable","Web3","isWalletConnect","session","getWalletConnector","start","subscribeWalletConnector","WalletConnectUnsubscribe","off","MetaMaskProvide","detectEthereumProvider","ethereum","request","method","MetaMaskUnsubscribe","removeAllListeners","connectProvides","usedProvide","usedWeb3","_provideName","clearProviderSubscribe","obj","subScribe","clear","killSession","on","params","approveSession","updateSession","WalletConnectSubscribe","useConnectHook","handleConnect","handleAccountDisconnect","handleProcessing","subscription","subscribe","unsubscribe"],"mappings":"k8GAEYA,E,iCAAAA,K,gBAAAA,E,kBAAAA,E,iBAAAA,M,0CCMNC,EAA8B,CAChCC,UAAWC,IAAUC,KACrBC,SAAUC,KAAKD,SACfE,SAAUP,EAAaQ,QACvBC,SAAUC,IAASC,OACnBC,QAASC,IAAQC,MACjBC,SAAUC,IACVC,SAAU,KAGDC,EAAqCC,YAAY,CAC1DC,KAAM,WACNnB,eACAoB,SAAU,CACNC,SADM,SACGC,EAAOC,GAEZD,EAAMrB,UAAYsB,EAAOC,SAE7BC,YALM,SAKMH,EAAOC,GACflB,KAAKqB,eAAeH,EAAOC,SACvBD,EAAOC,UAEY,UAAnBD,EAAOC,QACDG,IAAOC,aAAa,KAAM,CACpBC,aAAe,CACXC,OAAQ,QACRC,KAAQ,SACRC,EAAK,gBACLC,GAAK,aACLC,EAAI,WACJC,GAAI,aACJC,EAAI,UACJC,GAAI,WACJC,EAAI,QACJC,GAAI,UACJC,EAAI,SACJC,GAAI,WACJC,EAAI,UACJC,GAAI,YACJC,EAAI,SACJC,GAAI,cAGdlB,IAAOC,aAAa,QAAS,CAC3BC,aAAe,CACXC,OAAQ,WACRC,KAAQ,WACRC,EAAK,eACLC,GAAK,YACLC,EAAI,iBACJC,GAAI,kBACJC,EAAI,iBACJC,GAAI,kBACJC,EAAI,WACJC,GAAI,YACJC,EAAI,WACJC,GAAI,YACJC,EAAI,iBACJC,GAAI,kBACJC,EAAI,WACJC,GAAI,eAGhBvB,EAAMlB,SAAWmB,EAAOC,UAGhCsB,YArDM,SAqDMxB,EAAOC,GACfD,EAAMhB,SAAWiB,EAAOC,SAE5BuB,YAxDM,SAwDMzB,EAAOC,GAEfD,EAAMd,SAAWe,EAAOC,SAE5BwB,WA5DM,SA4DK1B,EAAOC,GAEdD,EAAMX,QAAUY,EAAOC,SAE3ByB,YAhEM,SAgEM3B,EAAOC,GAEfD,EAAMN,SAAWO,EAAOC,SAE5B0B,YApEM,SAoEM5B,EAAOC,GAEfD,EAAMR,SAAWS,EAAOC,YAI7B,EAAgGP,EAAckC,QAAvG9B,EAAP,EAAOA,SAAUI,EAAjB,EAAiBA,YAAaqB,EAA9B,EAA8BA,YAAaC,EAA3C,EAA2CA,YAAaC,EAAxD,EAAwDA,WAAYC,EAApE,EAAoEA,YAAaC,EAAjF,EAAiFA,Y,gBCzFjF,SAASE,IASZ,IAAMC,EAA0BC,aAAY,SAAChC,GAAD,OAAgBA,EAAM+B,YAC5DE,EAAWC,cACjB,OAAO,2BACAH,GADP,IAEIhC,SAAUoC,IAAMC,aAAY,SAACC,GAAD,OAAmCJ,EAASlC,EAASsC,MAAS,CAACJ,IAC3F9B,YAAagC,IAAMC,aAAY,SAACC,GAAD,OAAsCJ,EAAS9B,EAAYkC,MAAS,CAACJ,IACpGT,YAAaW,IAAMC,aAAY,SAACC,GAAD,OAAsCJ,EAAST,EAAYa,MAAS,CAACJ,IACpGR,YAAaU,IAAMC,aAAY,SAACC,GAAD,OAA0BJ,EAASR,EAAYY,MAAS,CAACJ,IACxFP,WAAYS,IAAMC,aAAY,SAACC,GAAD,OAAiCJ,EAASP,EAAWW,MAAS,CAACJ,IAC7FN,YAAaQ,IAAMC,aAAY,SAACC,GAAD,OAAyBJ,EAASN,EAAYU,MAAS,CAACJ,IACvFL,YAAaO,IAAMC,aAAY,SAACC,GAAD,OAAgBJ,EAASL,EAAYS,MAAS,CAACJ,MCbtF,ICFYK,EDaCC,EAAkD3C,YAAY,CACvEC,KAAM,WACNnB,aAb+C,CAC/C8D,eAAgB,CAACC,QAAQ,EAAOC,MAAO,IACvCC,eAAgB,CAACF,QAAQ,EAAOC,MAAO,IACvCE,cAAe,CAACH,QAAQ,EAAOC,MAAO,IACtCG,mBAAoB,CAACJ,QAAQ,EAAOC,MAAO,IAC3CI,WAAY,CAACL,QAAQ,EAAOC,MAAO,IACnCK,UAAW,CAACN,QAAQ,EAAOC,MAAO,IAClCM,cAAe,CAACP,QAAQ,EAAOQ,KAAM,GACrCC,cAAe,CAACT,QAAQ,EAAOQ,KAAM,IAMrCnD,SAAU,CACNqD,WADM,SACKnD,EAAOC,GACd,MAAwBA,EAAOC,QAAxBwC,EAAP,EAAOA,MAAOD,EAAd,EAAcA,OACdzC,EAAM+C,UAAUN,OAASA,EACrBC,GACAU,OAAOC,KAAKX,GAAOY,KAAI,SAAAC,GACnBvD,EAAM+C,UAAUL,MAAOa,GAAQb,EAAOa,OAIlDC,YAVM,SAUMxD,EAAOC,GACf,MAAwBA,EAAOC,QAAxBwC,EAAP,EAAOA,MAAOD,EAAd,EAAcA,OACdzC,EAAM8C,WAAWL,OAASA,EACtBC,GACAU,OAAOC,KAAKX,GAAOY,KAAI,SAAAC,GACnBvD,EAAM8C,WAAWJ,MAAOa,GAAQb,EAAOa,OAInDE,gBAnBM,SAmBUzD,EAAOC,GACnB,MAAwBA,EAAOC,QAAxBwC,EAAP,EAAOA,MAAOD,EAAd,EAAcA,OACdzC,EAAMwC,eAAeC,OAASA,EAC1BC,GACAU,OAAOC,KAAKX,GAAOY,KAAI,SAAAC,GACnBvD,EAAMwC,eAAeE,MAAOa,GAAQb,EAAOa,OAIvDG,gBA5BM,SA4BU1D,EAAOC,GACnB,MAAwBA,EAAOC,QAAxBwC,EAAP,EAAOA,MAAOD,EAAd,EAAcA,OACdzC,EAAM2C,eAAeF,OAASA,EAC1BC,GACAU,OAAOC,KAAKX,GAAOY,KAAI,SAAAC,GACnBvD,EAAM2C,eAAeD,MAAOa,GAAQb,EAAOa,OAIvDI,eArCM,SAqCS3D,EAAOC,GAClB,MAAwBA,EAAOC,QAAxBwC,EAAP,EAAOA,MAAOD,EAAd,EAAcA,OACdzC,EAAM4C,cAAcH,OAASA,EACzBC,GACAU,OAAOC,KAAKX,GAAOY,KAAI,SAAAC,GACnBvD,EAAM4C,cAAcF,MAAOa,GAAQb,EAAOa,OAItDK,oBA9CM,SA8Cc5D,EAAOC,GACvB,MAAwBA,EAAOC,QAAxBwC,EAAP,EAAOA,MAAOD,EAAd,EAAcA,OACdzC,EAAM6C,mBAAmBJ,OAASA,EAC9BC,GACAU,OAAOC,KAAKX,GAAOY,KAAI,SAAAC,GACnBvD,EAAM6C,mBAAmBH,MAAOa,GAAQb,EAAOa,OAI3DM,eAvDM,SAuDS7D,EAAOC,GAClB,MAAuBA,EAAOC,QAAvBuC,EAAP,EAAOA,OAAQQ,EAAf,EAAeA,KACfjD,EAAMgD,cAAgB,CAClBP,SACAQ,KAAOA,GAAW,IAG1Ba,eA9DM,SA8DS9D,EAAOC,GAClB,MAAuBA,EAAOC,QAAvBuC,EAAP,EAAOA,OAAQQ,EAAf,EAAeA,KACfjD,EAAMkD,cAAgB,CAClBT,SACAQ,KAAOA,GAAW,OAK3B,EASHV,EAAYV,QARZ4B,EADG,EACHA,gBACAC,EAFG,EAEHA,gBACAC,EAHG,EAGHA,eACAC,EAJG,EAIHA,oBACAJ,EALG,EAKHA,YACAL,EANG,EAMHA,WACAU,EAPG,EAOHA,eACAC,EARG,EAQHA,eElFSC,EAAgB,WACzB,IAAM9B,EAAWC,cACjB,MAAO,CACH8B,OAAQhC,aAAY,SAAChC,GAAD,OAAgBA,EAAMgE,UAC1CP,gBAAiBtB,IAAMC,aAAY,SAACpC,GAAD,OAA8EiC,EAASwB,EAAgBzD,MAAS,CAACiC,IACpJ0B,eAAgBxB,IAAMC,aAAY,SAACpC,GAAD,OAA6EiC,EAAS0B,EAAe3D,MAAS,CAACiC,IACjJyB,gBAAiBvB,IAAMC,aAAY,SAACpC,GAAD,OAA8EiC,EAASyB,EAAgB1D,MAAS,CAACiC,IACpJ2B,oBAAqBzB,IAAMC,aAAY,SAACpC,GAAD,OAA2EiC,EAAS2B,EAAoB5D,MAAS,CAACiC,IACzJkB,WAAYhB,IAAMC,aAAY,SAACpC,GAAD,OAAmEiC,EAASkB,EAAWnD,MAAS,CAACiC,IAC/HuB,YAAarB,IAAMC,aAAY,SAACpC,GAAD,OAAoEiC,EAASuB,EAAYxD,MAAS,CAACiC,IAClI6B,eAAgB3B,IAAMC,aAAY,SAACpC,GAAD,OAAmDiC,EAAS6B,EAAe9D,MAAS,CAACiC,IACvH4B,eAAgB1B,IAAMC,aAAY,SAACpC,GAAD,OAAmDiC,EAAS4B,EAAe7D,MAAS,CAACiC,O,SDxBnHK,K,oBAAAA,E,kBAAAA,E,qBAAAA,M,oFEVG,MAA0B,oC,OCa5B2B,EAASC,YAAOC,IAAPD,CAAH,gGAGX,YAAuB,IAArBE,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MACf,MAAmB,SAAZD,EAAA,iEAEaC,EAAMC,UAAUC,QAF7B,0FAKgBC,EALhB,oTAgBA,MAOEC,EAAoB,SAAC,GAUiD,IAAD,EAT5CC,EAS4C,EAT5CA,EACArC,EAQ4C,EAR5CA,MACAsC,EAO4C,EAP5CA,SACAC,EAM4C,EAN5CA,aAM4C,IAL5CC,YAK4C,MALrC,SAKqC,EAJ5CC,EAI4C,EAJ5CA,WACAC,EAG4C,EAH5CA,KACAC,EAE4C,EAF5CA,UACAC,EAC4C,EAD5CA,SAelC,OAbIN,IACAC,EAAe,SAACM,EAA+C7C,GAC3DsC,EAAStC,GACL4C,GACAA,EAASC,EAAI7C,KAIrB0C,IACAD,EAAaC,EAAKzB,KAAI,YAA6B,IAA3BjB,EAA0B,EAA1BA,MAAOkB,EAAmB,EAAnBA,IAAK4B,EAAc,EAAdA,SAChC,MAAO,CAAC9C,QAAO+C,IAAKV,EAAEnB,GAAM8B,OAAQX,EAAEnB,GAAM4B,gBAG7C,cAAC,IAAD,CAAqBN,KAAMA,EAAMxC,MAAOA,EAAO2C,UAAWA,EAAWC,SAAUL,EAA/E,mBACFE,SADE,aACF,EAAYxB,KAAI,gBAAEjB,EAAF,EAAEA,MAAO+C,EAAT,EAASA,IAAKC,EAAd,EAAcA,OAAQF,EAAtB,EAAsBA,SAAU5B,EAAhC,EAAgCA,IAAhC,OACb,cAAC+B,EAAA,EAAD,CAAsCjD,MAAOA,EAC/B,aAAYgD,EACZF,SAAUA,EAFxB,SAEmCC,GAFhB7B,GAAYlB,SAO9BkD,EAAmB,SAAC,GAIR,IAJSC,EAIV,EAJUA,QAASd,EAInB,EAJmBA,EAKvC,OAAO,cAACe,EAAA,EAAD,CAAKC,UAAW,eAAgBC,UAAW,WAAYC,SAAU,WAAYC,OAAQ,GAAIC,UAAW,QAASC,YAAa,OAA1H,SACH,cAACC,EAAA,EAAD,CAAY,aAAYtB,EAAE,cAAeuB,MAAO,UAAWpB,KAAM,QAASqB,QAAS,SAACC,GAChFX,GAAWA,EAAQW,EAAO,kBAD9B,SAGI,cAAC,IAAD,SAICC,EAAkB,SAAC,GAEP,IAFQC,EAET,EAFSA,OAAQ3B,EAEjB,EAFiBA,EAGrC,OAAO,cAACe,EAAA,EAAD,CAAKE,UAAW,aAAcG,WAAY,EAAGQ,WAAY,IAAzD,SACH,cAACN,EAAA,EAAD,CAAYC,MAAO,UAAW,aAAYvB,EAAE,aAAcG,KAAM,QAASqB,QAAS,WAC9EG,GAAUA,KADd,SAGI,cAAC,IAAD,CAAcE,MAAO,CAACC,UAAU,mCAI/BC,GAAgB,SAAC,GAEL,IAFMC,EAEP,EAFOA,UAAWhC,EAElB,EAFkBA,EAGtC,OAAO,cAACe,EAAA,EAAD,CAAKE,UAAW,aAAcG,WAAW,IAAQQ,WAAY,IAAKV,SAAU,WAA5E,SACH,cAACI,EAAA,EAAD,CAAYC,MAAO,UAAW,aAAYvB,EAAE,aAAcG,KAAM,SAAUqB,QAAS,WAC/EQ,GAAaA,KADjB,SAGI,cAAC,IAAD,S,UClGNC,GAAgBzC,YAAOuB,IAAPvB,CAAH,4NAOf,qBAAEG,MAAiBuC,OAAOC,aAAa,CAACC,IAAK,EAAGC,IAAK,GAAIC,MAAO,8BAG9DC,GAAc/C,YAAOuB,IAAPvB,CAAH,uSAcX,qBAAEG,MAAiBuC,OAAOC,aAAa,CAACC,IAAK,EAAGC,IAAK,EAAGC,MAAO,8BAG/DE,GAAQhD,IAAOiD,IAAV,4RAcLC,GAAQlD,YAAOuB,IAAPvB,CAAH,gSAcEmD,GAAgB,SAAC,GAAiE,IAAD,IAA/DC,gBAA+D,OAAnD,EAAmD,EAAhDC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,QACnDC,EAAWD,GAAWA,EAAQE,OAASF,EAAU,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KACrEG,EAAiBxF,IAAMC,aAAY,SAACwF,GACtCL,EAAcK,KACf,CAACL,IACJ,OAAO,cAAC9B,EAAA,EAAD,CAAKoC,MAAO,OAAQC,QAAS,OAAQC,UAAW,cAAeC,SAAU,EAAzE,SACH,eAACvC,EAAA,EAAD,CAAKwC,KAAM,EAAGC,OAAQ,OAAQC,OAAQ,EAAtC,UACI,eAAC1C,EAAA,EAAD,CAAK2C,UAAW,MAAOvC,OAAQ,KAAMiC,QAAS,OAAQO,WAAY,SAAUC,eAAgB,UACvF1C,SAAU,WADf,UAEI,cAACsB,GAAD,IACA,cAACE,GAAD,CAAOS,MAAK,UAAKP,EAAL,OACZ,cAAC7B,EAAA,EAAD,CAAK2C,UAAW,MAAOvC,OAAQ,MAAOoC,KAAM,EAAGH,QAAS,OAAQO,WAAY,SAAUR,MAAO,OACxFK,OAAQ,OAAQtC,SAAU,WAD/B,SAEK6B,EAASnE,KAAI,SAACsE,EAAcW,GACzB,OAAIjB,IAAaM,EACN,eAAC,IAAMY,SAAP,WACH,cAAC7B,GAAD,CAAe8B,KAAI,eAAUb,EAAV,YAA0BhC,SAAU,aACvD,eAAC8C,GAAA,EAAD,CAAYN,UAAW,OAAQ7B,MAAO,CAACoC,SAAU,UAAW/C,SAAU,WAC1DgD,IAAK,GAAIH,KAAI,eAAUnB,EAAV,aADzB,UACyDA,EADzD,SAFwBiB,GAMzB,cAACtB,GAAD,CAAyBwB,KAAI,eAAUb,EAAV,aAA2BhC,SAAU,WACrDM,QAAS,WACLyB,EAAeC,KAFdW,WAQrC,eAAC9C,EAAA,EAAD,CAAK2C,UAAW,MAAON,QAAS,OAAQO,WAAY,SAAUC,eAAgB,gBACzE1C,SAAU,WAAYE,UAAW,IADtC,UAEI,cAAC4C,GAAA,EAAD,CAAYN,UAAW,OAAQS,QAAS,QAAS5C,MAAO,gBAC5CK,YAAa,EADzB,SAC0C,IAAbgB,EAAiB,KAAO,MACrD,cAACoB,GAAA,EAAD,CAAYN,UAAW,OAAQS,QAAS,QAAS5C,MAAO,gBAC5CF,aAAc,EAD1B,SAC2C,MAAbuB,EAAmB,OAAS,e,kBC7FnE,SAASwB,GAAT,GAKH,IALqDzG,EAKtD,EALsDA,MAAO0G,EAK7D,EAL6DA,cAAeC,EAK5E,EAL4EA,SAMrEC,EAAM9G,IAAM+G,OAAU,MAO5B,OANA/G,IAAMgH,WAAU,WACQ,IAAD,EAAfJ,IACG,OAAHE,QAAG,IAAHA,GAAA,UAAAA,EAAKG,eAAL,SAAcC,SAElBL,GAAYA,EAAS,CAACI,QAASH,EAAIG,YACpC,CAAC/G,EAAO0G,IACJE,E,ICmECK,GAMAC,GAKAC,G,uDCnFCC,GAAetH,IAAMuH,YAAW,WAIvBC,GAAmC,IAHrDtH,EAGoD,EAHpDA,MACA4C,EAEoD,EAFpDA,SACG2E,EACiD,mBACpD,OAAO,cAACC,GAAA,EAAD,0CACKD,IADL,IAEHlE,UAAW,SACX,aAAY,SACZoE,YAAa,SACbzH,MAAOA,EACP4C,SAAU,SAACkB,GACHlB,GACAA,EAASkB,EAAM4D,OAAO1H,QAG9B2H,eACI,cAACC,GAAA,EAAD,CAAgBhE,MAAO,8BAA+BL,SAAS,QAA/D,SACI,cAAC,IAAD,Y,oEDsDJ0D,K,sBAAAA,E,oBAAAA,E,mBAAAA,Q,cAMAC,K,iBAAAA,E,mBAAAA,Q,cAKAC,K,sBAAAA,E,wBAAAA,E,0BAAAA,E,2BAAAA,E,8BAAAA,Q,8BEzFAU,G,oMCECC,GAAkB,YAK6B,IAHjDzF,EAGgD,EAHhDA,EAAG0F,EAG6C,EAH7CA,UAAWC,EAGkC,EAHlCA,cAAeC,EAGmB,EAHnBA,QAASC,EAGU,EAHVA,UAAWpF,EAGD,EAHCA,SACjDqF,EAEgD,EAFhDA,wBAAyBC,EAEuB,EAFvBA,YAAaC,EAEU,EAFVA,YAAaC,EAEH,EAFGA,iBAChDf,EAC6C,mBAQjDgB,EAAgBzI,IAAMC,aAAY,SAACyI,EAA0BlB,GAC/DU,EAAc,EAAG,CAACD,YAAWU,GAAI,WAClC,CAACV,EAAWC,IACTU,EAAyB5I,IAAMC,aAAY,SAAC4I,EAAerB,GAEzDS,EAAUa,aAAeD,EAAWC,YACpCZ,EAAc,EAAG,CAACD,UAAU,2BAAKA,GAAcY,GAAaF,GAAI,aAIrE,CAACT,EAAeD,IAEQ,oBAAhBK,IACPA,EAAc,YAAuC,IAArCS,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,QAASF,EAAmB,EAAnBA,WAC7B,MAA0B,qBAAfA,GAA8BE,EAAUF,GAAeA,IAAeE,EACtE,CAACC,OAAO,EAAMC,QAAS3G,EAAE,iBAAkB,CAACwG,OAAQA,KAExD,CAACE,OAAO,EAAOC,QAAS,MAIvC,IAAMC,EAAa,qCACfC,SAAU7G,EAAE,YACZ8G,UAAW9G,EAAE,oBACb+G,gBAAiB,OACjBC,UAAU,EACVjB,YAAaA,EACbM,oBACAH,iBACGJ,GACAG,GACAf,GAIP,OAAO,cAAC+B,GAAD,aAAgC1C,IAAKyB,EAAavF,YAzCjDA,QAA0ByG,IAAdxB,QAAyCwB,IAAdrB,QAAuCqB,IAAZtB,IAyCnE,2BACAgB,GADA,IAEHO,UAAWzB,GAAwB,GACnCE,QAASA,GAAoB,Q,2NC7CxBwB,GAAc,YAc6B,IAZ7CpH,EAY4C,EAZ5CA,EAAGS,EAYyC,EAZzCA,SAAUoF,EAY+B,EAZ/BA,UAAWH,EAYoB,EAZpBA,UAAWE,EAYS,EAZTA,QAEnCyB,EAU4C,EAV5CA,MAAOC,EAUqC,EAVrCA,YACPC,EAS4C,EAT5CA,iBACAC,EAQ4C,EAR5CA,eACAC,EAO4C,EAP5CA,aAEAC,GAK4C,EAN5C3B,YAM4C,EAL5C2B,gBACAC,EAI4C,EAJ5CA,sBACAC,EAG4C,EAH5CA,mBAG4C,IAF5CC,YAE4C,MAFrCC,KAAYD,KAEyB,EADzC3C,EACyC,mBAC7Cc,EAAcvI,IAAM+G,SACpBuD,EAAc,WAChB,SAAItH,QAA0ByG,IAAdxB,QAAyCwB,IAAdrB,QAAuCqB,IAAZtB,IAM1E,EAA8BnI,IAAMuK,SAA6BN,GAAkC,IAAnG,oBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAwCzK,IAAMuK,WAA9C,oBAAOG,EAAP,KAAqBC,EAArB,KAKMC,EAAkB5K,IAAMC,YAAY4K,qBAAS,YAAqB,IAAnBL,EAAkB,EAAlBA,QAC7CN,GACAA,EAAsBM,KAE3BJ,GAAO,CAACF,EAAuBW,cAC5BC,EAAc9K,IAAMC,aAAY,WAGlCwK,EAAW,MACZ,IACGM,EAAyB/K,IAAMC,aAAY,SAAC+D,GAC9C,IAAMwG,EAAUxG,EAAM4D,OAAO1H,MAC7B,GAAIiK,EAAoB,CACpB,IAAMlB,EAAQkB,EAAmBK,IACjC,OAAIvB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOA,QACP0B,EAAgB1B,GAGxBwB,EAAWD,GACXI,EAAgB,CAACJ,cAClB,CAACK,YAAUT,EAAMD,IACd9B,EAA0B,CAC5B2C,MAAOzI,EAAE,2BAEb,OAAO,eAAC0I,GAAA,EAAD,CAAM1H,UAAW6E,EAAY,GAAK,UAAW8C,YAAa,IAAOC,aAAc,IAAOC,WAAS,EACzFC,UAAW,SACXlF,eAAgB,gBAAiBD,WAAY,SAAUJ,KAAM,EAAGC,OAAQ,OAF9E,UAGH,eAACkF,GAAA,EAAD,CAAMxF,MAAI,EAAV,UACI,cAACc,GAAA,EAAD,CAAYN,UAAW,KAAMqF,UAAW,SAAU5E,QAAS,KAAM6E,aAAc,EAA/E,SACK3B,GAAgBrH,EAAE,kBAEvB,cAACgE,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,SACI,eAAC8E,GAAA,EAAD,CAAOC,QAAS5B,GAA4B,qBAA5C,kCACyB,cAAC6B,GAAD,CAAgBzF,UAAW,OAA3B,mCADzB,6CAEyC,cAACyF,GAAD,CAAgBzF,UAAW,OAA3B,uBAFzC,YAMR,cAACgF,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAApC,SACI,cAAC,GAAD,0CACOiE,GADP,IAEIlF,IACAS,WACAoF,YACAH,YACAE,UACAE,0BACAE,YAAaA,QAGpByB,EAAe,eAACiB,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAAWC,SAAU,WAAzD,UACZ,cAAC,GAAD,CACIvD,MAAOsK,EACPvB,SAAOyB,IAAgBA,EAAazB,OACpC+B,MAAOzI,EAAE,qBACToF,YAAapF,EAAE,2BACfO,SAAUiI,EAIVY,WAAY,cAACpF,GAAA,EAAD,CACRG,QAAS,QACTT,UAAW,OAFH,SAEYyE,GAAgBA,EAAazB,MAAQyB,EAAaxB,QAAU,KACpF0C,WAAW,IAEF,KAAZpB,EACG,cAACqB,GAAD,CAAiBnJ,KAAM,QAAS0B,MAAO,CAACqC,IAAK,QAAS,aAAW,QAAQ1C,QAAS+G,EAAlF,SACI,cAAC,IAAD,MACiB,MACnB,6BACV,cAACG,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAApC,SACI,cAAC,EAAD,CAAQoI,WAAS,EAAClF,QAAS,YAAahE,KAAM,SAAUoB,MAAO,UAAWC,QAAS,WAC/EgG,EAAe9B,IAGXhG,QAAUqI,KAAiBR,IAAqB3C,GAAe2E,QAAmB,QAAT,OACzE9I,YAAUsH,KAAiBR,IAAqB3C,GAAe4E,UAAYjC,IAAqB3C,GAAe2E,SALvH,SAMEvJ,EAAE,2B,4FC3GHyJ,GAAY,YAQ6B,IAN3CzJ,EAM0C,EAN1CA,EAAGS,EAMuC,EANvCA,SAAUoF,EAM6B,EAN7BA,UAAWH,EAMkB,EANlBA,UAAWE,EAMO,EANPA,QAEnC8D,EAI0C,EAJ1CA,eACAC,EAG0C,EAH1CA,aACAC,EAE0C,EAF1CA,IACG1E,EACuC,mBAC3Cc,EAAcvI,IAAM+G,SACpBuD,EAAc,WAChB,SAAItH,QAA0ByG,IAAdxB,QAAyCwB,IAAdrB,QAAuCqB,IAAZtB,IAMpEE,EAA0B,CAC5B2C,MAAOzI,EAAE,wBAEb,OAAO,eAAC0I,GAAA,EAAD,CAAM1H,UAAW6E,EAAY,GAAK,UAAW8C,YAAa,IAAOC,aAAc,IAAOC,WAAS,EACzFC,UAAW,SACXlF,eAAgB,gBAAiBD,WAAY,SAAUJ,KAAM,EAAGC,OAAQ,OAF9E,UAGH,eAACkF,GAAA,EAAD,CAAMxF,MAAI,EAAV,UACI,cAACc,GAAA,EAAD,CAAYN,UAAW,KAAMqF,UAAW,SAAU5E,QAAS,KAAM6E,aAAc,EAA/E,SACKhJ,EAAE,gBAEP,cAACgE,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,SACI,eAAC8E,GAAA,EAAD,CAAOC,QAAQ,mBAAf,8FAEI,cAACW,GAAD,CAAkBnG,UAAW,OAA7B,4CAFJ,YAOR,cAACgF,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAtB,SACI,cAAC4C,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAAQX,OAAQ,GAApD,SACKxD,EAAE,WAAY,CAAC8J,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAKE,MAAOC,MAAK,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAKG,YAGvD,cAACrB,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAApC,SACI,cAAC,GAAD,0CACOiE,GADP,IAEIlF,IACAS,WACAoF,YACAH,YACAE,UACAE,0BACAE,YAAaA,QAGrB,cAAC0C,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,SAApC,SACI,cAAC,EAAD,CAAQoI,WAAS,EAAClF,QAAS,YAAahE,KAAM,SAAUoB,MAAO,UAAWC,QAAS,WAC/EmI,EAAajE,IAET7D,MAAO,CAACsB,MAAO,SACfzD,QAAUqI,KAAiB2B,IAAmB9E,GAAe2E,QAAmB,QAAT,OACvE9I,YAAUsH,KAAiB2B,IAAmB9E,GAAe4E,UAAYE,IAAmB9E,GAAe2E,SALnH,SAMEvJ,EAAE,yB,+TC5DHgK,GAAe,YAe6B,IAb9ChK,EAa6C,EAb7CA,EAAGS,EAa0C,EAb1CA,SAAUoF,EAagC,EAbhCA,UAAWH,EAaqB,EAbrBA,UAAWE,EAaU,EAbVA,QACnC8B,EAY6C,EAZ7CA,eAY6C,IAX7CuC,qBAW6C,MAX7BC,KAW6B,EAV7CC,EAU6C,EAV7CA,aAEAC,GAQ6C,EAT7CC,eAS6C,EAR7CD,oBACAE,EAO6C,EAP7CA,gBACAC,EAM6C,EAN7CA,kBACAC,EAK6C,EAL7CA,gBACAC,EAI6C,EAJ7CA,yBACA9C,EAG6C,EAH7CA,sBAAuBC,EAGsB,EAHtBA,mBAGsB,IAF7CC,YAE6C,MAFtCC,KAAYD,KAE0B,EAD1C3C,EAC0C,mBACpD,EAAyCzH,IAAMuK,SAA6BmC,GAA5E,oBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAAgClN,IAAMuK,SAA0B,GAAhE,oBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA8BpN,IAAMuK,SAA6BN,GAAkC,IAAnG,oBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAwCzK,IAAMuK,WAA9C,oBAAOG,EAAP,KAAqBC,EAArB,KAEMpC,EAAcvI,IAAM+G,SACpBuD,EAAc,WAChB,SAAItH,QAA0ByG,IAAdxB,QAAyCwB,IAAdrB,QAAuCqB,IAAZtB,IAMpEE,EAA0B,CAC5B2C,MAAOzI,EAAE,4BAIP8K,EAA4BrN,IAAMC,aAAY,SAACqN,GAAsC,IAAD,EAExD,GAD9BJ,EAAe,UAACI,EAAE1F,cAAH,aAAC,EAAU1H,OACtB8M,IACAA,EAAwB,UAACM,EAAE1F,cAAH,aAAC,EAAU1H,SAExC,CAAC8M,IAEEO,EAAmBvN,IAAMC,aAAY,SAACqN,GACxC,IAAMlH,EAAQkH,EAAE1F,OAAS4F,OAAOF,EAAE1F,OAAO1H,OAAS,EAClDkN,EAAYhH,GACR2G,GACAA,EAAgBJ,EAAoBvG,MAEzC,CAACuG,EAAoBI,IAElBnC,EAAkB5K,IAAMC,YAAY4K,qBAAS,YAAqB,IAAnBL,EAAkB,EAAlBA,QAC7CN,GACAA,EAAsBM,KAE3BJ,GAAO,CAACF,EAAuBW,cAC5BE,EAAyB/K,IAAMC,aAAY,SAAC+D,GAC9C,IAAMwG,EAAUxG,EAAM4D,OAAO1H,MAC7B,GAAIiK,EAAoB,CACpB,IAAMlB,EAAQkB,EAAmBK,IACjC,OAAIvB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOA,QACP0B,EAAgB1B,GAGxBwB,EAAWD,GACXI,EAAgB,CAACJ,cAElB,CAACK,YAAUT,EAAMD,IAEdW,EAAc9K,IAAMC,aAAY,WAGlCwK,EAAW,MACZ,IAEH,OAAO,eAACQ,GAAA,EAAD,CAAM1H,UAAW6E,EAAY,GAAK,UAAW8C,YAAa,IAAOC,aAAc,IAAOC,WAAS,EACzFC,UAAW,SAAUoC,UAAW,IAChCtH,eAAgB,gBAAiBD,WAAY,SAAUJ,KAAM,EAAGC,OAAQ,OACvE2H,SAAU,SAHjB,UAIH,eAACzC,GAAA,EAAD,CAAMxF,MAAI,EAAV,UACI,cAACc,GAAA,EAAD,CAAYN,UAAW,KAAMqF,UAAW,SAAU5E,QAAS,KAAM6E,aAAc,EAA/E,SACKhJ,EAAE,mBAEP,cAACgE,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,SACI,eAAC8E,GAAA,EAAD,CAAOC,QAAQ,sBAAf,sFAC6E,cAACC,GAAD,CACzEzF,UAAW,OAD8D,mCAD7E,oBAE8E,cAACmG,GAAD,CAC1EnG,UAAW,OAD+D,4BAF9E,8BAGmF,cAACmG,GAAD,CAC/EnG,UAAW,OADoE,8BAHnF,kBASR,cAACgF,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAApC,SACI,cAAC,GAAD,0CACOiE,GADP,IAEIlF,IACAS,WACAoF,YACAH,YACAE,UACAE,0BACAE,YAAaA,QAGrB,eAAC0C,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAAWC,SAAU,WAAzD,UACI,cAAC,GAAD,CACIvD,MAAOsK,EACPvB,SAAOyB,IAAgBA,EAAazB,OACpC+B,MAAOzI,EAAE,wBACToF,YAAapF,EAAE,iCACfO,SAAUiI,EACV/H,UAAU2J,EAAmBpH,OAC7BoI,UAAU,EACVC,YAAa,CAACC,cAAeC,KAC7BnC,WAAY,cAACpF,GAAA,EAAD,CAAYN,UAAW,OACXS,QAAS,QADrB,SAC+BgE,GAAgBA,EAAazB,MAAQyB,EAAaxB,QAAU,KACvG0C,WAAW,IAEF,KAAZpB,EAAiB,cAACqB,GAAD,CAAiBnJ,KAAM,QAAW0B,MAAO,CAACqC,IAAI,QAAS,aAAW,QAAQ1C,QAAS+G,EAAnF,SACd,cAAC,IAAD,MACiB,MAEzB,cAACG,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAApC,SACI,cAACuK,GAAA,EAAD,CAAYC,KAAG,EAAC,aAAW,WAAWtQ,KAAK,WAAWwC,MAAO+M,EACjDnK,SAAU,SAACwK,GACPD,EAA0BC,IAF1C,SAKKrM,OAAOC,KAAKsL,GAAerL,KAAI,SAACC,GAC7B,OAAO,cAAC6M,GAAA,EAAD,CAA4B/N,MAAOkB,EAAK8M,QAAS,cAACC,GAAA,EAAD,IAC/BnD,MAAK,UAAKzI,EAAE,oBAAsBnB,GAA7B,aAAsCoL,EAAepL,GAArD,QADAA,UAM1C,cAAC6J,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAApC,SACI,cAAC,GAAD,CACI4K,GAAG,kBACHC,QAAM,EACNrD,MAAOzI,EAAE,oBACTrC,MAAOiN,EACPrK,SAAU,SAACkB,GACPuJ,EAAiBvJ,IAErBhB,UAAU2J,EAAmBpH,OAC7BqI,YAAa,CAACC,cAAeC,KAC7BlC,WAAW,EAVf,SAWEe,EAAmBxL,KAAI,WAAgBiF,GAAW,IAAzB2C,EAAwB,EAAxBA,OAAQoD,EAAgB,EAAhBA,IAE/B,OAAO,cAAC,GAAD,CAAsBjM,MAAOkG,EAAOkI,gBAAiB,OAArD,SACH,cAACC,GAAA,EAAD,CAAcnM,QAAS,cAACmE,GAAA,EAAD,CACnBiI,GAAI,CAAC7I,QAAS,UACdM,UAAU,OACVS,QAAQ,QACR5C,MAAM,eAJa,SAKrBiF,IAAsB0F,UAAW,cAAClI,GAAA,EAAD,CAC/BiI,GAAI,CAAC7I,QAAS,UACdM,UAAU,OACVS,QAAQ,QACR5C,MAAM,oBAJyB,SAKjCqI,OAXgB/F,UAgB9B,cAAC6E,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAApC,SACI,cAAC,EAAD,CAAQoI,WAAS,EAAClF,QAAS,YAAahE,KAAM,SAAUoB,MAAO,UAAWC,QAAS,WAC/E8I,EAAgB5E,IAEZhG,QAAUqI,KAAiBwC,IAAsB3F,GAAe2E,QAAmB,QAAT,OAC1E9I,YAAUsH,KAAiBwC,IAAsB3F,GAAe4E,UAAYe,IAAsB3F,GAAe2E,SAJzH,SAKEvJ,EAAE,4B,yNCzKHmM,GAAe,YAa6B,IAX9CnM,EAW6C,EAX7CA,EAAGS,EAW0C,EAX1CA,SAAUoF,EAWgC,EAXhCA,UAAWH,EAWqB,EAXrBA,UAAWE,EAWU,EAXVA,QAEnCwE,GAS6C,EAV7CC,eAU6C,EAT7CD,oBACAgC,EAQ6C,EAR7CA,gBACA5B,EAO6C,EAP7CA,gBACA6B,EAM6C,EAN7CA,kBACA3E,EAK6C,EAL7CA,eACAC,EAI6C,EAJ7CA,sBACAC,EAG6C,EAH7CA,mBAG6C,IAF7CC,YAE6C,MAFtCC,KAAYD,KAE0B,EAD1C3C,EAC0C,mBAI9Cc,EAAcvI,IAAM+G,SACpBuD,EAAc,WAChB,SAAItH,QAA0ByG,IAAdxB,QAAyCwB,IAAdrB,QAAuCqB,IAAZtB,IAMpEE,EAA0B,CAC5B2C,MAAOzI,EAAE,4BAIb,EAA8BvC,IAAMuK,SAA6BN,GAAkC,IAAnG,oBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAwCzK,IAAMuK,WAA9C,oBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAgC3K,IAAMuK,SAA0B,GAAhE,oBAAO4C,EAAP,KAAiBC,EAAjB,KAEMxC,EAAkB5K,IAAMC,YAAY4K,qBAAS,YAAqB,IAAnBL,EAAkB,EAAlBA,QAC7CN,GACAA,EAAsBM,KAE3BJ,GAAO,CAACF,EAAuBW,cAC5BE,EAAyB/K,IAAMC,aAAY,SAAC+D,GAC9C,IAAMwG,EAAUxG,EAAM4D,OAAO1H,MAC7B,GAAIiK,EAAoB,CACpB,IAAMlB,EAAQkB,EAAmBK,IACjC,OAAIvB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOA,QACP0B,EAAgB1B,GAGxBwB,EAAWD,GACXI,EAAgB,CAACJ,cAClB,CAACK,YAAUT,EAAMD,IAEdoD,EAAmBvN,IAAMC,aAAY,SAACqN,GACxC,IAAMlH,EAAQkH,EAAE1F,OAAS4F,OAAOF,EAAE1F,OAAO1H,OAAS,EAClDkN,EAAYhH,GACR2G,GACAA,EAAgBJ,EAAoBvG,MAEzC,CAACuG,EAAoBI,IAGlBjC,EAAc9K,IAAMC,aAAY,WAGlCwK,EAAW,MACZ,IAEH,OAAO,eAACQ,GAAA,EAAD,CAAM1H,UAAW6E,EAAY,GAAK,UAAW8C,YAAa,IAAOC,aAAc,IAAOC,WAAS,EACzFC,UAAW,SACXlF,eAAgB,gBAChBD,WAAY,UAAWJ,KAAM,EAAGC,OAAQ,OAAQ2H,SAAU,SAHhE,UAKH,eAACzC,GAAA,EAAD,CAAMxF,MAAI,EAAV,UACI,cAACc,GAAA,EAAD,CAAYN,UAAW,KAAMqF,UAAW,SAAU5E,QAAS,KAAM6E,aAAc,EAA/E,SACKhJ,EAAE,mBAEP,cAACgE,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,SACI,eAAC8E,GAAA,EAAD,CAAOC,QAAQ,sBAAf,wEAC+D,cAACC,GAAD,CAAgBzF,UAAW,OAA3B,uBAD/D,0BAEgD,cAACyF,GAAD,CAAgBzF,UAAW,OAA3B,uCAFhD,wCAOR,cAACgF,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAApC,SACI,cAAC,GAAD,0CACOiE,GADP,IAEIlF,IACAS,WACAoF,YACAH,YACAE,UACAE,0BACAE,YAAaA,QAGrB,eAAC0C,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAAWC,SAAU,WAAzD,UACI,cAAC,GAAD,CACIvD,MAAOsK,EACPvB,SAAOyB,IAAgBA,EAAazB,OACpC+B,MAAOzI,EAAE,wBACToF,YAAapF,EAAE,6BACfO,SAAUiI,EACV/H,UAAU2J,EAAmBpH,OAC7BqI,YAAa,CAACC,cAAeC,KAG7BnC,WAAY,cAACpF,GAAA,EAAD,CACRG,QAAS,QACTT,UAAW,OAFH,SAEYyE,GAAgBA,EAAazB,MAAQyB,EAAaxB,QAAU,KACpF0C,WAAW,IAEF,KAAZpB,EACG,cAACqB,GAAD,CAAiBnJ,KAAM,QAAS0B,MAAO,CAACqC,IAAK,QAAS,aAAW,QAAQ1C,QAAS+G,EAAlF,SACI,cAAC,IAAD,MACiB,MAG7B,cAACG,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAApC,SACI,cAAC,GAAD,CACI4K,GAAG,kBACHC,QAAM,EACNrD,MAAOzI,EAAE,oBACTrC,MAAOiN,EACPrK,SAAU,SAACkB,GACPuJ,EAAiBvJ,IAErBhB,UAAU2J,EAAmBpH,OAC7BqI,YAAa,CAACC,cAAeC,KAC7BlC,WAAW,EAVf,SAWEe,EAAmBxL,KAAI,WAAgBiF,GAAW,IAAzB2C,EAAwB,EAAxBA,OAAQoD,EAAgB,EAAhBA,IAE/B,OAAO,cAAC,GAAD,CAAsBjM,MAAOkG,EAAOkI,gBAAiB,OAArD,SACH,cAACC,GAAA,EAAD,CAAcnM,QAAS,cAACmE,GAAA,EAAD,CACnBiI,GAAI,CAAC7I,QAAS,UACdM,UAAU,OACVS,QAAQ,QACR5C,MAAM,eAJa,SAKrBiF,IAAsB0F,UAAW,cAAClI,GAAA,EAAD,CAC/BiI,GAAI,CAAC7I,QAAS,UACdM,UAAU,OACVS,QAAQ,QACR5C,MAAM,oBAJyB,SAKjCqI,OAXgB/F,UAgB9B,cAAC6E,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGH,UAAW,UAApC,SACI,cAAC,EAAD,CAAQoI,WAAS,EAAClF,QAAS,YAAahE,KAAM,SAAUoB,MAAO,UAAWC,QAAS,WAC/E4K,EAAgB1G,IAEZhG,QAAUqI,KAAiBsE,IAAsBzH,GAAe2E,QAAmB,QAAT,OAC1E9I,YAAUsH,KAAiBsE,IAAsBzH,GAAe4E,UAAY6C,IAAsBzH,GAAe2E,SAJzH,SAKEvJ,EAAE,4B,iDCpJHsJ,IAXuB9J,YAAO8M,KAAP9M,EAAuB,kBAAEG,EAAF,EAAEA,MAAF,UACvD6D,OAAQ,GACR+I,aAAc,GAFyC,2BAGhDC,KAAsBC,cAAkB,CAC3CC,gBAAiB/M,EAAMC,UAAU+M,gBAJkB,4BAM/CH,KAAsBI,KAAS,CACnCL,aAAc,EACdG,gBAAiB/M,EAAMC,UAAUC,UARkB,KAW5BL,YAAO8B,IAAP9B,CAAH,mFAMfqN,GAAmBrN,YAAO8B,IAAP9B,CAAH,kdASV,qBAAEG,MAAiBmN,YAAYC,MAQhC,qBAAEpN,MAAiBqN,KAAO,KACpC,qBAAErN,MAAiBuC,OAAOC,aAAa,CAACG,MAAO,mBAmE1C2K,GAAkBzN,YAAOuB,IAAPvB,CAAH,ynEACxB,cAAEG,MAAF,OAzDoCuN,aAAhB,QAAD,g4BAoEP,qBAAEvN,MAAiBqN,KAAO,KACpC,qBAAErN,MAAiBuC,OAAOC,aAAa,CAACG,MAAO,mBAcpC,qBAAE3C,MAAiBmN,YAAYK,MAK7B,qBAAExN,MAAiBmN,YAAYC,M,+DClI5CK,GAAS5N,YAAOuB,IAAPvB,CAAH,oRAYN6N,GAAc7N,YAAO8N,KAAP9N,CAAH,wqBAcF,qBAAEG,MAAiBmN,YAAYK,MAkBjCI,GAAgB,SAAC,GAYvB,IAX2BC,EAW5B,EAX4BA,aACAxS,EAU5B,EAV4BA,SAU5B,IAT4B6M,KACA3H,QAQ5B,OATmC4H,KAAYD,KAS/C,EAR4B3H,cACGgF,EAO/B,mBACF,EAA4BzH,IAAMuK,SAA6B,IAA/D,oBAAOyF,EAAP,KAAeC,EAAf,KACMC,EAAWvJ,GAAY,CACzBC,eAAe,EACf1G,MAAO8P,IAELG,EAAmBnQ,IAAMC,aAAY,SAACC,EAAYkQ,GAChDH,EAAU/P,KAEZ,IACAmQ,EAAaN,EAAaO,QAAO,SAACC,EAAKrQ,EAAOkG,GAChD,IAAIX,EAyBJ,OAxBI+K,OAAO,aAAaC,KAAKvQ,EAAMwQ,aAC/BxQ,EAAQA,EAAMwQ,WAAWC,QAAQ,YAAa,IACzCC,MAAMpD,OAAOtN,KAAWsN,OAAOtN,KAAW8P,GAC3CC,EAAUzC,OAAOtN,IAErBuF,EAAO,CACHvF,MAAO8P,EACP/M,IAAK,qCAAGwE,EAAKlF,EAAE,iBAAV,MAA8B,cAACqN,GAAD,CAAa9I,IAAKoJ,EAAUvI,YAAa,KAAMkJ,eAAe,EACjDC,cAAe,EACfC,cAAeZ,EAAkBjQ,MAAO8P,EACxCgB,UAAW,EAAGC,OAAO,SACrE/N,OAAQ8M,EAAS,IACjB5O,IAAK4O,EAAS,IAAM5J,IAGxBX,EAAO,CACHvF,MAAOA,EACP+C,IAAK,qCAAG/C,EAAH,OACLgD,OAAQhD,EAAQ,IAChBkB,IAAKlB,EAAQ,IAAMkG,GAI3BmK,EAAIW,KAAKzL,GACF8K,IACR,IACH,EAA0BvQ,IAAMuK,SAAShN,GAAzC,oBAAO2C,EAAP,KAAcsC,EAAd,KAcA,OAAO,eAACmN,GAAD,CACH5J,OAAQ,6BACRL,MAAO,4BAA6ByL,QAAS,EAC7CxL,QAAS,OAHN,eAIH,cAAC,EAAD,yBAAmB9C,WAAS,GAA5B,2BAAqC4E,GAArC,IAA2C9E,WAAY0N,EAAYnQ,MAAOA,EAAOwC,KAAM,WAAvF,IACmBD,aAlBD,SAACuB,EAAsCoN,GACrDpN,EAAM4D,SAAWsI,EAASjJ,UAC1BzE,EAAS4O,GACM,KAAXpB,GAA6B,KAAXA,GAA6B,IAAXA,GAChCvN,GACAA,EAAa2O,EAAqB,KAAXpB,GAA6B,KAAXA,GAA6B,IAAXA,EAAeA,OAASvG,YCxG1F4H,GAAkB,YAG8G,IAF1FnJ,EAEyF,EAFzFA,cACAD,EACyF,EADzFA,UAE/C,OAAO,cAACgD,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,aAAhC,SACH,cAACiJ,GAAD,CAAkBkC,KAAK,QAAQ9C,GAAI,CAACnK,UAAW,gBAAiBkN,gBAAiB,OAC/DhO,UAAW,SACXO,MAAM,UACNC,QAAS,WACLmE,EAAc,EAAG,CAACD,YAAWU,GAAI,YAGrC,aAAW,kBAP7B,SASI,cAAC,IAAD,S,qGCVC6I,GAAgB,YAI6B,IAF/CjP,EAE8C,EAF9CA,EAAG2F,EAE2C,EAF3CA,cAAeE,EAE4B,EAF5BA,UAAWjD,EAEiB,EAFjBA,SAAU8C,EAEO,EAFPA,UAAWE,EAEJ,EAFIA,QAASsJ,EAEb,EAFaA,QACxDhK,EAC2C,mBAC/CX,EAAM9G,IAAM+G,OAAY,MACxB2K,EAAwC,CAC1C/J,YAAa,kBACbgK,cAAc,EACdC,aAAa,EACbzM,SAAU,GACV0M,YAAa,kBAAM,+BAUjB3P,EAAQ4P,eACRC,EAAc/R,IAAMgS,SAAQ,kBAAM,mCACpC,cAACzL,GAAA,EAAD,CAAYC,SAAU,QAAtB,SACI,cAACyL,GAAA,EAAD,CAAMnO,MAAM,gBAAgBC,QAAS,WACjCmE,EAAc,EAAG,CAACD,YAAWU,GAAI,YAClCvE,MAAO,CAACkH,UAAW,SAFtB,SAEiC/I,EAAE,uBAEtC,CAAC2F,EAAeD,IACrB,IAEI,IAAMiK,EAAW,SAACC,EAAuBC,GACrC,OAAOA,IAAgBA,EAAa7M,QAASiL,OAAO4B,EAAc,KAAK3B,KAAK0B,EAASE,aAsBzF,OAAO,mCACH,eAAC/O,EAAA,EAAD,CAAKC,UAAW,aAAcuC,KAAM,EAAGC,OAAQ,OAAQL,MAAO,OAA9D,UACI,cAAC4M,GAAD,qEACWZ,GADX,IAC6BvM,cAD7B,IAEI4M,cACAF,YAzBQ,SAAC,GAA4B,IAA3B1M,EAA0B,EAA1BA,SAAUjF,EAAgB,EAAhBA,MAI5B,OAAO,cAACqS,GAAD,yBACHxM,OAAQ0L,EACmB,kBAAZA,EAAP,gBACaA,EAAU,KADvB,gDACgF,EAAbvP,EAAMqN,KADzE,yBAEckC,EAFd,gDAE0E,EAAbvP,EAAMqN,KAFnE,QAGE,SALP,aAOHpH,QAASA,EACT+J,WAEAE,aAAclS,EACdsS,aAdiB,SAAC9J,EAAa+J,GAC/BvK,EAAc,EAAD,YAAC,eAAO,CAACD,UAAU,2BAAKA,GAAN,IAAiBc,OAAQ0J,MAA3C,IAAsD9J,GAAI,aAcvEP,UAAWA,EACXjD,WAAU5C,KAAMkF,IAbb,IAcJX,IAAKA,MAO0BvE,KAAMkF,KAJxC,SAON,MAAOwB,GAEL,OAAO,mCACH,eAAC3F,EAAA,EAAD,CAAKwC,KAAM,EAAGC,OAAQ,OAAQL,MAAO,OAArC,cAA8C,cAAC4M,GAAD,0CACvCZ,GADuC,IAE1CG,YArDa,WACrB,OAAO,mCAAE,cAACa,GAAD,CAAc3M,OAAQ,oBAAqBmD,QAAS,WACzD,OAAO,cAACsC,GAAA,EAAD,CAAOC,QAAQ,oBAAf,oCAmD4BlJ,KAAMkF,KAFzC,W,gDCnECkL,GAAe,YAO0D,IAAD,EAJ/CzK,EAI+C,EAJ/CA,cACA0K,EAG+C,EAH/CA,cACAC,EAE+C,EAF/CA,SACGpL,EAC4C,mBAC3EtC,EAA+B0N,EAAS5K,UAAW4K,EAASC,MAAO/J,OAApC,UAA6C8J,EAAS5K,UAAW4K,EAASC,aAA1E,aAA6C,EAAqC/J,OAAS,GAC1Hd,EAAY4K,EAAS5K,UAAW4K,EAASC,MACzC3K,EAA4B,SAAlB0K,EAASC,KAAT,OAA2BF,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAeG,gBAA1C,OAA4DH,QAA5D,IAA4DA,OAA5D,EAA4DA,EAAeI,eACrF5K,EAAS,OAAGwK,QAAH,IAAGA,OAAH,EAAGA,EAAexK,UAC3B6K,EAAsBjT,IAAMC,aAAY,SAACmG,EAAD,GAA2D,IAA3C6B,EAA0C,EAA1CA,UAAWU,EAA+B,EAA/BA,GACrET,EAAc9B,EAAD,YAAC,eACPyM,GADM,IAET5K,UAAU,2BAAK4K,EAAS5K,WAAf,mBAA4B4K,EAASC,KAAQ7K,IACtDU,GAAIA,OAET,CAACkK,EAAU3K,IACd,OAAO,cAAC,GAAD,0CACAT,GADA,IAEHtC,WACA8C,YACAE,UACAC,YACAF,cAAe+K,O,wLCRVC,GAAgB,YAcyD,IAAD,YAX/C3Q,EAW+C,EAX/CA,EACA2F,EAU+C,EAV/CA,cACAiL,EAS+C,EAT/CA,OACAC,EAQ+C,EAR/CA,gBACAP,EAO+C,EAP/CA,SAAU7P,EAOqC,EAPrCA,SACVsF,EAM+C,EAN/CA,YAAa+K,EAMkC,EANlCA,cACbC,EAK+C,EAL/CA,YAAaC,EAKkC,EALlCA,eACbX,EAI+C,EAJ/CA,cACAY,EAG+C,EAH/CA,eACAC,EAE+C,EAF/CA,cACGhM,EAC4C,mBAC3EiM,EAAU1T,IAAM+G,SAChB4M,EAAS3T,IAAM+G,SACdxJ,EAAYoC,IAAZpC,SACDqW,EAAwCC,IAAkBC,OAAlB,mBAAqCvW,IACnF,EAA0ByC,IAAMuK,SAAmE,CAC/FtB,OAAO,EACPC,QAAS,KAFb,oBAAOD,EAAP,KAAc8K,EAAd,KAIA,EAA6B/T,IAAMuK,SAA2B,qBAAX4I,GAAyBA,GAA5E,oBAAOa,EAAP,KAAgBC,EAAhB,KAEMC,EAAgBlU,IAAMC,aAAY,SAACyI,GACrCuL,GAAWD,GACoB,oBAApBZ,GACPA,GAAiBY,KAEtB,CAACZ,EAAiBY,IAGf1J,EAActK,IAAMC,aAAY,WAClC,SAAI+C,QAA8ByG,IAAlBmJ,QAAiEnJ,IAAlCmJ,EAAcG,mBAK9D,CAAC/P,EAAU4P,IACR3K,EAAY4K,EAAS5K,UAErBQ,EAAgBzI,IAAMC,aAAY,SAACyI,EAA0B5B,GAC/D,IAAMI,EAAwBJ,EAAIG,UAAY0M,EAAO1M,QAAU,MAAQ,OACvEiB,EAAc,EAAG,CAACD,UAAW4K,EAAS5K,UAAW6K,KAAM5L,EAAOyB,GAAI,WACnE,CAACkK,EAAU3K,IACRU,EAAoB5I,IAAMC,aAAY,SAACkU,EAAmB3M,GAC5D,IAAMN,GAA4B,OAAJM,QAAI,IAAJA,OAAA,EAAAA,EAAMP,WAAY0M,EAAO1M,QAAU,MAAQ,OACrE4L,EAAS5K,UAAWf,GAAQ4B,aAAeqL,EAAOrL,YAClDZ,EAAc,EAAG,CAACD,UAAU,2BAAK4K,EAAS5K,WAAf,mBAA4Bf,EAASiN,IAASrB,KAAM5L,EAAOyB,GAAI,aAE/F,CAACkK,EAAU3K,IACRkM,EAAgBpU,IAAMC,aAAY,WACpCiI,EAAc,EAAG,CACbD,UAAW,CAACoM,KAAMxB,EAAS5K,UAAUqM,IAAKA,IAAKzB,EAAS5K,UAAUoM,MAClEvB,KAAM,WACNnK,GAAI,aAET,CAACkK,EAAU3K,IACRqM,EAAoBvU,IAAMC,aAAY,SAAC1C,EAA2BiX,GACpEC,EAAWC,QACXxM,EAAc,EAAD,YAAC,eACP2K,GADM,IAET5K,UAAU,2BACH4K,EAAS5K,WADP,IAEL1K,SAAUA,EACVoX,UAAU,2BACH9B,EAAS5K,UAAU0M,WADjB,IAELH,eAAgBA,WAI7B,CAAC3B,EAAU3K,IACa,oBAAhBI,IACPA,EAAc,YAAyC,IAAvCS,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAASF,EAAqB,EAArBA,WAC7B,GAAIE,EAAUF,GAAeA,IAAeE,EAAU,CAClD,IAAM4L,EAAS,CAAC3L,OAAO,EAAMC,QAAS3G,EAAE,iBAAkB,CAACwG,OAAQA,KAEnE,OADAgL,EAASa,GACFA,EAIX,OADAb,EAAS,CAAC9K,OAAO,EAAOC,QAAS,KAC1B,CAACD,OAAO,EAAOC,QAAS,MAGvC,IAAM2L,EAAS,yBACX7J,MAAOzI,EAAE,0BACT6G,SAAU7G,EAAE,YACZ8G,UAAW9G,EAAE,oBACb+G,gBAAiB,OACjBC,UAAU,GACPiK,GANQ,IAOXlL,cACAM,oBACAH,iBACGhB,GAEDqN,EAAQ,yBACV9J,MAAOzI,EAAE,0BACT6G,SAAU7G,EAAE,aACZ8G,UAAW9G,EAAE,oBACb+G,gBAAiB,OACjBC,UAAU,GACPkK,GANO,IAQV7K,oBACAH,iBACGhB,GAEDgN,EAAaM,yBAAc,CAC7BrO,QAAS,UACTsO,QAAS,gBAEPhK,EAAQhL,IAAMgS,SAAQ,WACxB,GAAI/I,EAAMA,MACN,MAA6B,kBAAlBA,EAAMC,QACN3G,EAAE0G,EAAMC,cACUO,IAAlBR,EAAMC,QACND,EAAMC,QAEN3G,EAAE,cAIjB,GAAIgR,EAAgB,CAChB,IAAMnS,EAAMmS,EAAe0B,MAAM,KACjC,OAAO1S,EAAEnB,EAAK,GAAKA,GAAOA,EAAK,GAAM,CAAC8T,IAAK9T,EAAK,SAAOqI,GAEvD,OAAOlH,EAAE,aAGd,CAAC0G,EAAM1G,EAAEgR,IAGN4B,EAAevC,GAAiBA,EAAcuC,YAAeC,WAAWxC,EAAcuC,aAAaE,YAAY,GAAG3E,WAAa,KAAO4E,IAEtInJ,EAAOyG,GAAiBA,EAAczG,KAASiJ,WAAWxC,EAAczG,KAAO,KAAKuE,WAAa,IAAO4E,IAExGC,EAAmB3C,GAAiBA,EAAc2C,gBAAmB3C,EAAc2C,gBAAkBD,IAE3G,OAAO,eAACrK,GAAA,EAAD,CAAM1H,UAAWqP,EAAgB,GAAK,UAAW1H,YAAa,IAAOC,aAAc,IAAOC,WAAS,EAC7FC,UAAW,SAAUqC,SAAU,SAC/BvH,eAAgB,gBAAiBD,WAAY,SAAUJ,KAAM,EAAGC,OAAQ,OAF9E,UAGH,eAACkF,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGgC,QAAS,OAAQnC,UAAW,UAAW2C,eAAgB,aAC1ED,WAAY,SAAUsP,cAAe,SAAUC,UAAW,UADhE,UAII,cAACjM,GAAD,aAAkC1C,IAAK4M,EAAS1Q,SAAUsH,KAA1D,2BACOuK,GADP,IAEIa,aAAa,EACbhM,UAAWzB,EAAYA,EAAUoM,KAAO,GACxClM,QAASyK,GAAiBA,EAAcG,gBAAkBH,EAAcG,gBAAkB,OAI9F,cAACzP,EAAA,EAAD,CAAKE,UAAW,SAAUmS,QAAS,EAAnC,SACI,cAACvG,GAAD,CAAkB1M,KAAM,SAAUqB,QAASqQ,EAAetQ,MAAM,UAC9C,aAAYvB,EAAE,iBADhC,SAEI,cAAC,IAAD,QAKR,cAACiH,GAAD,aAAkC1C,IAAK6M,EAAQ3Q,SAAUsH,KAAzD,2BACOwK,GADP,IAGIY,aAAa,EACbhM,UAAWzB,EAAYA,EAAUqM,IAAM,GACvCnM,QAASyK,GAAiBA,EAAcI,eAAiBJ,EAAcI,eAAiB,UAKhG,cAAC/H,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAACc,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAAQX,OAAQ,GAAI6P,WAAY,OAApE,UACK,UAAA3N,EAAUqM,WAAV,eAAevL,UAAf,UAAyBd,EAAUoM,YAAnC,aAAyB,EAAgBtL,SAAU6J,EAAgB,qCAC/DoB,EAAO,qBAAO/L,EAAUoM,YAAjB,aAAO,EAAgBtL,OAAvB,mBAAwC6J,EAAciD,KAAOjD,EAAciD,KAAOP,IAAlF,sBAAmGrN,EAAUqM,WAA7G,aAAmG,EAAevL,QAAlH,qBACEd,EAAUqM,WADZ,aACE,EAAevL,OADjB,mBACkC6J,EAAckD,KAAOlD,EAAckD,KAAOR,IAD5E,sBAC6FrN,EAAUoM,YADvG,aAC6F,EAAgBtL,QACrH,cAACqG,GAAD,CAAkB1M,KAAM,QAAS,aAAYH,EAAE,iBAAkBwB,QAASmQ,EAA1E,SAEC,cAAC,IAAD,SACCoB,QAGd,cAACrK,GAAA,EAAD,CAAMxF,MAAI,EAACjC,UAAW,UAAtB,SACI,eAACyH,GAAA,EAAD,CAAMG,WAAS,EAACC,UAAW,SAAU0K,QAAS,EAAG7P,WAAY,UAA7D,UACI,eAAC+E,GAAA,EAAD,CAAMxF,MAAI,EAACuQ,cAAe,EAAGxH,GAAI,CAAC1K,MAAO,kBAAzC,UACI,eAACmH,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,gBAAiBkF,UAAW,MAAOnF,WAAY,SACzEH,OAAQ,GADd,UAEI,cAACQ,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,SAA6CnE,EAAE,mBAC/C,cAACgE,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,SACKkM,EAAgB,qCACb,iCACI,cAACxD,GAAD,2BACQ6G,qBAAUxB,IADlB,IAEI/R,KAAM,QACN8L,GAAI,CAAChI,SAAU,SAAUT,OAAQ,OAAQmQ,SAAU,OAAQxQ,MAAO,QAClEnC,UAAW,gBACXO,MAAM,UACN,aAAW,kBANf,SAOI,cAAC,IAAD,OAEJ,cAACqS,GAAD,yBACI5S,UAAW,eACP6S,uBAAY3B,IAFpB,IAIQ4B,aAAc,CAACC,SAAU,SAAUC,WAAY,SAC/ChF,gBAAiB,CAAC+E,SAAU,MAAOC,WAAY,SALvD,SAQI,cAAC,GAAD,0CACO9O,GADP,IACalF,IACTE,aAAc8R,EACdxE,aAAc6D,EACdrW,SAAU0K,EAAU1K,SAAW0K,EAAU1K,SAAWqV,EAAcrV,SAAWqV,EAAcrV,SAAW,aAIlH,eAACgJ,GAAA,EAAD,CACIN,UAAW,OADf,UACwBgC,EAAU1K,SAAW0K,EAAU1K,SAAWqV,EAAcrV,SAAWqV,EAAcrV,SAAW,GADpH,UAC4I+X,SAIxJ,eAACrK,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,gBAAiBkF,UAAW,MAAOnF,WAAY,SAA/E,UACI,eAACK,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,cAA8CnE,EAAE,sBAChD,eAACgE,GAAA,EAAD,CAAYN,UAAW,IACXS,QAAQ,QADpB,cAC8ByO,EAD9B,WAGJ,eAAClK,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,gBAAiBkF,UAAW,MAAOnF,WAAY,SAA/E,UACI,eAACK,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,cAA8CnE,EAAE,qBAChD,eAACgE,GAAA,EAAD,CAAYN,UAAW,IACXS,QAAQ,QADpB,UAC6B6O,EAD7B,UAGJ,eAACtK,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,gBAAiBkF,UAAW,MAAOnF,WAAY,SAA/E,UACI,eAACK,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,cAA8CnE,EAAE,WAAhD,OACA,cAACgE,GAAA,EAAD,CAAYN,UAAW,IACXS,QAAQ,QADpB,SAC6ByF,UAGrC,cAAClB,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,EAAD,CAAQiB,QAAS,YAAahE,KAAM,QAASoB,MAAO,UAAWC,QAAS,WACpEuP,EAAYT,EAAS5K,YAEjBhG,QAAUqI,KAAiB+I,IAAkBlM,GAAe2E,QAAmB,QAAT,OACtE9I,YAAUsH,KAAiB+I,IAAkBlM,GAAe4E,UAAYsH,IAAkBlM,GAAe2E,UAAW7C,EAAMA,OAC1H2C,WAAW,EALnB,SAK0BZ,eC3QjCwL,GAAYzU,IAAOiD,IAAV,kF,8LCuBTyR,GAAiB,YAkBiD,IAAD,YAdvDlU,EAcuD,EAdvDA,EACAS,EAauD,EAbvDA,SACAmQ,EAYuD,EAZvDA,OACAC,EAWuD,EAXvDA,gBACAsD,EAUuD,EAVvDA,oBACAC,EASuD,EATvDA,YACAC,EAQuD,EARvDA,qBACAC,EAOuD,EAPvDA,cACAC,EAMuD,EANvDA,YACAC,EAKuD,EALvDA,YACA7O,EAIuD,EAJvDA,cACAI,EAGuD,EAHvDA,YACA0O,EAEuD,EAFvDA,QACGvP,EACoD,mBACpEwP,EAAWjX,IAAM+G,SACjBmQ,EAAWlX,IAAM+G,SAChBxJ,EAAYoC,IAAZpC,SACDqW,EAAwCC,IAAkBC,OAAlB,mBAAqCvW,IACnF,EAA0ByC,IAAMuK,SAAmE,CAC/FtB,OAAO,EACPC,QAAS,KAFb,oBAAOD,EAAP,KAAc8K,EAAd,KAIA,EAA6B/T,IAAMuK,SAA2B,qBAAX4I,GAAyBA,GAA5E,oBAAOa,EAAP,KAAgBC,EAAhB,KAEMC,EAAgBlU,IAAMC,aAAY,SAACyI,GACrCyO,QAAQC,IAAI,MAAO1O,GACnBuL,GAAWD,GACoB,oBAApBZ,GACPA,GAAiBY,KAEtB,CAACZ,EAAiBY,IAEf1J,EAAc,WAChB,SAAItH,QAA4ByG,IAAhBkN,QAAyDlN,IAA5BkN,EAAYU,cAMlC,oBAAhB/O,IACPA,EAAc,YAAyC,IAAvCS,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAASF,EAAqB,EAArBA,WAC7B,GAAIE,EAAUF,GAAeA,IAAeE,EAAU,CAClD,IAAM4L,EAAS,CAAC3L,OAAO,EAAMC,QAAS3G,EAAE,iBAAkB,CAACwG,OAAQA,KAEnE,OADAgL,EAASa,GACDA,EAIZ,OADAb,EAAS,CAAC9K,OAAO,EAAOC,QAAS,KAC1B,CAACD,OAAO,EAAOC,QAAS,MASvC,IAAMN,EAAoB5I,IAAMC,aAAY,SAACkU,EAAmB3M,GAC5D,IAAMN,GAA+B,OAAJM,QAAI,IAAJA,OAAA,EAAAA,EAAMP,WAAYgQ,EAAShQ,QAAU,QAAU,QAC5E+P,EAAS9P,GAAQ4B,aAAeqL,EAAOrL,YACvCZ,EAAc,CAACD,UAAU,2BAAK+O,GAAN,mBAAiB9P,EAASiN,IAASrB,KAAM5L,MAEtE,CAAC8P,EAAS9O,IACPoP,EAAW,yBACbtM,MAAOzI,EAAE,oBACT6G,SAAU7G,EAAE,kBACZ+G,gBAAiB,OACjBC,UAAU,GACPuN,GALU,IAMbxO,cACAM,qBACGnB,GAED8P,EAAW,yBACbvM,MAAOzI,EAAE,oBACT6G,SAAU7G,EAAE,kBACZ+G,gBAAiB,OACjBC,UAAU,GACPwN,GALU,IAMbzO,cACAM,qBACGnB,GAEDgN,EAAaM,yBAAc,CAC7BrO,QAAS,UACTsO,QAAS,gBAEPT,EAAoBvU,IAAMC,aAAY,SAAC1C,EAA2BiX,GACpEC,EAAWC,QACXxM,EAAc,CACVD,UAAU,2BACH+O,GADE,IACOzZ,SAAUA,EACtBoX,UAAU,2BACHqC,EAAQrC,WADN,IAELH,eAAgBA,MAErB1B,KAAM,YAEd,CAACkE,EAAS9O,IACP8C,EAAQhL,IAAMgS,SAAQ,WACxB,GAAG/I,EAAMA,MACL,MAA6B,kBAAlBA,EAAMC,QACL3G,EAAE0G,EAAMC,cACOO,IAAlBR,EAAMC,QACJD,EAAMC,QAEN3G,EAAE,cAIjB,GAAIqU,EAAsB,CACtB,IAAMxV,EAAMwV,EAAqB3B,MAAM,KACvC,OAAO1S,EAAEnB,EAAK,GAAKA,GAAOA,EAAK,GAAM,CAAC8T,IAAK9T,EAAK,SAAOqI,GAEvD,OAAOlH,EAAE,0BAEf,CAAC0G,EAAM2N,EAAqBrU,IAE9B,OAAO,eAAC0I,GAAA,EAAD,CAAM1H,UAAWoT,EAAc,GAAK,UAAWzL,YAAa,IAAOC,aAAc,IAAOC,WAAS,EAC3FC,UAAW,SACXlF,eAAgB,gBAAiBD,WAAY,SAAUJ,KAAM,EAAGC,OAAQ,OAF9E,UAGH,eAACkF,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGgC,QAAS,OAAQnC,UAAW,UAAW2C,eAAgB,GAAID,WAAY,UAC1FsP,cAAe,SADrB,UAEI,cAACgC,GAAD,aAAwB1Q,IAAKmQ,EAAUjU,SAAUsH,KAAjD,2BACOgN,GADP,IAEI5B,aAAY,EACZ+B,MAAO,QACP/N,UAAWsN,EAAUA,EAAQU,MAAQ,GACrCvP,QAASwO,EAAcA,EAAYU,YAAc,OAErD,cAAC/T,EAAA,EAAD,CAAKE,UAAW,SAAUmS,QAAS,EAAnC,SACI,cAACa,GAAD,UACI,cAAC,IAAD,QAGR,cAACgB,GAAD,aAAwB1Q,IAAKoQ,EAAUlU,SAAUsH,KAAjD,2BACOiN,GADP,IAEI7B,aAAY,EACZ+B,MAAO,QACP/N,UAAWsN,EAAUA,EAAQW,MAAQ,GACrCxP,QAASwO,EAAcA,EAAYU,YAAc,UAIzD,cAACpM,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAACc,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAS,QAASX,OAAQ,GAAI6P,WAAY,OAAtE,UACK,UAAAoB,EAAQU,aAAR,eAAe3O,UAAf,UAAyBiO,EAAQW,aAAjC,aAAyB,EAAe5O,SAAU4N,EAAc,qCAC5D3C,EAAO,qBAAOgD,EAAQU,aAAf,aAAO,EAAe3O,OAAtB,mBAAuC4N,EAAYiB,KAAOjB,EAAYiB,KAAOtC,IAA7E,sBAA8F0B,EAAQW,aAAtG,aAA8F,EAAe5O,QAA7G,qBACEiO,EAAQW,aADV,aACE,EAAe5O,OADjB,mBACkC4N,EAAYiB,KAAQ,EAAIjB,EAAYiB,KAAQtC,IAD9E,sBAC+F0B,EAAQU,aADvG,aAC+F,EAAe3O,QACtH,cAACqG,GAAD,CAAkB1M,KAAM,QAAS,aAAYH,EAAE,iBAAkBwB,QAASmQ,EAA1E,SACC,cAAC,IAAD,SACCoB,QAGd,cAACrK,GAAA,EAAD,CAAMxF,MAAI,EAACjC,UAAW,UAAtB,SACI,eAACyH,GAAA,EAAD,CAAMG,WAAS,EAACC,UAAW,SAAU0K,QAAS,EAAG7P,WAAY,UAA7D,UACI,eAAC+E,GAAA,EAAD,CAAMxF,MAAI,EAACuQ,cAAe,EAAGxH,GAAI,CAAC1K,MAAO,kBAAzC,UACI,eAACmH,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,gBAAiBkF,UAAW,MAAOnF,WAAY,SACzEH,OAAQ,GADd,UAEI,cAACQ,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,SAA6CnE,EAAE,mBAC/C,cAACgE,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,SAEKiQ,EAAc,qCACX,iCACI,cAACvH,GAAD,2BACQ6G,qBAAUxB,IADlB,IAEIjG,GAAI,CAAChI,SAAU,SAAUT,OAAQ,OAAQmQ,SAAU,OAAQxQ,MAAO,QAClEnC,UAAW,gBACXO,MAAM,UACN,aAAW,kBALf,SAMI,cAAC,IAAD,OAEJ,cAACqS,GAAD,yBACI5S,UAAW,eACP6S,uBAAY3B,IAFpB,IAIQ4B,aAAc,CAACC,SAAU,SAAUC,WAAY,SAC/ChF,gBAAiB,CAAC+E,SAAU,MAAOC,WAAY,SALvD,SAQI,cAAC,GAAD,0CACO9O,GADP,IACalF,IACTE,aAAc8R,EACdxE,aAAc6D,EACdrW,SAAUyZ,EAAQzZ,SAAWyZ,EAAQzZ,SAAWoZ,EAAYpZ,SAAWoZ,EAAYpZ,SAAW,aAK1G,eAACgJ,GAAA,EAAD,CACIN,UAAW,OADf,UACwB+Q,EAAQzZ,SAAWyZ,EAAQzZ,SAAWoZ,EAAYpZ,SAAWoZ,EAAYpZ,SAAW,GAD5G,UACoI+X,SAKhJ,eAACrK,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,gBAAiBkF,UAAW,MAAOnF,WAAY,SAA/E,UACI,eAACK,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,cAA8CnE,EAAE,WAAhD,OACA,cAACgE,GAAA,EAAD,CAAYN,UAAW,IACXS,QAAQ,QADpB,SAC6BnE,EAAEoU,EAAcA,EAAYkB,QAAUvC,aAG3E,cAACrK,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,EAAD,CAAQiB,QAAS,YAAahE,KAAM,QAASoB,MAAO,UAAWC,QAAS,WACpE8S,EAAcG,IAEV/U,QAAUqI,KAAiBoM,IAAwBvP,GAAe2E,QAAmB,QAAT,OAC5E9I,YAAUsH,KAAiBoM,IAAwBvP,GAAe4E,UAAY2K,IAAwBvP,GAAe2E,SACrHF,WAAW,EALnB,SAMKZ,e,kOCvNZ8M,GAAkB,YAoBiD,IAAD,YAhBxDvV,EAgBwD,EAhBxDA,EACAS,EAewD,EAfxDA,SACAmQ,EAcwD,EAdxDA,OACAC,EAawD,EAbxDA,gBACA2E,EAYwD,EAZxDA,qBACApB,EAWwD,EAXxDA,YACAqB,EAUwD,EAVxDA,iBACAlB,EASwD,EATxDA,YACAC,EAQwD,EARxDA,YACA1R,EAOwD,EAPxDA,QACA4S,EAMwD,EANxDA,sBACA/P,EAKwD,EALxDA,cACAI,EAIwD,EAJxDA,YACA0O,EAGwD,EAHxDA,QAGwD,IAFxDkB,0BAEwD,OAFlC,EAEkC,EADrDzQ,EACqD,mBACrEwP,EAAWjX,IAAM+G,SACjBmQ,EAAWlX,IAAM+G,SAChBxJ,EAAYoC,IAAZpC,SACDqW,EAAwCC,IAAkBC,OAAlB,mBAAqCvW,IACnF,EAAqDyC,IAAMuK,SAAS2N,GAApE,oBAAOC,EAAP,KAA4BC,EAA5B,KAEA,EAA6BpY,IAAMuK,SAA2B,qBAAX4I,GAAyBA,GAA5E,oBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAA0BjU,IAAMuK,SAAmE,CAC/FtB,OAAO,EACPC,QAAS,KAFb,oBAAOD,EAAP,KAAc8K,EAAd,KAIMG,EAAgBlU,IAAMC,aAAY,SAACyI,GACrCuL,GAAWD,GACoB,oBAApBZ,GACPA,GAAiBY,KAEtB,CAACZ,EAAiBY,IAEf1J,EAAc,WAChB,SAAItH,QAA4ByG,IAAhBkN,QAAyDlN,IAA5BkN,EAAYU,cAMlC,oBAAhB/O,IACPA,EAAc,YAAyC,IAAvCS,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAASF,EAAqB,EAArBA,WAC7B,GAAIE,EAAUF,GAAeA,IAAeE,EAAU,CAClD,IAAM4L,EAAS,CAAC3L,OAAO,EAAMC,QAAS3G,EAAE,iBAAkB,CAACwG,OAAQA,KAEnE,OADAgL,EAASa,GACDA,EAIZ,OADAb,EAAS,CAAC9K,OAAO,EAAOC,QAAS,KAC1B,CAACD,OAAO,EAAOC,QAAS,MASvC,IAAMN,EAAoB5I,IAAMC,aAAY,SAACkU,EAAmB3M,GAA0B,IAClFN,EADmEmR,EAAc,wDAAN,EAE3EA,IAASF,GACTC,EAAsBC,GAEtB7Q,GACAN,GAAY,OAAJM,QAAI,IAAJA,OAAA,EAAAA,EAAMP,WAAYgQ,EAAShQ,QAAU,QAAU,QACnD+P,EAAS9P,GAAQ4B,aAAeqL,EAAOrL,YACvCZ,EAAc,CAACD,UAAU,2BAAK+O,GAAN,mBAAiB9P,EAASiN,IAASrB,KAAM5L,KAGrEgB,EAAc,CAACD,UAAU,2BAAK+O,GAAN,mBAAiB,QAAW7C,IAASrB,KAAM,iBAExE,CAACkE,EAAS9O,IAKPqM,EAAoBvU,IAAMC,aAAY,SAAC1C,EAA2BiX,GACpEC,EAAWC,QACXxM,EAAc,CACVD,UAAU,2BACH+O,GADE,IACOzZ,SAAUA,EACtBoX,UAAU,2BACHqC,EAAQrC,WADN,IAELH,eAAgBA,MAErB1B,KAAM,YAEd,CAACkE,EAAS9O,IACPoP,EAAW,yBACbtM,MAAOzI,EAAE,oBACT6G,SAAU7G,EAAE,kBACZ+G,gBAAiB,OACjBC,UAAU,GACPuN,GALU,IAMbxO,cACAM,qBACGnB,GAED8P,EAAW,yBACbvM,MAAOzI,EAAE,oBACT6G,SAAU7G,EAAE,kBACZ+G,gBAAiB,OACjBC,UAAU,GACPwN,GALU,IAMbzO,cACAM,qBACGnB,GAEDgN,EAAaM,yBAAc,CAC7BrO,QAAS,UACTsO,QAAS,gBAGPhK,GAAQhL,IAAMgS,SAAQ,WACxB,GAAG/I,EAAMA,MACL,MAA6B,kBAAlBA,EAAMC,QACL3G,EAAE0G,EAAMC,cACOO,IAAlBR,EAAMC,QACJD,EAAMC,QAEN3G,EAAE,cAIjB,GAAI0V,EAAuB,CACvB,IAAM7W,EAAM6W,EAAsBhD,MAAM,KACxC,OAAO1S,EAAEnB,EAAK,GAAKA,GAAOA,EAAK,GAAM,CAAC8T,IAAK9T,EAAK,SAAOqI,GAEvD,OAAOlH,EAAE,6BAGf,CAAC0G,EAAMgP,EAAsB1V,IAE/B,OAAO,eAAC0I,GAAA,EAAD,CAAM1H,UAAWoT,EAAc,GAAK,UAAWzL,YAAa,IAAOC,aAAc,IAAOC,WAAS,EAC3FC,UAAW,SACXlF,eAAgB,gBAAiBD,WAAY,SAAUJ,KAAM,EAAGC,OAAQ,OAF9E,UAGH,eAACkF,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAGgC,QAAS,OAAQnC,UAAW,UAAW2C,eAAgB,GAAID,WAAY,UAC1FsP,cAAe,SADrB,UAEI,cAACgC,GAAD,aAAsC1Q,IAAKmQ,EAAUjU,SAAUsH,KAA/D,2BACOgN,GADP,IAEI5B,aAAY,EACZ+B,MAAO,QACP/N,UAAWsN,EAAUA,EAAQU,MAAQ,GACrCvP,QAASwO,EAAcA,EAAYU,YAAc,OAErD,cAAC/T,EAAA,EAAD,CAAKE,UAAW,SAAUmS,QAAS,EAAnC,SACI,cAACa,GAAD,UACI,cAAC,IAAD,QAGR,cAACgB,GAAD,aAAsC1Q,IAAKoQ,EAAUlU,SAAUsH,KAA/D,2BACOiN,GADP,IAEI7B,aAAY,EACZ+B,MAAO,QACP/N,UAAWsN,EAAUA,EAAQW,MAAQ,GACrCxP,QAASwO,EAAcA,EAAYU,YAAc,OAErD,cAACpM,GAAA,EAAD,CAAMxF,MAAI,EAACjC,UAAW,UAAWG,UAAW,EAA5C,SACI,cAAC,GAAD,CAAewB,SAAUgT,EAAqB9S,QAASA,EACxCD,cAvFN,SAAClF,GAClB8W,EAAO,MAAYlO,WAAakO,EAAO,MAAYhO,QAAU9I,EAAQ,IACrE0I,EAAkBoO,EAAO,MAAa,KAAM9W,WAyF5C,cAAC+K,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAACc,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAAQX,OAAQ,GAAI6P,WAAY,OAApE,UACK,UAAAoB,EAAQU,aAAR,eAAe3O,UAAf,UAAyBiO,EAAQW,aAAjC,aAAyB,EAAe5O,SAAU4N,EAAc,qCAC5D3C,EAAO,qBAAOgD,EAAQU,aAAf,aAAO,EAAe3O,OAAtB,mBAAuC4N,EAAYiB,KAAOjB,EAAYiB,KAAOtC,IAA7E,sBAA8F0B,EAAQW,aAAtG,aAA8F,EAAe5O,QAA7G,qBACEiO,EAAQW,aADV,aACE,EAAe5O,OADjB,mBACkC4N,EAAYiB,KAAQ,EAAIjB,EAAYiB,KAAQtC,IAD9E,sBAC+F0B,EAAQU,aADvG,aAC+F,EAAe3O,QACtH,cAACqG,GAAD,CAAkB1M,KAAM,QAAS,aAAYH,EAAE,iBAAkBwB,QAASmQ,EAA1E,SACC,cAAC,IAAD,SACCoB,QAGd,cAACrK,GAAA,EAAD,CAAMxF,MAAI,EAACjC,UAAW,UAAtB,SACI,eAACyH,GAAA,EAAD,CAAMG,WAAS,EAACC,UAAW,SAAU0K,QAAS,EAAG7P,WAAY,UAA7D,UACI,eAAC+E,GAAA,EAAD,CAAMxF,MAAI,EAACuQ,cAAe,EAAGxH,GAAI,CAAC1K,MAAO,kBAAzC,UACI,eAACmH,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,gBAAiBkF,UAAW,MAAOnF,WAAY,SACzEH,OAAQ,GADd,UAEI,cAACQ,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,SAA6CnE,EAAE,mBAC/C,cAACgE,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,SAEKiQ,EAAc,qCACX,iCACI,cAACvH,GAAD,2BACQ6G,qBAAUxB,IADlB,IAEIjG,GAAI,CAAChI,SAAU,SAAUT,OAAQ,OAAQmQ,SAAU,OAAQxQ,MAAO,QAClEnC,UAAW,gBACXO,MAAM,UACN,aAAW,kBALf,SAMI,cAAC,IAAD,OAEJ,cAACqS,GAAD,yBACI5S,UAAW,eACP6S,uBAAY3B,IAFpB,IAIQ4B,aAAc,CAACC,SAAU,SAAUC,WAAY,SAC/ChF,gBAAiB,CAAC+E,SAAU,MAAOC,WAAY,SALvD,SAQI,cAAC,GAAD,0CACO9O,GADP,IACalF,IACTE,aAAc8R,EACdxE,aAAc6D,EACdrW,SAAUyZ,EAAQzZ,SAAWyZ,EAAQzZ,SAAWoZ,EAAYpZ,SAAWoZ,EAAYpZ,SAAW,aAK1G,eAACgJ,GAAA,EAAD,CACIN,UAAW,OADf,UACwB+Q,EAAQzZ,SAAWyZ,EAAQzZ,SAAWoZ,EAAYpZ,SAAWoZ,EAAYpZ,SAAW,GAD5G,UACoI+X,SAKhJ,eAACrK,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,gBAAiBkF,UAAW,MAAOnF,WAAY,SAA/E,UACI,eAACK,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAQ,QAApC,cAA8CnE,EAAE,WAAhD,OACA,cAACgE,GAAA,EAAD,CAAYN,UAAW,IACXS,QAAQ,QADpB,SAC6BnE,EAAEoU,EAAcA,EAAY2B,QAAUhD,aAG3E,cAACrK,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,EAAD,CAAQiB,QAAS,YAAahE,KAAM,QAASoB,MAAO,UAAWC,QAAS,WACpEiU,EAAiBhB,IAEb/U,QAAUqI,KAAiByN,IAAyB5Q,GAAe2E,QAAmB,QAAT,OAC7E9I,YAAUsH,KAAiByN,IAAyB5Q,GAAe4E,UAAYgM,IAAyB5Q,GAAe2E,UAAW7C,EAAMA,OACxI2C,WAAW,EALnB,SAMKZ,gB,qECzPZuN,GAAgB,YAC0E,IAA/FtQ,EAA8F,EAA9FA,UAAWuQ,EAAmF,EAAnFA,iBAAkBpQ,EAAiE,EAAjEA,UAAWD,EAAsD,EAAtDA,QAAYV,EAA0C,mBAClGQ,EAAYA,GAAwB,GAEpC,MAAoCjI,IAAMuK,SAAwB,CAC9D5B,GAAI,SACJV,UAAWA,IAFf,oBAAOwQ,EAAP,KAAmBC,EAAnB,KAKA,EAA0B1Y,IAAMuK,SAAS,GAAzC,oBAAOnE,EAAP,KAAcuS,EAAd,KACAC,cAAqB,WACb3Q,IAAcwQ,EAAWxQ,WACzByQ,EAAc,2BAAID,GAAL,IAAiBxQ,UAAWA,OAE9C,CAACA,IACJ,IAAMC,EAAgBlI,IAAMC,YAAN,yCAAkB,WAAO4Y,EAAP,yBAAAC,EAAA,yDAAuBnQ,EAAvB,EAAuBA,GAAIV,EAA3B,EAA2BA,WAC3DuQ,EADgC,gCAE1BA,EAAiB,CAAC7P,KAAIV,aAAN,YAAuBU,IAFb,OAIH,mBAAtBlB,EAAKS,cACZwQ,EAAcjR,EAAKS,cAAc2Q,EAAQ,CAAClQ,KAAIV,eAEnC,SAAPU,EACA+P,EAAc,CAACzQ,YAAWU,OACZ,WAAPA,IACD0D,EAAQpE,EAAUc,OAAV,UAAmBX,EAAWH,EAAUc,eAAxC,aAAmB,EAA+BsD,MAAQ,EACxEqM,EAAc,CAACzQ,UAAU,2BAAKA,GAAN,IAAiBe,QAASqD,IAAQ1D,QAG9DkQ,IAAWzS,GACXuS,EAASE,GAfuB,2CAAlB,wDAiBnB,CAACL,EAAkBvQ,EAAWG,EAAWD,EAASV,EAAMrB,IAI3D,MAAO,CAEH2S,gBAJoB/Y,IAAMgS,SAAQ,kBAAM,cAAC,GAAD,CAAiB9J,cAAeA,EACfD,UAAWA,MAAc,CAACA,EAAWC,IAK9FA,gBACA9B,QACAqS,eC3CMO,GAAgBhZ,IAAMiZ,MAAK,YAAiF,IAA/EC,EAA8E,EAA9EA,cAA8E,IAAhE9O,YAAgE,MAA3DC,KAAYD,KAA+C,EAC/G+O,EAAenZ,IAAM+G,SAC3B,EAAwC/G,IAAMuK,SAAS,GAAvD,oBAAO6O,EAAP,KAAqBC,EAArB,KACMC,EAAYtZ,IAAM+G,QAA6B,GAC/CwS,EAAYvZ,IAAM+G,QAA6B,GAC/CyS,EAAiBxZ,IAAMC,aAAY,WACK,IAAD,MAAtCkZ,GAAgBA,EAAalS,UAC5B,UAAAkS,EAAalS,eAAb,SAAsBwS,UAAUC,IAAI,aACpC,UAAAP,EAAalS,eAAb,mBAAsBwS,iBAAtB,SAAiCE,OAAO,QACxCN,EAAgBO,KAAY,IACF,IAAvBN,EAAUrS,SACT4S,cAAcP,EAAUrS,SAE5BqS,EAAUrS,QAAU6S,YAAYC,EAAa,QAElD,CAACZ,EAAaG,IACXU,EAAWha,IAAMC,YAAY4K,qBAAS,WACE,IAAD,QAAtCsO,GAAgBA,EAAalS,UAC5BoS,EAAgB,IACU,IAAvBC,EAAUrS,SACT4S,cAAcP,EAAUrS,UAEH,IAAtBsS,EAAUtS,SACTgT,aAAaV,EAAUtS,SAE3B,UAAAkS,EAAalS,eAAb,mBAAsBwS,iBAAtB,SAAiCE,OAAO,aACxC,UAAAR,EAAalS,eAAb,mBAAsBwS,iBAAtB,SAAiCC,IAAI,QAErCH,EAAUtS,QAAUiT,YAAW,WAC3BV,MACD,IAAOpP,GAEmB,oBAAlB8O,GACPA,OAGV9O,GAAO,CAAC8O,EAAeC,EAAaS,KAAYN,EAAUE,IAEtDO,EAAc/Z,IAAMC,aAAY,kBAAMoZ,GAAgB,SAACc,GACzD,OAAIA,EAAO,EACAA,EAAO,EACA,GAARA,GAEM,OAAZhB,QAAY,IAAZA,GAAA,UAAAA,EAAclS,eAAd,mBAAuBwS,iBAAvB,SAAkCE,OAAO,aAE7B,OAAZR,QAAY,IAAZA,GAAA,UAAAA,EAAclS,eAAd,mBAAuBwS,iBAAvB,SAAkCC,IAAI,QAE/B,IAGK,OAAZP,QAAY,IAAZA,GAAA,UAAAA,EAAclS,eAAd,mBAAuBwS,iBAAvB,SAAkCC,IAAI,aAE1B,OAAZP,QAAY,IAAZA,GAAA,UAAAA,EAAclS,eAAd,mBAAuBwS,iBAAvB,SAAkCE,OAAO,QAClCC,KAAY,GAZF,IAAD,QAOd,aAON,CAACR,IACCgB,EAAiBpa,IAAMC,aAAY,WACrC4Z,cAAcP,EAAUrS,SACxBgT,aAAaV,EAAUtS,WACzB,CAACqS,EAAUC,IAKb,OAJAvZ,IAAMgH,WAAU,WAEZ,OADAgT,IACOI,IACR,IACI,eAAC5K,GAAD,CAAiB1I,IAAKqS,EACL5V,UAAW,6BACXQ,QAASiW,EAF1B,UAGH,cAACzT,GAAA,EAAD,CAAYN,UAAW,OAAQ1C,UAAW,aAA1C,SAAyD6V,EAAa,EAAEA,EAAa,KACrF,cAAC9V,EAAA,EAAD,CAAKC,UAAW,iB,oJC/DX8W,GAAYC,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YAYa,IAEzEE,EACgD,QAZlBxX,EAS0C,EAT1CA,SACAyX,EAQ0C,EAR1CA,qBAAsB7H,EAQoB,EARpBA,cACtBtK,EAO0C,EAP1CA,YACAgL,EAM0C,EAN1CA,YACA4F,EAK0C,EAL1CA,cACA7F,EAI0C,EAJ1CA,cACAG,EAG0C,EAH1CA,eACAC,EAE0C,EAF1CA,cACGhM,EACuC,mBAGxEmL,GAAiBA,EAAcG,gBAC/ByH,EAAiB,CAEbnG,KAAM,CACFtL,OAAQ6J,EAAcG,gBAAd,UAAgCH,EAAcG,gBAAiBH,EAAc8H,iBAA7E,aAAgC,EAAyDrI,gBAAa5I,EAC9GT,QAAS4J,EAAcxK,UAAd,UAA0BwK,EAAcxK,UAAWwK,EAAc8H,iBAAjE,aAA0B,EAAmDrO,MAAQ,GAGlGiI,IAAK,CACDvL,OAAQ6J,EAAcG,gBAAd,UAAgCH,EAAcG,gBAAiBH,EAAc+H,gBAA7E,aAAgC,EAAwDtI,gBAAa5I,EAC7GT,QAAS4J,EAAcxK,UAAd,UAA0BwK,EAAcxK,UAAWwK,EAAc+H,gBAAjE,aAA0B,EAAkDtO,MAAQ,GAEjG9O,SAAUqV,EAAcrV,UAG5Bid,EAAgB,CAEZnG,KAAM,CACFtL,YAAQU,EACRT,QAAS,GAGbsL,IAAK,CACDvL,YAAQU,EACRT,QAAS,IAMrB,MAA0BhJ,IAAMuK,SAAS,GAAzC,oBAAOnE,EAAP,KAAcuS,EAAd,KACA,EAAgC3Y,IAAMuK,SAAqC,CACvE5B,GAAI,SACJmK,KAAM,MACN7K,UAAU,eACHuS,KAJX,oBAAO3H,EAAP,KAAiB+H,EAAjB,KASA5a,IAAMgH,WAAU,WACRS,EAAKQ,WAAaR,EAAKQ,YAAc4K,EAAS5K,WAI9C2S,EAAY,2BAAI/H,GAAL,IAAe5K,UAAWR,EAAKQ,eAE/C,CAACR,EAAKQ,UAAW4K,IACpB,IAAM3K,EAAgBlI,IAAMC,YAAN,yCAAkB,WAAO4Y,EAAP,qCAAAC,EAAA,6DACpCnQ,EADoC,EACpCA,GACAV,EAFoC,EAEpCA,UACA6K,EAHoC,EAGpCA,KAHoC,SAK9B2H,EAL8B,4CAKNA,EAAqB,CAC/C9R,KACAV,YACA6K,QACQ,aAATA,EAAsB,WAAtB,UAAsCA,EAAtC,aAA+CnK,IATd,OAUH,mBAAtBlB,EAAKS,cACZ0S,EAAYnT,EAAKS,cAAc2Q,EAAQ,CAAClQ,KAAIV,YAAW6K,UAE1C,aAATA,GACM+H,EAAY5S,EAAUqM,IAAIvL,QAAU6J,EAAcxK,UAAvC,UAAoDwK,EAAcxK,UAAWH,EAAUqM,IAAIvL,eAA3F,aAAoD,EAAiDsD,MAAQ,EACxHyO,EAAa7S,EAAUoM,KAAKtL,QAAU6J,EAAcxK,UAAxC,UAAqDwK,EAAcxK,UAAWH,EAAUoM,KAAKtL,eAA7F,aAAqD,EAAkDsD,MAAQ,EACjIuO,EAAY,CACR3S,UAAU,2BACH4K,EAAS5K,WADP,IAELoM,KAAM,CAACtL,OAAQd,EAAUoM,KAAKtL,OAAQC,QAAS8R,EAAWhS,WAAY,GACtEwL,IAAK,CAACvL,OAAQd,EAAUqM,IAAIvL,OAAQC,QAAS6R,EAAU/R,WAAY,KAChDH,KAAImK,KAAM,SAEvB,SAAPnK,EACPiS,EAAY,CAAC3S,YAAWU,KAAImK,SACd,WAAPnK,IACD0D,EAASpE,EAAW6K,GAAO/J,QAAU6J,EAAcxK,UAA3C,UAAwDwK,EAAcxK,UAAWH,EAAW6K,GAAO/J,eAAnG,aAAwD,EAAqDsD,MAAQ,EAC/HxD,EAFoB,2BAGjBZ,GAHiB,mBAIlB6K,EAJkB,2BAKb7K,EAAW6K,IALE,IAMhB9J,QAASqD,GAAgB,MAGjCuO,EAAY,CAAC3S,UAAWY,EAAYF,KAAImK,UAG5C+F,IAAWzS,GACXuS,EAASE,GAtCuB,2CAAlB,wDAyCnB,CAAC4B,EAAsB7H,EAAenL,EAAMrB,EAAOyM,IAChDtS,EAAqD,CACvD6F,MAAOA,EACP2U,UAAW,CACP,CACI3Z,IAAK,QACL4Z,QAAShb,IAAMgS,SAAU,kBAAM,cAAC,GAAD,0CACxBvK,GADwB,IAE3BoL,WACAD,gBACAU,cACApL,gBACAlF,WACAqQ,gBACAG,iBACAC,gBACAnL,iBAV0D,WAWzD,CAAEb,EACHoL,EACAD,EACAU,EACApL,EACAlF,EACAqQ,EACAG,EACAC,EACAnL,IACJ2S,YAAajb,IAAMgS,SAAU,kBAAK,cAAC/G,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,WAAhC,SAa9B,cAAC6S,GAAD,CAAeE,cAAeA,QACzB,CAACA,KAEd,CACI9X,IAAK,gBACL4Z,QAAQhb,IAAMgS,SAAU,kBAAK,cAAC,GAAD,0CACtBvK,GADsB,IAEzBS,gBACA0K,gBACAC,cAJuD,mBAKtD,CAAC3K,EAAc0K,EAAcC,EAASpL,IAC3CwT,iBAAaxR,KAKzB,OAAO,cAACyR,GAAD,sDAAqBzT,GAASlH,GAA9B,IAAqCmC,KAAK,e,yCCnKxCyY,GAAeb,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YAKtB,IAHzCvQ,EAGwC,EAHxCA,eACAD,EAEwC,EAFxCA,iBACGrC,EACqC,mBAE5C,EAMI8Q,GAAc,eAAK9Q,IAJnBS,EAFJ,EAEIA,cACA9B,EAHJ,EAGIA,MACAqS,EAJJ,EAIIA,WAIElY,EAAqD,CACvD6F,MAAOA,EACP2U,UAAW,CAAC,CACR3Z,IAAK,QACL4Z,QAAQhb,IAAMgS,SAAQ,kBAAM,cAAC,GAAD,0CAEavK,GAFb,IAGUQ,UAAWwQ,EAAWxQ,UACtBC,gBACAlF,WAAYyE,EAAKzE,SACjB+G,iBACAD,sBAPc,cAQZ,CAAC5B,EAAc6B,EAAetC,EAAKgR,EAAW3O,EAAiBrC,IACvGwT,iBAAaxR,GAEb,CACIrI,IAAK,gBACL4Z,QAAShb,IAAMgS,SAAS,kBAAM,cAAC,GAAD,0CACvBvK,GADuB,IAE1BS,gBAEA/C,SAAUsT,EAAWxQ,UAAUc,OAC/Bd,UAAWwQ,EAAWxQ,gBAErB,CAACwQ,EAAWhR,EAAKS,IACtB+S,iBAAaxR,KAIzB,OAAO,cAACyR,GAAD,0CAAqBzT,GAASlH,Q,2CC7C5B6a,GAAad,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YActB,IAJvCpO,EAIsC,EAJtCA,aACAD,EAGsC,EAHtCA,eACAE,EAEsC,EAFtCA,IACG1E,EACmC,mBAC1C,EAQI8Q,GAAc,eAAI9Q,IAJlBS,EAJJ,EAIIA,cACA9B,EALJ,EAKIA,MACAqS,EANJ,EAMIA,WAIElY,EAAqD,CACvD6F,MAAOA,EACP2U,UAAW,CAAC,CACR3Z,IAAK,QACL4Z,QAAShb,IAAMgS,SAAU,kBAAM,cAAC,GAAD,0CAEQvK,GAFR,IAGKQ,UAAWwQ,EAAWxQ,UACtBC,gBACAlF,WAAUyE,EAAKzE,SACfmJ,MACAF,iBACAC,kBARiB,cASf,CAAChE,EAAcgE,EAAazE,EAAKgR,EAAWxM,EAAexE,IACjGwT,iBAAaxR,GAEb,CACIrI,IAAK,gBACL4Z,QAAS,kBAAM,cAAC,GAAD,0CACRvT,GADQ,IAEXS,gBAEA/C,SAAUsT,EAAWxQ,UAAUc,OAC/Bd,UAAWwQ,EAAWxQ,eAG1BgT,iBAAaxR,KAIzB,OAAO,cAACyR,GAAD,0CAAqBzT,GAASlH,Q,gECvD5B8a,GAAgBf,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YActB,IAJ1C3N,EAIyC,EAJzCA,mBACAE,EAGyC,EAHzCA,gBACAC,EAEyC,EAFzCA,kBACGrF,EACsC,mBAO7C,EAQI8Q,GAAc,eAAI9Q,IAJlBS,EAJJ,EAIIA,cACA9B,EALJ,EAKIA,MACAqS,EANJ,EAMIA,WAIElY,EAAqD,CACvD6F,MAAOA,EACP2U,UAAW,CAAC,CACR3Z,IAAK,QACL4Z,QAAShb,IAAMgS,SAAS,kBAAM,cAAC,GAAD,0CAEYvK,GAFZ,IAGSkF,mBAAoBA,GAA0C,GAC9D1E,UAAWwQ,EAAWxQ,UACtBC,gBACAlF,WAAYyE,EAAKzE,SACjB6J,kBACAC,uBARgB,cAUd,CAAC5E,EAAcyE,EAAmBlF,EAAKgR,EAAW5L,EAAgBC,IAC3GmO,iBAAaxR,GAEb,CACIrI,IAAK,gBACL4Z,QAAShb,IAAMgS,SAAS,kBAAM,cAAC,GAAD,0CACvBvK,GADuB,IAE1BS,gBAEA/C,SAAUsT,EAAWxQ,UAAUc,OAC/Bd,UAAWwQ,EAAWxQ,gBAErB,CAACwQ,EAAWhR,EAAKS,IACtB+S,iBAAaxR,KAGzB,OAAO,cAACyR,GAAD,0CAAqBzT,GAASlH,Q,gEC7D5B+a,GAAgBhB,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YActB,IAJ1C3N,EAIyC,EAJzCA,mBACAgC,EAGyC,EAHzCA,gBACAC,EAEyC,EAFzCA,kBACGnH,EACsC,mBAO7C,EAQI8Q,GAAc,eAAI9Q,IAJlBS,EAJJ,EAIIA,cACA9B,EALJ,EAKIA,MACAqS,EANJ,EAMIA,WAIElY,EAAqD,CACvD6F,MAAOA,EACP2U,UAAW,CAAC,CACR3Z,IAAK,QACL4Z,QAAShb,IAAMgS,SAAQ,kBAAM,cAAC,GAAD,0CAE2BvK,GAF3B,IAGwBkF,mBAAoBA,GAA0C,GAC9D1E,UAAWwQ,EAAWxQ,UACtBC,gBACAlF,WAAYyE,EAAKzE,SACjB2L,kBACAC,uBARC,cAUE,CAAC1G,EAAeyE,EAAoBlF,EAAMgR,EAAY9J,EAAiBC,IAC/HqM,iBAAaxR,GAEb,CACIrI,IAAK,gBACL4Z,QAAShb,IAAMgS,SAAS,kBAAM,cAAC,GAAD,0CACvBvK,GADuB,IAE1BS,gBAEA/C,SAAUsT,EAAWxQ,UAAUc,OAC/Bd,UAAWwQ,EAAWxQ,gBAErB,CAACwQ,EAAWhR,EAAKS,IACtB+S,iBAAaxR,KAIzB,OAAO,cAACyR,GAAD,0CAAqBzT,GAASlH,Q,sJC7CnCgb,GAAQjB,aAAgB,SAAhBA,EAA0B,YAO2C,IANtCkB,EAMqC,EANrCA,KACAnY,EAKqC,EALrCA,QACAoY,EAIqC,EAJrCA,QACAhK,EAGqC,EAHrCA,QAEGhK,GACkC,EAFrCiU,OAEqC,oBAC9E,OAAO,cAAC,KAAD,CACHF,KAAMA,EACNnY,QAASA,EACT,kBAAgB,oBAChB,mBAAiB,0BAJd,SAYH,eAACsY,GAAD,CAAmBvX,MAAO,CAACwX,UAAW,MAAOnY,SAAU,WAE/CiY,OAAO,0BACPjK,QAASA,EAEE3L,KAAM,EAAGH,QAAS,OALrC,UAMI,cAACrC,EAAA,EAAD,CAAKqC,QAAS,OAAQD,MAAO,OAAQ8P,cAAe,SAApD,SACI,cAAC,EAAD,aAAkBnS,QAASA,GAAaoE,MAG5C,cAACnE,EAAA,EAAD,CAAKC,UAAW,cAAhB,SACKkY,YASJI,GAAa,YAkBnB,IAjBgDC,EAiBjD,EAjBiDA,cACAC,EAgBjD,EAhBiDA,cACAC,EAejD,EAfiDA,aACAC,EAcjD,EAdiDA,WACAC,EAajD,EAbiDA,SACAC,EAYjD,EAZiDA,UAEG1U,EAUpD,mBACF,EAQI7F,IAPAC,EADJ,EACIA,OACAb,EAFJ,EAEIA,WACAK,EAHJ,EAGIA,YACAC,EAJJ,EAIIA,gBACAE,EALJ,EAKIA,eACAD,EANJ,EAMIA,gBACAE,EAPJ,EAOIA,oBAGApB,EAMAwB,EANAxB,eACAG,EAKAqB,EALArB,eACAC,EAIAoB,EAJApB,cACAC,EAGAmB,EAHAnB,mBACAE,EAEAiB,EAFAjB,UACAD,EACAkB,EADAlB,WAEEuB,EAAQ4P,eACd,OAAO,qCACH,cAAC,GAAD,CAAO0J,KAAMnb,EAAeC,OAAQ+C,QAAS,kBAAM/B,EAAgB,CAAChB,QAAQ,KACrEmb,QAAS,cAACH,GAAD,kEACF7T,GADE,IACIiU,OAAO,6BAAD,OAA0C,EAAXxZ,EAAMqN,KAAO,EAA5C,OACfkC,QAAS,4BAA+BqK,GAAkBzb,EAAeE,QAFpE,sBAIhB,cAAC,GAAD,CAAOib,KAAMhb,EAAeF,OAAQ+C,QAAS,kBAAM9B,EAAgB,CAACjB,QAAQ,KACrEmb,QAAS,cAACJ,GAAD,kEACF5T,GADE,IACIiU,OAAO,6BAAD,OAA0C,EAAXxZ,EAAMqN,KAAO,EAA5C,OACfkC,QAAS,4BAA+BsK,GAAkBvb,EAAeD,QAFpE,sBAIhB,cAAC,GAAD,CAAOib,KAAM/a,EAAcH,OACpB+C,QAAS,kBAAM7B,EAAe,CAAClB,QAAQ,KACvCmb,QAAS,cAACN,GAAD,kEACF1T,GADE,IACIiU,OAAO,6BAAD,OAA0C,EAAXxZ,EAAMqN,KAAO,EAA5C,OACfkC,QAAS,uBAA0BuK,GAAiBvb,EAAcF,QAF7D,sBAIhB,cAAC,GAAD,CAAOib,KAAM9a,EAAmBJ,OACzB+C,QAAS,kBAAM5B,EAAoB,2BAAIf,GAAL,IAAyBJ,QAAQ,MACnEmb,QAAS,cAACL,GAAD,kEACF3T,GADE,IACIiU,OAAO,6BAAD,OAA0C,EAAXxZ,EAAMqN,KAAO,EAA5C,OACfkC,QAAS,uBAA0BwK,GAAevb,EAAmBH,QAFhE,sBAIhB,cAAC,GAAD,CAAOib,KAAM5a,EAAUN,OAChB+C,QAAS,kBAAMrC,EAAW,2BAAIJ,GAAL,IAAgBN,QAAQ,MACjDmb,QAAS,cAACW,GAAD,kEACF3U,GADE,IAELiU,OAAO,6BAAD,OAA0C,EAAXxZ,EAAMqN,KAAO,EAA5C,OACNkC,QAAS,uBAA0ByK,GAAatb,EAAUL,QAHrD,sBAKhB,cAAC,GAAD,CAAOib,KAAM7a,EAAWL,OACjB+C,QAAS,kBAAMhC,EAAY,2BAAIV,GAAL,IAAiBL,QAAQ,MACnDmb,QAAS,cAACpB,GAAD,kEACF5S,GADE,IACIiU,OAAO,6BAAD,OAA0C,EAAXxZ,EAAMqN,KAAO,EAA5C,OACfkC,QAAS,uBAA0B0K,GAAcxb,EAAWJ,QAFvD,0B,yEtBjIZwH,K,kBAAAA,E,qBAAAA,Q,KuBIL,I,GCSFsU,GDTQC,GAAW,SAAC,GAAD,EAAEpa,MAAF,OAA8BuN,aAA7B,QAAD,+QAUXrD,GAAmBrK,YAAOwE,KAAPxE,CAAH,iEAGhB2J,GAAiB3J,YAAOwE,KAAPxE,CAAH,8DAGdwa,GAAgB,SAAC,GAAD,QAAEC,aAAF,MAAU,GAAV,MAAcC,cAAd,MAAuB,GAAvB,SAAkEhN,aAAjE,QAAD,+LAGP+M,EAICC,IAIVC,GAAY3a,YAAOwE,KAAPxE,CAAH,8LACL,qBAAEG,MAAiBqN,QACvB,qBAAErN,MAAiBqN,KAAO,KAAO,qBAAErN,MAAiBqN,QAC7D,qBAAErN,MAAiBuC,OAAOC,aAAa,CAACG,MAAO,gBAAiBD,IAAK,SAM5D+X,GAAW,SAAC,GAAD,IAAEza,EAAF,EAAEA,MAAO0a,EAAT,EAASA,OAAT,OAA0BnN,aAAzB,KAAD,4PAKTmN,EAAOC,MAAQ1f,IAAQC,MAAQ8E,EAAMC,UAAU2a,QAAU5a,EAAMC,UAAU8G,MAIzE2T,EAAOC,MAAQ1f,IAAQC,MAAQ8E,EAAMC,UAAU8G,MAAQ/G,EAAMC,UAAU2a,QAIvE5a,EAAMC,UAAU4a,cAalBC,GAAe,SAAC,GAAD,IAAE9a,EAAF,EAAEA,MAAO0a,EAAT,EAASA,OAAT,OAA0BnN,aAAzB,KAAD,2WATE,SAAC,GAAD,IAAEvN,EAAF,EAAEA,MAAF,OAAkBuN,aAAjB,KAAD,8LAOVvN,EAAMqN,MAKtB0N,CAAe,CAAC/a,UAGDA,EAAMqN,KACZrN,EAAMC,UAAU+M,cAGXhN,EAAMqN,KAAO,EAIhBrN,EAAMC,UAAU4a,YAI3BJ,GAAS,CAACza,QAAO0a,WAGF1a,EAAMqN,KAGVrN,EAAMC,UAAU+M,gBAIlBgO,GAAwBnb,YAAOkJ,KAAPlJ,CAAH,mGAEd,qBAAEG,MAAiBqN,QA8B1BoM,GAAyB5Z,YAAOuB,IAAPvB,CAAH,2cAed,mBAA0B,EAA1B,EAAEG,MAAiBqN,KAAW,KAAO,mBAA0B,EAA1B,EAAErN,MAAiBqN,QAWvE,mBArD+B,SAAC,GAAD,IAAErN,EAAF,EAAEA,MAAF,OAAkBuN,aAAjB,KAAD,wVAelBvN,EAAMqN,MAsCN4N,CAAsB,CAACjb,MAApC,EAAEA,WACF,gBAAEuP,EAAF,EAAEA,QAASiK,EAAX,EAAWA,OAAQxZ,EAAnB,EAAmBA,MAAnB,2CAEcA,EAAMC,UAAUib,IAF9B,0EAIe3L,GAAWjE,OAAOoD,MAAMa,GAAWA,EAAU,KAAOA,GAAoB,OAJvF,iCAKciK,GAAUlO,OAAOoD,MAAM8K,GAAUA,EAAS,KAAOA,GAAkB,OALjF,4fA2BF,gBAAEjK,EAAF,EAAEA,QAASvP,EAAX,EAAWA,MAAX,4EAGeuP,EACU,kBAAZA,EAAP,gBACiBA,EAAU,KAD3B,cACkD,EAAbvP,EAAMqN,KAD3C,2DAEmBkC,EAFnB,cAE6C,EAAbvP,EAAMqN,KAFtC,0CAGE,QAPR,gCAaS8N,GAAe,SAAC,GAAD,IAAEnb,EAAF,EAAEA,MAAF,OAAkBuN,aAAjB,KAAD,+lBAmBTvN,EAAMmN,YAAYC,KAKxBgO,GAAoBvb,YAAOuB,IAAPvB,CAAH,6EAEX,mBAA0B,EAA1B,EAAEG,MAAiBqN,QAGzBgO,GAAiBxb,YAAOuB,IAAPvB,CAAH,2gDASb,mBAA0B,EAA1B,EAAEG,MAAiBqN,Q,0cC1N5B8M,O,qBAAAA,I,wBAAAA,Q,KAKL,I,GAAMmB,GAAYzb,YAAOuB,IAAPvB,CAAH,kKACX,gBAAG2Z,EAAH,EAAGA,OAAQjK,EAAX,EAAWA,QAAX,sCAC6B,kBAAXiK,EAAsBA,EAA2B,kBAAXA,EAAsBA,EAAS,KAAtC,wBADjD,+BAE+B,kBAAZjK,EAAuBA,EAA6B,kBAAZA,EAAuBA,EAAU,KAAxC,yBAFpD,QAGA,gBAAEvP,EAAF,EAAEA,MAAF,OAAaoa,GAAS,CAACpa,aACvB,gBAAEA,EAAF,EAAEA,MAAF,OAAamb,GAAa,CAACnb,aACZ,qBAAEA,MAAiBqN,QAMhCkO,GAAc,SAAC,GAAqD,IAApDlb,EAAmD,EAAnDA,EAAGrC,EAAgD,EAAhDA,MAAOuC,EAAyC,EAAzCA,aAC9B,OAAO,eAACib,GAAA,EAAD,CACHxd,MAAOA,EACP4C,SAAUL,EACV,aAAW,wBAHR,UAKH,cAACkb,GAAA,EAAD,CAAK3S,MAAOzI,EAAE,yBAA0BrC,MAAO,IAC/C,cAACyd,GAAA,EAAD,CAAK3S,MAAOzI,EAAE,0BAA2BrC,MAAO,QAGzCkc,GAAW9B,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YA8BhB,IAAD,EA1B5C/X,EA0B4C,EA1B5CA,EA0B4C,IAzB5Cqb,mBAyB4C,MAzB9B7V,GAAa8V,QAyBiB,EAxB5CC,EAwB4C,EAxB5CA,eACAC,EAuB4C,EAvB5CA,gBACAC,EAsB4C,EAtB5CA,eAEAC,GAoB4C,EArB5CC,gBAqB4C,EApB5CD,yBACAE,EAmB4C,EAnB5CA,2BACAxH,EAkB4C,EAlB5CA,YACAyH,EAiB4C,EAjB5CA,mBACAC,EAgB4C,EAhB5CA,mBACAC,EAe4C,EAf5CA,oBACAC,EAc4C,EAd5CA,oBACA7H,EAa4C,EAb5CA,oBACAqB,EAY4C,EAZ5CA,qBACAnB,EAW4C,EAX5CA,qBACAqB,EAU4C,EAV5CA,sBACAiB,EAS4C,EAT5CA,cACArC,EAQ4C,EAR5CA,cACAmB,EAO4C,EAP5CA,iBACA9P,EAM4C,EAN5CA,cACAI,EAK4C,EAL5CA,YAGAjD,GAE4C,EAJ5CU,OAI4C,EAH5CL,MAG4C,EAF5CL,SACGoC,EACyC,mBAChD,EAA0BzH,IAAMuK,SAAS8R,GAAiBuB,IAA1D,oBAAOxX,EAAP,KAAcuS,EAAd,KACA,EAAkD3Y,IAAMuK,SAAwB,CAC5EtC,UAAW6V,EACXhL,KAAM,UAFV,oBAAO0L,EAAP,KAA0BC,EAA1B,KAIA,EAAoDze,IAAMuK,SAAyF,CAACtC,UAAW8V,IAA/J,oBAAOW,EAAP,KAA2BC,EAA3B,KACIC,EAAiBC,eACfC,EAAM,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAgBE,OACzBC,EAAU,UAAGC,KAAGC,MAAMH,UAAZ,aAAG,EAAkBhM,KAErC9L,qBAAU,WACF+X,GACApG,EAAwB,WAAfoG,EAA0B1C,GAAgB6C,SAAW7C,GAAgBwB,WAEnF,CAACkB,IAEJnG,cAAqB,WACbkF,IAAmBU,EAAkBvW,WACrCwW,EAAqB,2BAAID,GAAL,IAAwBvW,UAAW6V,KAEvDC,IAAoBW,EAAmBzW,WAAyC,eAA5ByW,EAAmB5L,MACvE6L,EAAsB,2BAAID,GAAL,IAAyBzW,UAAW8V,OAE9D,CAACD,EAAgBC,IAEpB,IAAMoB,EAAoBnf,IAAMC,YAAN,yCAAkB,gCAAA6Y,EAAA,6DAAQ7Q,EAAR,EAAQA,UAAW6K,EAAnB,EAAmBA,KAAnB,SAClCmL,EAAwBhW,EAAW6K,GADD,OAGpC2L,EADwB,mBAAjBvW,EACcA,EAAc,CAACD,YAAW6K,SAE1B,CAAC7K,YAAW6K,SALG,2CAAlB,sDAOvB,CAACmL,EAAyB/V,IACvBkX,EAAuBpf,IAAMC,YAAN,yCAAkB,gCAAA6Y,EAAA,6DACW7Q,EADX,EACWA,UACA6K,EAFX,EAEWA,KAFX,SAMrCqL,EAA2BlW,EAAoB,eAAT6K,EAAwB,QAAUA,GANnC,OAQvC6L,EADwB,mBAAjBzW,EACeA,EAAc,CAACD,YAAW6K,SAE1B,CAAC7K,YAAW6K,SAVK,2CAAlB,sDAa1B,CAACqL,EAA4BjW,IAE1BmX,EAAkBrf,IAAMC,aAAY,SAACyI,EAAa0I,GAChDhL,IAAUgL,GACVuH,EAASvH,KAGd,CAAChL,IACE2U,EAAmF,CACrF,CACI3Z,IAAK,aACL4Z,QAAShb,IAAMgS,SAAQ,kBAAM,cAAC,GAAD,wCACzBzP,KACGkF,GAFsB,IAGzBuW,iBACAtH,sBACAE,uBACAD,cACAE,gBACAvO,cACAJ,cAAeiX,EACfnI,QAASwH,EAAkBvW,UAC3B6O,YAAY,eAAKsH,GACjBrH,YAAY,eAAKsH,MAZ2C,gBAa1D,CAAC5W,EAAM+W,EAAmBJ,EAAoBC,EAAoBL,EACpEtH,EACAE,EACAnP,EACAkP,EACAE,EACAvO,KAER,CACIlH,IAAK,cACL4Z,QAAShb,IAAMgS,SAAQ,kBAAM,cAAC,GAAD,wCACzBzP,KACGkF,GAFsB,IAGzBpC,UACA2Y,iBACAjG,uBACAE,wBACAtB,cACAqB,mBACA1P,cACA4P,oBAAqB,EACrBhQ,cAAekX,EACfpI,QAAS0H,EAAmBzW,UAC5B6O,YAAY,eAAKwH,GACjBvH,YAAY,eAAKwH,MAd4C,iBAe3D,CACF9W,EACA6W,EAAqBC,EAAqBlZ,EAC1C2Y,EACAjG,EACAE,EACAtB,EACAqB,EACA1P,MAGNpG,EAAQ4P,eACd,OAAO,eAAC0L,GAAD,CAAW7X,QAAS,OAAQpC,UAAW,wBAC5B+b,WAAY,6BACZtJ,cAAe,EAAGR,cAAe,SAAU9H,SAAU,SAFhE,UAOC,eAAC6R,GAAA,EAAD,CAAShc,UAAW,QAASmD,QAAS,UAAtC,UACI,cAACpD,EAAA,EAAD,CAAKE,UAAW,SAAU2C,eAAgB,aAAcR,QAAS,OAAjE,SACI,cAAC,GAAD,4BAAkBpD,IAAGrC,MAAOkG,EAAO3D,aAAc4c,GAAoB5X,OAEzE,cAACnE,EAAA,EAAD,CAAKE,UAAW,SAAhB,SACI,cAACwV,GAAD,CAAeE,cAAeA,SAItC,cAACsG,GAAD,CAAuBC,KAA0B,QAApBvd,EAAMmJ,UAAsB,YAAc,IAAKjF,MAAOA,EAAnF,SACK2U,EAAU5Z,KAAI,SAACue,GACZ,OAAO,cAACzU,GAAA,EAAD,CAAMxF,MAAI,EAACU,eAAgB,eAAgBD,WAAY,UAAWH,OAAQ,OAA1E,SACuB2Z,EAAM1E,SAAlB0E,EAAMte,gBC9LpCue,GAAa5d,YAAOuB,IAAPvB,CAAH,8dA6BhB,SAAS6d,GAAT,EAUqGpY,GAClG,IAVyDjF,EAU1D,EAV0DA,EACAsd,EAS1D,EAT0DA,oBAS1D,IAR0DzV,YAQ1D,MARiEC,KAAYD,KAQ7E,EAP0DyH,EAO1D,EAP0DA,YACAiO,EAM1D,EAN0DA,WACAnY,EAK1D,EAL0DA,YACAgK,EAI1D,EAJ0DA,aACAI,EAG1D,EAH0DA,YACA5M,EAE1D,EAF0DA,SAIxD,EAA0BnF,IAAMuK,SAAkE,CAC9FpF,SAAU,GACVwM,aAAcA,IAA8B,IAFhD,oBAAOzR,EAAP,KAAcsC,EAAd,KAIMud,EAAwBlV,cAAS,SAACtK,GAChCsf,GACAA,EAAoBtf,KAEzB6J,GACG4V,EAAuBhgB,IAAMC,aAAY,SAACC,GAC5CsC,EAAS,2BAAItC,GAAL,IAAYiF,SAAUjF,KAC9B6f,EAAsB7f,KACvB,CAAC6f,EAAuB7f,IAErBgQ,EAAWvJ,GAAY,CACzBC,cAAe1G,EAAMyR,aACrBzR,MAAOA,EAAMiF,WAIX8a,ECvEH,YAEH,IAFqDpZ,EAEtD,EAFsDA,SAG/CC,EAAM9G,IAAM+G,OAAU,MAM5B,OALA/G,IAAMgH,WAAU,WACRF,EAAIG,SACJJ,GAAYA,EAAS,CAACI,QAASH,EAAIG,YAExC,IACIH,ED8DUoZ,CAAY,IAOvBpV,EAAc9K,IAAMC,aAAY,WAGlCuC,EAAS,2BAAItC,GAAL,IAAYiF,SAAU,QAC/B,IACH,OAAO,eAACwa,GAAD,CAAYnK,cAAe,SAAUtP,WAAY,UAAWC,eAAgB,aAAcW,IAAKU,EAA/F,UACH,eAAClE,EAAA,EAAD,CAAKqC,QAAS,OAAQ+H,SAAU,SAAUxH,WAAY,SAAUC,eAAgB,gBAAiB6P,cAAe,EAAG9K,YAAa,IAAOC,aAAc,IAArJ,UAeI,eAAC7H,EAAA,EAAD,CAAKE,UAAW,UAAWC,SAAU,WAAYqC,KAAM,EAAvD,UAEI,cAACwB,GAAD,yBACasE,WAAS,EACT9E,IAAKoJ,GACD4P,GAHjB,IAIa,aAAYvd,EAAEoF,GACdA,YAAapF,EAAE4C,GAAsBwC,GACrCzH,MAAK,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAOiF,SACd5B,UAAW,cACXT,SAAUkd,IARL,UASG,MAAf,OAAL9f,QAAK,IAALA,OAAA,EAAAA,EAAOiF,UAAkB,cAAC0G,GAAD,CAAiBnJ,KAAM,QAAU0B,MAAO,CAACqC,IAAI,OAAQ,aAAW,QAAQ1C,QAAS+G,EAAjF,SACtB,cAAC,IAAD,MACiB,MAExBiH,EAAY,cAACzO,EAAA,EAAD,CAAKa,WAAY,EAAjB,SAAqB4N,IAAmB,gCAGzD,cAACzO,EAAA,EAAD,CAAKwC,KAAM,EAAGgB,IAAKmZ,EAAnB,SAEKpO,EAAY,CAAC1M,WAAUjF,MAAOA,EAAMiF,gBAM1C,I,YAAMmN,GAActS,IAAMiZ,KAAKjZ,IAAMuH,WAAWqY,K,iCE1H1CO,GAAQpe,YAAOuB,IAAPvB,CAAH,+0CACd,qBAAEG,MAAiBuC,OAAOC,aAAa,CAACG,MAAO,sBAYhC,qBAAE3C,MAAiBmN,YAAYK,MA0B7B,qBAAExN,MAAiBqN,KAAO,KAC7B,gBAAErN,EAAF,EAAEA,MAAF,gBAAgBA,EAAMqN,KAAO,EAA7B,SAmBV,gBAAErN,EAAF,EAAEA,MAAF,0BACEA,EAAMuC,OAAOC,aAAa,CAACG,MAAO3C,EAAMC,UAAU8G,MAAOrE,IAAK,KADhE,gBAyCKwb,GAA+Dre,YAAOuB,IAAPvB,CAAH,2kBAQxD,qBAAEG,MAAiBmN,YAAYgR,MAU5B,qBAAEne,MAAiBqN,KAAO,EAAI,KAM7B,qBAAErN,MAAiBqN,KAAO,EAAI,KAKtC+Q,GAA+Dve,YAAOD,IAAPC,CAAH,osBASxD,qBAAEG,MAAiBmN,YAAYgR,MAS9B,qBAAEE,aASF,qBAAEA,aAQPC,GAASze,YAAO8N,KAAP9N,CAAH,+oCAcJ,qBAAEG,MAAiBmN,YAAYC,MAuBtC,gBAAEpN,EAAF,EAAEA,MAAF,gBAAgBA,EAAMuC,OAAOC,aAAa,CAACG,MAAO,4BAA4BD,IAAK,KAAnF,QAKA,gBAAE1C,EAAF,EAAEA,MAAF,gBAAgBA,EAAMuC,OAAOC,aAAa,CAACG,MAAO,iBAAiBD,IAAK,KAAxE,QChMR,SAAS6b,GAAT,EAkBsG3Z,GAA+B,IAAD,UAjB3DkE,aAiB2D,MAjBnD,cAiBmD,EAhB3D1C,EAgB2D,EAhB3DA,YAgB2D,IAf3Dc,gBAe2D,MAfhD,MAegD,EAb3DjB,EAa2D,EAb3DA,QACAoB,EAY2D,EAZ3DA,SACAvG,EAW2D,EAX3DA,SAW2D,IAV3DqG,iBAU2D,MAV/C,mBAU+C,MAT3DC,uBAS2D,MATzC,OASyC,EAR3DI,EAQ2D,EAR3DA,UACAd,EAO2D,EAP3DA,kBACAH,EAM2D,EAN3DA,cACAkJ,EAK2D,EAL3DA,aACAjU,EAI2D,EAJ3DA,KAI2D,IAH3DgY,mBAG2D,SAChI,EAAuChM,GAAwB,GAAxDV,EAAP,EAAOA,QAASD,EAAhB,EAAgBA,OAAQD,EAAxB,EAAwBA,WACxB,EAA4B9I,IAAMuK,SAA6BzB,QAA0BW,GAAzF,oBAAOiX,EAAP,KAAeC,EAAf,KACA,EAA0B3gB,IAAMuK,SAAmE,CAC/FtB,OAAO,EACPC,QAAS,KAFb,oBAAOD,EAAP,KAAc8K,EAAd,KASM6M,EAAe5gB,IAAMC,aAAY,SAACC,GACpC,GAAIoI,EAAa,CACb,IAAIsM,EAAStM,EAAY,yBACrBU,QAASwE,OAAOxE,GAChBD,UAAW,CAACD,WAAY5I,IAFJ,IAGpBqJ,aAC6BzC,GACjCiN,EAASa,GAAkB,CAAC3L,OAAO,OAExC,CAACX,EAAaU,EAASD,EAAQQ,EAAUzC,IAWtCoJ,EAAWvJ,GAAY,CACzBE,SAVkB7G,IAAMC,aAAY,YAAgB,IAAdgH,EAAa,EAAbA,QAC9ByC,GAAcA,EAAUZ,aAAe0E,OAAM,OAACvG,QAAD,IAACA,OAAD,EAACA,EAAS/G,SACvDygB,EAAUjX,EAAUZ,YACpB8X,EAAalX,EAAUZ,eAK/B,CAACY,EAAWkX,IAGZha,cAAe+K,EACfzR,MAAO4I,IAOL+X,EAAoB7gB,IAAMC,aAAY,SAACC,EAAYkQ,GACjDwQ,EAAa1gB,GACbygB,EAAUzgB,GACN0I,GACAA,EAAkB,2BAAIc,GAAc,CAACZ,WAAY5I,IAAgB4G,KAIvE,CAAC8Z,EAAcD,EAAWjX,EAAWd,EAAmB9B,IAMxDga,EAAuB9gB,IAAMC,aAAY,SAACyI,GACxCa,GACAsX,EAAkB7X,EAAStL,KAGhC,CAACmjB,EAAmB7X,EAAStL,EAAM6L,IAGhCwX,EADaphB,IAAZtC,SACyB0L,GAahC,OAAO,yCAAG,eAACoX,GAAD,CAAOla,UAAW,MAAOa,IAAKA,EAA9B,UACN,eAACmE,GAAA,EAAD,CAAMG,WAAS,EAACnF,UAAW,MAAO1C,UAAW,aAAc4C,eAAgB,gBACrE6P,cAAe,GADrB,UAEI,cAAC/K,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAf,SAAkB,cAACC,GAAA,EAAD,CAAW1d,UAAW,aAAtB,SAAqCyH,MACvD,cAACC,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGzd,UAAW,YAA7B,SAA2C6F,GAAYL,EACnD,eAACkY,GAAA,EAAD,CAAW1d,UAAWgG,GAAYP,EAAU,EAAI,YAAc,aACnDjF,QAAS+c,EADpB,UAEI,+BAAOvX,EAAWH,EAAW,IAAM,KACnC,+BAAOJ,EAAUkY,aAA4BlY,GAAW,SAC7C,UAEvB,eAACiC,GAAA,EAAD,CAAMG,WAAS,EAAC7H,UAAS,wBAAmB0F,EAAMA,MAAQ,QAAU,IAAMkY,KAAM,SAAUjb,WAAY,UAChGkb,aAAc,UADpB,UAEI,cAACnW,GAAA,EAAD,CAAMxF,MAAI,EAAClC,UAAW,WAAtB,SACI,cAAC+c,GAAD,CAAOvc,QAAS,SAACC,GAAD,OAAWyE,EAAczE,EAAO8C,IAAMua,QAAS,cAAC,IAAD,IAAiBre,SAAUA,EAA1F,SACK+F,EACG,eAACkC,GAAA,EAAD,CAAMG,WAAS,EAAC,cAAa,SAAUzF,QAAS,OAAhD,UACI,cAACsF,GAAA,EAAD,CAAMxF,MAAI,EAAClC,UAAW,YAAawC,OAAQ,6BACrCL,MAAO,6BAA8BQ,WAAY,SAAUC,eAAgB,SADjF,SAEK4a,EACG,cAAC,IAAD,CAAkBO,KAAMP,EAASQ,EAAGC,KAAMT,EAAS5hB,EAAGsiB,UAAWV,EAAShb,OACxD2b,SAAUX,EAASrb,MACnBgB,QAAQ,WAAWib,IAAG,UAAExZ,EAASY,UAAX,aAAE,EAAmBsJ,WAE3CuP,IAAK,6JACrB,cAACC,GAAA,EAAD,CAAQnb,QAAQ,WAAWib,IAAG,UAAExZ,EAASY,UAAX,aAAE,EAAmBsJ,WAAsBjO,MAAO,CAC9E2B,OAAQ,6BACRL,MAAO,8BAGDkc,IAAK,qCAEvB,cAAC3W,GAAA,EAAD,CAAMxF,MAAI,EAACyF,YAAa,EAAxB,mBAA4B/C,EAASY,UAArC,aAA4B,EAAmBsJ,gBAEjD,sBAAM9O,UAAW,cAAjB,SAAiC8F,QAI/C,eAAC4B,GAAA,EAAD,CAAMxF,MAAI,EAAClC,UAAW,8BAAtB,UACI,cAACid,GAAD,CAAQ1Z,IAAKoJ,EAAUa,cAAe8P,EAAmB3gB,MACnC,qBAAXwgB,EAAyB,GAAKA,EACvCoB,oBAAoB,EACdpkB,KAAMA,EACNsF,YAAaA,GAAY+F,GACzBpB,YAAa2B,EACb,mBAAkBA,EAAiB,aAAY0B,EAAO8F,cAAe,MAC7E,gCAGP4E,EAAa,6BAAO,cAACzK,GAAA,EAAD,CAAMG,WAAS,EAAC7H,UAAW,eAAgB4d,KAAM,SAAUjb,WAAY,UAAWkb,aAAc,UAC1Fjb,eAAgB,WADtB,SAEjB,cAAC8E,GAAA,EAAD,CAAMxF,MAAI,EAAV,SAAW,cAACsc,GAAA,EAAD,UAAiB9Y,EAAMC,oBASvC,I,kBAAMM,GAAcxJ,IAAMiZ,KAAKjZ,IAAMuH,WAAWkZ,K,uECjKjDuB,GAAgBjgB,YAAOkgB,KAAPlgB,CAAH,67BAmDbmgB,GAA2BngB,YAAOogB,KAAPpgB,CAAH,+DACd,qBAAEG,MAAiBqN,QAKtB6S,GAAkBC,cAAmB,YAA0D,IAArD9hB,EAAoD,oBAEvG,OAAO,cAAC,KAAD,2BACCA,GADD,IAEH+hB,UAAW/hB,EAAM+hB,UAAY/hB,EAAM+hB,UAAY,EAC/CC,KAAMhiB,EAAMgiB,KAAOhiB,EAAMgiB,KAAO,WAChCC,YAAajiB,EAAMiiB,YAAcjiB,EAAMiiB,YAAc,WACrDC,eAAgB,cAAC,IAAD,IAChBC,sBAAuBniB,EAAMmiB,sBAC7BC,YAAa,SAACC,EAAYC,GAmBtB,OAlBAD,EAAWE,WAAX,2BACOF,EAAWE,YADlB,IAC8BC,aACtB,cAACjb,GAAA,EAAD,CAAgBrE,SAAS,MAAMwC,UAAW,SAAU1C,UAAW,uBAA/D,SACI,sBAAMA,UAAW,sBAAjB,SACI,cAAC,IAAD,UAKhBsf,EAASC,WAAT,2BACOD,EAASC,YADhB,IAC4BE,UAAU,EAAMD,aACpC,cAACjb,GAAA,EAAD,CAAgBrE,SAAS,MAAMwC,UAAW,SAAU1C,UAAW,uBAA/D,SACI,sBAAMA,UAAW,sBAAjB,SACI,cAAC,IAAD,UAKR,qCACJ,cAACye,GAAD,sDAAuBY,GAAvB,IAAmCjX,WAAY,KAAMX,WAAOvB,KAA5D,IAAwE9B,YAAa,cACrF,cAACua,GAAD,gBACA,cAACF,GAAD,sDAAuBa,GAAvB,IAAiClX,WAAY,KAAMX,WAAOvB,KAA1D,IAAsE9B,YAAa,uBA/BpE0a,CAAH,gCAyCfY,GAAalhB,aAAO,cACKQ,EADL,IAEKigB,EAFL,EAEKA,YACAtiB,EAHL,EAGKA,MACGK,EAJR,0BAK4C,cAAC,KAAD,aAEzE2iB,eAAe3iB,EAAM2iB,eAAgB3iB,EAAM2iB,cAC3CX,KAAMhiB,EAAMgiB,KAAOhiB,EAAMgiB,KAAO,WAChCC,YAAaA,GAA4B,WACzCW,OAAQ5iB,EAAM4iB,OAAS5iB,EAAM4iB,OAAS,OACtCC,MAAO7iB,EAAM6iB,MAAQ7iB,EAAM6iB,MAAQ,CAAC,OAAQ,QAC5CljB,MAAOA,EACPuiB,eAAgB,cAAC,IAAD,IAChBE,YAAa,SAACpiB,GAEV,OADAA,EAAMuiB,WAAN,eAAuBviB,EAAMuiB,YACrB,cAACd,GAAD,0CAAuBzhB,GAAvB,IAA8BoL,WAAY,WAElDpL,MAlBkBwB,CAAH,gCC3GVkM,GAAmBlM,YAAOshB,KAAPthB,CAAH,0KAER,mBAA0B,EAA1B,EAAEG,MAAiBqN,QAEnB,qBAAErN,MAAiBqN,KAAO,KAIlC0S,GAAYlgB,YAAOuhB,KAAPvhB,CAAH,2aAUR,qBAAEG,MAAiBqN,QAa3B,qBAAErN,MAAiBuC,OAAOC,aAAa,CAACG,MAAO,QAASD,IAAK,QCrBnE,SAAS2e,GAAT,EAekGzc,GAA+B,IAAD,UAdzD2Q,aAcyD,MAdjD,OAciD,MAbzDzM,aAayD,MAbjD,SAaiD,EAZzD1C,EAYyD,EAZzDA,YAYyD,IAXzDc,gBAWyD,MAX9C,YAW8C,EATzDjB,EASyD,EATzDA,QACAoB,EAQyD,EARzDA,SACAvG,EAOyD,EAPzDA,SAOyD,IANzDsG,uBAMyD,MANvC,OAMuC,EALzDI,EAKyD,EALzDA,UACAd,EAIyD,EAJzDA,kBACA+I,EAGyD,EAHzDA,aACAjU,EAEyD,EAFzDA,KAGnE,EAAuCgM,GAAwB,GAAxDV,EAAP,EAAOA,QAASD,EAAhB,EAAgBA,OAAQD,EAAxB,EAAwBA,WACxB,EAA4B9I,IAAMuK,SAA6BzB,QAA0BW,GAAzF,oBAAOiX,EAAP,KAAeC,EAAf,KAMMC,EAAe5gB,IAAMC,aAAY,SAACC,GACpC,GAAIoI,EAAa,CACb,IAAIsM,EAAStM,EAAY,yBACrBU,QAASwE,OAAOxE,GAChBD,UAAW,CAACD,WAAY5I,IAFJ,IAGpBqJ,aAC6BzC,GACjCiN,EAASa,GAAkB,CAAC3L,OAAO,OAExC,CAACX,EAAaU,EAASD,EAAQQ,EAAUzC,IAC5C,EAA0B9G,IAAMuK,SAAmE,CAC/FtB,OAAO,EACPC,QAAS,KAFb,oBAAOD,EAAP,KAAc8K,EAAd,KAaM7D,EAAWvJ,GAAY,CACzBE,SAVkB7G,IAAMC,aAAY,YAAgB,IAAdgH,EAAa,EAAbA,QAC9ByC,GAAcA,EAAUZ,aAAe0E,OAAM,OAACvG,QAAD,IAACA,OAAD,EAACA,EAAS/G,SACvDygB,EAAUjX,EAAUZ,YACpB8X,EAAalX,EAAUZ,eAK/B,CAACY,EAAWkX,IAGZha,cAAe+K,EACfzR,MAAO4I,IAQL+X,EAAoB7gB,IAAMC,aAAY,SAACC,EAAYkQ,GACjDwQ,EAAa1gB,GACbygB,EAAUzgB,GACN0I,GACAA,EAAkB,2BAAIc,GAAc,CAACZ,WAAY5I,IAAgB4G,KAIvE,CAAC8Z,EAAcD,EAAWjX,EAAWd,EAAmB9B,IAMxDga,EAAuB9gB,IAAMC,aAAY,SAACyI,GACxCa,GACAsX,EAAkB7X,EAAStL,KAGhC,CAACmjB,EAAmB7X,EAAStL,EAAM6L,IAEhCwX,EADaphB,IAAZtC,SACyB0L,GAKhC,OAAO,yCAAG,eAACoX,GAAD,CAAOla,UAAW,MAAOa,IAAKA,EAA9B,UACN,eAACmE,GAAA,EAAD,CAAMG,WAAS,EAACnF,UAAW,MAAO1C,UAAW,aAAc4C,eAAgB,gBACrE6P,cAAe,GADrB,UAEI,cAAC/K,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAf,SAAkB,cAACC,GAAA,EAAD,CAAW1d,UAAW,aAAtB,SAAqCyH,MACvD,cAACC,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGzd,UAAW,YAA7B,SAA2C6F,GAAYL,EACnD,eAACkY,GAAA,EAAD,CAAW1d,UAAWgG,GAAYP,EAAU,EAAI,YAAc,aACnDjF,QAAS+c,EADpB,UAEI,+BAAOvX,EAAWH,EAAW,IAAM,KACnC,+BAAOJ,EAAUkY,aAA4BlY,GAAW,SAC7C,UAGvB,eAACiC,GAAA,EAAD,CAAMG,WAAS,EAAC7H,UAAS,yBAAoB0F,EAAMA,MAAQ,QAAU,IAAMkY,KAAM,SAC3Ejb,WAAY,UACZkb,aAAc,UAFpB,UAII,cAAChB,GAAD,CAAU3I,MAAiB,SAAVA,EAAmB,EAAI,EAC9B9R,QAAS,OACTO,WAAY,SACZ3C,UAAS,8BAAyBkU,GAH5C,SAII,eAACxM,GAAA,EAAD,CAAMG,WAAS,EAAC,cAAa,SAAUzF,QAAS,OAAhD,UACI,cAACsF,GAAA,EAAD,CAAMxF,MAAI,EAACgS,MAAiB,SAAVA,EAAmB,EAAI,EAAGvM,YAAuB,SAAVuM,EAAmB,EAAI,EAC1ElU,UAAW,YACXwC,OAAQ,6BAA8BL,MAAO,6BAC7CQ,WAAY,SAAUC,eAAgB,SAH5C,SAIK4a,EACG,cAAC,IAAD,CAAkBO,KAAMP,EAASQ,EAAGC,KAAMT,EAAS5hB,EAAGsiB,UAAWV,EAAShb,OACxD2b,SAAUX,EAASrb,MACnBgB,QAAQ,WAAWib,IAAG,UAAExZ,EAASY,UAAX,aAAE,EAAmBsJ,WAE3CuP,IAAK,6JACrB,cAACC,GAAA,EAAD,CAAQnb,QAAQ,WAAWib,IAAG,UAAExZ,EAASY,UAAX,aAAE,EAAmBsJ,WAAsBjO,MAAO,CAC9E2B,OAAQ,6BACRL,MAAO,8BAGDkc,IAAK,qCAEvB,cAAC3W,GAAA,EAAD,CAAMxF,MAAI,EAACgS,MAAiB,SAAVA,EAAmB,EAAI,EACnCvM,YAAuB,SAAVuM,EAAmB,EAAI,EAD1C,mBAC8CtP,EAASY,UADvD,aAC8C,EAAmBsJ,kBAGzE,eAACpH,GAAA,EAAD,CAAMwM,MAAiB,SAAVA,EAAmB,EAAI,EAAG3R,KAAM,EAAGL,MAAI,EAAClC,UAAS,gCAA2BkU,GAAzF,UACI,cAAC+I,GAAD,CAAQ1Z,IAAKoJ,EAAUa,cAAe8P,EAAmB3gB,MAAOwgB,EAAQoB,oBAAoB,EACpF9e,YAAaA,GAAY+F,GACzBpB,YAAa2B,EACb,mBAAkBA,EAAiB,aAAY0B,EAAO8F,cAAe,MAC7E,gCAIR,cAAC7F,GAAA,EAAD,CAAMG,WAAS,EAAC7H,UAAW,eAAgB4d,KAAM,SAAUjb,WAAY,UAAWkb,aAAc,UAC1Fjb,eAAgB,WADtB,SAEI,cAAC8E,GAAA,EAAD,CAAMxF,MAAI,EAAV,SAAW,cAACsc,GAAA,EAAD,UAAiB9Y,EAAMC,oBAQvC,I,qBC6CIsa,GD7CEhM,GAAYxX,IAAMiZ,KAAKjZ,IAAMuH,WAAWgc,K,yEC/I/CE,GAAK,SAAC,GAAD,IAAEvhB,EAAF,EAAEA,MAAF,OAAkBuN,aAAjB,QAAD,yOACQvN,EAAMqN,KAAO,IAanBmU,GAAU3hB,YAAO4b,KAAP5b,CAAH,gRAGL,qBAAEG,MAAiBmN,YAAYK,KAStC+T,IAUFE,IANoB5hB,YAAO6hB,KAAP7hB,CAAH,mIAMIA,YAAOkQ,KAAPlQ,CAAH,4vBAKT,qBAAEG,MAAiBmN,YAAYgR,OAyCxCwD,GAAmB9hB,YAAO+hB,KAAP/hB,CAAH,moBAML,qBAAEG,MAAiBmN,YAAYgR,MAgC1C0D,GAAsBhiB,YAAOiiB,KAAPjiB,CAAH,8PAenBkiB,GAAeliB,YAAOD,IAAPC,CAAH,0iBAMD,qBAAEG,MAAiBmN,YAAYgR,KAqBtCoD,IAMGS,GAAelkB,IAAMiZ,KAAKjZ,IAAMuH,YAAW,WAMgDT,GAA4B,IAL5CvD,EAK2C,EAL3CA,UACA4gB,EAI2C,EAJ3CA,MACAC,EAG2C,EAH3CA,kBACAC,EAE2C,EAF3CA,SACAC,EAC2C,EAD3CA,OAEpF,OAAO,eAACX,GAAD,CACHpgB,UAAWghB,aAAK,CAAC,SAAD,OAAUJ,GAAS5gB,IAAauD,IAAKA,EACrD/C,QAASqgB,QAAwC3a,EAG7CxD,UAAWue,KACX7b,GAAI2b,EAASA,EAAOG,KAAO,GAC3BrgB,MAAO,CAACsgB,eAAgB,QAPzB,eASIL,SAKfb,GAAaxjB,IAAMiZ,MAAK,YAAgF,IAAnD1W,EAAkD,EAAlDA,EAAGyI,EAA+C,EAA/CA,MACpD,OAAO,cAAC6Y,GAAD,UAEH,eAACvgB,EAAA,EAAD,CAAKqC,QAAS,OAAQwF,aAAc,IAAKqK,cAAe,SAAUrP,eAAgB,eAAlF,UACI,cAAC7C,EAAA,EAAD,CAAKgc,WAAY,GAAK1J,WAAY,MAAlC,SAAyC,cAACrP,GAAA,EAAD,CAAYN,UAAW,KACXS,QAAQ,KADpB,SAC0BnE,EAAEyI,EAAMS,aAC3E,cAACnI,EAAA,EAAD,UAAK,cAACiD,GAAA,EAAD,CAAYN,UAAW,IACXS,QAAS,QADrB,UACoC,OAALsE,QAAK,IAALA,OAAA,EAAAA,EAAOnB,aAActH,EAAEyI,EAAMnB,aAAe,WAN1DmB,EAAMoD,OAYjC,I,GAAMuW,GAAgB3kB,IAAMiZ,KAAKjZ,IAAMuH,YAAW,WAMkET,GAA4B,IAL9DvE,EAK6D,EAL7DA,EACAyI,EAI6D,EAJ7DA,MACAzH,EAG6D,EAH7DA,UACAqhB,EAE6D,EAF7DA,WAE6D,IAD7DT,aAC6D,MADrD,EACqD,EAE5I1P,EAAaM,yBAAc,CAACrO,QAAS,UAAWsO,QAAQ,kCAC9D,OAAO,qCAAE,wBAACiP,GAAD,2BAAkBhO,qBAAUxB,IAA5B,IAAyCrT,IAAK4J,EAAMoD,GAAI7K,UAAWA,EAAWuD,IAAKA,IAAnF,IAAyF,cAACP,GAAA,EAAD,CAC9FN,UAAW,OACXS,QAAS,QAASyE,aAAc,EAF8D,SAE1D5I,EAAEyI,EAAMS,WAAsB,cAAC,IAAD,KAClE,cAACsY,GAAD,2BACyBc,oBAASpQ,IADlC,IAEqBqQ,mBAAoB,KACpBzO,aAAc,CAACC,SAAU,SAAUC,WAAY,QAC/ChF,gBAAiB,CAAC+E,SAAU,MAAOC,WAAY,QAC/ChT,UAAS,eAAU4gB,EAAV,YAAmBnZ,EAAMoD,IALvD,SAMKwW,GAAcA,EAAW,CAACR,kBAAmB3P,EAAWC,UAN7D,eAAkCyP,EAAlC,YAA2CnZ,EAAMoD,Y,iJC3NzD,SAAS2W,GAAT,EAOuFvd,GAAoC,IAAD,IANzEW,eAMyE,MAN/D,GAM+D,MAN3DC,iBAM2D,MAN/C,GAM+C,MAN3C8J,gBAM2C,MANhC,SAAC8S,EAAK5S,GACxF,OAAOA,IAAgBA,EAAa7M,QAASiL,OAAO4B,GAAc3B,KAAKuU,EAAI3S,aAKuC,EAJnHD,EAImH,EAJnHA,aAAcI,EAIqG,EAJrGA,aAIqG,KAJvFZ,YAIuF,EAJnEzM,iBAImE,MAJxD,KAIwD,OAHzE8f,UAGyE,EAFzElf,eAEyE,MAFhE,QAEgE,EADtE0B,EACsE,mBACtH,EAA4BzH,IAAMuK,SAA4BpF,GAA9D,oBAAOkJ,EAAP,KAAe6W,EAAf,KACMC,EAAWnlB,IAAM+G,OAAO,MAC1Bqe,EAAW,EACfplB,IAAMgH,WAAU,WACRqH,IAAWlJ,GACX+f,EAAU/f,KAEf,CAACkJ,EAAQlJ,IAEZ,IAAMkgB,EAAOpkB,OAAOC,KAAKiH,GAASmI,QAAO,SAAC+U,EAAyDjkB,GAC/F,GAAI8Q,EAAS/J,EAAS/G,GAAOgR,GAAe,CACxC,IAAMkT,EAA4Bld,EAAWhH,GAAQgH,EAAWhH,GAAQ,CAAC2H,OAAQ3H,EAAKiL,MAAO,GAC7FgZ,EAAKnU,KAAK,CAACoU,aAAYlkB,IAAKA,IACxBiN,IAAWjN,IACXgkB,EAAWC,EAAK9f,OAAS,GAGjC,OAAO8f,IACR,IACGE,EAAsBvlB,IAAMC,aAAY,SAACyI,EAA0B2F,GACrE6W,EAAU7W,GACVmE,GAAgBA,EAAa9J,EAAQ2F,KACtC,CAACmE,IACJ,OAAO,cAAC,KAAD,CAAsD5P,KAAMyiB,EACN9hB,UAAW,YACXa,MAAO,CAACqJ,UAAW,QAAS1H,OAAQA,GACpCe,IAAKqe,EACLK,wBAAyBJ,EACzBK,YAAa,SAACrf,EAAOX,GACjB,IAAK6f,EAAmB7f,EAAnB6f,WAAYlkB,EAAOqE,EAAPrE,IACjB,OAAO,cAACskB,GAAD,4BACHvT,SAAUhK,EAAS/G,GACnBkkB,aACAjX,OAAQA,EACRkX,sBACA9S,QAASrR,GAAsBqG,IALVrB,MAavF,I,qBAAMmM,GAAWvS,IAAMiZ,KAAKjZ,IAAMuH,WAAWwd,KAE9CY,GAAiB5jB,YAAO6jB,KAAP7jB,CAAH,u2BAQA,qBAAEG,MAAiBqN,KAAO,EAAI,KAC7B,qBAAErN,MAAiBqN,KAAO,EAAI,KAY/B,qBAAErN,MAAiBqN,QAoB1BmW,GAAW1lB,IAAMiZ,KAAKjZ,IAAMuH,YAAW,WAOuDT,GAAkC,IALrEqL,EAKoE,EALpEA,SACAmT,EAIoE,EAJpEA,WACAjX,EAGoE,EAHpEA,OACAoE,EAEoE,EAFpEA,QACA8S,EACoE,EADpEA,oBAE7DlT,EAAcF,EAAdE,WAGD0O,EADaphB,IAAZtC,SAC0BgV,GAEjC,OAAO,eAACsT,GAAD,CACHE,QAAM,EACN/e,IAAKA,EAEL3B,SAAUkJ,IAAWgE,EACrBtO,QAAS,SAACC,GAAD,OAA6BuhB,EAAoBvhB,EAAOyO,IAL9D,UAOH,cAACqT,GAAA,EAAD,UAQK/E,EACG,cAAC,IAAD,CAAkBO,KAAMP,EAASQ,EAAGC,KAAMT,EAAS5hB,EAAGsiB,UAAWV,EAAShb,OACxD2b,SAAUX,EAASrb,MACnBgB,QAAQ,WAAWib,IAAKtP,EAExBuP,IAAK,6JACrB,cAACC,GAAA,EAAD,CAAQnb,QAAQ,WAAWib,IAAKtP,EAAsBjO,MAAO,CAC3D2B,OAAQ,6BACRL,MAAO,8BAGDkc,IAAK,qCAEvB,cAACrT,GAAA,EAAD,CAAcnM,QAASiQ,EAAY5D,UAC/B,mCACI,cAAClI,GAAA,EAAD,CAAYiI,GAAI,CAAC7I,QAAS,SAAUM,UAAU,OAAOnC,MAAM,gBAAgB4C,QAAQ,QAAnF,SACK4e,EAAWjZ,cA5BnBoG,OCpHAsT,GAAchkB,YAAY+hB,KAAZ/hB,CAAH,0lB,sBCIXikB,GAAcjkB,YAAY6jB,KAAZ7jB,CAAH,25BAGL,mBAA0B,EAA1B,EAAEG,MAAiBqN,QAWnB,kBAA0B,IAA1B,EAAErN,MAAiBqN,QA2BzB0W,GAAc,YAKwE,IAJpD1jB,EAImD,EAJnDA,EACA4C,EAGmD,EAHnDA,SACA+gB,EAEmD,EAFnDA,QAG3C,OAAO,mCAAGjlB,OAAOC,KAAKglB,GAAS/kB,KAAI,SAACkkB,EAAWjf,GAC3C,IAAM+f,EAAUD,EAASb,GAAOlkB,KAAI,SAACsE,GACjC,OAAO,eAACugB,GAAD,CAAaH,QAAM,EAAC1gB,SAAU,IAAIqL,OAAO/K,EAAKuF,MAAMoD,GAAI,MAAMqC,KAAKtL,GACtDe,WAAYT,EAAKuF,MAAMnB,YAAc,aAAe,SAGhD5D,UAAWue,KACX7b,GAAIlD,EAAK6e,OAAS7e,EAAK6e,OAAOG,KAAO,GACrCrgB,MAAO,CAACsgB,eAAgB,QANzC,UAUH,cAAC0B,GAAA,EAAD,UACI,cAAC3gB,EAAK4gB,KAAN,MAEH5gB,EAAKuF,MAAMnB,YAAc,cAAC0E,GAAA,EAAD,CACtBnM,QAAS,cAACmE,GAAA,EAAD,CAAYiI,GAAI,CAAC7I,QAAS,SAAUM,UAAU,OAAOS,QAAQ,QAA7D,SACanE,EAAEkD,EAAKuF,MAAMS,WACnCgD,UAAW,cAAClI,GAAA,EAAD,CAAYiI,GAAI,CAAC7I,QAAS,UAAWM,UAAU,OAAOS,QAAQ,QAA9D,SACanE,EAAEkD,EAAKuF,MAAMnB,iBACpC,cAAC0E,GAAA,EAAD,CACDnM,QAAS,cAACmE,GAAA,EAAD,CAAYiI,GAAI,CAAC7I,QAAS,SAAUM,UAAU,OAAOS,QAAQ,QAA7D,SACanE,EAAEkD,EAAKuF,MAAMS,eAlBlBhG,EAAKuF,MAAMoD,OAuBxC,OAAO,gCAA4B+X,EAA5B,IAAsC/f,EAAQ,IAAMnF,OAAOC,KAAKglB,GAAS3gB,OAC9E,cAACjC,EAAA,EAAD,CAAKgjB,QAAS,EAAd,SACE,cAACC,GAAA,EAAD,MAEA,KAJG,gBAAmBlB,UC3ErBvB,ICCU/hB,YAAO6jB,KAAP7jB,CAAH,06BACL,qBAAEG,MAAiBmN,YAAYgR,MAGjC,qBAAEne,MAAiBqN,QAAU,mBAA0B,EAA1B,EAAErN,MAAiBqN,QAa1C,qBAAErN,MAAiBqN,KAAO,KAoBxB,qBAAErN,MAAiBqN,QDtChBxN,YAAOykB,KAAPzkB,CAAH,uCACjB,YACA,MAA2B,SADJ,EAArBuM,gBACK,wMAOF,OAKImY,GAAgB1kB,YAAO2kB,KAAP3kB,CAAH,0hCAaf,qBAAEG,MAAiBqN,KAAM,KA0CvBoX,GAAoB5kB,YAAO+hB,GAAP/hB,CAAH,0WAEf,gBAAEG,EAAF,EAAEA,MAAF,kBAA+B,EAAbA,EAAMqN,KAAxB,eAAoD,EAAbrN,EAAMqN,KAA7C,QACM,gBAAErN,EAAF,EAAEA,MAAF,gBAA6B,EAAbA,EAAMqN,SAS5B,gBAAErN,EAAF,EAAEA,MAAF,gBAA6B,EAAbA,EAAMqN,KAAtB,YAA+C,EAAbrN,EAAMqN,KAAxC,cAAmE,EAAbrN,EAAMqN,KAA5D,QACM,gBAAErN,EAAF,EAAEA,MAAF,gBAA6B,EAAbA,EAAMqN,S,qBE1D9BiQ,GAAuBzd,YAAO6kB,KAAP7kB,CAAH,qbAE7B,gBAAE0P,EAAF,EAAEA,QAASiK,EAAX,EAAWA,OAAX,oCAC2B,kBAAXA,EAAsBA,EAA2B,kBAAXA,EAAsBA,EAAS,KAAtC,wBAD/C,6BAE6B,kBAAZjK,EAAuBA,EAA6B,kBAAZA,EAAuBA,EAAU,KAAxC,yBAFlD,qBAIA,gBAAEvP,EAAF,EAAEA,MAAF,OAAamb,GAAa,CAACnb,aACZ,qBAAEA,MAAiBqN,QAO9B,gBAAErN,EAAF,EAAEA,MAAF,OAAaoa,GAAS,CAACpa,aAc/B,SAAS2kB,GAAT,EAOkFrf,GAAgC,IANtEpB,EAMqE,EANrEA,MACA2U,EAKqE,EALrEA,UACAtJ,EAIqE,EAJrEA,QACAiK,EAGqE,EAHrEA,OACAhZ,EAEqE,EAFrEA,KAGlCR,EAAQ4P,eACd,OAAO,cAAC0N,GAAD,CAAsBjc,UAAW,cAAekc,KAA0B,QAApBvd,EAAMmJ,UAAsB,YAAc,IAC1EjF,MAAOA,EAAaqL,UAAQiK,SADlD,SAEFX,EAAU5Z,KAAI,SAACue,GACZ,OAAO,eAACzU,GAAA,EAAD,CAAMG,WAAS,EAAiB7H,UAAW,YAAa8H,UAAW,SAC7DlF,eAAgB,gBAAiBuH,SAAU,SAC3C4R,WAAY,6BACZtJ,cAAe,EAHrB,UAIF0J,EAAMzE,YAAc,cAACsE,GAAA,EAAD,CAAShc,UAAWb,EAAMgE,QAAS,QAAnC,SAChBgZ,EAAMzE,cACA,6BACX,cAAChQ,GAAA,EAAD,CAAMxF,MAAI,EAACK,KAAM,EAAjB,SAAqB4Z,EAAM1E,YAPH0E,EAAMte,UAYvC,I,wBAAM8Z,GAAclb,IAAMiZ,KAAKjZ,IAAMuH,WAAWsf,K,WChF1CC,GAAU/kB,YAAOglB,KAAPhlB,CAAH,+IAGP,qBAAEG,MAAiBqN,KAAO,EAAI,KAExB,qBAAErN,MAAiBqN,Q,4ECKhCyX,GAAiBjlB,YAAOklB,IAAPllB,CAAH,oLAOL,qBAAEG,MAAiBmN,YAAY6X,MAGxCvH,GAAa5d,YAAOuB,IAAPvB,CAAH,4KAMJ,SAAAxB,GAAK,OAAKA,EAAMwF,OAAgC,iBAAhBxF,EAAMwF,OAAqBxF,EAAMwF,OAAS,KAAOxF,EAAMwF,OAA7E,UAAyF,IAAzF,SAGT2M,GAAe4H,aAAgB,CAAC,SAAU,UAA3BA,EAAsC,YASiD,IAR5C/X,EAQ2C,EAR3CA,EAQ2C,KAP3C3F,KAO2C,EAN3CuqB,OAM2C,EAL3CC,mBAK2C,MAL9B,cAACJ,GAAD,CACTxgB,SAAU,UAI6B,EAH3CT,EAG2C,EAH3CA,OACAmD,EAE2C,EAF3CA,QACGzB,EACwC,mBACxG4f,EAAaD,GAAoC,kBAAfA,EACiBA,EAArD,qBAAKxF,IAAKwF,EAAsBzF,IAAKpf,EAAE,WAC3C,OAAO,eAAC,GAAD,yBAAYwD,OAAQA,GAAY0B,GAAhC,cACF4f,EACD,cAAC9gB,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,gBAAiB0C,SAAU,KAAM7C,UAAW,EAAlF,SACKuF,a,uPClCPoe,GAAqBvlB,YAAOuB,IAAPvB,CAAH,uXAqBXwlB,GAAiBxlB,YAAOylB,KAAPzlB,CAAH,s5DAmEG,qBAAEG,MAAiBuC,OAAOgjB,aAAa,CAAC9iB,IAAK,EAAGE,MAAO,gBA6B/E6iB,GAAgB3lB,YAAO4lB,IAAP5lB,CAAH,qIAyBN6lB,GAAkB,YAGiH,IAFnGC,EAEkG,EAFlGA,WACAtlB,EACkG,EADlGA,EAUzC,OARmCslB,EAAWvX,QAAO,SAAC6J,EAA4B2N,GAC9E,IAAOpqB,EAAkBoqB,EAAlBpqB,KAAMqqB,EAAYD,EAAZC,SAKb,MAJoB,kBAATrqB,GAAsBqqB,IAC7BD,EAAOpqB,KAAO6E,EAAE7E,GAChByc,EAAKjJ,KAAK4W,IAEP3N,IACR,KAGM6N,GAAe,SAAUC,EAAexgB,GACjD,IAAOygB,EAAczgB,EAAdygB,WACP,OAAOD,EAAQ9mB,KAAI,SAAA6M,GAAG,OAAIA,EAAIsC,QAAO,SAAC6J,EAAgCgO,EAAM/hB,GAIxE,OAHI8hB,EAAY9hB,KACZ+T,EAAM+N,EAAY9hB,GAAQhF,KAAQ+mB,GAE/BhO,IACR,CAACiO,SAAUpa,QASLqa,GAAQ,SAAQ9nB,GACzB,IACI+nB,EAmBA/nB,EAnBA+nB,kBACAN,EAkBAznB,EAlBAynB,aACAJ,EAiBArnB,EAjBAqnB,gBACAW,EAgBAhoB,EAhBAgoB,kBACAC,EAeAjoB,EAfAioB,eACAC,EAcAloB,EAdAkoB,WACAR,EAaA1nB,EAbA0nB,QACA7jB,EAYA7D,EAZA6D,MAEAskB,GAUAnoB,EAXAooB,UAWApoB,EAVAmoB,aACAE,EASAroB,EATAqoB,WACAC,EAQAtoB,EARAsoB,aACAX,EAOA3nB,EAPA2nB,WACAY,EAMAvoB,EANAuoB,SACAC,EAKAxoB,EALAwoB,WACAC,EAIAzoB,EAJAyoB,UACAC,EAGA1oB,EAHA0oB,YACA1mB,EAEAhC,EAFAgC,EACGkF,EAnBP,aAoBIlH,EApBJ,IAsBM2oB,EAAUtB,EAAgB,CAACC,WAAYK,EAAY3lB,MACzD,EAAwBvC,IAAMuK,SAASyd,EAAaC,EAAS1nB,IAA7D,oBAAO4oB,EAAP,KAAaC,EAAb,KAEAppB,IAAMgH,WAAU,WACZoiB,EAAQpB,EAAaC,EAAS1nB,MAC/B,CAAC0nB,IAEJ,MAAsCjoB,IAAMuK,SAA0C,CAAC,CACnF8e,UAAWb,EACXnd,UAAWkd,QAAwC9e,KAFvD,oBAAO6f,EAAP,KAAoBC,EAApB,KAOMC,EAA2BxpB,IAAMgS,SAAQ,WAC3C,GAA2B,IAAvBsX,EAAY/jB,OAAc,OAAO4jB,EACrC,MAA+BG,EAAa,GAArCD,EAAP,EAAOA,UAAWhe,EAAlB,EAAkBA,UACdme,EAAe,aAAOL,GAE1B,OADAK,EAAaf,EAAaA,EAAWe,EAAYH,EAAWhe,GAAa8d,EACpD,SAAd9d,EAAuBme,EAAWC,UAAYD,IAEtD,CAACL,EAAMG,EAAab,IAEjBiB,EAAsB1pB,IAAMC,aAAY,SAACqpB,GAC3CC,EAAeD,EAAYK,OAAO,MACnC,IAEGC,EAAkB5pB,IAAMgS,SAAQ,WAClC,OAAOkX,EAAQ/nB,KAAI,SAAA0oB,GACf,OAAIA,EAAEC,eACK,eAAID,GAEJ,2BACAA,GADP,IACUC,eAAgB,SAACvpB,GAAD,OAAuC,cAACwpB,GAAD,eAAwBxpB,YAIlG,CAAC2oB,IACEc,EAAiBjoB,IAAOkoB,KAAV,0GASpB,OAAO,eAAC3C,GAAD,WACH,cAACC,GAAD,2BACQ9f,GADR,IAEIqhB,SAAUA,EACVI,QAASU,EACTxlB,MAAOA,EACP+kB,KAAOX,GAAkBgB,EAAcA,EAAaL,EACpDN,aAAcA,EACdqB,SAAU,SAAAlc,GAAG,OAAI4a,EAAaA,EAAW5a,EAAKzN,GAAS,IACvDyoB,UAAWA,GAAwB,GACnCmB,aAAcf,EACdM,oBAAqBA,EAErBhB,YAAaA,EACbY,YAAaA,EACbP,WAAYA,EACZqB,kBAAoBnB,EAOR,KAPuB,kBAAMX,GACrC,cAAC5V,GAAD,CAAc3M,OAAM,wCAA2CmD,QAAS,WACpE,OAAO,cAAC8gB,EAAD,UACH,cAACxe,GAAA,EAAD,CAAOC,QAAQ,oBAAf,uCAMfwd,GACG,cAACvB,GAAD,Q,qWCnRN2C,GAAiBtoB,IAAOiD,IAAV,0xBA6BM,gBAAE9C,EAAF,EAAEA,MAAOkC,EAAT,EAASA,MAAT,OAAoBlC,EAAMC,UAAqB,SAAViC,EAAmB,UAAY,YAa9F,SAASkmB,GAAT,EAuBwFxjB,GAAiC,IAAD,IAtBhFyjB,aACIC,OAqB4E,MArB7DC,KAqB6D,EApBhFlnB,EAoBgF,EApBhFA,UACAmnB,EAmBgF,EAnBhFA,OACAC,EAkBgF,EAlBhFA,cACAC,EAiBgF,EAjBhFA,cACAC,EAgBgF,EAhBhFA,mBACA7c,EAegF,EAfhFA,IAAK8c,EAe2E,EAf3EA,gBACLC,EAcgF,EAdhFA,kBACAhC,EAagF,EAbhFA,WACAmB,EAYgF,EAZhFA,SACAc,EAWgF,EAXhFA,qBACAC,EAUgF,EAVhFA,aACAxkB,EASgF,EAThFA,IACAykB,EAQgF,EARhFA,YACAC,EAOgF,EAPhFA,WAEAC,GAKgF,EANhFC,UAMgF,EALhFD,iBACAE,EAIgF,EAJhFA,SACiBC,EAG+D,EAHhF,iBACiBC,EAE+D,EAFhF,iBACGjrB,EAC6E,mBAgBpH,OAVAgD,EAAYghB,aAAK,UAAD,kBAEDmG,EAAS,IAAM,EAAI,OAAS,OACvC,CACI,oBAAqBC,EACrB,0BAAsD,KAAX,OAAjBI,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBU,MALrC,OAOZvB,QAPY,IAOZA,OAPY,EAOZA,EAAWlc,GACXzK,GAGA,eAAC8mB,GAAD,yBACIqB,KAAK,MACL,gBAAeH,EACf,gBAAeC,EACf1kB,IAAKA,EACLvD,UAAWA,EACX0nB,aAtBR,SAAyBjnB,GACD,OAApBgnB,QAAoB,IAApBA,KAAuBN,GACX,OAAZO,QAAY,IAAZA,KAAejnB,IAqBXI,MAAO,CAACqC,QAEJlG,GATR,cAWI,qBAAKgD,UAAW,uBAAhB,SACK6nB,EAAgB,aAACpd,MAAKsd,WAAUxD,OAAQgD,EAAiBvnB,aAAchD,MAGxEuqB,EAAgB3pB,KAAI,SAAA2mB,GAChB,IAAM6D,GAAkC,OAAjBZ,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBU,OAAQ3D,EAAO2D,IAEzD,OAAOjB,GAAgB,wBAACA,EAAD,2BACfjqB,GADe,IAEnBqrB,aAASniB,EACTrI,IAAK0mB,EAAO1mB,IACZspB,OAAQA,EACR5C,OAAQA,EACR9Z,IAAKA,EACL6d,SAAUjB,IAAkB9C,EAAO2D,IACnCK,cAAejB,IAAuB/C,EAAO2D,IAC7CE,eAAgBA,EAEhBI,gBAAiBJ,EAAkBZ,EAA0BgB,qBAAkBtiB,EAC/EuiB,QAASL,EAAkBZ,EAA0BiB,aAAUviB,EAC/DwiB,UAAWN,EAAiBZ,EAAmBkB,eAAYxiB,EAC3Dsf,WAAYA,EACZmC,YAAaA,EACbC,WAAYA,YAW7B,I,eAAMe,GAAWlsB,IAAMiZ,KAAKjZ,IAAMuH,WAAW+iB,KAEvC6B,GAAY,YAU8C,EAR/Dne,IAQgE,IANhEzK,EAM+D,EAN/DA,UAGAmC,GAG+D,EAL/DoiB,OAK+D,EAJ/DwD,SAI+D,EAH/D5lB,OAEGnF,EAC4D,mBACnE,OAAO,iCAAKgD,UAAS,wBAAmBA,GAAaa,MAAO,CAACsB,MAAOA,IAAYnF,K,qBClIvE6rB,GAAiB3c,aAAH,oEAId4c,GAAiB5c,aAAH,gGAKrB6c,GAAkBvqB,YAAOuB,IAAPvB,CAAH,0SACJ,gBAAEG,EAAF,EAAEA,MAAF,gBAAgBA,EAAMqN,KAAO,EAA7B,SAIH,gBAAErN,EAAF,EAAEA,MAAF,gBAAgBA,EAAMqN,KAAO,EAA7B,SACa,kBAGyB,QAHzB,EAEGgd,cACI,6DAMpB,gBAAErqB,EAAF,EAAEA,MAAF,gBAAgBA,EAAMqN,KAAO,EAA7B,SACU,kBAGyB,SAHzB,EAEGgd,cACI,6DACb,gBAAErqB,EAAF,EAAEA,MAAF,gBAAgBA,EAAMqN,KAAO,EAA7B,SAILid,GAC0C,SAAC,GAIiE,IAH7DC,EAG4D,EAH5DA,cAEGhlB,EACyD,mBAEpH,OAAO,eAAC6kB,GAAD,0CAAyB7kB,IAAzB,IAAgC8kB,cAAeE,EAA/C,UACH,qBAAKlpB,UAAU,OACf,qBAAKA,UAAU,cAahB,SAASwmB,GAAT,GAMuE,IALhCjC,EAK+B,EAL/BA,OACA2E,EAI+B,EAJ/BA,cACAC,EAG+B,EAH/BA,SACAC,EAE+B,EAF/BA,OACAtI,EAC+B,EAD/BA,SAQ1C,OAAIyD,EAAO8E,SAKH,eAACtpB,EAAA,EAAD,CAAK2C,UAAW,OAAQN,QAAS,OAAQO,WAAY,SAChD3C,UAAS,+BAA0B6oB,IACnCroB,QAAS,SAACuJ,GAAD,OAAyBqf,EAAOrf,EAAEuf,UAFhD,UAGI,sBAAMtpB,UAAS,+BAA0B8oB,IAAzC,SAA4DhI,GAAsByD,EAAOpqB,OACzF,cAAC,GAAD,CAAgB+uB,kBACfC,KAKF,mCAAGrI,GAAsByD,EAAOpqB,OChGtBqE,IAAOiD,IAAV,kFAKKjD,IAAOiD,IAAV,sM,aCLxB,I,MAA4BjD,IAAOiD,IAAV,mLCAYjD,IAAOiD,IAAV,+UA0BFjD,IAAOiD,IAAV,iJ,aCtBjB8nB,G,+CCFNC,GAAahrB,IAAOiD,IAAV,iTAaQ,gBAAE9C,EAAF,EAAEA,MAAOkC,EAAT,EAASA,MAAT,OAAoBlC,EAAMC,UAAqB,SAAViC,EAAmB,UAAY,YAY/E4oB,GAAqB,YAO4D,EANhDzqB,EAMiD,IALjDyL,EAKgD,EALhDA,IAEAzK,GAGgD,EAJhDukB,OAIgD,EAHhDvkB,WACA+nB,EAEgD,EAFhDA,SACG/qB,EAC6C,mBAC1FgD,EAAYghB,aAAKhhB,EAAW,CAAC,kBAAkB,IAC/C,IAAMa,EAAQ,CAACsB,MAAM,GAAD,OAAwC,IAAnC8H,OAAQQ,EAAasd,IAA1B,MACpB,OAAO,cAACyB,GAAD,2BAAgBxsB,GAAhB,aACH,qBAAKgD,UAAWA,EAAWa,MAAOA,Q,IAG3BkW,eAAkB0S,I,6BCpC3BC,GAAuC,CACzC3W,SAAU,SACVC,WAAY,QAGV2W,GAA0C,CAC5C5W,SAAU,MACVC,WAAY,QAIH4W,GAAsC,SAAC,GAcO,IAbHra,EAaE,EAbFA,KACAkC,EAYE,EAZFA,QACAzR,EAWE,EAXFA,UACA8gB,EAUE,EAVFA,SACA+I,EASE,EATFA,eASE,IAPF/W,oBAOE,MAPa4W,GAOb,MANF1b,uBAME,MANgB2b,GAMhB,MAJFG,oBAIE,MAJa,CACX/mB,KAAM,IAGR,EADFgnB,EACE,EADFA,kBAI9C7Y,GAFS,OAAG4Y,QAAH,IAAGA,KAAc/mB,KAChB,OAAG+mB,QAAH,IAAGA,KAAcE,MACdxY,yBAAc,CAACrO,QAAS,UAAWsO,aAC/CwY,EAAU/Y,EAAV+Y,OAEPxtB,IAAMgH,WAAU,WACRsmB,GACAA,EAAkBE,KAEvB,CAACF,EAAmBE,IAEvB,IAAMC,EAAmB,UAAT3a,EACV4a,EAAaD,EAAUxX,qBAAUxB,GAAckZ,uBAAYlZ,GAC3DmZ,EAAcH,EAAU5I,oBAASpQ,GAAc2B,uBAAY3B,GAC3DoZ,EAAgBJ,EAAUK,KAAYC,KAEtCC,EAAgBjsB,YAAO8rB,EAAP9rB,CAAH,g9CAYG,mBAA0B,IAA1B,EAAEG,MAAiBqN,QAClB,qBAAErN,MAAiBqN,QAGjB,kBAA0B,GAA1B,EAAErN,MAAiBqN,QAG3B,mBAA2B,EAA3B,EAAErN,MAAiBqN,QAKhB,qBAAErN,MAAiBqN,QACZ,qBAAErN,MAAiBqN,QAc7B,qBAAErN,MAAiBqN,QAMpB,qBAAErN,MAAiBqN,QAOjB,mBAA2B,EAA3B,EAAErN,MAAiBqN,QAO/B0e,EAAiBjuB,IAAMC,aAAY,SAACiuB,GACtC,GAAIluB,IAAMmuB,eAAeD,GACrB,OAAOluB,IAAMouB,SAASjtB,IAAI+sB,GAAiB,SAACG,GAAD,OAAWruB,IAAMsuB,aAAaD,EAAnB,eAC3CX,OAIf,MAAM,IAAIa,MAAM,8BACjB,CAACb,IAEJ,OAAO,qCACFO,EAAe5J,GAChB,cAAC2J,EAAD,2BACQJ,GADR,IAEIY,gBAAgB,WAChBnY,aAAcA,EACd9E,gBAAiBA,EACjBhO,UAAWA,EALf,SASS6pB,SAaJjX,GAAcpU,YAAO0sB,KAAP1sB,CAAH,osCAcC,kBAA0B,GAA1B,EAAEG,MAAiBqN,QAG3B,mBAA2B,EAA3B,EAAErN,MAAiBqN,QAKhB,qBAAErN,MAAiBqN,QACZ,qBAAErN,MAAiBqN,QAc7B,qBAAErN,MAAiBqN,QAMpB,qBAAErN,MAAiBqN,QAOjB,mBAA2B,EAA3B,EAAErN,MAAiBqN,S,SF1LzBud,K,cAAAA,E,eAAAA,Q,KGLL,I,wBCUK4B,G,WCRNC,GAA0B5sB,YAAOuB,IAAPvB,CAAH,0EAKvB6sB,GAAmB7sB,YAAO8sB,KAAP9sB,CAAH,0GAaT+sB,GAAkB,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MACrDC,EAAWnvB,IAAMC,aAAY,WAC/B,OAAKivB,EACEA,EAAQD,EAAW,EACpBG,SAASC,OAAOH,EAAQD,IAAa,EACrCG,SAASC,OAAOH,EAAQD,IAHX,IAIpB,CAACA,EAAUC,IAERzsB,EAAezC,IAAMC,aAAY,SAACqvB,EAAGpvB,GACvC6uB,EAAa7uB,KACd,CAAC6uB,IAEJ,OACI,cAACJ,GAAD,UACI,cAACC,GAAD,CAAkB9qB,MAAO,UAAWuI,MAAO8iB,IAAYH,KAAMA,EAAMlsB,SAAUL,O,UClC5E8sB,GAAa,kBAAM,eAACC,GAAA,EAAD,CAASjsB,UAAW,MAAOmC,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAClEC,MAAM,6BADf,UAE5B,sBACI9wB,EAAE,oHACF6wB,KAAK,YACT,sBAAME,SAAS,UAAUC,SAAS,UAC5BhxB,EAAE,mHACF6wB,KAAK,UACX,sBAAME,SAAS,UAAUC,SAAS,UAC5BhxB,EAAE,ooCACF6wB,KAAK,UACX,sBAAME,SAAS,UAAUC,SAAS,UAC5BhxB,EAAE,0LACF6wB,KAAK,c,wJCETpI,GAAqBvlB,YAAOuB,IAAPvB,CAAH,wGAKlB,gBAAEG,EAAF,EAAEA,MAAF,OAAaqa,GAAc,CAACC,MAAoB,EAAbta,EAAMqN,KAAUkN,OAAqB,EAAbva,EAAMqN,UAGjEugB,GAAc/tB,YAAOsmB,GAAPtmB,CAAH,mXAEC,SAACxB,GAAD,OAAgBA,EAAMwvB,iBA4BlCC,GAA6BjuB,IAAOkoB,KAAV,4CACtB,SAAC1pB,GACP,IAAe4B,EAAuB5B,EAA/B2B,MAAQC,UACT8tB,EAA6B,UADG1vB,EAAXrD,QAE3B,OAAOqD,EAAML,MAAQ,EACf+vB,EACI9tB,EAAU2a,QACV3a,EAAU8G,MACd1I,EAAML,MAAQ,EACV+vB,EACI9tB,EAAU8G,MACV9G,EAAU2a,QACd3a,EAAU+M,iBAmBlBghB,GAAgB,SAAC3vB,GACnB,IAAWgC,EAA0DhC,EAA9DgC,EAAIA,EAAI4tB,EAAsD5vB,EAAtD4vB,QAASjzB,EAA6CqD,EAA7CrD,QAASkzB,EAAoC7vB,EAApC6vB,iBAAkBC,EAAkB9vB,EAAlB8vB,eACnD,MACI,CACI,CACIjvB,IAAK,OACL1D,KAAM6E,EAAE,kBAGRqqB,UAAU,EACV0D,UAAW,YAAY,IACnB,EADkB,EAATtiB,IACiB,KAAnB0J,EAAP,EAAOA,MAAOC,EAAd,EAAcA,MACR4Y,EAAI,UAAM7Y,EAAN,YAAeC,GACnB6Y,EAAW,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAgBI,SAASF,GAC7C,OACI,eAACjtB,EAAA,EAAD,CAAKC,UAAU,iBACXoC,QAAS,OACTO,WAAY,SAFhB,UAII,cAACK,GAAA,EAAD,CAAa3C,YAAa,EAA1B,SACI,cAACC,EAAA,EAAD,CAAYO,MAAO,CAACN,MAAM,qBAAsBpB,KAAM,SAAUqB,QAAS,SAACuJ,GAAD,OAAW8iB,EAAiB9iB,EAAGkjB,EAAaD,IAArH,SACKC,EACG,cAAC,IAAD,CAAgBE,OAAQ,YAExB,cAAC,IAAD,CAAgBA,OAAQ,gBAIpC,eAACnqB,GAAA,EAAD,CAAYN,UAAW,OAAvB,UACKyR,EACD,eAACnR,GAAA,EAAD,CACIN,UAAW,OACXnC,MAAO,gBAFX,eAIO6T,aAO3B,CACIvW,IAAK,QACL1D,KAAM6E,EAAE,uBACRqqB,UAAU,EAEV0D,UAAW,YAAY,IACbpwB,EADY,EAAT8N,IACQ,MAQjB,OACI,qBAAKzK,UAAU,iBAAf,SACI,+BAAwB,qBAAVrD,EAAwBghB,aAA4BhhB,GAASoV,UAK3F,CACIlU,IAAK,SACL1D,KAAM6E,EAAE,uBAERqqB,UAAU,EACV0D,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IACH9N,EAAQ8N,EAAI2iB,OAMlB,OACI,qBAAKptB,UAAU,iBAAf,SACI,cAACysB,GAAD,CAAuB9vB,MAAOA,EAAOhD,QAASA,EAA9C,SACsB,qBAAVgD,GACH8N,EAAI2O,WAAaiU,IAASC,SAAW,IAAM,IAAMrjB,OAAO0T,aAA4BhhB,IAAQ4wB,QAAQ,GAAK,IAAOxb,UAMzI,CACIlU,IAAK,OACL1D,KAAM6E,EAAE,qBAERqqB,UAAU,EACV0D,UAAW,YAAoB,IACrBpwB,EADoB,EAAjB8N,IAAiB,EAAZ8Z,OACY1mB,KAG1B,OACI,qBAAKmC,UAAU,iBAAf,SACI,+BAAwB,qBAAVrD,EAAwBghB,aAA4BhhB,GAASoV,UAK3F,CACIlU,IAAK,MACL1D,KAAM6E,EAAE,oBAERqqB,UAAU,EACV0D,UAAW,YAAoB,IACrBpwB,EADoB,EAAjB8N,IAAiB,EAAZ8Z,OACY1mB,KAG1B,OACI,qBAAKmC,UAAU,iBAAf,SACI,+BAAwB,qBAAVrD,EAAwBghB,aAA4BhhB,GAASoV,UAK3F,CACIlU,IAAK,SACL1D,KAAM6E,EAAE,sBAERqqB,UAAU,EACV0D,UAAW,YAAY,IACbpwB,EADY,EAAT8N,IACQ,OACjB,OACI,qBAAKzK,UAAU,iBAAf,SACI,+BAAwB,qBAAVrD,EAAwBghB,aAA4BhhB,GAASoV,UAK3F,CACIlU,IAAK,UAEL2vB,gBAAiB,iBACjBrzB,KAAM6E,EAAE,oBACR+tB,UAAW,YAAY,IACnB,EADkB,EAATtiB,IACiB,KAAnB0J,EAAP,EAAOA,MAAOC,EAAd,EAAcA,MACRqZ,EAAS,UAAMtZ,EAAN,YAAeC,GAC9B,OACI,qBAAKpU,UAAU,iBAAf,SACI,cAACzB,EAAA,EAAD,CAAQ4E,QAAQ,WAAW3C,QAAS,kBAAMosB,EAAQjf,KAAK,CACnD+f,SAAS,iBAAD,OAAmBD,MAD/B,yBAgCfE,GAAa5W,aAAgB,SAAhBA,CAA0B6W,cAAW,YAYiE,IAX5D5uB,EAW2D,EAX3DA,EAW2D,IAV3DwtB,qBAU2D,MAV3C,IAU2C,MAT3D/G,iBAS2D,MAT/C,GAS+C,EAR3DoI,EAQ2D,EAR3DA,oBACAnJ,EAO2D,EAP3DA,QACAkI,EAM2D,EAN3DA,QACApH,EAK2D,EAL3DA,WACAsH,EAI2D,EAJ3DA,eACAgB,EAG2D,EAH3DA,kBACAC,EAE2D,EAF3DA,qBACG7pB,EACwD,mBAevH8pB,EAAe5xB,IACbzC,EAAO,OAAGq0B,QAAH,IAAGA,OAAH,EAAGA,EAAcr0B,QAExB4C,EAAWC,cAaXyxB,EAAmB,CACrBvJ,QAAS,GACTC,WAAYgI,GAAc,CACtB3tB,EAAG,CAACA,KACJ4tB,UACAjzB,UACAkzB,iBAjBiB,SAACpsB,EAAqDwsB,EAAsBD,GAEjGvsB,EAAMytB,kBAEF3xB,EADA0wB,EACSc,EAAqBf,GAGzBc,EAAkBd,KAWvBF,mBAEJrI,aAAc,SAACC,GAAD,OAAkBA,GAChCc,WAAYA,EACZnB,gBAAiB,qBAAEC,YACnBY,WAAY,SAACe,EAAqCkI,GAC9C,OAAQA,GACJ,IAAK,OACDlI,EAAaA,EAAWmI,MAAK,SAAC7Y,EAAG8Y,GAC7B,IAAMC,EAAS/Y,EAAEyX,KAAK7Y,MAChBoa,EAASF,EAAErB,KAAK7Y,MACtB,OAAOma,EAAOE,cAAcD,MAEhC,MACJ,IAAK,QACDtI,EAAaA,EAAWmI,MAAK,SAAC7Y,EAAG8Y,GAC7B,IAAMC,EAAS/Y,EAAC,MACVgZ,EAASF,EAAC,MAChB,OAAIC,GAAUC,EACHA,EAASD,EAEhBA,IAAWC,GACH,GAEPD,GAAUC,EACJ,EAEJ,KAEX,MACJ,IAAK,SACDtI,EAAaA,EAAWmI,MAAK,SAAC7Y,EAAG8Y,GAC7B,IAAMC,EAAS/Y,EAAC,OACVgZ,EAASF,EAAC,OAChB,OAAIC,GAAUC,EACHA,EAASD,EAEhBA,IAAWC,GACH,GAEPD,GAAUC,EACJ,EAEJ,KAEX,MACJ,IAAK,OACDtI,EAAaA,EAAWmI,MAAK,SAAC7Y,EAAG8Y,GAC7B,IAAMC,EAAS/Y,EAAC,KACVgZ,EAASF,EAAC,KAChB,OAAIC,GAAUC,EACHA,EAASD,EAEhBA,IAAWC,GACH,GAEPD,GAAUC,EACJ,EAEJ,KAEX,MACJ,IAAK,MACDtI,EAAaA,EAAWmI,MAAK,SAAC7Y,EAAG8Y,GAC7B,IAAMC,EAAS/Y,EAAC,IACVgZ,EAASF,EAAC,IAChB,OAAIC,GAAUC,EACHA,EAASD,EAEhBA,IAAWC,GACH,GAEPD,GAAUC,EACJ,EAEJ,KAEX,MACJ,IAAK,SACDtI,EAAaA,EAAWmI,MAAK,SAAC7Y,EAAG8Y,GAC7B,IAAMC,EAAS/Y,EAAC,OACVgZ,EAASF,EAAC,OAChB,OAAIC,GAAUC,EACHA,EAASD,EAEhBA,IAAWC,GACH,GAEPD,GAAUC,EACJ,EAEJ,KAEX,MACJ,QACI,OAAOtI,EAEf,OAAOA,GAEXhB,eAAgB,UAGpB,OACI,cAAC,GAAD,UACI,cAACsH,GAAD,aAAaC,cAAeA,EAAexsB,UAAW,cAAtD,uCACOiuB,GAAgB/pB,GADvB,IAEI2pB,sBACAnJ,UACAe,sBCxUHgJ,GAA0B1X,gBAAkB,SAAC/Z,GACtD,IAtEgCgC,EAsE1BivB,EAAmB,CACrBvJ,QAAS,GACTC,YAxE4B3lB,EAwEWhC,EAAMgC,EAvE1C,CACH,CACInB,IAAK,SACL1D,KAAM6E,EAAE,oBACR+tB,UAAW,YAAoB,IAC3B,EAD0B,EAAjBtiB,IAAiB,EAAZ8Z,OACiB1mB,KAAxB6wB,EAAP,EAAOA,KAAMtpB,EAAb,EAAaA,GACDupB,EAA6BD,EAAlC7wB,IAAqB+wB,EAAaF,EAApB/xB,MACTkyB,EAAyBzpB,EAA9BvH,IAAmBixB,EAAW1pB,EAAlBzI,MACboyB,EAAW,UAAMH,EAAN,YAAmBD,EAAnB,aAA+BG,EAA/B,YAA0CD,GAC3D,OAAO,qBAAK7uB,UAAU,iBAAf,SAAiC+uB,MAGhD,CACIlxB,IAAK,eACL1D,KAAM6E,EAAE,0BACR+tB,UAAW,YAAoB,IACrBpwB,EADoB,EAAjB8N,IAAiB,EAAZ8Z,OACY1mB,KAEpBkxB,EADW9kB,OAAO+kB,SAASryB,GACFA,EAAM4wB,QAAQ,GAAKxb,IAClD,OAAO,qBAAK/R,UAAU,iBAAf,SAAiC+uB,MAGhD,CACIlxB,IAAK,cACL1D,KAAM6E,EAAE,yBACR+tB,UAAW,YAAoB,IACrBpwB,EADoB,EAAjB8N,IAAiB,EAAZ8Z,OACY1mB,KAEpBkxB,EADW9kB,OAAO+kB,SAASryB,GACFA,EAAM4wB,QAAQ,GAAKxb,IAClD,OAAO,qBAAK/R,UAAU,iBAAf,SAAiC+uB,MAGhD,CACIlxB,IAAK,OACL1D,KAAM6E,EAAE,kBACR+tB,UAAW,YAAoB,IACrBpwB,EADoB,EAAjB8N,IAAiB,EAAZ8Z,OACY1mB,KACpBkxB,EAAc9kB,OAAO+kB,SAASryB,GAAhB,UACXA,EADW,SAEdoV,IACN,OACI,qBAAK/R,UAAU,iBAAf,SACI,+BAAO+uB,QAKvB,CACIlxB,IAAK,QACL1D,KAAM6E,EAAE,mBACR+tB,UAAW,YAAoB,IAC3B,EAD0B,EAAjBtiB,IAAiB,EAAZ8Z,OACmB1mB,KAA1BA,EAAP,EAAOA,IAAKlB,EAAZ,EAAYA,MAENoyB,EADW9kB,OAAO+kB,SAASryB,GACL,UAAMA,EAAM4wB,QAAQ,GAApB,YAA0B1vB,GAAQkU,IAC9D,OACI,qBAAK/R,UAAU,iBAAf,SACI,+BAAO+uB,UAgBvBtK,gBACAJ,oBAEE4K,EAAmBjyB,EAAM0nB,QAAQ9mB,KAAI,SAAAsxB,GAAC,OAAIxxB,OAAOyxB,OAAOD,MAC9D,OAAO,cAAC,GAAD,sDAAejB,GAAgBjxB,GAA/B,IAAsC0nB,QAASuK,U,SJpF9C9D,K,qBAAAA,E,UAAAA,E,aAAAA,Q,KAMZ,I,kBKlBYiE,GAYAC,G,SLMNC,GAAkB9wB,YAAOkgB,GAAPlgB,CAAH,oLAUf+wB,GAAmB/wB,YAAOkhB,GAAPlhB,CAAH,gCAIhBgxB,GAAehxB,YAAOuB,IAAPvB,CAAH,0IASLixB,GAAS1Y,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YAGuC,IAFlC/X,EAEiC,EAFjCA,EACA0wB,EACiC,EADjCA,mBAE5DC,EAAsB,CACxB,CACIloB,MAAOzI,EAAE,4BACTrC,MAAO,aAEX,CACI8K,MAAOzI,EAAE,uBACTrC,MAAO,OAEX,CACI8K,MAAOzI,EAAE,wBACTrC,MAAO,SAGf,EAAoCF,IAAMuK,SAA2BmkB,GAAiByE,UAAtF,oBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCrzB,IAAMuK,SAAqB,MAA/D,oBAAO+oB,EAAP,KAAmBC,EAAnB,KAEMC,EAAcxzB,IAAMC,aAAY,WAClCozB,EAAc3E,GAAiByE,UAC/BI,EAAc,MACdN,EAAmB,CACfG,WAAY1E,GAAiByE,SAC7BG,WAAY,SAEjB,CAACL,IAEEQ,EAAezzB,IAAMC,aAAY,WACnCgzB,EAAmB,CACfG,aACAE,iBAEL,CAACL,EAAoBK,EAAYF,IAEpC,OACI,eAACnoB,GAAA,EAAD,CAAMG,WAAS,EAAC2K,QAAS,EAAzB,UACI,cAAC9K,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAf,SACI,eAAC6R,GAAD,CACIzkB,GAAG,2BACHC,QAAM,EACNzC,WAAS,EACT1L,MAAOkzB,EACPtwB,SAAU,SAACkB,GACPqvB,EAAcrvB,EAAM4D,OAAO1H,QAE/B4f,WAAY,CAACjS,cAAeC,KARhC,cAUGolB,EAAoB/xB,KAAI,SAAAsxB,GAAC,OAAI,cAAC3O,GAAA,EAAD,CAAwB5jB,MAAOuyB,EAAEvyB,MAAjC,SAAyCuyB,EAAEznB,OAA5BynB,EAAEvyB,eAGrD,cAAC+K,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAACqtB,GAAD,CAAkB5yB,MAAOozB,EAAYxwB,SAAU,SAACsO,GAAD,OAAmBmiB,EAAcniB,QAEpF,cAACnG,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,eAACstB,GAAD,WACI,cAAC,EAAD,CAAQrsB,QAAS,WAAYhE,KAAM,SAAUoB,MAAO,UAC5CC,QAASyvB,EADjB,SAC+BjxB,EAAE,sBACjC,cAAC,EAAD,CAAQmE,QAAS,YAAahE,KAAM,QAASoB,MAAO,UAC5CC,QAAS0vB,EADjB,SACgClxB,EAAE,kCM/BhDmxB,GAA+B3xB,YAAOuB,IAAPvB,CAAH,6CACvB,SAACxB,GACR,IACEL,EAEEK,EAFFL,MACQiC,EACN5B,EADF2B,MAAQC,UAEV,OAAOjC,IAAUyzB,IAAWC,IAAMzxB,EAAU2a,QAAU3a,EAAU8G,SAI9D6mB,GAAc/tB,YAAOuB,IAAPvB,CAAH,+SAeb,gBAAEG,EAAF,EAAEA,MAAF,OAAaqa,GAAc,CAACC,MAAoB,EAAbta,EAAMqN,KAAUkN,OAAqB,EAAbva,EAAMqN,UAW/DskB,GAA4B,SAACtxB,GAAD,MAAsD,CACpF,CACInB,IAAK,OACL1D,KAAM6E,EAAE,kBACR+tB,UAAW,YAAoB,IACrBpwB,EADoB,EAAjB8N,IAAiB,EAAZ8Z,OACY1mB,KAC1B,OACI,qBAAKmC,UAAU,iBAAf,SACI,cAACmwB,GAAD,CAAyBxzB,MAAOA,EAAhC,SACKA,QAMrB,CACIkB,IAAK,SACL1D,KAAM6E,EAAE,oBACR+tB,UAAW,YAAoB,IAC3B,EAD0B,EAAjBtiB,IAAiB,EAAZ8Z,OACiB1mB,KAAxB6wB,EAAP,EAAOA,KAAMtpB,EAAb,EAAaA,GACDupB,EAA6BD,EAAlC7wB,IAAqB+wB,EAAaF,EAApB/xB,MACTkyB,EAAyBzpB,EAA9BvH,IAAmBixB,EAAW1pB,EAAlBzI,MACboyB,EAAW,UAAMH,EAAN,YAAmBD,EAAnB,aAA+BG,EAA/B,YAA0CD,GAC3D,OAAO,qBAAK7uB,UAAU,iBAAf,SAAiC+uB,MAGhD,CACIlxB,IAAK,UACL1D,KAAM6E,EAAE,qBACR+tB,UAAW,YAAoB,IACrBpwB,EADoB,EAAjB8N,IAAiB,EAAZ8Z,OACY1mB,KAEpBkxB,EADW9kB,OAAO+kB,SAASryB,GACFA,EAAM4wB,QAAQ,GAAKxb,IAClD,OAAO,qBAAK/R,UAAU,iBAAf,SAAiC+uB,MAGhD,CACIlxB,IAAK,eACL1D,KAAM6E,EAAE,0BACR+tB,UAAW,YAAoB,IAC3B,EAD0B,EAAjBtiB,IAAiB,EAAZ8Z,OACiB1mB,KAAxB6wB,EAAP,EAAOA,KAAMtpB,EAAb,EAAaA,GACDupB,EAA6BD,EAAlC7wB,IAAqB+wB,EAAaF,EAApB/xB,MACTkyB,EAAyBzpB,EAA9BvH,IAAmBixB,EAAW1pB,EAAlBzI,MACboyB,EAAW,UAAMH,EAAN,YAAmBD,EAAnB,aAA+BG,EAA/B,YAA0CD,GAC3D,OAAO,qBAAK7uB,UAAU,iBAAf,SAAiC+uB,MAGhD,CACIlxB,IAAK,cACL1D,KAAM6E,EAAE,yBACR+tB,UAAW,YAAoB,IAC3B,EAD0B,EAAjBtiB,IAAiB,EAAZ8Z,OACmB1mB,KAA1BlB,EAAP,EAAOA,MAAOkB,EAAd,EAAcA,IAGRkxB,EADW9kB,OAAO+kB,SAASryB,GACL,UAAMA,EAAM4wB,QAAQ,GAApB,YAA0B1vB,GAAQkU,IAC9D,OACI,qBAAK/R,UAAU,iBAAf,SACI,+BAAO+uB,QAKvB,CACIlxB,IAAK,OACL1D,KAAM6E,EAAE,kBACR+tB,UAAW,YAAoB,IAAlBtiB,EAAiB,EAAjBA,IACH9N,EAAQ8N,EADY,EAAZ8Z,OACY1mB,KACpBkxB,EAAc9kB,OAAO+kB,SAASryB,GAC9BhC,IAAO,IAAI41B,KAAK9lB,EAAG,MAAa,gBAAgB+lB,UAChDze,IACN,OACI,qBAAK/R,UAAU,iBAAf,SACI,+BAAO+uB,QAKvB,CACIlxB,IAAK,SACL1D,KAAM6E,EAAE,oBACR+tB,UAAW,gBAAEtiB,EAAF,EAAEA,IAAK8Z,EAAP,EAAOA,OAAQ4C,EAAf,EAAeA,OAAf,OAA2B,mCAClC,cAAC,GAAD,CAAiB1c,MAAK8Z,SAAQ4C,eAEnC,CACCtpB,IAAK,SACL1D,KAAM,GACNs2B,QAAQ,KAIVC,GAAa,SAAC,GAAgC,IAA/BjmB,EAA8B,EAA9BA,IAAK8Z,EAAyB,EAAzBA,OAAQ4C,EAAiB,EAAjBA,OACxBxqB,EAAQ8N,EAAK8Z,EAAO1mB,KACpB4T,EAAO,UAAM8S,EAAO1mB,IAAb,YAAoBspB,GACjC,EAA4BngB,oBAAS,GAArC,oBAAOijB,EAAP,KAAe0G,EAAf,KACMC,EAAmBpyB,IAAOkoB,KAAV,yWAKX,YAAc,IACd9nB,EADa,EAAXD,MACFC,UACP,OAAOjC,IAAUk0B,IAAYC,UACnBlyB,EAAU2a,QACV5c,IAAUk0B,IAAYE,QAAUnyB,EAAU+M,cAClC/M,EAAU4a,eAQf,kBAAMyQ,EAAS,iBAAmB,MA+D7C+G,EAAgBxyB,IAAOiD,IAAV,iMAUfwvB,EAAc,GAClB,OAAQt0B,GACJ,KAAKk0B,IAAYK,WACbD,EAAc,aACd,MACJ,KAAKJ,IAAYC,UACbG,EAAc,YACd,MACJ,KAAKJ,IAAYM,WACbF,EAAc,aACd,MACJ,KAAKJ,IAAYO,UACbH,EAAc,YACd,MACJ,KAAKJ,IAAYE,QACbE,EAAc,UACd,MACJ,KAAKJ,IAAYQ,QACbJ,EAAc,UACd,MACJ,QACIA,EAAc,GAEtB,IAAMK,EACF,qBAAKzwB,MAAO,CAACsB,MAAO,KAApB,SACI,eAACyuB,EAAD,WACKK,EACD,cAAC,IAAD,SAINpH,EACF,eAACmH,EAAD,WACI,qBAAKhxB,UAAU,iBACf,qBAAKA,UAAU,iBAAf,SACI,cAACyuB,GAAD,CAAyB/J,QAzGhB,CACjB,CACI6M,OAAQ,CACJ7C,KAAM,CACF7wB,IAAK,MACLlB,MAAO,MAEXyI,GAAI,CACAvH,IAAK,MACLlB,MAAO,UAGf60B,aAAc,QACdC,YAAa,KACbC,KAAM,EACN/F,MAAO,CACH9tB,IAAK,MACLlB,MAAO,MAGf,CACI40B,OAAQ,CACJ7C,KAAM,CACF7wB,IAAK,MACLlB,MAAO,MAEXyI,GAAI,CACAvH,IAAK,MACLlB,MAAO,UAGf60B,aAAc,QACdC,YAAa,KACbC,KAAM,EACN/F,MAAO,CACH9tB,IAAK,MACLlB,MAAO,MAGf,CACI40B,OAAQ,CACJ7C,KAAM,CACF7wB,IAAK,MACLlB,MAAO,MAEXyI,GAAI,CACAvH,IAAK,MACLlB,MAAO,UAGf60B,aAAc,QACdC,YAAa,KACbC,KAAM,EACN/F,MAAO,CACH9tB,IAAK,MACLlB,MAAO,cAsDnB,OAAO,qBAAKqD,UAAU,iBAAf,SACH,cAAC,GAAD,CACIuP,KAAMga,GAAYoI,MAClBlgB,QAASA,EACTzR,UAAW,cAEX6pB,eAAgBA,EAChBE,kBAAmB4G,EACnB7d,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBhF,gBAAiB,CACb+E,SAAU,MACVC,WAAY,SAbpB,SAgBKse,OAKAM,GAAoB7a,aAAgB,SAAhBA,EAA0B,SAAC/Z,GACxD,IAAOgC,EAAsChC,EAAtCgC,EAAG0lB,EAAmC1nB,EAAnC0nB,QAASmN,EAA0B70B,EAA1B60B,WAAYC,EAAc90B,EAAd80B,WAEzB7D,EAAmB,CACrBvJ,QAAS,GACTC,WAAY2L,GAA0BtxB,GAAG+yB,QAAO,SAAA7C,GAAC,OAAKA,EAAEuB,UACxDhM,gBACAJ,mBACA2N,cANkB,CAAC,UAOnBnxB,MAAO,CACH6K,gBAAiB,gBAAE9M,EAAF,EAAEA,UAAF,gBAAyBA,EAAUib,QAItDoV,EAAmBvK,GAAWuN,MAAMC,QAAQxN,GAAWA,EAAQ9mB,KAAI,SAAAsxB,GAAC,OAAIxxB,OAAOyxB,OAAOD,MAAM,GAClG,EAAoCloB,mBAASmkB,GAAiByE,UAA9D,oBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoC9oB,mBAAS,MAA7C,oBAAO+oB,EAAP,KAAmBC,EAAnB,KACA,EAAwBhpB,mBAAS,GAAjC,oBAAOykB,EAAP,KAAa0G,EAAb,KACA,EAAkCnrB,mBAASioB,GAA3C,oBAAOmD,EAAP,KAAkBC,EAAlB,KAEA5uB,qBAAU,WACN4uB,EAAa3N,GAAWuN,MAAMC,QAAQxN,GAAWA,EAAQ9mB,KAAI,SAAAsxB,GAAC,OAAIxxB,OAAOyxB,OAAOD,MAAM,MACvF,CAACxK,IAEJ,IAAMgH,EAAWmG,EAAaA,EAAWnG,SAAW,GAE9C4G,EAAgB51B,uBAAY,kBAAMm1B,EAClCO,EAAUhM,OAAOqF,EAAO,GAAKC,EAAUD,EAAOC,GAC9C0G,IACA,CAAC3G,EAAMC,EAAUmG,EAAYO,IAE7BG,EAAa71B,uBAAY,YAIQ,IAHH81B,EAGE,EAHFA,WAGE,IAFFC,sBAEE,MAFe5C,EAEf,MADF6C,sBACE,MADe3C,EACf,EAE9B4C,EAAajO,GAAWuN,MAAMC,QAAQxN,GAAWA,EAAQ9mB,KAAI,SAAAsxB,GAAC,OAAIxxB,OAAOyxB,OAAOD,MAAM,GAK1F,GAHIuD,IAAmBtH,GAAiByE,WACpC+C,EAAaA,EAAWZ,QAAO,SAAA7C,GAAC,OAAIA,EAAG,KAAQuD,MAE/CC,EAAgB,CAChB,IAAME,EAAOj4B,IAAOA,OAAUi4B,KAAKF,EAAgB,QAEnDC,EAAaA,EAAWZ,QAAO,SAAA7C,GAAC,OAAIA,EAAG,KAAQ0D,KAEhC,WAAfJ,GACAL,EAAQ,GAEZE,EAAaM,KACd,CAACjO,EAASqL,EAAYF,IAEnBH,EAAqBhzB,uBAAY,YAA+B,IAA7BmzB,EAA4B,EAA5BA,WAAYE,EAAgB,EAAhBA,WACjDD,EAAcD,GACdG,EAAcD,GACdwC,EAAW,CAACC,WAAYK,IAAUd,OAAQU,eAAgB5C,EAAY6C,eAAgB3C,MACvF,CAACwC,IAEEO,EAAmBp2B,uBAAY,SAAC+uB,GAClC0G,EAAQ1G,GACR8G,EAAW,CAACC,WAAYK,IAAUpH,KAAMsH,SAAUtH,MACnD,CAAC8G,IAEJ,OAAO,eAAC,GAAD,WACFT,GACG,cAAC/X,GAAD,UACI,cAAC0V,GAAD,CAAQC,mBAAoBA,MAGpC,cAAC,GAAD,sDAAezB,GAAgBjxB,GAA/B,IAAsC0nB,QAAS4N,QAE3CT,GACI,cAAC,GAAD,CAAiBpG,KAAMA,EAAMC,SAAUA,EAAUC,MAAOyG,EAAUpwB,OACjDwpB,aAAcsH,UCxZzCxD,GAAkB9wB,YAAOkgB,GAAPlgB,CAAH,oLAUfgxB,GAAehxB,YAAOuB,IAAPvB,CAAH,0IASLixB,GAAS1Y,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YAQvB,IAPtC/X,EAOqC,EAPrCA,EACAg0B,EAMqC,EANrCA,aACAjD,EAKqC,EALrCA,WACAF,EAIqC,EAJrCA,WACAoD,EAGqC,EAHrCA,YACAvD,EAEqC,EAFrCA,mBACAO,EACqC,EADrCA,YAEMiD,EAAsB,CACxB,CACIzrB,MAAOzI,EAAE,yBACTrC,MAAO,aAEX,CACI8K,MAAOzI,EAAE,wBACTrC,MAAO,WAEX,CACI8K,MAAOzI,EAAE,yBACTrC,MAAO,YAEX,CACI8K,MAAOzI,EAAE,yBACTrC,MAAO,aAYTw2B,EAAa,CAAI,CACnB1rB,MAAOzI,EAAE,0BACTrC,MAAO,eAFQ,oBAGbs1B,MAAMvD,KAAK,IAAI0E,IAAIJ,EAAap1B,KAAI,SAAAsxB,GAAC,OAAIA,EAAEqC,OAAOvlB,UAAQpO,KAAI,SAAAy1B,GAAK,MAAK,CAC1E5rB,MAAO4rB,EACP12B,MAAO02B,QAsBX,OACI,eAAC3rB,GAAA,EAAD,CAAMG,WAAS,EAAC2K,QAAS,EAAG7P,WAAY,SAAxC,UACI,cAAC+E,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAf,SACI,eAAC,GAAD,CACI5S,GAAG,gCACHC,QAAM,EACNzC,WAAS,EACT1L,MAAOkzB,EACPtwB,SAAU,SAACkB,GACPivB,EAAmB,CAACngB,KAAM9O,EAAM4D,OAAO1H,SAE3C4f,WAAY,CAACjS,cAAeC,KARhC,cASG2oB,EAAoBt1B,KAAI,SAAAsxB,GAAC,OAAI,cAAC3O,GAAA,EAAD,CAAwB5jB,MAAOuyB,EAAEvyB,MAAjC,SAAyCuyB,EAAEznB,OAA5BynB,EAAEvyB,eAGrD,cAAC+K,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC2c,GAAD,CAAiBliB,MAAOozB,EAAYxwB,SAAU,SAAC+zB,GAC3C5D,EAAmB,CAAC4D,KAAMA,SAGlC,cAAC5rB,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAf,SACI,eAAC,GAAD,CACI5S,GAAG,gCACHC,QAAM,EACNzC,WAAS,EACT1L,MAAOs2B,EACP1zB,SAAU,SAACkB,GACPivB,EAAmB,CAAC2D,MAAO5yB,EAAM4D,OAAO1H,SAE5C4f,WAAY,CAACjS,cAAeC,KARhC,cASG4oB,EAAcv1B,KAAI,SAAAsxB,GAAC,OAAI,cAAC3O,GAAA,EAAD,CAAwB5jB,MAAOuyB,EAAEvyB,MAAjC,SAAyCuyB,EAAEznB,OAA5BynB,EAAEvyB,eAG/C,cAAC+K,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,GAAD,UACI,cAAC,EAAD,CAAQiB,QAAS,WAAYhE,KAAM,SAAUoB,MAAO,UAC5CC,QAASyvB,EADjB,SAC+BjxB,EAAE,iC,SFzIzCowB,K,qBAAAA,E,kBAAAA,E,oBAAAA,E,qBAAAA,Q,cAYAC,K,wBAAAA,E,sBAAAA,E,oBAAAA,E,iBAAAA,Q,KG2BZ,ICVYkE,GDiBNC,GAAqB,CACvB,CAACjkB,KAAM8f,GAAkBoE,UAAWlzB,MAAO,WAC3C,CAACgP,KAAM8f,GAAkBqE,WAAYnzB,MAAO,WAC5C,CAACgP,KAAM8f,GAAkBsE,OAAQpzB,MAAO,UAGtCmwB,GAAa,SAAC,GAAwB,IAClCkD,EADiC,EAAtBnpB,IAAsB,EAAjB8Z,OACK1mB,KAMrB+yB,EAAcpyB,IAAOiD,IAAV,sMAIN,2BAAE9C,MAAiBC,UAAN,oBAAoB40B,GAAmBK,MAAK,SAAA3E,GAAC,OAAIA,EAAE3f,OAASqkB,YAA5D,aAAoB,EAAiDrzB,WAOvFuzB,EAAiB,cAAXF,EAAyB,cAAC,IAAD,CAAWzxB,MAAO,GAAIK,OAAQ,KAAoB,eAAXoxB,EAA0B,cAAC,IAAD,IAAgB,cAAC,IAAD,IAChHG,EACF,cAACnD,EAAD,UAEKkD,IAGT,OAAO,mCAmBFC,KAIHC,GAA2B,SAACh1B,GAAD,MAA0C,CA6EvE,CACInB,IAAK,OACL1D,KAAM6E,EAAE,eACR+tB,UAAW,YAAY,IACbpwB,EADY,EAAT8N,IACQ,KACXskB,EAAcpyB,IAAUyyB,GAAsB6E,QAAUj1B,EAAE,gBAAkBrC,IAAUyyB,GAAsB8E,SAAWl1B,EAAE,iBAAmBA,EAAE,iBACpJ,OACI,qBAAKgB,UAAU,iBAAf,SACK+uB,MAKjB,CACIlxB,IAAK,SACL1D,KAAM6E,EAAE,iBACR+tB,UAAW,YAAY,IACnB,EADkB,EAATtiB,IACgB,OAAlBuB,EAAP,EAAOA,KAAMrP,EAAb,EAAaA,MAEPoyB,EADW9kB,OAAO+kB,SAASryB,GACL,UA7JJ,SAACA,GAAkD,IAAnCw3B,EAAkC,uDAAN,EAC5E,OAAKlqB,OAAO+kB,SAASryB,GACdA,EAAMy3B,eAAe,KAAM,CAC9BC,sBAAuBF,IAFSx3B,EA4JMghB,CAA4B1T,OAAOtN,GAAQ,IAAOoV,IACpF,OACI,sBAAK/R,UAAU,iBAAf,UACK+uB,EADL,IACmB/iB,GAAQ,QAKvC,CACInO,IAAK,MACL1D,KAAM6E,EAAE,cACR+tB,UAAW,YAAY,IACbnkB,EADY,EAAT6B,IACM,IAETskB,GADWnmB,EAAMqB,OAAO+kB,SAASpmB,EAAIjM,OAAS,KACN,IAAdiM,EAAIjM,MAAhB,UAAiCiM,EAAIjM,MAAM4wB,QAAQ,GAAnD,YAAyD3kB,EAAIoD,MAAS+F,IAC1F,OACI,qBAAK/R,UAAU,iBAAf,SACI,+BAAO+uB,QAyBvB,CACIlxB,IAAK,UACL1D,KAAM6E,EAAE,kBACR+tB,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IAKHyW,EAAOzW,EAAG,MAAc,GACxB9N,EAAQ8N,EAAG,QACXmmB,EAAcpyB,IAAOiD,IAAV,6NACN,qBAAE9C,MAAiBC,UAAWjC,EAAQ,UAAY,oBAM7D,OACI,qBAAKqD,UAAU,iBAAf,SACKkhB,EAAO,cAACxS,GAAA,EAAD,CAAM4lB,KAAMpT,EAAZ,SACA,cAAC0P,EAAD,CAAavqB,MAAO1J,EAApB,SAA4BA,GAASoV,QAEzC,cAAC6e,EAAD,CAAavqB,MAAO1J,EAApB,SAA4BA,EAAQ43B,aAAiB53B,GAASoV,UAKlF,CACIlU,IAAK,SACL1D,KAAM6E,EAAE,iBACR+tB,UAAW,gBAAEtiB,EAAF,EAAEA,IAAK8Z,EAAP,EAAOA,OAAQ4C,EAAf,EAAeA,OAAf,OACP,qBAAKnnB,UAAU,iBAAf,SACI,cAAC,GAAD,CAAiByK,MAAK8Z,SAAQ4C,eAI1C,CACItpB,IAAK,OACL1D,KAAM6E,EAAE,eACR+tB,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IACH9N,EAAQ8N,EAAG,KAEXskB,EADW9kB,OAAO+kB,SAASryB,GAE3BhC,IAAO,IAAI41B,KAAK9lB,EAAG,MAAa,gBAAgB+lB,UAChDze,IACN,OACI,qBAAK/R,UAAU,iBAAf,SACI,+BAAO+uB,UAOrBxC,GAAc/tB,YAAOuB,IAAPvB,CAAH,8WAoBb,gBAAEG,EAAF,EAAEA,MAAF,OAAaqa,GAAc,CAACC,MAAoB,EAAbta,EAAMqN,KAAUkN,OAAqB,EAAbva,EAAMqN,UAYxDwoB,GAAmBzd,aAAgB,SAAhBA,EAA0B,SAAC/Z,GACvD,IAAMixB,EAAmB,CAErBtJ,WAAYqP,GAAyBh3B,EAAMgC,GAAG+yB,QAAO,SAAA7C,GAAC,OAAKA,EAAEuB,UAC7DhM,aAAc,SAACC,GAAD,OAAkBA,GAChCL,gBAAiB,qBAAEC,aAEhBI,EAAmC1nB,EAAnC0nB,QAASmN,EAA0B70B,EAA1B60B,WAAYC,EAAc90B,EAAd80B,WAC5B,EAAwBr1B,IAAMuK,SAAS,GAAvC,oBAAOykB,EAAP,KAAa0G,EAAb,KACA,EAAkC11B,IAAMuK,SAAmC0d,GAA3E,oBAAO0N,EAAP,KAAkBC,EAAlB,KACA,EAAoC51B,IAAMuK,SAASooB,GAAsBQ,UAAzE,oBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCrzB,IAAMuK,SAAmC,CAAC,GAAI,KAAlF,oBAAO+oB,EAAP,KAAmBC,EAAnB,KACA,EAAsCvzB,IAAMuK,SAAiB,cAA7D,oBAAOisB,EAAP,KAAoBwB,EAApB,KAEM/I,EAAWmG,EAAaA,EAAWnG,SAAW,GAEpDrW,cAAqB,WACjBgd,EAAa3N,KACd,CAACA,IAEJ,IAAM4N,EAAgB71B,IAAMC,aAAY,kBAAMm1B,EACxCO,EAAUhM,OAAOqF,EAAO,GAAKC,EAAUD,EAAOC,GAC9C0G,IACA,CAAC3G,EAAMoG,EAAYnG,EAAU0G,IAE7BG,EAAa91B,IAAMC,aAAY,YAKQ,IAJHm2B,EAIE,EAJFA,UAIE,IAHFJ,sBAGE,MAHe5C,EAGf,MAFF6C,sBAEE,MAFe3C,EAEf,MADF2E,uBACE,MADgBzB,EAChB,EACpCN,EAAajO,GAAW,GAI5B,GAHI+N,IAAmBrD,GAAsBQ,WACzC+C,EAAaA,EAAWZ,QAAO,SAAA7C,GAAC,OAAIA,EAAEyF,OAASlC,MAE/CC,EAAgB,IAAOA,EAAgB,GAAK,CAC5C,IAAMkC,EAAY3qB,OAAOtP,IAAO+3B,EAAgB,IAAKmC,OAAO,MACtDC,EAAU7qB,OAAOtP,IAAO+3B,EAAgB,IAAKmC,OAAO,MAC1DlC,EAAaA,EAAWZ,QAAO,SAAA7C,GAAC,OAAIA,EAAEwC,KAAOoD,GAAW5F,EAAEwC,KAAOkD,KAE7C,eAApBF,IACA/B,EAAaA,EAAWZ,QAAO,SAAA7C,GAAC,OAAIA,EAAEqC,OAAOvlB,OAAS0oB,MAExC,WAAd7B,GACAV,EAAQ,GAEZE,EAAaM,KACd,CAACjO,EAASqL,EAAYF,EAAYoD,IAE/BvD,EAAqBjzB,IAAMC,aAAY,YAAkE,IAAD,IAA/D6S,YAA+D,MAAxDsgB,EAAwD,MAA5CyD,YAA4C,MAArCvD,EAAqC,MAAzBsD,aAAyB,MAAjBJ,EAAiB,EAC1GnD,EAAcvgB,GACdygB,EAAcsD,GACdmB,EAAepB,GACfd,EAAW,CACPM,UAAWA,IAAUd,OACrBU,eAAgBljB,EAChBmjB,eAAgBY,EAChBoB,gBAAiBrB,MAEtB,CAACd,EAAYxC,EAAYF,EAAYoD,IAElChD,EAAcxzB,IAAMC,aAAY,WAClCozB,EAAcV,GAAsBQ,UACpCI,EAAc,CAAC,KAAM,OACrByE,EAAe,cACflC,EAAW,CACPM,UAAWA,IAAUd,OACrBU,eAAgBrD,GAAsBQ,SACtC8C,eAAgB,CAAC,KAAM,MACvBgC,gBAAiB,iBAEtB,CAACnC,IAEEO,EAAmBr2B,IAAMC,aAAY,SAAC+uB,GACxC0G,EAAQ1G,GACR8G,EAAW,CAACM,UAAWA,IAAUpH,KAAMsH,SAAUtH,MAClD,CAAC8G,IAEJ,OAAO,eAAC,GAAD,WACFT,GACG,cAAC/X,GAAD,UACI,cAAC,GAAD,CACIiZ,aAActO,EACdqL,WAAYA,EACZF,WAAYA,EACZoD,YAAaA,EACbvD,mBAAoBA,EACpBO,YAAaA,MAIzB,cAAC,GAAD,sDAAehC,GAAgBjxB,GAA/B,IAAsC0nB,QAAS4N,QAC9CT,GACG,cAAC,GAAD,CAAiBpG,KAAMA,EAAMC,SAAUA,EAAUC,MAAOyG,EAAUpwB,OAAQwpB,aAAcsH,U,qBCpYxFS,K,4BAAAA,E,SAAAA,Q,KAKL,I,YCsCKwB,GAUAC,GDhDCvF,GAAS1Y,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YAIuC,IAHlC/X,EAGiC,EAHjCA,EAEA0wB,EACiC,EADjCA,mBAWlE,EAAgDjzB,IAAMuK,UAAS,GAA/D,oBAAOiuB,EAAP,KAAyBC,EAAzB,KACA,EAAsCz4B,IAAMuK,UAAS,GAArD,oBAAOmuB,EAAP,KAAoBC,EAApB,KAEMC,EAAsB54B,IAAM+G,OAAOyxB,GACnCK,EAAiB74B,IAAM+G,OAAO2xB,GAE9BI,EAAuB94B,IAAMC,aAAY,SAAC6S,EAAoB9O,GAC5D8O,IAASgkB,GAAaiC,aACtBN,EAAoBz0B,EAAM4D,OAAOoxB,SAEjCL,EAAe30B,EAAM4D,OAAOoxB,WAEjC,IAEGC,EAAmBj5B,IAAMC,aAAY,WAEvC,IAAMi5B,EAAwBN,EAAoB3xB,QAC5CkyB,EAAmBN,EAAe5xB,QACxCgsB,EAAmB,CAEfmG,qBAAsBF,EACtBG,gBAAiBF,MAEtB,CAAClG,IAEJ,OACI,eAAChoB,GAAA,EAAD,CAAMG,WAAS,EAAC2K,QAAS,EAAzB,UAkBI,cAAC9K,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,GAAD,CAAkBrB,MAAO,CAACR,YAAa,GACrBsK,QAAS,cAACorB,GAAA,EAAD,CAAUN,QAASR,EAAkBe,YAAa,cAAC,IAAD,IACxClT,KAAM,cAAC,IAAD,IACNviB,MAAM,UAAUhB,SAAU,SAACkB,GAC1C80B,EAAqBhC,GAAaiC,aAAc/0B,GAChD40B,EAAoB3xB,QAAUjD,EAAM4D,OAAOoxB,QAC3CC,OACEjuB,MAAOzI,EAAE,8BAGrC,cAAC0I,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,GAAD,CACIyI,QAAS,cAACorB,GAAA,EAAD,CAAUN,QAASN,EAAaa,YAAa,cAAC,IAAD,IAAgBlT,KAAM,cAAC,IAAD,IACzDviB,MAAM,UAAUhB,SAAU,SAACkB,GAC1C80B,EAAqBhC,GAAa0C,GAAIx1B,GACtC60B,EAAe5xB,QAAUjD,EAAM4D,OAAOoxB,QACtCC,OACEjuB,MAAOzI,EAAE,8BC/F7ButB,GAAc/tB,YAAOuB,IAAPvB,CAAH,iTAgBb,gBAAEG,EAAF,EAAEA,MAAF,OAAaqa,GAAc,CAACC,MAAoB,EAAbta,EAAMqN,KAAUkN,OAAqB,EAAbva,EAAMqN,UAW/DkqB,IARoB13B,YAAOuB,IAAPvB,CAAH,uHACL,mBAA0B,IAA1B,EAAEG,MAAiBqN,QAEpB,mBAA0B,EAA1B,EAAErN,MAAiBqN,QAClB,mBAA0B,EAA1B,EAAErN,MAAiBqN,QAIlBxN,YAAOkJ,KAAPlJ,CAAH,4GAGO,qBAAEG,MAAiBqN,KAAO,O,SA2BrC+oB,K,gBAAAA,E,SAAAA,Q,cAUAC,K,UAAAA,E,iBAAAA,Q,KA+BL,I,MC3EK7J,GD2ECgL,GAAcpf,aAAgB,SAAhBA,EAA0B,SAAC/Z,GAClD,IACIgC,EAUAhC,EAVAgC,EACA6yB,EASA70B,EATA60B,WACAnN,EAQA1nB,EARA0nB,QACAmJ,EAOA7wB,EAPA6wB,oBACAuI,EAMAp5B,EANAo5B,YACAC,EAKAr5B,EALAq5B,cACAC,EAIAt5B,EAJAs5B,eACAC,EAGAv5B,EAHAu5B,eAOJ,GAJIv5B,EAFAw5B,YAM4CxvB,oBAAS,IAAzD,oBAAOiuB,EAAP,KAAyBC,EAAzB,KACA,EAAsCluB,oBAAS,GAA/C,oBAAOmuB,EAAP,KAAoBC,EAApB,KACA,EAAkCpuB,mBAA8B,IAAhE,oBAAOorB,EAAP,KAAkBC,EAAlB,KACA,EAAwBrrB,mBAAS,GAAjC,oBAAOykB,EAAP,KAAa0G,EAAb,KACMzG,EAAWmG,EAAaA,EAAWnG,SAAW,GAE7CtyB,EAAYgD,IAAZhD,SAEDq9B,GADQC,eACKllB,yBAAc,CAACrO,QAAS,UAAWsO,QAAQ,oBAE9DhO,qBAAU,WACN4uB,EAAa3N,GAAWuN,MAAMC,QAAQxN,GAAWA,EAAU,MAC5D,CAACA,IAEJ,IAAMiS,EAAmBj6B,uBAAY,WACjC,OACI,sBAAKmE,MAAO,CAAE0K,aAAc,WAA5B,UACI,cAACgV,GAAA,EAAD,CAAU5jB,MAAO,EAAjB,SAAoB,cAACqO,GAAA,EAAD,UAAehM,EAAE,gBACrC,cAACuhB,GAAA,EAAD,CAAU5jB,MAAO,EAAGiF,UAAU,EAA9B,SAAoC,cAACoJ,GAAA,EAAD,UAAehM,EAAE,qBAG9D,IAOG43B,EAAoBl6B,uBAAY,WAClC,OAEQ,aADJ,CACK,IAAD,CAAUywB,OAAQ,cAG3B,IAsJGc,GAnJF,2BAAuB7D,uBAAYqM,IAAnC,aACI,cAAC,IAAD,CAAUtJ,OAAQ,cAKtB,yBACIntB,UAAW,eACP62B,sBAAWJ,IAFnB,IAGI3jB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBhF,gBAAiB,CACb+E,SAAU,MACVC,WAAY,SATpB,SAeA,cAACjT,EAAA,EAAD,CAAKyC,OAAQ,IAAKL,MAAO,IAAzB,+BA8HqB,CAErBwiB,WA5HwB,SAAC3lB,GAAD,MAA0C,CAClE,CACInB,IAAK,QACL1D,KAAM6E,EAAE,cACR+tB,UAAW,YAAoB,IACrBsG,EADoB,EAAjB5oB,IAAiB,EAAZ8Z,OACY1mB,KACpBi5B,EAAct4B,YAAOuB,IAAPvB,CAAH,kFAGjB,OAAO,cAACs4B,EAAD,UAAczD,EAAM12B,UAGnC,CACIkB,IAAK,SACL1D,KAAM6E,EAAE,gBAGZ,CACInB,IAAK,YACL1D,KAAM6E,EAAE,mBAEZ,CACInB,IAAK,SACL1D,KAAM6E,EAAE,gBAGZ,CACInB,IAAK,UACL1D,KAAM6E,EAAE,gBAER+tB,UAAW,YAAY,IACbsG,EADY,EAAT5oB,IACQ,MAEXssB,GADO1D,EAAM9jB,KAASwlB,GAAUkB,GACnB5C,EAAM12B,MAAM+U,MAAM,MACrCqlB,EAAWC,OAAO,EAAG,GACND,EAAWE,KAAK,KAA/B,IACMC,EAAa7D,EAAM12B,MAEzB,OACI,eAACu5B,GAAD,CAAYruB,WAAS,EAAC2K,QAAS,EAAG5P,eAAgB,aAAcD,WAAY,SAA5E,UACQ,cAAC+E,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,EAAD,CAAQiB,QAAS,OAAQhE,KAAM,SAAUoB,MAAO,UACxCC,QAAS,kBAAM61B,EAAca,IADrC,SACmDl4B,EAAE,oBAEzD,cAAC0I,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,EAAD,CAAQiB,QAAS,OAAQhE,KAAM,SAAUoB,MAAO,UACxCC,QAAS,kBAAM81B,EAAeY,IADtC,SACoDl4B,EAAE,qBAE1D,cAAC0I,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,EAAD,CAAQiB,QAAS,OAAQhE,KAAM,SAAUoB,MAAO,UACxCC,QAAS,kBAAM+1B,EAAeW,IADtC,SACoDl4B,EAAE,qBAE1D,cAAC0I,GAAA,EAAD,CAAMxF,MAAI,EAAC9B,UAAW,EAAtB,SACI,cAAC,GAAD,CACImP,KAAMga,GAAYoI,MAClBlgB,QAAS,YACTzR,UAAW,cACX8gB,SAAU8V,IACV/M,eAAgB8M,IAChB7jB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBhF,gBAAiB,CACb+E,SAAU,MACVC,WAAY,mBA2DhCmkB,CAAoBn4B,GAAG+yB,QAAO,SAAA7C,GAAC,OAAKA,EAAEuB,UAClDhM,aAAc,SAACC,GAAD,OAAkBA,GAChCL,gBAAiB,qBAAEC,cAGjBgO,EAAgB51B,uBAAY,kBAAMm1B,EAClCO,EAAUhM,OAAOqF,EAAO,GAAKC,EAAUD,EAAOC,GAC9C0G,IACA,CAAC3G,EAAMC,EAAUmG,EAAYO,IAE7BG,EAAa71B,uBAAY,YAKQ,IAJHm2B,EAIE,EAJFA,UAIE,IAFFgD,4BAEE,MAFqBZ,EAErB,MADFa,uBACE,MADgBX,EAChB,EAE9BxC,EAAcjO,GAAaA,EAAQ1iB,OAAU0iB,EAAU,GAMvDmR,IACAlD,EAAaA,EAAWZ,QAAO,SAAA7C,GAAC,OAAKA,EAAEsG,iBAEvCM,IACAnD,EAAaA,EAAWZ,QAAO,SAAA7C,GAAC,OAAIA,EAAEmE,MAAM9jB,OAASwlB,GAAUqC,WAEjD,WAAdvE,GACAV,EAAQ,GAEZE,EAAaM,KACd,CAACjO,EAAgCuQ,EAAkBE,IAEhDzF,EAAqBhzB,uBAAY,YAA+D,IAA5Cm5B,EAA2C,EAA3CA,qBAAsBC,EAAqB,EAArBA,gBAE5EZ,EAAoBW,GACpBT,EAAeU,GACfvD,EAAW,CAACM,UAAWA,IAAUd,OAA8C8D,uBAAsBC,sBACtG,CAACvD,IAEEO,EAAmBp2B,uBAAY,SAAC+uB,GAClC0G,EAAQ1G,GACR8G,EAAW,CAACM,UAAWA,IAAUpH,SAClC,CAAC8G,IAEE8E,EAAiB36B,uBAAY,SAACqN,GAChC,IAAMutB,EAAazL,SAASC,OAAO/hB,EAAE1F,OAAOkzB,UAAY,KAClDC,EAAe9S,GAAWuN,MAAMC,QAAQxN,GAAWA,EAAQ0B,MAAMkR,EAAYA,EAAa,IAAI15B,KAAI,SAAAsxB,GAAC,OAAIA,EAAEmE,MAAM12B,SAAS,GAC1HkxB,GACAA,EAAoB2J,KAEzB,CAAC3J,EAAqBnJ,IAEzB,OAAO,eAAC,GAAD,CAAa+S,IAAKr+B,EAAlB,UACFg9B,GACG,cAACrc,GAAD,UACI,cAAC,GAAD,CAAQiZ,aAActO,EAASgL,mBAAoBA,MAG3D,cAAC,GAAD,kEAAezB,GAAgBjxB,GAA/B,IAAsC0nB,QAAS4N,OAA/C,IAAiE/M,SAAU8R,KAC1ExF,GACG,cAAC,GAAD,CAAiBpG,KAAMA,EAAMC,SAAUA,EAAUC,MAAOyG,EAAUpwB,OAAQwpB,aAAcsH,UCvW9FxD,GAAkB9wB,YAAOkgB,GAAPlgB,CAAH,oLAUfgxB,GAAehxB,YAAOuB,IAAPvB,CAAH,2I,SASN2sB,K,UAAAA,E,YAAAA,E,sBAAAA,Q,KAML,I,YCzCKuM,GAMPC,GDmCQlI,GAAS1Y,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YAQvB,IAPlC/X,EAOiC,EAPjCA,EACA0lB,EAMiC,EANjCA,QACAqL,EAKiC,EALjCA,WACAF,EAIiC,EAJjCA,WACA+H,EAGiC,EAHjCA,WACA3H,EAEiC,EAFjCA,YACAP,EACiC,EADjCA,mBAEEmI,EAAsB,CACxB,CACIpwB,MAAOzI,EAAE,4BACTrC,MAAO,aAEX,CACI8K,MAAOzI,EAAE,uBACTrC,MAAO,OAEX,CACI8K,MAAOzI,EAAE,wBACTrC,MAAO,SAITm7B,EAAcpT,EAAQ9mB,KAAI,SAAAsE,GAAI,gBAAOA,EAAKqvB,OAAO7C,KAAK7wB,IAAxB,cAAiCqE,EAAKqvB,OAAOnsB,GAAGvH,QAC9Ek6B,EAAoB,CACtB,CACItwB,MAAOzI,EAAE,uBACTrC,MAAO,QAHW,oBAKnBs1B,MAAMvD,KAAK,IAAI0E,IAAI0E,IAAcl6B,KAAI,SAACovB,GAAD,MAAmB,CACvDvlB,MAAOulB,EACPrwB,MAAOqwB,QAIf,OACI,eAACtlB,GAAA,EAAD,CAAMG,WAAS,EAAC2K,QAAS,EAAG7P,WAAY,SAAxC,UACI,cAAC+E,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAf,SACI,eAAC,GAAD,CACI5S,GAAG,2BACHC,QAAM,EACNzC,WAAS,EACT1L,MAAOkzB,EACPtwB,SAAU,SAACkB,GAEPivB,EAAmB,CAACngB,KAAM9O,EAAM4D,OAAO1H,SAE3C4f,WAAY,CAACjS,cAAeC,KAThC,cAUGstB,EAAoBj6B,KAAI,SAAAsxB,GAAC,OAAI,cAAC3O,GAAA,EAAD,CAAwB5jB,MAAOuyB,EAAEvyB,MAAjC,SAAyCuyB,EAAEznB,OAA5BynB,EAAEvyB,eAGrD,cAAC+K,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC2c,GAAD,CAAiBliB,MAAOozB,EAAYxwB,SAAU,SAAC+zB,GAE3C5D,EAAmB,CAAC4D,KAAMA,SAGlC,cAAC5rB,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAf,SACI,eAAC,GAAD,CACI5S,GAAG,2BACHC,QAAM,EACNzC,WAAS,EACT1L,MAAOi7B,EACPr4B,SAAU,SAACkB,GACPivB,EAAmB,CAAE1C,KAAMvsB,EAAM4D,OAAO1H,SAE5C4f,WAAY,CAACjS,cAAeC,KARhC,cASGwtB,EAAqBn6B,KAAI,SAAAsxB,GAAC,OAAI,cAAC3O,GAAA,EAAD,CAAwB5jB,MAAOuyB,EAAEvyB,MAAjC,SAAyCuyB,EAAEznB,OAA5BynB,EAAEvyB,eAGtD,cAAC+K,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,GAAD,UACI,cAAC,EAAD,CAAQiB,QAAS,WAAYhE,KAAM,SAAUoB,MAAO,UAC5CC,QAASyvB,EADjB,SAC+BjxB,EAAE,gCEtC/CutB,GAAc/tB,YAAOuB,IAAPvB,CAAH,wbAMC,SAACxB,GAAD,OAAgBA,EAAMg7B,iBAWlC,gBAAEr5B,EAAF,EAAEA,MAAF,OAAaqa,GAAc,CAACC,MAAoB,EAAbta,EAAMqN,KAAUkN,OAAqB,EAAbva,EAAMqN,UAGjEisB,GAAsBz5B,YAAOuB,IAAPvB,CAAH,8BAGnB24B,GAAsB,SAACn4B,EAAck5B,GAAf,MAAiF,CACzG,CACIr6B,IAAK,OACL1D,KAAM6E,EAAE,kBACR+tB,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IAET,EAAmBA,EAAG,OAAfikB,EAAP,EAAOA,KAAMtpB,EAAb,EAAaA,GACP+yB,EAAYzJ,EAAK/xB,MAAQghB,aAA4B1T,OAAOykB,EAAK/xB,QAAUoV,IAC3EqmB,EAAUhzB,EAAGzI,MAAQghB,aAA4B1T,OAAO7E,EAAGzI,QAAUoV,IAE3E,OACI,qBAAK/R,UAAU,iBAAf,SACI,cAACi4B,GAAD,CAAgBt7B,MAAO8N,EAAG,KAA1B,mBACQ0tB,EADR,YACqBzJ,EAAK7wB,IAD1B,mBACwCu6B,EADxC,YACmDhzB,EAAGvH,WAoBtE,CACIA,IAAK,QACL1D,KAAM6E,EAAE,mBACR+tB,UAAW,YAAY,IACZpwB,EADW,EAAT8N,IACU,MAAZ9N,MACDoyB,EAAcpyB,EAAK,YAAQghB,aAA4BhhB,IAAWoV,IACxE,OACI,qBAAK/R,UAAU,iBAAf,SACK+uB,MAQjB,CACIlxB,IAAK,MACL1D,KAAM6E,EAAE,iBACR+tB,UAAW,YAAY,IACnB,EADkB,EAATtiB,IACe,IAAjB5M,EAAP,EAAOA,IAAKlB,EAAZ,EAAYA,MACZ,OACI,qBAAKqD,UAAU,iBAAf,mBACQrD,EADR,YACiBkB,OAK7B,CACIA,IAAK,OACL1D,KAAM6E,EAAE,kBAER+tB,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IACHinB,EAAO/2B,IAAO,IAAI41B,KAAK9lB,EAAG,MAAa,gBAAgB+lB,UAC7D,OACI,qBAAKxwB,UAAU,iBAAf,SACK0xB,QAOR2G,GAAathB,aAAgB,SAAhBA,EAA0B,SAAC/Z,GACjD,IAAOgC,EAAqDhC,EAArDgC,EAAG6yB,EAAkD70B,EAAlD60B,WAAYC,EAAsC90B,EAAtC80B,WAAYpN,EAA0B1nB,EAA1B0nB,QAAS8H,EAAiBxvB,EAAjBwvB,cAC3C,EAAoC/vB,IAAMuK,SAASmkB,GAAiByE,UAApE,oBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCrzB,IAAMuK,SAAmC,CAAC,KAAM,OAApF,oBAAO+oB,EAAP,KAAmBC,EAAnB,KACA,EAAoCvzB,IAAMuK,SAAS,OAAnD,oBAAO4wB,EAAP,KAAmBU,EAAnB,KACA,EAAwB77B,IAAMuK,SAAS,GAAvC,oBAAOykB,EAAP,KAAa0G,EAAb,KACA,EAAkC11B,IAAMuK,SAA6B0d,GAArE,oBAAO0N,EAAP,KAAkBC,EAAlB,KAEMpE,GADa7xB,IAAZ5C,SACkB,CACrBmrB,WAAYwS,GAAoBn4B,GAAa+yB,QAAO,SAAA7C,GAAC,OAAKA,EAAEuB,UAC5DhM,aAAc,SAACC,GAAD,OAAkBA,GAChCL,gBAAiB,qBAAEC,YACnBzjB,MAAO,CACH6K,gBAAiB,gBAAE9M,EAAF,EAAEA,UAAF,gBAAyBA,EAAUib,SAG5DxE,cAAqB,WACjBgd,EAAa3N,KACd,CAACA,IAEJ,IAAMgH,EAAWmG,EAAaA,EAAWnG,SAAW,GAE9C4G,EAAgB71B,IAAMC,aAAY,kBAAMm1B,EACxCO,EAAUhM,OAAOqF,EAAO,GAAKC,EAAUD,EAAOC,GAC9C0G,IACA,CAAC3G,EAAMC,EAAUmG,EAAYO,IAE7BG,EAAa91B,IAAMC,aAAY,YAK9B,IAJHm2B,EAIE,EAJFA,UAIE,IAHFJ,sBAGE,MAHe5C,EAGf,MAFF6C,sBAEE,MAFe3C,EAEf,MADFwI,sBACE,MADeX,EACf,EACEjF,EAAajO,GAAoB,GAIrC,GAHI+N,IAAmBtH,GAAiByE,WACpC+C,EAAaA,EAAWZ,QAAO,SAAA7C,GAAC,OAAIA,EAAEyF,QAAUlC,IAAmBrC,IAAWC,IAAMD,IAAWC,IAAMD,IAAWoI,UAEhH9F,EAAe,IAAMA,EAAe,GAAI,CACxC,IAAMkC,EAAY3qB,OAAOtP,IAAO+3B,EAAe,IAAImC,OAAO,MACpDC,EAAU7qB,OAAOtP,IAAO+3B,EAAe,IAAImC,OAAO,MACxDlC,EAAaA,EAAWZ,QAAO,SAAA7C,GAAC,OAAIA,EAAEwC,KAAOoD,GAAW5F,EAAEwC,KAAOkD,KAE9C,QAAnB2D,IACA5F,EAAaA,EAAWZ,QAAO,SAAA7C,GAE3B,MADU,UAAMA,EAAEqC,OAAO7C,KAAK7wB,IAApB,cAA6BqxB,EAAEqC,OAAOnsB,GAAGvH,OACnC06B,MAGN,WAAd1F,GACAV,EAAQ,GAEZE,EAAaM,KACd,CAACjO,EAASqL,EAAYF,EAAY+H,IAE/BlI,EAAqBjzB,IAAMC,aAAY,YAAgE,IAAD,IAA7D6S,YAA6D,MAAtDsgB,EAAsD,MAA1CyD,YAA0C,MAAnCvD,EAAmC,MAAvB/C,YAAuB,MAAhB4K,EAAgB,EACxG9H,EAAcvgB,GACdygB,EAAcsD,GACdgF,EAActL,GACduF,EAAW,CACPM,UAAWA,IAAUd,OACrBU,eAAgBljB,EAChBmjB,eAAgBY,EAChBiF,eAAgBvL,MAErB,CAACuF,EAAYxC,EAAYF,EAAY+H,IAElC9E,EAAmBr2B,IAAMC,aAAY,SAAC+uB,GACxC0G,EAAQ1G,GACR8G,EAAW,CAACM,UAAWA,IAAUpH,KAAMsH,SAAUtH,MAClD,CAAC8G,IAcJ,OAAO,eAAC,GAAD,CAAayF,cAAexL,EAA5B,UACFsF,GACG,cAAC/X,GAAD,UACI,cAAC,GAAD,CACI2K,UACAgL,qBACAG,aACAE,aACA6H,aACA3H,YArBI,WAChBH,EAAc3E,GAAiByE,UAC/BI,EAAc,CAAC,KAAM,OACrBsI,EAAc,OACd/F,EAAW,CACPM,UAAW,SACXJ,eAAgBtH,GAAiByE,SACjC8C,eAAgB,CAAC,KAAM,MACvB6F,eAAgB,aAiBpB,cAAC,GAAD,aAAOv4B,UAAW,cAAlB,uCAAwCiuB,GAAgBjxB,GAAxD,IAA+D0nB,QAAS4N,QACvET,GACG,cAAC,GAAD,CAAiBpG,KAAMA,EAAMC,SAAUA,EAAUC,MAAOyG,EAAUpwB,OAAQwpB,aAAcsH,U,uFCzN9F2F,GAAYj6B,YAAOuB,IAAPvB,CAAH,gCAGT+tB,GAAc/tB,YAAOuB,IAAPvB,CAAH,8PAWb,gBAAEG,EAAF,EAAEA,MAAF,OAAaqa,GAAc,CAACC,MAAoB,EAAbta,EAAMqN,KAAUkN,OAAqB,EAAbva,EAAMqN,UAIxD0sB,GAAaj8B,IAAMiZ,MAAK,YAAmD,IAAtBjL,EAAqB,EAArBA,IACvD3Q,EAAYsC,IAAZtC,SACP,IAAI2Q,IAAQA,EAAIkuB,YAAcluB,EAAImuB,UAC9B,OAAO,cAACH,GAAD,IAEX,IAAOE,EAA2CluB,EAA3CkuB,UAAWC,EAAgCnuB,EAAhCmuB,UAAWC,EAAqBpuB,EAArBouB,MAAOC,EAAcruB,EAAdquB,WAC9BC,EAAiBj/B,EAAU6+B,EAAU7pB,YACrCkqB,EAAiBl/B,EAAU8+B,EAAU9pB,YAC3C,OAAO,cAAC2pB,GAAD,CAAWr2B,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,gBAAiBD,WAAY,SAA/F,SAEH,eAAC5C,EAAA,EAAD,CAAKqC,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,SAAUD,WAAY,SAAlF,UACI,cAAC5C,EAAA,EAAD,CAAKC,UAAW,YAAawC,OAAQ,6BAA+BtC,SAAU,WAAaC,OAAQ,GAC9FgC,MAAO,6BAA8BQ,WAAY,SAAUC,eAAgB,SADhF,SAEKm2B,EACG,cAAC,IAAD,CAAkBhb,KAAMgb,EAAU/a,EAAGC,KAAM8a,EAAUn9B,EACnCsiB,UAAW6a,EAAUv2B,OACrB2b,SAAU4a,EAAU52B,MAAOhD,KAAM,GACjCgE,QAAQ,WAAWib,IAAG,OAAEua,QAAF,IAAEA,OAAF,EAAEA,EAAW7pB,WAEnCuP,IAAK,6JACrB,cAACC,GAAA,EAAD,CAAQnb,QAAQ,WAAWib,IAAG,OAAEua,QAAF,IAAEA,OAAF,EAAEA,EAAW7pB,WAAsBjO,MAAO,CACtE2B,OAAQ,6BACRL,MAAO,8BAGDkc,IAAK,qCAGvB,eAACte,EAAA,EAAD,CAAKC,UAAW,YAAawC,OAAQ,6BAAgCtC,SAAU,WAAaC,OAAQ,GAAM4C,MAAO,EAC5GZ,MAAO,6BAA8BQ,WAAY,SACjDC,eAAgB,SAFrB,UAEgCo2B,EAC5B,cAAC,IAAD,CAAkBjb,KAAMib,EAAUhb,EAAGC,KAAM+a,EAAUp9B,EAAGsiB,UAAW8a,EAAUx2B,OAC3D2b,SAAU6a,EAAU72B,MAAOhD,KAAM,GACjCgE,QAAQ,WAAWib,IAAG,OAAEwa,QAAF,IAAEA,OAAF,EAAEA,EAAW9pB,WAEnCuP,IAAK,6JACrB,cAACC,GAAA,EAAD,CAAQnb,QAAQ,WAAWib,IAAG,OAAEwa,QAAF,IAAEA,OAAF,EAAEA,EAAW9pB,WAAsBjO,MAAO,CACtE2B,OAAQ,6BACRL,MAAO,8BAGDkc,IAAK,mCAbnB,OAcA,cAACrb,GAAA,EAAD,CAAYG,QAAS,UAAWf,QAAS,OAAQ6P,cAAe,SAAUrR,WAAY,EAAG8B,UAAW,MACxFkF,aAAc,EAD1B,SAEI,eAAC5E,GAAA,EAAD,CAAYN,UAAW,KAAMnC,MAAO,cAAe8F,MAAO,OAA1D,UACI,cAACrD,GAAA,EAAD,CAAYN,UAAW,OAAQ1C,UAAW,YAA1C,gBACK24B,QADL,IACKA,OADL,EACKA,EAAW7pB,aAEhB,cAAC9L,GAAA,EAAD,CAAYN,UAAW,IAAvB,eACA,cAACM,GAAA,EAAD,CAAYN,UAAW,OAAQ2D,MAAO,MAAtC,gBACKuyB,QADL,IACKA,OADL,EACKA,EAAW9pB,kBAQvBgqB,EAAa,eAAC91B,GAAA,EAAD,CAAYN,UAAW,OAAQkF,aAAc,EAA7C,UAAgD,cAAC,IAAD,IAAhD,YAA8E1B,EAC3F2yB,EAAQ,cAAC,GAAD,SAAgB3yB,UAM/Bye,GAAa,WAA4CnrB,GAA5C,IAAuBwF,EAAvB,EAAuBA,EAAvB,MAA8F,CAC7G,CACInB,IAAK,QACLwrB,UAAU,EACVlnB,MAAO,OACPwQ,SAAU,IACVxY,KAAM6E,EAAE,aACR+tB,UAAW,YAAwC,IAAtCtiB,EAAqC,EAArCA,IACT,OAAO,cAAC1K,EAAA,EAAD,CAAKwC,KAAM,EAAGC,OAAQ,OAAQqb,aAAc,SAAUzb,QAAS,OAA/D,SACH,cAACs2B,GAAD,CAAYjuB,IAAKA,QAK7B,CACI5M,IAAK,YACLwrB,UAAU,EACVlnB,MAAO,OACPhI,KAAM6E,EAAE,kBACR+tB,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IACFwuB,EAAgCxuB,EAAhCwuB,aAAP,EAAuCxuB,EAAlByuB,kBAArB,MAAkC,EAAlC,EACA,OAAO,eAACl2B,GAAA,EAAD,CACHN,UAAW,OADR,cAEqB,qBAAjBu2B,GACqB,qBAAjBA,EAD2BlnB,IACoBvY,IAAaC,IAASC,OAASy/B,IAASC,OAASzb,aAA4Bsb,GAAgBE,IAASE,KAAO1b,aAA4Bub,QAK/M,CACIr7B,IAAK,WACLwrB,UAAU,EACVlnB,MAAO,OACPwQ,SAAU,IACVxY,KAAM6E,EAAE,sBACR+tB,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IAKF6uB,GAAU7uB,EAAI8uB,YAAc9uB,EAAI8uB,WAAWD,OAAS7uB,EAAI8uB,WAAa,CAACD,OAAQvnB,MAA9EunB,OACP,OAAO,eAACt2B,GAAA,EAAD,CACHN,UAAW,OADR,cACkB42B,EADlB,IAC2B7uB,EAAI8uB,YAAc9uB,EAAI8uB,WAAWD,OAAS7uB,EAAIkuB,UAAU7pB,WAAa,QAqB/G,CACIjR,IAAK,MACLwrB,UAAU,EACVlvB,KAAM6E,EAAE,YACRmD,MAAO,OACPq3B,SAAU,GACVzM,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IACHgvB,OAAyBvzB,WAAZuE,EAAIgvB,KAAqBhvB,EAAIgvB,IAApC,OAA0ChvB,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAKgvB,IAAM1nB,IACjE,OAAO,eAAC/O,GAAA,EAAD,CACHN,UAAW,OADR,cACkB+2B,IAAQ1nB,KAAgC,qBAAR0nB,EAAsB1nB,IAAgB0nB,EAAM,SAG7G,CACI57B,IAAK,QACL1D,KAAM6E,EAAE,eAERmD,MAAO,OACPqrB,gBAAgB,SAChBkM,UAAW,2BACX3M,UAAW,YAAY,IAAD,IAATtiB,EAAS,EAATA,IACT,OAAO,cAAC,EAAD,CACH6pB,KAAI,UAAKqF,OAAOC,SAAStF,KAArB,4BAA+C,OAAH7pB,QAAG,IAAHA,GAAA,UAAAA,EAAKkuB,iBAAL,eAAgB7pB,YAAa,KAA7B,OAAmCrE,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAKmuB,iBAAxC,aAAmC,EAAgB9pB,aACnG9O,UAAW,MAAOmD,QAAS,WAAYhE,KAAM,QAF1C,SAGFH,EAAE,wBAMN66B,GAAa9iB,aAAgB,SAAhBA,EACtB,YASiF,IARxC/X,EAQuC,EARvCA,EAAG3F,EAQoC,EARpCA,KACHuqB,EAOuC,EAPvCA,OACAkP,EAMuC,EANvCA,iBACAjB,EAKuC,EALvCA,WAKuC,IAJvCC,kBAIuC,SAHvCpN,EAGuC,EAHvCA,QAGuC,IAFvC7d,YAEuC,MAFhCC,KAAYD,KAEoB,EADpC3C,EACoC,mBAC5E,EAAgCzH,IAAMuK,SAAiB,IAAvD,oBAAO2H,EAAP,KAAiBmrB,EAAjB,KACA,EAAwBr9B,IAAMuK,UAAa,OAAJ9C,QAAI,IAAJA,OAAA,EAAAA,EAAMunB,MAAOvnB,EAAKunB,KAAO,GAAhE,oBAAOA,EAAP,KAAa0G,EAAb,KACA,EAAkC11B,IAAMuK,SAAmB0d,GAAWuN,MAAMC,QAAQxN,GAAWA,EAAU,IAAzG,oBAAO0N,EAAP,KAAkBC,EAAlB,KAEMzF,EAAU8J,eAEhBrhB,cAAqB,WACjBgd,EAAa3N,KACd,CAACA,IAEJ,IAAMuJ,EAAoC,CACtCvJ,UACAC,WAAYA,GAAW,CAAC3lB,IAAG3F,OAAMuqB,UAASnqB,IAASC,QACnD+qB,aAAc,SAACC,GAAD,OAAkBA,GAChCL,gBAAiB,qBAAEC,aAIjBoH,EAAWmG,EAAaA,EAAWnG,SAAW,GAE9C4G,EAAgB71B,IAAMC,aAAY,kBAAMm1B,EACxCO,EAAUhM,OAAOqF,EAAO,GAAKC,EAAUD,EAAOC,GAC9C0G,IACA,CAAC3G,EAAMC,EAAUmG,EAAYO,IAE7BG,EAAa91B,IAAMC,aAAY,YAA4B,IAA1Bm2B,EAAyB,EAAzBA,UAAWlkB,EAAc,EAAdA,SAC5B,WAAdkkB,GACAV,EAAQ,GAGZ,IAAI4H,EAAUrV,EAAQqN,QAAO,SAACtnB,GAC1B,GAAIA,GAAOA,EAAIkuB,UAEX,OAAO1rB,OAAO0B,EAAU,MAAMzB,KAAKzC,EAAIkuB,UAAU7pB,aAAe7B,OAAO0B,EAAU,MAAMzB,KAAKzC,EAAImuB,UAAU9pB,eAGlHujB,EAAa0H,KACd,CAACrV,IACEsV,EAAW,SAACrrB,GACd4jB,EAAW,CAACM,UAAWA,IAAUd,OAAQpjB,cAGvC+gB,EAAqBjzB,IAAMC,YAAY4K,oBAAS0yB,EAAUnzB,GAAO,CAACmzB,IAElEC,EAAoBx9B,IAAMC,aAAY,SAAC+uB,GACzC0G,EAAQ1G,GACR8G,EAAW,CAACM,UAAWA,IAAUpH,KAAMsH,SAAUtH,IACjDqH,EAAiBrH,KAClB,CAAC8G,EAAYO,IAEVtN,EAAa/oB,IAAMC,aAAY,SAACw9B,EAAczvB,GAAc,IAAD,IACvDijB,EAAQ,qCAAmC,OAAHjjB,QAAG,IAAHA,GAAA,UAAAA,EAAKkuB,iBAAL,eAAgB7pB,YAAa,KAA7B,OAAmCrE,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAKmuB,iBAAxC,aAAmC,EAAgB9pB,aAEjG8d,GAAWA,EAAQjf,KAAK,CACpB+f,eAEL,CAACd,IAEJ,OAAO,eAAC,GAAD,CAAarqB,KAAM,EAAG0P,cAAe,SAAU7P,QAAS,OAAxD,UACF0vB,GAAc,cAAC/xB,EAAA,EAAD,CAAKqC,QAAS,OAAQK,OAAQ,EAA9B,SACb,wBAAC0B,GAAA,EAAD,CAEQC,YAAapF,EAAE,eACfrC,MAAOgS,EACPpP,SAAU,SAACkB,GAAgB,IAAD,IACtBq5B,EAAW,UAACr5B,EAAM05B,qBAAP,aAAC,EAAqBx9B,OACjC+yB,EAAkB,UAACjvB,EAAM05B,qBAAP,aAAC,EAAqBx9B,QAIhDkB,IAAK,SACLmC,UAAW,SACX,aAAY,SACZsE,eAAgB,cAACC,GAAA,EAAD,CAAgBrE,SAAS,QAAzB,SACZ,cAAC,IAAD,UAIV,cAAC,GAAD,sDACO+tB,GADP,IACoBjvB,IAAG3F,OAAMuqB,UAAW1f,GADxC,IAEIwgB,QAAS4N,IACT9M,WAAY,SAAC3iB,EAAO4H,GAAR,OAAgB+a,EAAW3iB,EAAO4H,QAwBjDonB,GAAcnN,GAAWA,EAAQ1iB,OAAS,GACvC,cAAC,GAAD,CAAiBypB,KAAMA,EAAMC,SAAUA,EAAUC,MAAOyG,EAAUpwB,OACjDwpB,aAAcyO,W,SF9VnCvC,K,UAAAA,E,YAAAA,E,iBAAAA,Q,cAMPC,K,wBAAAA,E,sBAAAA,E,oBAAAA,E,iBAAAA,Q,sGGUCpL,GAAc/tB,YAAOuB,IAAPvB,CAAH,sUAcX,gBAAEG,EAAF,EAAEA,MAAF,OAAaqa,GAAc,CAACC,MAAoB,EAAbta,EAAMqN,KAAUkN,OAAqB,EAAbva,EAAMqN,UAGjE2Y,GAAa,SAAC,EAAsBnrB,GAAvB,IAAEwF,EAAF,EAAEA,EAAF,MAAgF,CAC/F,CACInB,IAAK,QACLwrB,UAAU,EACVlnB,MAAO,OACPwQ,SAAU,IACVxY,KAAM6E,EAAE,aACR+tB,UAAW,YAA+C,IAA7CtiB,EAA4C,EAA5CA,IACF8E,EAAsB9E,EAAtB8E,KAAM4E,EAAgB1J,EAAhB0J,MAAOC,EAAS3J,EAAT2J,MACpB,OAAI7E,IAASmoB,GAAavhB,IACf,eAAClO,GAAA,EAAD,CAAOC,QAAS,gBAAhB,qBAEH,cAAClF,GAAA,EAAD,CAAYN,UAAW,OAAvB,SACKyR,EAAMrF,aAHR,kBAMH,cAAC9L,GAAA,EAAD,CAAYN,UAAW,OAAvB,SACK0R,EAAMtF,gBAGRS,IAASmoB,GAAa0C,KACtB,eAACnyB,GAAA,EAAD,CAAOC,QAAS,kBAAhB,sBAEH,cAAClF,GAAA,EAAD,CAAYN,UAAW,OAAvB,SACKyR,EAAMrF,aAHR,gBAMH,cAAC9L,GAAA,EAAD,CAAYN,UAAW,OAAvB,SACK0R,EAAMtF,gBAIR,eAAC7G,GAAA,EAAD,CAAOC,QAAS,mBAAhB,sBAEH,cAAClF,GAAA,EAAD,CAAYN,UAAW,OAAvB,SACKyR,EAAMrF,aAHR,oBAMH,cAAC9L,GAAA,EAAD,CAAYN,UAAW,OAAvB,SACK0R,EAAMtF,kBAO3B,CACIjR,IAAK,aACLwrB,UAAU,EACVlnB,MAAO,OACPhI,KAAM6E,EAAE,sBACR+tB,UAAW,YAA+C,IAA7CtiB,EAA4C,EAA5CA,IACF4vB,EAA0B5vB,EAA1B4vB,YAAaC,EAAa7vB,EAAb6vB,UACpB,OAAO,eAACt3B,GAAA,EAAD,CACHN,UAAW,OADR,cAEoB,qBAAhB23B,EAA8BtoB,IACjCvY,IAAaC,IAASC,OAASy/B,IAASC,OAASzb,aAA4B0c,GAAelB,IAASE,KAAO1b,aAA4B2c,QAKxJ,CACIz8B,IAAK,cACLwrB,UAAU,EACVlnB,MAAO,OACPhI,KAAM6E,EAAE,uBACR+tB,UAAW,YAA+C,IAA7CtiB,EAA4C,EAA5CA,IACF8vB,EAAkC9vB,EAAlC8vB,QAASC,EAAyB/vB,EAAzB+vB,QAASrmB,EAAgB1J,EAAhB0J,MAAOC,EAAS3J,EAAT2J,MAChC,OAAO,eAACpR,GAAA,EAAD,CAAYN,UAAW,OAAvB,UACiB,qBAAZ63B,EAA0BxoB,IAAgBwoB,EAD/C,IACyDpmB,EAAMrF,WAD/D,MACiG,qBAAZ0rB,EAA0BzoB,IAAgBwoB,EAD/H,IACyInmB,EAAMtF,gBAI9J,CACIjR,IAAK,SACLwrB,UAAU,EACVlnB,MAAO,OACPhI,KAAM6E,EAAE,eACR+tB,UAAW,YAA+C,IAA7CtiB,EAA4C,EAA5CA,IAET,OAAO,cAACzH,GAAA,EAAD,CAAYN,UAAW,OAAvB,SACF+H,EAAImpB,WAKjB,CACI/1B,IAAK,OACLwrB,UAAU,EACVlnB,MAAO,OACPqrB,gBAAiB,iBACjBkM,UAAW,iBACXv/B,KAAM6E,EAAE,gBACR+tB,UAAW,YAA+C,IAElD0N,EADG/I,EAD8C,EAA5CjnB,IACFinB,KAOP,OAJI+I,EADgB,qBAAT/I,EACM3f,IAEApX,IAAO,IAAI41B,KAAKmB,GAAO,gBAAgBlB,UAEjD,cAACxtB,GAAA,EAAD,CAAYN,UAAW,OAAQqF,UAAW,QAA1C,SACF0yB,QASJC,GAAiB3jB,aAAgB,SAAhBA,EAA0B,YASsF,IAR7C/X,EAQ4C,EAR5CA,EAAG3F,EAQyC,EARzCA,KACHuqB,EAO4C,EAP5CA,OACAkP,EAM4C,EAN5CA,iBACAjB,EAK4C,EAL5CA,WAEAnN,GAG4C,EAJ5CoN,WAI4C,EAH5CpN,SAG4C,IAF5C7d,KACG3C,QACyC,OAFrC4C,KAAYD,KAEyB,oBACzI,EAAwBpK,IAAMuK,UAAa,OAAJ9C,QAAI,IAAJA,OAAA,EAAAA,EAAMunB,MAAOvnB,EAAKunB,KAAO,GAAhE,oBAAOA,EAAP,KAAa0G,EAAb,KACA,EAAkC11B,IAAMuK,SAAmB0d,GAAWuN,MAAMC,QAAQxN,GAAWA,EAAU,IAAzG,oBAAO0N,EAAP,KAAkBC,EAAlB,KACAhd,cAAqB,WACjBgd,EAAa3N,KACd,CAACA,IAEJ,IAAMuJ,EAAoC,CACtCvJ,UACAC,WAAYA,GAAW,CAAC3lB,IAAG3F,OAAMuqB,UAASnqB,IAASC,QACnD+qB,aAAc,SAACC,GAAD,OAAkBA,GAChCL,gBAAiB,qBAAEC,aAIjBoH,EAAWmG,EAAaA,EAAWnG,SAAW,GAE9C4G,EAAgB71B,IAAMC,aAAY,kBAAMm1B,EACxCO,EAAUhM,OAAOqF,EAAO,GAAKC,EAAUD,EAAOC,GAC9C0G,IACA,CAAC3G,EAAMC,EAAUmG,EAAYO,IAE7B6H,EAAoBx9B,IAAMC,aAAY,SAAC+uB,GACzC0G,EAAQ1G,GAERqH,EAAiBrH,KAClB,CAACqH,IAEJ,OAAO,eAAC,GAAD,WACH,cAAC,GAAD,aAAO9yB,UAAW,cAAlB,uCACOiuB,GADP,IACoBjvB,IAAG3F,OAAMuqB,UAAW1f,GADxC,IAEIwgB,QAAS4N,QAEZT,GACG,cAAC,GAAD,CAAiBpG,KAAMA,EAAMC,SAAUA,EAAUC,MAAOyG,EAAUpwB,OAAQwpB,aAAcyO,U,8BCpL9FU,GAAQn8B,IAAOiD,IAAV,qEA8BLm5B,GAA4C,CAC9C,CAAC/8B,IAAK,QAAS1D,KAAM,SACrB,CAAC0D,IAAK,OAAQ1D,KAAM,QACpB,CAAC0D,IAAK,SAAU1D,KAAM,UACtB,CAAC0D,IAAK,SAAU1D,KAAM,QACtB,CAAC0D,IAAK,SAAU1D,KAAM,UACtB,CAAC0D,IAAK,SAAU1D,KAAM,WAYpB0gC,GAA+C,SAACC,GAClD,IAAI52B,EAAO62B,eACX,OAAO,cAACJ,GAAD,UAAO,cAAC,GAAD,0CAAeG,GAAS52B,QAE7B82B,GAAUH,GAASI,KAAK,IACxBC,GAAQL,GAASI,KAAK,IACtBE,GAAaN,GAASI,KAAK,IAC3BG,GAAYP,GAASI,KAAK,IAC1BI,GAAaR,GAASI,KAAK,IACXJ,GAASI,KAAK,IAC3CD,GAAQF,KAAO,CACXpW,QAtC+B,CAC/B,CAAC,MAAO,MAAO,OAAQ,MAAO,MAAO,WACrC,CAAC,MAAO,MAAO,OAAQ,OAAQ,MAAO,WACtC,CAAC,MAAO,QAAS,OAAQ,KAAM,MAAO,WACtC,CAAC,MAAO,MAAO,OAAQ,MAAO,MAAO,SACrC,CAAC,MAAO,MAAO,OAAQ,MAAO,MAAO,WACrC,CAAC,MAAO,SAAU,QAAS,IAAK,MAAO,YACvC,CAAC,MAAO,MAAO,OAAQ,MAAO,MAAO,YAgCrCC,WAAYiW,GACZnW,aAAcA,GACdJ,gBAAiBA,IAErB6W,GAAMJ,KAAN,2BACOE,GAAQF,MADf,IAEIpW,QAAS,GACTC,WAAYiW,KAEhB,IAAMU,GAA8C,CAChD,CAACz9B,IAAK,QAAS1D,KAAM,QAASu/B,UAAW,SAACjvB,GAAD,OAAcR,OAAOQ,EAAI6uB,QAAU,GAAM,UAAY,UAC9F,CACIz7B,IAAK,OAAQ1D,KAAM,OAAQ4yB,UAAW,YAAmC,IAAjCtiB,EAAgC,EAAhCA,IAAK8Z,EAA2B,EAA3BA,OAAWvnB,EAAgB,mBACpE,OAAQ,qCACJ,cAAC,GAAD,2BAAyBA,GAAzB,IAAgCyN,IAAKA,EAAK8Z,OAAQA,EAC7BvkB,UAAWyK,EAAI1B,MAAQ,GAAK,oBAAsB,kBAClDgf,SAAU,WAC/B,qBAAK/nB,UAAU,iBAAf,SACI,8BAAMyK,EAAK8Z,EAAO1mB,cAKlC,CAACA,IAAK,SAAU1D,KAAM,SAAUkvB,UAAU,IAE9C8R,GAAWL,KAAX,2BACOE,GAAQF,MACR,CACCnW,WAAY2W,KAGpBF,GAAUN,KAAV,2BACOE,GAAQF,MACR,CACCnW,WAAYiW,GACZzV,YAAa,SAACoW,GACV,IAAO9wB,EAAO8wB,EAAP9wB,IACP,OAAO,cAACke,GAAD,aAAUZ,SAAU,SAAUF,gBAAiB,SAAC0T,GACnD,IAAMp5B,EAAK,UAA2B,IAArB8H,OAAOQ,EAAI6uB,QAAjB,KACX,OAAO,cAAC,GAAD,2BAAeiC,GAAf,IAAkBp5B,MAAOA,EAAOnC,UAAWiK,OAAOQ,EAAI6uB,QAAU,GAAK,gBAAkB,QAC3FiC,OAKnB,IAAMC,GAAyC,CAC3C,CAAC39B,IAAK,QAAS1D,KAAM,QAASu/B,UAAW,SAACjvB,GAAD,OAAcR,OAAOQ,EAAI1B,OAAS,IAAM,QAAU,QAC3F,CAAClL,IAAK,OAAQ1D,KAAM,OAAQkvB,UAAU,GACtC,CAACxrB,IAAK,SAAU1D,KAAM,SAAUkvB,UAAU,GAC1C,CAACxrB,IAAK,aAAc1D,KAAM,QAASkvB,UAAU,IAEjDgS,GAAWP,KAAX,2BACOE,GAAQF,MADf,IAEInW,WAAY6W,GACZvW,eAAgB,aAChBG,WAAW,EACXF,WAAY,SAACe,EAAmBkI,GAC5B,OAAQA,GACJ,IAAK,OACDlI,EAAaA,EAAWmI,MAAK,SAAC7Y,EAAG8Y,GAAJ,OAAU9Y,EAAG4Y,GAAaK,cAAcH,EAAGF,OACxE,MACJ,IAAK,aACL,IAAK,SACDlI,EAAaA,EAAWmI,MAAK,SAAC7Y,EAAQ8Y,GAAT,OAAoBpkB,OAAOsL,EAAG4Y,IAAgBlkB,OAAOokB,EAAGF,OAI7F,OAAOlI,KC3HR,I,YCDKwV,GDCCC,GAAa3kB,aAAgB,SAAhBA,EAA0B,YAQqE,IAP7C/X,EAO4C,EAP5CA,EACAulB,EAM4C,EAN5CA,OACA2E,EAK4C,EAL5CA,cACAC,EAI4C,EAJ5CA,SACAC,EAG4C,EAH5CA,OACAtI,EAE4C,EAF5CA,SACAgZ,EAC4C,EAD5CA,YAExE,OAAIvV,EAAO8E,SAEC,eAACtpB,EAAA,EAAD,CAAK2C,UAAW,OAAQN,QAAS,OAAQO,WAAY,SAChD3C,UAAS,+BAA0B6oB,IADxC,UAEA,eAAC9oB,EAAA,EAAD,CAAK2C,UAAW,IAAKN,QAAS,OAAQO,WAAY,SAAUnC,QAAS,SAACuJ,GAClEqf,EAAOrf,EAAEuf,SACTwQ,EAAY,cAFhB,UAIK96B,EAAE,kBACH,cAAC,GAAD,CAAgBkqB,qBAEpB,eAACnpB,EAAA,EAAD,CAAK2C,UAAW,IAAKN,QAAS,OAAQO,WAAY,SAAUnC,QAAS,SAACuJ,GAClEqf,EAAOrf,EAAEuf,SACTwQ,EAAY,WAFhB,UAIK96B,EAAE,eACH,cAAC,GAAD,CAAgBkqB,qBAEnBC,KAIF,mCAAGrI,GAAsByD,EAAOpqB,U,mBEvBzCiS,GAAS5N,IAAOiD,IAAV,qCACR,gBAAE9C,EAAF,EAAEA,MAAF,8GAIwBA,EAAMC,UAAU8G,MAJxC,4DAOa/G,EAAMC,UAAU8G,MAP7B,6GAYwB/G,EAAMC,UAAU2a,QAZxC,4DAea5a,EAAMC,UAAU2a,QAf7B,+BAwBEkL,GAAe,SAAoBC,EAAgBiX,GACrD,OAAOjX,GAAWuN,MAAMC,QAAQxN,GAAWA,EAAU,I,IAOzB3N,aAAgB,SAAhBA,EAA0B,YAIsD,IAHjD/X,EAGgD,EAHhDA,EACA0lB,EAEgD,EAFhDA,QACGxgB,EAC6C,mBAiD3G,EAAgCzH,IAAMuK,SAAS,IAA/C,oBAAO2H,EAAP,KAAiBmrB,EAAjB,KACMnV,EAA8C,CAChD,CACI9mB,IAAK,YAAa1D,KAAM,YAAakvB,UAAU,EAC/CqQ,UAAW,SAACjvB,GAAD,gBAAiBA,EAAI2O,WAChCmN,eAAgB,SAACvpB,GAAD,OAAgB,cAAC0+B,GAAD,2BAAgB1+B,GAAhB,IAAuB2R,SAAUA,EAAUmrB,YAAaA,MACxF/M,UAAW,gBAAEtiB,EAAF,EAAEA,IAAF,OAAyC,qCAChD,eAACzH,GAAA,EAAD,CAAYN,UAAW,IAAKqZ,WAAY,GAAxC,UACI,cAAC/Y,GAAA,EAAD,CAAYN,UAAW,OAAQ2D,MAAO,OAAQrG,UAAW,YAAzD,SACKyK,EAAImxB,WAET,cAAC54B,GAAA,EAAD,CAAYN,UAAW,IAAvB,eACA,cAACM,GAAA,EAAD,CAAYN,UAAW,OAAQ2D,MAAO,MAAOlD,QAAS,QAAS5C,MAAO,gBAAtE,SACKkK,EAAIoxB,aAGb,eAAC74B,GAAA,EAAD,CAAYN,UAAW,IAAKS,QAAS,QAArC,UAA+CnE,EAAE,eAAjD,IAAkEyL,EAAI6uB,eAG9E,CACIz7B,IAAK,QAAS1D,KAAM,kBAAmBkvB,UAAU,EACjDqQ,UAAW,SAACjvB,GAAD,sBAAuBA,EAAI2O,WACtC2T,UAAW,gBAAEtiB,EAAF,EAAEA,IAAF,OAAyC,qCAChD,cAACzH,GAAA,EAAD,CAAYN,UAAW,IAAK1C,UAAW,cAAe+b,WAAY,GAAlE,SACKtR,EAAI1B,QAET,cAAC/F,GAAA,EAAD,CAAYN,UAAW,IACXS,QAAS,QADrB,SAC+BsH,EAAIqxB,UAAYriC,IAASC,OAASy/B,IAASC,OAAS3uB,EAAIsxB,YAAc5C,IAASE,KAAO5uB,EAAIuxB,iBAGjI,CACIn+B,IAAK,WAAY1D,KAAM,sBAAuBkvB,UAAU,EACxDqQ,UAAW,SAACjvB,GAAD,sBAAuBA,EAAI2O,WACtC2T,UAAW,YAA0C,IAAxCtiB,EAAuC,EAAvCA,IACT,OAAO,cAAC,EAAD,CAAQzK,UAAW,eAAgBmD,QAAS,YAAahE,KAAM,QAASoB,MAAO,UAA/E,SACFkK,EAAIwxB,cAIfhO,EAAW,2BACV+M,GAAQF,MADE,IAEbrW,gBACAJ,mBACAM,aACAM,eAAgB,aAChBG,WAAW,EACXF,WAAY,SAACe,EAAmBkI,GAC5B,OAAQA,GACJ,IAAK,YACDlI,EAAaA,EAAWmI,MAAK,SAAC7Y,EAAG8Y,GAAJ,OAAU9Y,EAAG4Y,GAAaK,cAAcH,EAAGF,OACxE,MACJ,IAAK,QACL,IAAK,WACDlI,EAAaA,EAAWmI,MAAK,SAAC7Y,EAAQ8Y,GAAT,OAAoBpkB,OAAOsL,EAAG4Y,IAAgBlkB,OAAOokB,EAAGF,OAI7F,OAAOlI,KAGf,OAAO,cAAC,GAAD,UACH,cAAC,GAAD,oDAA0BjnB,KAAMkF,GAAS+pB,GAAzC,IAAsDvJ,mB,gID5JlD+W,K,UAAAA,E,YAAAA,E,iBAAAA,Q,KAUZ,I,MEeYtQ,GFbNoB,GAAc/tB,YAAOuB,IAAPvB,CAAH,8VAcb,gBAAEG,EAAF,EAAEA,MAAF,OAAaqa,GAAc,CAACC,MAAoB,EAAbta,EAAMqN,KAAUkN,OAAqB,EAAbva,EAAMqN,UAE/DkwB,GAAa19B,YAAOwE,KAAPxE,CAAH,mDACC,qBAAEG,MAAiBmN,YAAYqwB,SAG1CC,GAAY59B,YAAOuB,IAAPvB,CAAH,mMAtBG,IAyBG,qBAAEG,MAAiBmN,YAAYqwB,SAG5B,qBAAEx9B,MAAiBqN,QAIrC2Y,GAAa,SAAC,EAIuCnrB,GAJxC,IACKwF,EADL,EACKA,EACAq9B,EAFL,EAEKA,eACAC,EAHL,EAGKA,cAHL,MAIiG,CAChH,CACIz+B,IAAK,QACLwrB,UAAU,EACVlnB,MAAO,OACPwQ,SAAU,IACVxY,KAAM6E,EAAE,aACR+tB,UAAW,YAA+C,IAA7CtiB,EAA4C,EAA5CA,IACT,OAAO,cAAC2xB,GAAD,CAAWh6B,QAAS,OAAQ6P,cAAe,SAAU4L,aAAc,aAC1Djb,eAAgB,SADzB,SAEH,cAAC81B,GAAD,CAAYjuB,IAAKA,EAAI8xB,gBAMjC,CACI1+B,IAAK,YACLwrB,UAAU,EACVlnB,MAAO,OACPqrB,gBAAiB,iBACjBrzB,KAAM6E,EAAE,kBACR+tB,UAAW,YAA+C,IAA7CtiB,EAA4C,EAA5CA,IACT,IAAKA,EACD,OAAO,cAAC1K,EAAA,EAAD,CAAKqC,QAAS,OAAQQ,eAAgB,WAAYD,WAAY,WAEhB8H,EAAlD+xB,SAAkD/xB,EAAxCgyB,SAAjB,IAA2BC,EAA8BjyB,EAA9BiyB,YAAaC,EAAiBlyB,EAAjBkyB,cAClCC,EAAiBF,GAAezyB,OAAOoD,MAAMqvB,GAAgBA,EAAc,EAC3EG,EAAmBF,GAAiB1yB,OAAOoD,MAAMqvB,GAAgBC,EAAgB,EACvF,OAAO,cAAC58B,EAAA,EAAD,CAAKyC,OAAQ,OAAQJ,QAAS,OAAQQ,eAAgB,WAAYD,WAAY,SAA9E,SACH,cAACu5B,GAAD,CAAY/4B,QAAS,QAAST,UAAW,OAAQnC,MAAO,cAAeu8B,WAAY,SAAnF,cACuB52B,IAAlBy2B,EAA8B5qB,IAAgBvY,IAAaC,IAASC,OAASy/B,IAASC,OAASzb,aAA4Bkf,GACtH1D,IAASE,KAAO1b,aAA4Bif,SAoBlE,CACI/+B,IAAK,aACLwrB,UAAU,EACVlnB,MAAO,OACPhI,KAAM6E,EAAE,kBACRwuB,gBAAiB,iBACjBT,UAAW,YAA+C,IAA7CtiB,EAA4C,EAA5CA,IACT,IAAKA,EAAI8xB,YAAc9xB,EAAI8xB,UAAU5D,UACjC,OAAO,cAAC54B,EAAA,EAAD,CAAKqC,QAAS,OAAQQ,eAAgB,WAAYD,WAAY,WAEzE,MAA4E8H,EAArE8xB,UAAY5D,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,UAAYmE,EAAkCtyB,EAAlCsyB,KAAMC,EAA4BvyB,EAA5BuyB,KAA4BvyB,EAAtBwyB,QAAsBxyB,EAAbyyB,UAC/D,OAAO,eAACn9B,EAAA,EAAD,CAAKoC,MAAO,OAAQK,OAAQ,OAAQJ,QAAS,OAAQQ,eAAgB,WAAYD,WAAY,SAA7F,UAKH,eAACK,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,IAAKnC,MAAO,cAAeu8B,WAAY,SAAhF,UAEI,cAAC95B,GAAA,EAAD,CAAYN,UAAW,OAAvB,SACcib,aAA4Bof,KAC1C,cAAC/5B,GAAA,EAAD,CAAYN,UAAW,OAAvB,2BACkBi2B,QADlB,IACkBA,OADlB,EACkBA,EAAW7pB,iBAEjC,cAAC9L,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,IAAKnC,MAAO,cAAewiB,QAAS,GAA7E,eACA,eAAC/f,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,IAAKnC,MAAO,cAAeu8B,WAAY,SAAhF,UACI,cAAC95B,GAAA,EAAD,CAAYN,UAAW,OAAvB,SACcib,aAA4Bqf,KAC1C,cAACh6B,GAAA,EAAD,CAAYN,UAAW,OAAvB,2BACkBk2B,QADlB,IACkBA,OADlB,EACkBA,EAAW9pB,sBAO7C,CACIjR,IAAK,SACL1D,KAAM6E,EAAE,gBACRwuB,gBAAiB,iBACjBT,UAAW,YAA+C,IAA7CtiB,EAA4C,EAA5CA,IACT,OAAO,cAAC2xB,GAAD,CAAWh6B,QAAS,OAAQ6P,cAAe,SAAUtP,WAAY,WACxDC,eAAgB,SADzB,SAEH,eAAC7C,EAAA,EAAD,CAAKqC,QAAS,OAAQ/B,aAAc,EAApC,UACI,cAAC,EAAD,CAAQ8C,QAAS,OAAQhE,KAAM,QACvBqB,QAAS,WACL87B,EAAc7xB,IAF1B,SAGYzL,EAAE,+BACd,cAAC,EAAD,CAAQmE,QAAS,OAAQhE,KAAM,QACvBqB,QAAS,WACL67B,EAAe5xB,IAF3B,SAGYzL,EAAE,2CAQrBm+B,GAAcpmB,aAAgB,SAAhBA,EAA0B,YAWmF,IAV1C/X,EAUyC,EAVzCA,EAAG3F,EAUsC,EAVtCA,KACHuqB,EASyC,EATzCA,OACAkP,EAQyC,EARzCA,iBACAjB,EAOyC,EAPzCA,WAEAnN,GAKyC,EANzCoN,WAMyC,EALzCpN,SACA2X,EAIyC,EAJzCA,eACAC,EAGyC,EAHzCA,cAGyC,IAFzCz1B,KACG3C,QACsC,OAFlC4C,KAAYD,KAEsB,oBACnI,EAAwBpK,IAAMuK,UAAa,OAAJ9C,QAAI,IAAJA,OAAA,EAAAA,EAAMunB,MAAOvnB,EAAKunB,KAAO,GAAhE,oBAAOA,EAAP,KAAa0G,EAAb,KACA,EAAkC11B,IAAMuK,SAAmB0d,GAAWuN,MAAMC,QAAQxN,GAAWA,EAAU,IAAzG,oBAAO0N,EAAP,KAAkBC,EAAlB,KACAhd,cAAqB,WACjBgd,EAAa3N,KACd,CAACA,IAEJ,IAAMuJ,EAAoC,CACtCvJ,UACAC,WAAYA,GAAW,CAAC3lB,IAAG3F,OAAMuqB,SAAQyY,iBAAgBC,iBAAgB7iC,IAASC,QAClF+qB,aAAc,SAACC,GAAD,OAAkBA,GAChCL,gBAAiB,qBAAEC,aAIjBoH,EAAWmG,EAAaA,EAAWnG,SAAW,GAE9C4G,EAAgB71B,IAAMC,aAAY,kBAAMm1B,EACxCO,EAAUhM,OAAOqF,EAAO,GAAKC,EAAUD,EAAOC,GAC9C0G,IACA,CAAC3G,EAAMC,EAAUmG,EAAYO,IAE7B6H,EAAoBx9B,IAAMC,aAAY,SAAC+uB,GACzC0G,EAAQ1G,GAERqH,EAAiBrH,KAClB,CAACqH,IAEJ,OAAO,eAAC,GAAD,WACH,cAAC,GAAD,aACIrN,UA3LM,GA4LN2X,gBAAiB,IAFrB,uCAIWnP,GAJX,IAIwBjvB,IAAG3F,OAAMuqB,UAAW1f,GAJ5C,IAKQwgB,QAAS4N,QAEhBT,GACG,cAAC,GAAD,CAAiBpG,KAAMA,EAAMC,SAAUA,EAAUC,MAAOyG,EAAUpwB,OAAQwpB,aAAcyO,UEvM9F3K,GAAkB9wB,YAAOkgB,GAAPlgB,CAAH,kKAWfgxB,GAAehxB,YAAOuB,IAAPvB,CAAH,+H,SASN2sB,K,YAAAA,E,YAAAA,E,sBAAAA,Q,KAML,IC5CKkS,G,MD4CC5N,GAAS1Y,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YAQvB,IAPlC/X,EAOiC,EAPjCA,EACA0lB,EAMiC,EANjCA,QACAmL,EAKiC,EALjCA,WACAE,EAIiC,EAJjCA,WACA6H,EAGiC,EAHjCA,WACA3H,EAEiC,EAFjCA,YACAP,EACiC,EADjCA,mBAEEC,EAAsB,CACxB,CACIloB,MAAOzI,EAAE,uBACTrC,MAAO,aAEX,CACI8K,MAAOzI,EAAE,sBACTrC,MAAO,QAEX,CACI8K,MAAOzI,EAAE,sBACTrC,MAAO,SAITm7B,EAAcpT,EAAQ9mB,KAAI,SAAAsE,GAAI,gBAAOA,EAAKqvB,OAAO7C,KAAK7wB,IAAxB,cAAiCqE,EAAKqvB,OAAOnsB,GAAGvH,QAC9Ek6B,EAAoB,CACtB,CACItwB,MAAOzI,EAAE,uBACTrC,MAAO,QAHW,oBAKnBs1B,MAAMvD,KAAK,IAAI0E,IAAI0E,IAAcl6B,KAAI,SAACovB,GAAD,MAAmB,CACvDvlB,MAAOulB,EACPrwB,MAAOqwB,QAIf,OACI,eAACtlB,GAAA,EAAD,CAAMG,WAAS,EAAC2K,QAAS,EAAG7P,WAAY,SAAxC,UACI,cAAC+E,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAf,SACI,eAAC,GAAD,CACI5S,GAAG,yBACHC,QAAM,EACNzC,WAAS,EACT1L,MAAOkzB,EACPtwB,SAAU,SAACkB,GACPivB,EAAmB,CAACngB,KAAM9O,EAAM4D,OAAO1H,SAE3C4f,WAAY,CAACjS,cAAeC,KARhC,cASGolB,EAAoB/xB,KAAI,SAAAsxB,GAAC,OAAI,cAAC3O,GAAA,EAAD,CAAwB5jB,MAAOuyB,EAAEvyB,MAAjC,SAAyCuyB,EAAEznB,OAA5BynB,EAAEvyB,eAGrD,cAAC+K,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAACwd,GAAD,CAAY/iB,MAAOozB,EAAYxwB,SAAU,SAACsO,GAAD,OAAmB6hB,EAAmB,CAAC4D,KAAMzlB,SAE1F,cAACnG,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAf,SACI,eAAC,GAAD,CACI5S,GAAG,2BACHC,QAAM,EACNzC,WAAS,EACT1L,MAAOi7B,EACPr4B,SAAU,SAACkB,GACPivB,EAAmB,CAAE1C,KAAMvsB,EAAM4D,OAAO1H,SAE5C4f,WAAY,CAACjS,cAAeC,KARhC,cASGwtB,EAAqBn6B,KAAI,SAAAsxB,GAAC,OAAI,cAAC3O,GAAA,EAAD,CAAwB5jB,MAAOuyB,EAAEvyB,MAAjC,SAAyCuyB,EAAEznB,OAA5BynB,EAAEvyB,eAGtD,cAAC+K,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,GAAD,UACI,cAAC,EAAD,CAAQiB,QAAS,WAAYhE,KAAM,SAAUoB,MAAO,UAC5CC,QAASyvB,EADjB,SAC+BjxB,EAAE,iC,SClHzCq+B,K,YAAAA,E,aAAAA,Q,KCyEZ,I,YClDYC,GDkDN/Q,GAAc/tB,YAAOuB,IAAPvB,CAAH,kSAcb,gBAAEG,EAAF,EAAEA,MAAF,OAAaqa,GAAc,CAACC,MAAoB,EAAbta,EAAMqN,KAAUkN,OAAqB,EAAbva,EAAMqN,UAG/DisB,GAAsBz5B,YAAOuB,IAAPvB,CAAH,4CACd,SAACxB,GACR,IACEL,EAEEK,EAFFL,MACQiC,EACN5B,EADF2B,MAAQC,UAEV,OAAOjC,IAAU0gC,GAAaE,KAAO3+B,EAAU2a,QAAU3a,EAAU8G,SAIjEyxB,GAAsB,SAACn4B,EAAck5B,GAAf,MAA+E,CACvG,CACIr6B,IAAK,OACL1D,KAAM6E,EAAE,gBACR+tB,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IACH+yB,EAAY/yB,EAAG,OAAe4yB,GAAaI,KAAOz+B,EAAE,gBAAkBA,EAAE,gBAC9E,OACI,qBAAKgB,UAAU,iBAAf,SACI,cAAC,GAAD,CAAgBrD,MAAO8N,EAAG,KAA1B,SACK+yB,QAMrB,CACI3/B,IAAK,SACL1D,KAAM6E,EAAE,kBACR+tB,UAAW,YAAY,IACnB,EADkB,EAATtiB,IACa,OAAfikB,EAAP,EAAOA,KAAMtpB,EAAb,EAAaA,GACb,OACI,qBAAKpF,UAAU,iBAAf,mBACQ0uB,EAAK/xB,MADb,YACsB+xB,EAAK7wB,IAD3B,cACoCuH,EAAGzI,MADvC,YACgDyI,EAAGvH,SAK/D,CACIA,IAAK,gBACL1D,KAAM6E,EAAE,yBACR+tB,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IACH8mB,EAAS9mB,EAAG,cACZskB,EAActkB,EAAG,OAAe4yB,GAAaE,KAA/B,WACV5f,aAA4B1T,OAAOsnB,KADzB,WAEV5T,aAA4B1T,OAAOsnB,KAC7C,OACI,qBAAKvxB,UAAU,iBAAf,SACK+uB,MAQjB,CACIlxB,IAAK,MACL1D,KAAM6E,EAAE,eACR+tB,UAAW,YAAY,IACnB,EADkB,EAATtiB,IACe,IAAjB5M,EAAP,EAAOA,IAAKlB,EAAZ,EAAYA,MACZ,OACI,qBAAKqD,UAAU,iBAAf,mBACQrD,EADR,YACiBkB,OAK7B,CACIA,IAAK,OACL1D,KAAM6E,EAAE,sBAER+tB,UAAW,YAAY,IAAVtiB,EAAS,EAATA,IACHinB,EAAO/2B,IAAO,IAAI41B,KAAK9lB,EAAG,MAAa,gBAAgB+lB,UAC7D,OACI,qBAAKxwB,UAAU,iBAAf,SACK0xB,QAORgM,GAAW3mB,aAAgB,SAAhBA,EAA0B,SAAC/Z,GAC/C,IAAOgC,EAAsChC,EAAtCgC,EAAG6yB,EAAmC70B,EAAnC60B,WAAYC,EAAuB90B,EAAvB80B,WAAYpN,EAAW1nB,EAAX0nB,QAClC,EAAoCjoB,IAAMuK,SAASmkB,GAAiByE,UAApE,oBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCrzB,IAAMuK,SAAsB,MAAhE,oBAAO+oB,EAAP,KAAmBC,EAAnB,KACA,EAAwBvzB,IAAMuK,SAAS,GAAvC,oBAAOykB,EAAP,KAAa0G,EAAb,KACA,EAAkC11B,IAAMuK,SAA2B0d,GAAnE,oBAAO0N,EAAP,KAAkBC,EAAlB,KACA,EAAoC51B,IAAMuK,SAAS,OAAnD,oBAAO4wB,EAAP,KAAmBU,EAAnB,KAGMrK,GADa7xB,IAAZ5C,SACkB,CACrBmrB,WAAYwS,GAAoBn4B,GAAa+yB,QAAO,SAAA7C,GAAC,OAAKA,EAAEuB,UAC5DhM,aAAc,SAACC,GAAD,OAAkBA,GAChCL,gBAAiB,qBAAEC,YACnBzjB,MAAO,CACH6K,gBAAiB,gBAAE9M,EAAF,EAAEA,UAAF,gBAAyBA,EAAUib,SAI5DxE,cAAqB,WACjBgd,EAAa3N,KACd,CAACA,IAEJ,IAAMgH,EAAWmG,EAAaA,EAAWnG,SAAW,GAE9C4G,EAAgB71B,IAAMC,aAAY,kBAAMm1B,EACxCO,EAAUhM,OAAOqF,EAAO,GAAKC,EAAUD,EAAOC,GAC9C0G,IACA,CAAC3G,EAAMC,EAAUmG,EAAYO,IAE7BG,EAAa91B,IAAMC,aAAY,YAK9B,IAJHm2B,EAIE,EAJFA,UAIE,IAHFJ,sBAGE,MAHe5C,EAGf,MAFF6C,sBAEE,MAFe3C,EAEf,MADFwI,sBACE,MADeX,EACf,EACEjF,EAAajO,GAAoB,GACjC+N,IAAmBtH,GAAiByE,WACpC+C,EAAaA,EAAWZ,QAAO,SAAA7C,GAAC,OAAIA,EAAEyF,OAASlC,MAE/CC,IACAC,EAAaA,EAAWZ,QAAO,SAAA7C,GAE3B,OADmBjlB,OAAOtP,IAAO+3B,GAAgBmC,OAAO,MACpC3F,EAAEwC,SAGP,QAAnB6G,IACA5F,EAAaA,EAAWZ,QAAO,SAAA7C,GAE3B,MADU,UAAMA,EAAEqC,OAAO7C,KAAK7wB,IAApB,cAA6BqxB,EAAEqC,OAAOnsB,GAAGvH,OACnC06B,MAGN,WAAd1F,GACAV,EAAQ,GAEZE,EAAaM,KACd,CAACjO,EAASqL,EAAYF,EAAY+H,IAE/B+F,EAAiBlhC,IAAMC,aAAY,YAAyB,IAAvB6S,EAAsB,EAAtBA,KAAM+jB,EAAgB,EAAhBA,KAAMtG,EAAU,EAAVA,KACnD8C,EAAcvgB,GACdygB,EAAcsD,GACdgF,EAActL,KACf,IAEG0C,EAAqBjzB,IAAMC,aAAY,YAAgE,IAAD,IAA7D6S,YAA6D,MAAtDsgB,EAAsD,MAA1CyD,YAA0C,MAAnCvD,EAAmC,MAAvB/C,KACjF2Q,EAAe,CAACpuB,OAAM+jB,OAAMtG,UAD4E,MAAhB4K,EAAgB,IAExGrF,EAAW,CAACM,UAAWA,IAAUd,OAAQU,eAAgBljB,EAAMmjB,eAAgBY,MAChF,CAACf,EAAYoL,EAAgB9N,EAAYE,EAAY6H,IAElD9E,EAAmBr2B,IAAMC,aAAY,SAAC+uB,GACxC0G,EAAQ1G,GACR8G,EAAW,CAACM,UAAWA,IAAUpH,KAAMsH,SAAUtH,MAClD,CAAC8G,IAEEtC,EAAcxzB,IAAMC,aAAY,WAClCgzB,EAAmB,CACfngB,KAAM4b,GAAiByE,SACvB0D,KAAM,KACNtG,KAAM,UAEX,CAAC0C,IAEJ,OAAO,eAAC,GAAD,WACFoC,GACG,cAAC/X,GAAD,UACI,cAAC,GAAD,CACI2K,QAASA,EACTgL,mBAAoBA,EACpBG,WAAYA,EACZE,WAAYA,EACZ6H,WAAYA,EACZ3H,YAAaA,MAIzB,cAAC,GAAD,sDAAehC,GAAgBjxB,GAA/B,IAAsC0nB,QAAS4N,QAC9CT,GACG,cAAC,GAAD,CAAiBpG,KAAMA,EAAMC,SAAUA,EAAUC,MAAOyG,EAAUpwB,OAAQwpB,aAAcsH,U,sBE5QrF,OAA0B,iC,oBCmCnC8K,GAAep/B,YAAOq/B,KAAPr/B,CAAH,6CAIZs/B,GAAWt/B,YAAOuB,IAAPvB,EAAY,iBAAO,CAChC,kBAAkB,CACdu/B,WAAY,sBAKPC,GAAc,SAAC,GAA6C,IAA5Ch/B,EAA2C,EAA3CA,EAAGxF,EAAwC,EAAxCA,SAAUiO,EAA8B,EAA9BA,MAAOvI,EAAuB,EAAvBA,aAC7C,EAA0BzC,IAAMuK,SAAiBxN,GAAsBC,IAASC,QAAhF,oBAAOY,EAAP,KAAc2jC,EAAd,KACMC,EAAgBzhC,IAAMC,aAAY,SAAC+D,GACrCw9B,EAASx9B,EAAM4D,OAAO1H,OAClBuC,GAEAA,EAAauB,EAAM4D,OAAO1H,SAE/B,CAACuC,IACJ,OAAO,eAACgkB,GAAD,CAAe,aAAYlkB,EAAEyI,GAAQ6C,cAAeC,IACrC4zB,QAAQ,oBACRtzB,GAAG,oBACHlO,MAAOrC,EAAO8jC,WAAS,EACvB7+B,SAAU2+B,EAJzB,UAKH,eAAC9a,GAAD,CAAmBzmB,MAAOlD,IAASC,OAAnC,eAA8CsF,EAAE,oBAChD,eAACokB,GAAD,CAAmBzmB,MAAOlD,IAAS4kC,IAAnC,kBAA2Cr/B,EAAE,uBAI/Cs/B,GAAgB9/B,YAAOwkB,KAAPxkB,CAAH,4CAGb+/B,GAAkB//B,YAAOgM,KAAPhM,CAAH,0GAQRggC,GAAc,SAAC,GAAmC,IAAlCx/B,EAAiC,EAAjCA,EAAGyI,EAA8B,EAA9BA,MAAOvI,EAAuB,EAAvBA,aAC7Bg/B,EAAgBzhC,IAAMC,aAAY,SAAC+D,GACjCvB,GACAA,EAAauB,EAAM4D,OAAO1H,SAE/B,CAACuC,IACJ,OAAO,eAACgkB,GAAD,CAAe,aAAYlkB,EAAEyI,GAAQ6C,cAAeC,IACrC4zB,QAAQ,oBACRtzB,GAAG,oBACHlO,MAAOtD,KAAKD,SAAUyH,MAAO,CAAC8R,SAAU,IACxCpT,SAAU2+B,EAJzB,UAKH,cAAC9a,GAAD,CAAmBzmB,MAAO8hC,IAAaC,MAAvC,gBACA,cAACtb,GAAD,CAAmBzmB,MAAO8hC,IAAaE,MAAvC,8BAKKC,GAAe7nB,aAAgB,CAAC,SAAU,UAA3BA,EAAsC,YAAsC,IAApC/X,EAAmC,EAAnCA,EAAMkF,EAA6B,mBAEnG,EAAuF9H,IAAhFJ,EAAP,EAAOA,WAAYD,EAAnB,EAAmBA,YAAatB,EAAhC,EAAgCA,YAAajB,EAA7C,EAA6CA,SAAUG,EAAvD,EAAuDA,QAASU,EAAhE,EAAgEA,SAAUpB,EAA1E,EAA0EA,UAEpE4lC,EAAwBpiC,IAAMC,aAAa,SAACC,GAE9ClC,EAAYkC,KACb,CAAClC,IACEqkC,EAAwBriC,IAAMC,aAAa,SAACC,GAC9CZ,EAAYY,KACb,CAACZ,IACEgjC,EAAoBtiC,IAAMC,aAAY,SAAC8C,EAAQ7C,GACjDX,EAAWW,KACZ,CAACX,IAEEgjC,EAAmBviC,IAAMC,aAAY,SAACqN,GAEpCA,EAAE1F,OAAOoxB,QACTp7B,EAASnB,IAAUC,MAEnBkB,EAASnB,IAAU+lC,SAExB,CAAChmC,IAEJ,OAAe,eAAC6kC,GAAD,CAAUp7B,UAAW,UAAWN,QAAS,OAAQ6P,cAAe,SAAU9P,MAAO,wBAAjF,UAEX,eAACuF,GAAA,EAAD,CAAMG,WAAS,EAACzF,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,UACjED,WAAY,SAAUu8B,SAAU,EAAG9sB,QAAS,EADlD,UAEI,cAAC1K,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGrb,QAAS,OAAQ6P,cAAe,SAAlD,SACI,cAACjP,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,IAAzC,SAA+C1D,EAAE,qBAErD,cAAC0I,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGrb,QAAS,OAAQ6P,cAAe,SAAUrP,eAAgB,eACtED,WAAY,WAAY1C,UAAW,UADzC,SAEI,cAACyH,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,GAAD,wCACIlD,KACGkF,GAFP,IAGIhF,aAAc2/B,aAK9B,cAACP,GAAD,IAEA,eAAC52B,GAAA,EAAD,CAAMG,WAAS,EAACzF,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,UACjED,WAAY,SAAUu8B,SAAU,EAAG9sB,QAAS,EADlD,UAEI,cAAC1K,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGrb,QAAS,OAAQ6P,cAAe,SAAlD,SACI,cAACjP,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,IAAzC,SAA+C1D,EAAE,qBAErD,cAAC0I,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGrb,QAAS,OAAQ6P,cAAe,SAAUrP,eAAgB,eACtED,WAAY,WAAY1C,UAAW,UADzC,SAEI,cAACyH,GAAA,EAAD,CAAMxF,MAAI,EAAV,SACI,cAAC,GAAD,wCACIlD,KAAMkF,GADV,IAEI1K,WACAiO,MAAO,kBACPvI,aAAc4/B,aAM9B,cAACR,GAAD,IACA,eAAC52B,GAAA,EAAD,CAAMG,WAAS,EAACzF,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,UACjED,WAAY,SAAUu8B,SAAU,EAAG9sB,QAAS,EADlD,UAEI,cAAC1K,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGrb,QAAS,OAAQ6P,cAAe,SAAlD,SACI,cAACjP,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,IAAzC,SAA+C1D,EAAE,mBAErD,cAAC0I,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGrb,QAAS,OAAQ6P,cAAe,SAAUrP,eAAgB,SACtED,WAAY,WAAY1C,UAAW,UADzC,SAMQ,cAACs+B,GAAD,CAAiB9zB,KAAK,EAAQ,aAAW,WAAWtQ,KAAK,WAAWwC,MAAOhD,EAC/D4F,SAAUw/B,EADtB,SAEKrhC,OAAOC,KAAK/D,KAASgE,KAAI,SAACC,GACvB,OAAO,cAAC6M,GAAA,EAAD,CAA4B/N,MAAOkB,EAAK8M,QAAS,cAACC,GAAA,EAAD,IAC/BnD,MAAO,eAACQ,GAAA,EAAD,CAAOC,QAAQ,iBAAf,UAC5B,eAAClF,GAAA,EAAD,CAAYN,UAAW,OAAQS,QAAS,QAAStC,MAAO,CACpDs+B,cAAe,cADnB,UAGI,CAACC,GAAIvhC,IAAQjE,IAAQC,MAAQmF,EAAE,cAAgBA,EAAE,aAHrD,SAD4B,OAKC,eAACgE,GAAA,EAAD,CAAYN,UAAW,OAAQS,QAAS,QAAStC,MAAO,CAC5Ds+B,cAAe,cADX,UAGJ,CAACE,KAAMxhC,IAAQjE,IAAQC,MAAQmF,EAAE,YAAcA,EAAE,eAH7C,eANHnB,aA8BlD,cAACygC,GAAD,IACA,eAAC52B,GAAA,EAAD,CAAMG,WAAS,EAACzF,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,UACjED,WAAY,SAAUu8B,SAAU,EAAG9sB,QAAS,EADlD,UAEI,cAAC1K,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGrb,QAAS,OAAQ6P,cAAe,SAAlD,SACI,cAACjP,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,IAAzC,SAA+C1D,EAAE,kBAErD,cAAC0I,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGrb,QAAS,OAAQ6P,cAAe,SAAUrP,eAAgB,SACtED,WAAY,WAAY1C,UAAW,UADzC,SAEI,cAAC29B,GAAD,CAAcnI,QAASx8B,IAAcC,IAAUC,KAAO,aAAY6F,EAAE,gBAAkBwB,QAASw+B,e,+CCzMzGM,GAAqB9gC,YAAOuB,IAAPvB,CAAH,mZA0BX+gC,GAAe,SAAC,GASL,IAJhBl5B,EAIe,EAJfA,MACAC,EAGe,EAHfA,YAGe,IAFfk5B,WAEe,MAFT,gCAES,EAInB,YAHYt5B,IAARs5B,IACAA,EAAM,IAEH,eAACz/B,EAAA,EAAD,CAAKqC,QAAS,OAAQQ,eAAgB,gBAAiBD,WAAY,SAAUsP,cAAe,SAA5F,UACF5L,GACG,cAACrD,GAAA,EAAD,CAAYG,QAAS,KAAMT,UAAU,KAAK1C,UAAU,aAAagI,aAAc,EAA/E,SAAmF3B,IACvF,cAAC,KAAD,CAAQ1J,MAAO6iC,EAAKrgC,KAAM,IAAK0B,MAAO,CAAC+M,QAAS,EAAGlC,gBAAiB,QAAS,4BAAoB8zB,KAChGl5B,GAAgB,cAACtD,GAAA,EAAD,CAAYG,QAAS,QAAS6E,aAAc,EAAG5H,UAAW,EAA1D,SAA8DkG,QAO1Em5B,GAAc1oB,aAAgB,SAAhBA,EAA0B,YAK4C,IAJvCjX,EAIsC,EAJtCA,QACAmY,EAGsC,EAHtCA,KACAjZ,EAEsC,EAFtCA,EACGkF,EACmC,mBAG5F,OAAO,cAAC8T,GAAA,EAAD,CACHC,KAAMA,EACNnY,QAASA,EACT,kBAAgB,oBAChB,mBAAiB,0BAJd,SAMH,cAACw/B,GAAD,CAAoBl9B,QAAS,OAAQO,WAAY,SAAUC,eAAgB,SAA3E,SACI,eAAC7C,EAAA,EAAD,CAAKgc,WAAY,EAAGtJ,cAAe,EAAGrQ,QAAS,OAAQ6P,cAAe,SAAtE,UACI,cAAC,EAAD,aAAkBnS,QAASA,GAA3B,2BAA4CoE,GAA5C,IAAkDlF,QAClD,cAAC,GAAD,0CAAqBkF,GAArB,IAA2BlF,kB,0DC9D9B0gC,GAAqB3oB,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YAUvB,IAP9CkB,EAO6C,EAP7CA,KACAnY,EAM6C,EAN7CA,QACAvC,EAK6C,EAL7CA,KACAoD,EAI6C,EAJ7CA,OACA6W,EAG6C,EAH7CA,UACA3W,EAE6C,EAF7CA,MACGqD,EAC0C,mBAC3CvF,EAAQ4P,eACd,EAAe1N,GAAgB,CAACrF,OAAG0K,EAAW9K,OAAG8K,GAA1C1K,EAAP,EAAOA,EAAGJ,EAAV,EAAUA,EAGV,OAAO,cAAC4c,GAAA,EAAD,CACHC,KAAMA,EACNnY,QAASA,EACT,kBAAgB,oBAChB,mBAAiB,0BAJd,SAMH,eAACsY,GAAD,CAAmBvX,MAAO,CAACwX,UAAW,MAClCnK,QAAS9S,GAAQ,sBACjB+c,OAAQ3c,GAAQ,qBAFpB,UAII,eAACuE,EAAA,EAAD,CAAKqC,QAAS,OAAQD,MAAO,OAAQ8P,cAAe,SAApD,UACI,cAAC,EAAD,aAAkBnS,QAASA,GAAaoE,IAIvCvD,EAAS,cAAC,EAAD,aAAiBA,OAAQA,GAAauD,IAAS,gCAE7D,cAAC+X,GAAD,CAAsB0jB,oBAAoB,EAAOzjB,KAA0B,QAApBvd,EAAMmJ,UAAsB,YAAc,IAC3EjF,MAAOtF,EACF2Q,QAAS9S,GAAQ,sBAAuB+c,OAAQ3c,GAAQ,qBAFnF,SAGKgc,EAAU5Z,KAAI,SAACue,EAAOtZ,GACnB,OAAO,cAAC9C,EAAA,EAAD,CAAKkS,cAAe,SAAU1P,KAAM,EAAGH,QAAS,OAAoBQ,eAAgB,SAAUD,WAAY,UAA1G,SACFwZ,EAAMyjB,MADyD/8B,iB,SJzB5Ey6B,O,uBAAAA,I,2CAAAA,I,qDAAAA,I,6CAAAA,I,mCAAAA,I,kCAAAA,Q,KKlBL,I,MCcKuC,G,GDdCC,GAAsB,SAAC,GAAsE,IAArEN,EAAoE,EAApEA,IAAIO,EAAgE,EAAhEA,OAAQ/gC,EAAwD,EAAxDA,EAC7C,OAAS,eAACe,EAAA,EAAD,CAAKwC,KAAM,EAAGH,QAAS,OAAQO,WAAY,SAAUC,eAAgB,gBAAiBqP,cAAe,SAArG,UAEL,eAACjP,GAAA,EAAD,CAAYN,UAAW,KAAMS,QAAS,KAAM6E,aAAc,EAA1D,UACI,qBAAKnH,MAAO,CAACm/B,cAAc,UAAY3hB,IAAK,gCAAiCD,IAAK,gBAAiB5b,OAAQ,KAD/G,oBAGA,cAAC,KAAD,CAAQ7F,MAAO6iC,EAAKrgC,KAAM,IAAK0B,MAAO,CAAC+M,QAAS,EAAGlC,gBAAiB,QAAS,4BAAoB8zB,KAEjG,eAACz/B,EAAA,EAAD,CAAKqC,QAAS,OAAQO,WAAY,SAAUC,eAAgB,SAAUqP,cAAe,SAArF,UACI,cAACjP,GAAA,EAAD,CAAYG,QAAS,QAAS5C,MAAO,gBAAiBH,UAAW,EAAjE,SACKpB,EAAE,8BAEP,cAACgE,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,IAAKtC,UAAW,EAAzD,SACI,cAACsO,GAAA,EAAD,CAAMlO,QAASu/B,EAAf,SAAwB/gC,EAAE,iCEX7BihC,GAAkB,SAAC,GAIsF,IAHrFx4B,EAGoF,EAHpFA,MACAy4B,EAEoF,EAFpFA,aACAC,EACoF,EADpFA,SAEvBC,EAAmB3jC,IAAMgS,SAAQ,WACnC,OAAQyxB,GACJ,KAAMG,IAAiBC,SACnB,OAAO,eAACr4B,GAAA,EAAD,CAAOC,QAAS,+BAAhB,0HAImB,qBAAKkW,IAAI,WAAWvd,MAAO,CAACm/B,cAAe,eACtC3hB,IAAK,qCAL7B,+BAOX,KAAMgiB,IAAiBE,cACnB,OAAO,cAACt4B,GAAA,EAAD,CAAOC,QAAS,qCAAhB,qDAIhB,CAACg4B,IACJ,OAAO,eAACngC,EAAA,EAAD,CAAKwC,KAAM,EAAGH,QAAS,OAAQO,WAAY,SAAUC,eAAgB,gBAChEqP,cAAe,SADpB,UAEH,cAACjP,GAAA,EAAD,CAAYN,UAAW,KAAMS,QAAS,KAAM6E,aAAc,EAA1D,SAA8DP,IAC9D,cAACzE,GAAA,EAAD,CAAYN,UAAW,IAAKN,QAAS,OAAQO,WAAY,SAAUsP,cAAe,SAAUjK,aAAc,EAA1G,SACI,cAAC,IAAD,CAAazH,MAAO,UAAWM,MAAO,CAACsB,MAAO,GAAIK,OAAQ,QAE7D29B,EACD,cAACn9B,GAAA,EAAD,CAAYG,QAAS,QAAS5C,MAAO,gBAAiBmC,UAAW,IAAKtC,UAAW,EAAGH,UAAW,aACnFi/B,SAAU,EADtB,SAEKkB,QAKAI,GAAiB,SAAC,GAAyH,IAAvHxhC,EAAsH,EAAtHA,EAAGyI,EAAmH,EAAnHA,MAAO04B,EAA4G,EAA5GA,SAAUrgC,EAAkG,EAAlGA,QAC3CnB,EAAQ4P,eACd,OAAS,eAACxO,EAAA,EAAD,CAAKwC,KAAM,EAAGH,QAAS,OAAQO,WAAY,SAAWC,eAAgB,gBAAiBqP,cAAe,SAAtG,UACL,cAACjP,GAAA,EAAD,CAAYN,UAAW,KAAMS,QAAS,KAAM6E,aAAc,EAA1D,SAA8DP,IAC9D,cAACzE,GAAA,EAAD,CAAYN,UAAW,IAAKN,QAAS,OAAQO,WAAY,SAAUsP,cAAe,SAAUjK,aAAc,EAA1G,SACI,cAAC,IAAD,CAAanH,MAAO,CAACsB,MAAO,GAAIK,OAAQ,GAAIjC,MAAO5B,EAAMC,UAAU2a,aAEtE4mB,EACD,cAACpgC,EAAA,EAAD,CAAKK,UAAW,EAAGH,UAAW,UAAWi/B,SAAU,EAAnD,SACI,eAAC,EAAD,CAAQ/7B,QAAS,YAAakF,WAAS,EAAClJ,KAAM,SAAWqB,QAASV,EAAlE,UAA4Ed,EAAE,cAA9E,aAKCyhC,GAAa,SAAC,GAAiH,IAAhHC,EAA+G,EAA/GA,QAAQP,EAAuG,EAAvGA,SAAS14B,EAA8F,EAA9FA,MAAMzI,EAAwF,EAAxFA,EAC/C,OAAU,eAACe,EAAA,EAAD,CAAKwC,KAAM,EAAGH,QAAS,OAAQO,WAAY,SAAWC,eAAgB,gBAAiBqP,cAAe,SAAtG,UACN,cAACjP,GAAA,EAAD,CAAYN,UAAW,KAAMS,QAAS,KAAM6E,aAAc,EAA1D,SAA8DhJ,EAAEyI,KAChE,cAACzE,GAAA,EAAD,CAAYN,UAAW,IAAKN,QAAS,OAAQO,WAAY,SAAUsP,cAAe,SAAUjK,aAAc,EAA1G,SACI,cAAC,IAAD,CAAWzH,MAAO,QAASM,MAAO,CAACsB,MAAM,GAAGK,OAAO,QAEtD29B,EACD,cAACpgC,EAAA,EAAD,CAAKK,UAAW,EAAGH,UAAW,UAAWi/B,SAAU,EAAnD,SACI,eAAC,EAAD,CAAQ/7B,QAAS,YAAakF,WAAS,EAAClJ,KAAM,SAAWqB,QAASkgC,EAAlE,UAA4E1hC,EAAE,cAA9E,a,kBCxDC2hC,GAAuB,SAAC,GAA+B,IAA9B3hC,EAA6B,EAA7BA,EAAKkF,EAAwB,mBAIzDi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAO,mCACH,cAACzL,GAAA,EAAD,CAAYN,UAAW,OAAQS,QAAS,QAASb,SAAU,EAA3D,SAA+DtD,EAAE,yBAQvE,IACF,OAAO,cAAC,GAAD,aAAiBkhC,aAAcG,IAAiBE,cAAeJ,SAAUA,EAAU14B,MAAOzI,EAAE,iCAA5F,2BAAqIkF,GAArI,IAA0IlF,SAGxI4hC,GAAmB,SAAC,GAA+B,IAA9B5hC,EAA6B,EAA7BA,EAAKkF,EAAwB,mBACrDi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAU,mCACN,cAACzL,GAAA,EAAD,CAAYN,UAAW,OAAQJ,SAAU,EAAzC,SAA6CtD,EAAE,yBAYrD,IACF,OAAO,cAAC,GAAD,aAAiBkhC,aAAcG,IAAiBC,SAAUH,SAAUA,EAAU14B,MAAOzI,EAAE,4BAAvF,2BAA2HkF,GAA3H,IAAgIlF,SChCrI6hC,GAAoBriC,YAAOD,EAAPC,CAAH,w4CAiBR,mBAA0B,EAA1B,EAAEG,MAAiBqN,KAAW,KAYvB,mBAA0B,EAA1B,EAAErN,MAAiBqN,QAGtB,qBAAErN,MAAiBmN,YAAYgR,MAO5CghB,GAAWt/B,YAAOuB,IAAPvB,CAAH,yOACV,qBAAEG,MAAiBuC,OAAOC,aAAa,CAACG,MAAO,OAAQD,IAAK,GAAOD,IAAK,OAM3D,qBAAEzC,MAAiBmN,YAAYK,MAI/B,qBAAExN,MAAiBqN,QAUvB80B,GAAe,SAAC,GAK4C,IAJxC9hC,EAIuC,EAJvCA,EACA+hC,EAGuC,EAHvCA,YACA9xB,EAEuC,EAFvCA,aAEuC,IADvCixB,oBACuC,MADxBG,IAAiBW,QACO,EAEpE,OAAO,eAACjhC,EAAA,EAAD,CAAKwC,KAAM,EAAGH,QAAS,OAAQO,WAAY,SAAUC,eAAgB,gBAChEqP,cAAe,SADpB,UAEH,cAACjP,GAAA,EAAD,CAAYN,UAAW,KAAMS,QAAS,KAAM6E,aAAc,EAA1D,SAA8DhJ,EAAE,wBAChE,cAACe,EAAA,EAAD,CAAKqC,QAAS,OAAQ6P,cAAe,SAAUrP,eAAgB,SAC1DL,KAAM,EAAGI,WAAY,UAAW1C,UAAW,UAC3CD,UAAU,eAAek/B,SAAU,GAFxC,SAGI,cAAC,GAAD,CAAUA,SAAU,EAAI,EAAG98B,QAAS,OAAQ6P,cAAe,MACjDrP,eAAgB,UAAWD,WAAY,aADjD,SAEI,cAAC,KAAD,CACIgI,QAAS,cAACorB,GAAA,EAAD,CAAUkL,gBAAc,EAACjL,YAAa,cAAC,IAAD,IAAgBlT,KAAM,cAAC,IAAD,IAClDviB,MAAM,YACzBkH,MAAO,eAACQ,GAAA,EAAD,CAAOC,QAAQ,qBAAf,uDAA8E,cAACwG,GAAA,EAAD,CAAMhM,UAAW,IACnB4xB,KAAM,KACNjwB,OAAQ,UAFN,8BAA9E,aAMnB,cAACtE,EAAA,EAAD,CAAKqC,QAAS,OAAQ6P,cAAe,SAAUrP,eAAgB,SAC1DL,KAAM,EAAGI,WAAY,UAAW1C,UAAW,UAC3CD,UAAU,eAAeI,UAAW,EAAG8+B,SAAU,GAFtD,SAII,2CAAM6B,EAAYnjC,KAAI,SAACsE,GAAD,OAClB,cAACnC,EAAA,EAAD,CAAoBK,UAAW,IAA/B,SACI,cAACygC,GAAD,CAAmB19B,QAAS,YAAahE,KAAM,QAASa,UACpDkgC,IAAiBh+B,EAAKrE,IAAM,WAAa,GAC3CwK,WAAS,EACQyV,QAAS,qBAAKO,IAAKnc,EAAKg/B,OAAQ9iB,IAAKlc,EAAKrE,IAAK2E,OAAQ,KACvDhC,QAAS0B,EAAK+M,aAAe/M,EAAK+M,aAAe,SAACxO,GAC1CwO,GACAA,EAAaxO,EAAOyB,EAAKrE,MANpD,SASKmB,EAAEkD,EAAKrE,QAVNqE,EAAKrE,iB,kCC3FlBsjC,GAAiB,SAAC,GAA4G,IAA3GniC,EAA0G,EAA1GA,EAAGkhC,EAAuG,EAAvGA,aAAapgC,EAA0F,EAA1FA,QAAYoE,EAA8E,mBAGhIi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAU,mCACN,cAACzL,GAAA,EAAD,CAAYN,UAAW,IAAKtC,UAAW,EAAvC,SACI,cAAC6H,GAAA,EAAD,CAAOC,QAAS,8BAAhB,sDAMV,IACF,OAAS,cAAC,GAAD,sDAAwBhE,GAAxB,IAA6BlF,OAA7B,IAAiCyI,MAAOzI,EAAE,sBAAuB,CAACkhC,iBAAgBC,SAAUA,EAAUrgC,QAASA,M,eCf/GshC,GAAgB,SAAC,GAAsE,IAArEV,EAAoE,EAApEA,QAAWx8B,EAAyD,mBACzFi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAO,cAACzL,GAAA,EAAD,CAAYN,UAAW,IAAKtC,UAAW,EAAvC,SACH,eAAC6H,GAAA,EAAD,CAAOC,QAAS,qBAAhB,6BACoB,cAACwG,GAAA,EAAD,CAAMlO,QAASkgC,EAAf,0BAG1B,IACF,OAAQ,cAAC,GAAD,aAAaj5B,MAAO,qBAAsBi5B,QAASA,EAASP,SAAUA,GAAcj8B,M,SLKpF27B,O,yBAAAA,I,mBAAAA,I,qBAAAA,I,uCAAAA,I,2BAAAA,I,iCAAAA,I,iCAAAA,I,iCAAAA,I,iCAAAA,I,+BAAAA,I,4BAAAA,I,kDAAAA,I,kDAAAA,I,4CAAAA,I,oDAAAA,I,+CAAAA,Q,KMJZ,ICZYwB,G,MDYN5I,GAAYj6B,YAAOuB,IAAPvB,CAAH,43BAsBK,qBAAEG,MAAiBqN,QAuB1Bs1B,GAAc,SAAC,GAS2C,IARvCC,EAQsC,EARtCA,aACAC,EAOsC,EAPtCA,WACAC,EAMsC,EANtCA,MACAC,EAKsC,EALtCA,YACAC,EAIsC,EAJtCA,aACA5B,EAGsC,EAHtCA,OAEA/gC,EACsC,EADtCA,EAEtB4iC,EAAeC,aAAaL,GAC5BM,EAAgBH,EAAeH,EAC/BO,EAA4B,YAAhBL,EAA4B1iC,EAAE,qBAAuB0iC,EAKvE,OAAO,eAAC3hC,EAAA,EAAD,CAAKqC,QAAS,OAAQ6P,cAAe,SAAUrP,eAAgB,aAAcD,WAAY,SAAzF,UACH,cAACK,GAAA,EAAD,CAAYG,QAAS,QAAS5C,MAAO,gBAAiBH,UAAW,EAAjE,SACI,eAAC6H,GAAA,EAAD,CAAOC,QAAQ,iBAAiB85B,SAAU,CAACD,aAA3C,4BACmB,cAAC/+B,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,OAAzC,SAAkDg/B,IADrE,SAIJ,eAAC1+B,GAAA,EAAD,CAAY5C,UAAW,EAAGgC,QAAS,OAAQO,WAAY,SAC1CC,eAAgB,aAD7B,UAEI,cAACI,GAAA,EAAD,CAAYN,UAAW,OAAQS,QAAS,KAAxC,SAA+Cy+B,IAC9CH,EAAQ,cAACtoB,GAAD,CAAWzW,UAAW,OAAQS,QAAS,QAAvC,SACPs+B,SAAqBv7B,KAK3B,eAAC,GAAD,CAAWxD,UAAW,MAAON,QAAS,OAAQO,WAAY,SAAUC,eAAgB,gBACzExC,UAAW,EAAGH,UAAW,UADpC,UAEI,cAAC1B,EAAA,EAAD,CAAQ0jC,WAAY,SAAU3N,KAAMwN,EAAeI,UAAW,cAAC,IAAD,CAAUj/B,SAAU,UAAlF,SACI,eAACD,GAAA,EAAD,CAAYG,QAAS,QAAS/C,UAAW,GAAzC,cAAkD,YAAlD,SAEJ,cAAC7B,EAAA,EAAD,CAAQ2jC,UAAW,cAAC,IAAD,CAAUj/B,SAAU,UAAYzC,QAAS,WACpDu/B,GAAQA,KADhB,SAGI,eAAC/8B,GAAA,EAAD,CAAYG,QAAS,QAAS/C,UAAW,GAAzC,cAAkDpB,EAAE,sBAApD,SAQJ,cAACT,EAAA,EAAD,CAAQ2jC,UAAW,cAAC,IAAD,CAAaj/B,SAAU,UAAYzC,QAAS,WACvD+gC,GAAcA,KADtB,SAGI,eAACv+B,GAAA,EAAD,CAAYG,QAAS,QAAS/C,UAAW,GAAzC,eAAmDpB,EAAE,mBAArD,gB,mBE1GHmjC,GAAaprB,aAAgB,SAAhBA,EAA0B,YAAkE,IAAhEqrB,EAA+D,EAA/DA,QAASpjC,EAAsD,EAAtDA,EAAMhC,EAAgD,mBACjH,OAAO,eAAC+C,EAAA,EAAD,CAAKwC,KAAM,EAAGH,QAAS,OAAQ6P,cAAe,SAAUrP,eAAgB,gBAAiBD,WAAY,SAArG,UACH,cAAC,GAAD,2BAAiB3F,GAAjB,IAAwBgC,EAAGA,KAM3B,cAACe,EAAA,EAAD,CAAKK,UAAW,EAAGH,UAAW,UAAWi/B,SAAU,EAAnD,SACKkD,U,qBCRAC,GAAatrB,aAAgB,SAAhBA,EAA0B,YAAyF,IAAvFurB,EAAsF,EAAtFA,UAAUtjC,EAA4E,EAA5EA,EAAKhC,EAAuE,mBACxI,OAAO,eAAC+C,EAAA,EAAD,CAAKwC,KAAM,EAAGH,QAAS,OAAQ6P,cAAe,SAAUrP,eAAgB,gBAAiBD,WAAY,SAArG,UACH,cAAC,GAAD,2BAAiB3F,GAAjB,IAAwBgC,EAAGA,KAI3B,eAACe,EAAA,EAAD,CAAKK,UAAW,EAAGH,UAAW,UAAWi/B,SAAU,EAAG98B,QAAS,OAAQ6P,cAAe,SAAUtP,WAAY,SAA5G,UACI,cAACK,GAAA,EAAD,CAAYG,QAAS,QAArB,SACKnE,EAAE,kCAEP,cAACgb,GAAD,CAAgBha,UAAW,aAC3B,eAAC,EAAD,CAAQmD,QAAS,YAAakF,WAAS,EAAClJ,KAAM,SAAWqB,QAAS,WAC9D8hC,KADJ,UAEItjC,EAAE,mBAFN,gB,2BCZCujC,GAAiB,SAAC,GAI8E,IAH1EvjC,EAGyE,EAHzEA,EACAwjC,EAEyE,EAFzEA,gBACGxlC,EACsE,mBAExG,OAAO,eAAC+C,EAAA,EAAD,CAAKwC,KAAM,EAAGH,QAAS,OAAQ6P,cAAe,SAAUrP,eAAgB,gBACnED,WAAY,SADjB,UAEH,cAAC,GAAD,2BAAiB3F,GAAjB,IAAwBgC,EAAGA,KAI3B,eAACe,EAAA,EAAD,CAAKK,UAAW,EAAGH,UAAW,UAAWi/B,SAAU,EAAnD,UACI,cAACl8B,GAAA,EAAD,CAAYG,QAAS,QAArB,SACKnE,EAAE,kCAEP,cAACgb,GAAD,CAAgBha,UAAW,aAC3B,eAAC,EAAD,CAAQmD,QAAS,YAAakF,WAAS,EAAClJ,KAAM,SAAUqB,QAAS,WACzDgiC,GACAA,KAFR,UAIIxjC,EAAE,wBAJN,c,mDCfCyjC,GAAa,SAAC,GAWpB,IAVwBzjC,EAUzB,EAVyBA,EACAyI,EASzB,EATyBA,MACAq6B,EAQzB,EARyBA,cAQzB,IAPyBh5B,aAOzB,MAPiC,GAOjC,EANyBhJ,EAMzB,EANyBA,QACGoE,EAK5B,mBACIi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAO,qCACH,cAACzL,GAAA,EAAD,CAAYzC,MAAO,gBAAiBmC,UAAW,OACnCJ,SAAU,EADtB,SAC0BtD,EAAE,4BAA6B,CAAC8J,YAC1D,cAAC4F,GAAA,EAAD,CAAMrK,OAAO,SAASiwB,KAAMwN,EAAe1/B,QAAS,eAAgBhC,UAAW,GAA/E,SACI,eAAC4C,GAAA,EAAD,CAAYG,QAAS,QAArB,cAA+B,cAAC,IAAD,CAAUF,SAAU,QACVpC,MAAO,CAACm/B,cAAe,YADhE,IAC8E,YAD9E,cAIT,IACH,OAAO,cAAC,GAAD,0CAAwB97B,GAAxB,IAA8BuD,MAAMA,EAAc3H,UAASqgC,WAAUnhC,S,4GCvBnE0jC,GAAgB,SAAC,GAMmG,IAL/FhC,EAK8F,EAL9FA,QAK8F,IAJ9Fj5B,aAI8F,MAJtF,gBAIsF,EAH9Fq6B,EAG8F,EAH9FA,cACA9iC,EAE8F,EAF9FA,EACGkF,EAC2F,mBACtHi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAO,qCACH,cAACzL,GAAA,EAAD,CAAYG,QAAS,QAAS5C,MAAO,gBAAiBH,UAAW,EAAjE,SAAqEpB,EAAE,wBACvE,cAAC0P,GAAA,EAAD,CAAMrK,OAAO,SAASiwB,KAAMwN,EAAe1/B,QAAS,eAAgBhC,UAAW,GAA/E,SACI,eAAC4C,GAAA,EAAD,CAAYG,QAAS,QAArB,cAA+B,cAAC,IAAD,CAAUF,SAAU,QACVpC,MAAO,CAACm/B,cAAe,YADhE,IAC8E,YAD9E,cAIT,IACH,OAAO,cAAC,GAAD,aAAav4B,MAAOA,EAAOi5B,QAAS,WAAQA,OAAQx6B,IAAci6B,SAAUA,GAA5E,2BAA8Fj8B,GAA9F,IAAoGlF,SAGlG2jC,GAAoB,SAAC,GAMyG,IALrGjC,EAKoG,EALpGA,QACA1hC,EAIoG,EAJpGA,EAIoG,IAHpGyI,aAGoG,MAH5F,GAG4F,EAFpGmH,EAEoG,EAFpGA,SACG1K,EACiG,mBAChIi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAO,cAACzL,GAAA,EAAD,CAAYG,QAAS,QAAS5C,MAAO,gBAAiBH,UAAW,EAAjE,SACFpB,EAAE,yBAA0B,CAAC4jC,OAAM,OAAEh0B,QAAF,IAAEA,OAAF,EAAEA,EAAUE,iBAErD,IACH,OAAO,cAAC,GAAD,aAAarH,MAAOA,EAAOi5B,QAAS,WAAYA,GAASA,KAAaP,SAAUA,GAAhF,2BAAkGj8B,GAAlG,IAAwGlF,SAGtG6jC,GAAe,SAAC,GAA6F,IAA5FnC,EAA2F,EAA3FA,QAAS1hC,EAAkF,EAAlFA,EAAakF,GAAqE,EAA/EuD,MAA+E,oBAC/G04B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAS,qCACL,cAACzL,GAAA,EAAD,CAAYG,QAAS,QAAS5C,MAAO,gBAAiBH,UAAW,EAAjE,SAAqEpB,EAAE,uBACvE,cAACgE,GAAA,EAAD,CAAYN,UAAW,IAAKtC,UAAW,EAAvC,SACI,eAAC6H,GAAA,EAAD,CAAOC,QAAS,qBAAhB,6BACoB,cAACwG,GAAA,EAAD,CAAMlO,QAAS,WAAYkgC,GAASA,KAApC,6BAI7B,IACH,OAAO,cAAC,GAAD,aAAaj5B,MAAOzI,EAAE,qBAAsB0hC,QAAS,WAAYA,GAASA,KAAaP,SAAUA,GAAjG,2BAAmHj8B,GAAnH,IAAyHlF,S,gFC3BvH8jC,GAAe/rB,aAAgB,SAAU,CAACC,SAAS,GAApCD,EAA2C,YAWvB,IATxCkB,EASuC,EATvCA,KACAnY,EAQuC,EARvCA,QACAvC,EAOuC,EAPvCA,KACAoD,EAMuC,EANvCA,OACAE,EAKuC,EALvCA,MACAkiC,EAIuC,EAJvCA,QACA/hC,EAGuC,EAHvCA,UACAwW,EAEuC,EAFvCA,UACGtT,EACoC,mBACrCvF,EAAQ4P,eACd,EAAe1N,GAAgB,CAACrF,OAAG0K,EAAW9K,OAAG8K,GAA1C1K,EAAP,EAAOA,EAAGJ,EAAV,EAAUA,EAEV,OAAO,cAAC4c,GAAA,EAAD,CACHC,KAAMA,EACNnY,QAASA,EACT,kBAAgB,oBAChB,mBAAiB,0BAJd,SAMH,eAACsY,GAAD,CAAmBvX,MAAO,CAACwX,UAAW,MAClCnK,QAAS9S,GAAQ,sBACjB+c,OAAQ3c,GAAQ,qBAFpB,UAII,eAACuE,EAAA,EAAD,CAAKqC,QAAS,OAAQD,MAAO,OAAQ8P,cAAe,SAApD,UACK8wB,EAAU,6BAAQ,cAAE,EAAF,aAAmBjjC,QAASA,GAAaoE,IAC3DvD,EAAS,cAAC,EAAD,aAAiBA,OAAQA,GAAauD,IAAU,6BACzDlD,EAAY,cAAC,GAAD,aAAeA,UAAWA,GAAgBkD,IAAU,gCAGrE,cAAC+X,GAAD,CAAsB0jB,oBAAoB,EAAOzjB,KAA0B,QAApBvd,EAAMmJ,UAAsB,YAAc,IAC3EjF,MAAOtF,EACF2Q,QAAS9S,GAAQ,sBAAuB+c,OAAQ3c,GAAQ,qBAFnF,SAGKgc,EAAU5Z,KAAI,SAACue,EAAOtZ,GACnB,OAAO,cAAC9C,EAAA,EAAD,CAAKwC,KAAM,EAAGH,QAAS,OAAQO,WAAY,UAA3C,SACFwZ,EAAMyjB,MADuD/8B,gBCrDzEmgC,GAAgB,SAAC,GAAmE,IAAlEhkC,EAAiE,EAAjEA,EAAGkhC,EAA8D,EAA9DA,aACxBvhC,EAAQ4P,eACd,OAAO,eAACxO,EAAA,EAAD,CAAKwC,KAAM,EAAGH,QAAS,OAAQO,WAAY,SAAUC,eAAgB,eAChEqP,cAAe,SADpB,UAEH,cAACjP,GAAA,EAAD,CAAYN,UAAW,KAAMS,QAAS,KAAM6E,aAAc,EAA1D,SACKhJ,EAAE,oBAAqB,CAACkhC,mBAK7B,cAACl9B,GAAA,EAAD,CAAYN,UAAW,IAAKN,QAAS,OAAQO,WAAY,SAAUsP,cAAe,SAAlF,SACI,cAAC,IAAD,CAAapR,MAAO,CAACsB,MAAO,GAAIK,OAAQ,GAAIjC,MAAO5B,EAAMC,UAAU2a,aAEvE,cAACvW,GAAA,EAAD,CAAYN,UAAW,IAAKtC,UAAW,EAAvC,SACI,cAAC6H,GAAA,EAAD,CAAOC,QAAS,8BAAhB,sD,gHCbC+6B,GAAuB,SAAC,GAA8D,IAA7DjkC,EAA4D,EAA5DA,EAAMkF,EAAsD,mBACxFi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAO,mCACH,cAACzL,GAAA,EAAD,CAAYG,QAAS,QAArB,SACKnE,EAAE,yBAGZ,IACH,OAAO,cAAC,GAAD,aAAiByI,MAAOzI,EAAE,wBAAyBmhC,SAAWA,GAA9D,2BAAgFj8B,GAAhF,IAAsFlF,SAGpFkkC,GAAoB,SAAC,GAM8F,IALtFlkC,EAKqF,EALrFA,EAKqF,IAJrFyI,aAIqF,MAJ7E,oBAI6E,EAFrFq6B,EAEqF,EAFrFA,cACG59B,EACkF,mBACrHi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAO,qCACH,cAACzL,GAAA,EAAD,CAAYG,QAAS,QAArB,SACKnE,EAAE,6BAEP,cAAC0P,GAAA,EAAD,CAAMrK,OAAO,SAASiwB,KAAMwN,EAAe1/B,QAAS,eAAgBhC,UAAW,GAA/E,SACI,eAAC4C,GAAA,EAAD,CAAYG,QAAS,QAArB,cAA+B,cAAC,IAAD,CAAUF,SAAU,QACVpC,MAAO,CAACm/B,cAAe,YADhE,IAC8E,YAD9E,cAIT,IACH,OAAO,cAAC,GAAD,aAAiBv4B,MAAOA,EAAO04B,SAAUA,GAAzC,2BAA2Dj8B,GAA3D,IAAiElF,SAI/DmkC,GAAwB,SAAC,GAM0F,IALtFnkC,EAKqF,EALrFA,EAKqF,IAJrFyI,aAIqF,MAJ7E,wBAI6E,EAFrFq6B,EAEqF,EAFrFA,cACG59B,EACkF,mBACrHi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAO,qCACH,cAACzL,GAAA,EAAD,CAAYG,QAAS,QAArB,SACKsE,IAEL,cAACiH,GAAA,EAAD,CAAMrK,OAAO,SAASiwB,KAAMwN,EAAe1/B,QAAS,eAAgBhC,UAAW,GAA/E,SACI,eAAC4C,GAAA,EAAD,CAAYG,QAAS,QAArB,cAA+B,cAAC,IAAD,CAAUF,SAAU,QACVpC,MAAO,CAACm/B,cAAe,YADhE,IAC8E,YAD9E,cAIT,IACH,OAAO,cAAC,GAAD,aAAiBv4B,MAAOA,EAAO04B,SAAUA,GAAzC,2BAA2Dj8B,GAA3D,IAAiElF,SAI/DokC,GAAqB,SAAC,GAK6F,IAJzFpkC,EAIwF,EAJxFA,EAIwF,IAHxFyI,aAGwF,MAHhF,GAGgF,EAFxFmH,EAEwF,EAFxFA,SACG1K,EACqF,mBACrHi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAO,mCACH,cAACzL,GAAA,EAAD,CAAYG,QAAS,QAArB,SACKnE,EAAE,mBAAoB,CAAC4jC,OAAM,OAAEh0B,QAAF,IAAEA,OAAF,EAAEA,EAAUE,mBAGnD,IACH,OAAO,cAAC,GAAD,aAAiBrH,MAAOA,EAAO04B,SAAUA,GAAzC,2BAA2Dj8B,GAA3D,IAAiElF,SAI/DqkC,GAAgB,SAAC,GAA8D,IAA7DrkC,EAA4D,EAA5DA,EAAMkF,EAAsD,mBACjFi8B,EAAW1jC,IAAMgS,SAAQ,WAC3B,OAAO,mCACH,cAACzL,GAAA,EAAD,CAAYG,QAAS,QAArB,SACKnE,EAAE,yBAGZ,IACH,OAAO,cAAC,GAAD,aAAiByI,MAAOzI,EAAE,qBAAsBmhC,SAAUA,GAA1D,2BAA4Ej8B,GAA5E,IAAkFlF,SChFhFskC,GAAiBvsB,aAAgB,SAAhBA,EAA0B,YAGmD,IAFxDyqB,EAEuD,EAFvDA,WAGzCM,EADgG,EADvDH,aAEVH,EACrC,OAAO,eAACzhC,EAAA,EAAD,CAAKwC,KAAM,EAAGD,SAAU,EAAG48B,SAAU,EAAI98B,QAAS,OAAQ6P,cAAe,SACpEtP,WAAY,SAAUC,eAAgB,SAD3C,UAEH,cAAC,KAAD,CAAQjG,MAAOmlC,EAAe3iC,KAAM,IAAK0B,MAAO,CAAC6K,gBAAiB,QAC1D,4BAAoBo2B,KAC5B,cAAC9+B,GAAA,EAAD,CAAY5C,UAAW,EAAG+C,QAAS,QAAS5C,MAAO,gBACvCM,MAAO,CAAC0iC,UAAW,aAD/B,SAC8C/B,W,STd1CH,K,YAAAA,E,cAAAA,E,kBAAAA,E,mBAAAA,Q,KUUZ,I,2BCbYmC,GAMAC,GDONC,GAAyBllC,YAAOD,EAAPC,CAAH,2nFAUP,qBAAEG,MAAiBqN,QAOrB,qBAAErN,MAAiBmN,YAAYgR,MAW5B,mBAA0B,EAA1B,EAAEne,MAAiBqN,QAEtB,qBAAErN,MAAiBmN,YAAYgR,MAW5B,mBAA0B,EAA1B,EAAEne,MAAiBqN,QAEtB,qBAAErN,MAAiBmN,YAAYgR,MA8B5C6mB,GAAmBnlC,YAAOwE,KAAPxE,CAAH,4VAGE,qBAAEG,MAAiBqN,QAarC,qBAAErN,MAAiBuC,OAAOC,aAAa,CAACC,IAAK,EAAGC,IAAK,GAAOC,MAAO,sBAGrE,qBAAE3C,MAAiBuC,OAAOC,aAAa,CAACC,IAAK,EAAGC,IAAK,GAAOC,MAAO,sBAQ1DsiC,GAAmB,SAAC,GAG8B,IAF1BC,EAEyB,EAFzBA,aACAC,EACyB,EADzBA,YAEjC,EAAkB/I,aAAe,CAAC,SAAU,WAArC/7B,EAAP,EAAOA,EAAG3F,EAAV,EAAUA,KACV,EAA0BoD,IAAMuK,SAAiBhI,EAAE,uBAAnD,oBAAOyI,EAAP,KAAcs8B,EAAd,KACA,EAAwCtnC,IAAMuK,cAA6Bd,GAA3E,oBAAO89B,EAAP,KAAqBC,EAArB,KACA,EAAwCxnC,IAAMuK,SAA6B,IAA3E,oBAAOk9B,EAAP,KAAqBC,EAArB,KACA,EAAwB1nC,IAAMuK,WAA9B,oBAAO8b,EAAP,KAAashB,EAAb,KAEA3gC,qBAAU,WACN,GAAIogC,EAAc,CACd,IAAOQ,EAAWR,EAAXQ,QACDzC,EAAeyC,EAAQ7C,WAAaK,aAAY,OAACwC,QAAD,IAACA,OAAD,EAACA,EAAS7C,iBAAct7B,EAK9E,OAJI07B,GACAmC,EAASnC,GAEbwC,OAAQl+B,GACAm+B,EAAQC,YACZ,KAAKC,IAAcC,WACfL,EAAgB,cAChBJ,EAAS,sBACT,MACJ,KAAKQ,IAAcE,OACfN,EAAgB,UAChBC,EAAQ,cAAC,IAAD,KACR,MACJ,KAAKG,IAAcG,UACfP,EAAgB,YAEhB,MACJ,KAAKI,IAAcI,WACfR,EAAgB,cAEhB,MACJ,KAAKI,IAAcK,WACfT,EAAgB,cAChBC,EAAQ,cAAC,IAAD,CAAa7jC,MAAO,aAC5B,MACJ,KAAKgkC,IAAcM,cACfV,EAAgB,iBAChBJ,EAAS,qBACTK,EAAQ,cAAC,IAAD,KAIZC,GAAgC,IAArBA,EAAQS,SACnBb,EAAgB,YAEhBA,EAAgB,SAGpBF,EAAS,wBAGd,CAACF,EAAcxqC,IAGlB,IAKM6X,EAAaM,yBAAc,CAACrO,QAAS,UAAWsO,QAAQ,2CAC9D,OAAO,qCACFuyB,EACG,cAACL,GAAD,CAAkBvhC,QAAS,cAAeO,WAAY,SAAUC,eAAgB,SAAUs8B,SAAU,EAClFx8B,UAAW,OAAQnC,MAAO,kBAC1BF,YAAa,EAF/B,SAEmC2jC,IAAmC,6BAC1E,eAACN,GAAD,yBACIvgC,SAAqF,IAA5E,CAAC,aAAc,iBAAiB4hC,WAAU,SAAAtjB,GAAG,OAAIyiB,IAAiBziB,KAAc,YAAc,WACvGtiB,MAAkF,IAA5E,CAAC,aAAc,iBAAiB4lC,WAAU,SAAAtjB,GAAG,OAAIyiB,IAAiBziB,KAAc,QAAU,SAChGlhB,MAAO,UACPP,UAAS,qBAAgBkkC,GACzB1jC,QAhBa,SAACC,GAElBqjC,EAAYrjC,KAcmBiS,qBAAUxB,IALzC,cAMK4R,EAAO,cAAC9f,GAAA,EAAD,CAAYN,UAAW,IAAKkF,aAAc,EAA1C,SAA8Ckb,IAAqB,6BAC3E,eAAC9f,GAAA,EAAD,CAAYN,UAAW,OAAvB,cAAiC1D,EAAEyI,GAAnC,gB,6CEtKCu9B,GAAc,SAAC,GAMwF,IALpFhmC,EAKmF,EALnFA,EACAwgC,EAImF,EAJnFA,IACAyF,EAGmF,EAHnFA,UACAC,EAEmF,EAFnFA,gBACGhhC,EACgF,mBACzGgN,EAAaM,yBAAc,CAACrO,QAAS,UAAWsO,QAAS,oBACzD0zB,EAAc,kBAAM,cAACz2B,GAAA,EAAD,CACtB4lB,KAAK,mEADiB,SACmDt1B,EAAEkmC,MAC/E,OAAO,eAACnlC,EAAA,EAAD,WACH,cAACO,EAAA,EAAD,yBAAY,aAAYtB,EAAE,qBAAyB0T,qBAAUxB,IAA7D,aAA0E,cAAC,IAAD,OAC1E,cAAC0B,GAAD,2BAEQikB,sBAAW3lB,IAFnB,IAMIlR,UAAW,eACX8S,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBhF,gBAAiB,CACb+E,SAAU,MACVC,WAAY,UAbpB,SAgBI,cAACjT,EAAA,EAAD,CAAK0C,OAAQ,EAAb,SAAgB,cAAC,GAAD,0CACTyB,GADS,IACHmC,MAAOrH,EAAEimC,GAAY3+B,YAAa,cAAC6+B,EAAD,IAC3C3F,MAAKxgC,iBAORomC,GAAkB,SAAC,GAAD,IAAEpmC,EAAF,EAAEA,EAAF,OAAc,cAACsB,EAAA,EAAD,CACzC,aAAYtB,EAAE,iBAD2B,SACT,cAAC,IAAD,OAGvBqmC,GAAa,SAAC,GAAqB,IAApBrmC,EAAmB,EAAnBA,EAAGyI,EAAgB,EAAhBA,MACrByJ,EAAaM,yBAAc,CAACrO,QAAS,UAAWsO,QAAS,eAC/D,OAAO,eAAC1R,EAAA,EAAD,WACH,cAACO,EAAA,EAAD,yBAAY,aAAYtB,EAAEyI,IAAYiL,qBAAUxB,IAAhD,aAA6D,cAAC,IAAD,OAC7D,cAAC0B,GAAD,2BAEQikB,sBAAW3lB,IAFnB,IAOI4B,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBhF,gBAAiB,CACb+E,SAAU,MACVC,WAAY,UAbpB,SAgBI,cAACjT,EAAA,EAAD,CAAK0C,OAAQ,EAAb,SACI,cAACm8B,GAAD,a,gOCnEV0G,GAAgB9mC,YAAOwd,KAAPxd,CAAH,gJAQb+mC,GAAY/mC,IAAOiD,IAAV,2KAMT+jC,GAAehnC,YAAOinC,KAAPjnC,CAAH,ofAYQ,qBAAEG,MAAiBuC,OAAOgjB,aAAa,CAAC9iB,IAAK,EAAGE,MAAO,YAW3EokC,GAAYlnC,YAAOwE,KAAPxE,CAAH,skBAiBGmnC,IAYLC,GAAgB,cAACF,GAAD,CAAWviC,QAAQ,KAAKT,UAAU,KAAlC,SACrB,cAACpC,EAAA,EAAD,CAAYyN,KAAK,QAAQ,aAAW,OAAOrL,UAAWue,KAAY7b,GAAG,KAAK7E,MAAO,UAAjF,qCASFslC,GAAc,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,gBAAoB9oC,EAAgB,mBAEhD+oC,EAAStpC,IAAMgS,SAAQ,WACzB,OAAQq3B,GACJ,KAAME,IAAoBC,SACtB,OAAO,cAAC,GAAD,eAAiBjpC,IAC5B,KAAMgpC,IAAoBE,aACtB,OAAO,cAAC,GAAD,eAAqBlpC,IAChC,KAAMgpC,IAAoBG,QACtB,OAAO,cAAC,GAAD,eAAgBnpC,IAK3B,KAAMgpC,IAAoBzF,cACtB,OAAO,cAAC,GAAD,eAAsBvjC,IACjC,QACI,UAET,CAACA,EAAO8oC,IACX,OAAO,cAACtjB,GAAD,UAAcujB,KAGZK,GAAe3pC,IAAMuH,YAAW,WAA2BT,GAAS,IAAlCud,EAAiC,EAAjCA,SAAa5c,EAAoB,mBAC5E,EAAkCzH,IAAMuK,SAAS,IAAjD,oBAAOhH,EAAP,KAAkBqmC,EAAlB,KACMC,EAAe7pC,IAAMC,aAAY,WACnC,IAAMwD,EAAWy5B,OAAO4M,YAEpBF,EADAnmC,EAAW,GACE,gBAEA,MAElB,CAACmmC,IASJ,OAPA5pC,IAAMgH,WAAU,WAEZ,OADAk2B,OAAO6M,iBAAiB,SAAUF,EAAc,CAACG,SAAS,IACnD,WACH9M,OAAO+M,oBAAoB,SAAUJ,MAE1C,CAACA,IAEG,cAACK,GAAA,EAAD,2BAAYziC,GAAZ,IAAkB0iC,QAAQ,EAAOC,WAAW,OAAOC,aAAcvjC,EAAKwjC,IAAKxjC,EAA3E,SACH,cAACgiC,GAAD,CAAWvlC,UAAWA,EAAtB,SAAkC8gB,UAI7BkmB,GAASjwB,aAAgB,CAAC,SAAU,UAAW,CAACC,SAAS,GAAhDD,CAAuDta,IAAMuH,YAAW,WAMmCT,GAAkC,IALhE0jC,EAK+D,EAL/DA,eACAC,EAI+D,EAJ/DA,kBACAtlC,EAG+D,EAH/DA,SACAvI,EAE+D,EAF/DA,KACG6K,EAC4D,mBAkBxJijC,EAAiB,SAAC,GAGoE,IAFhEC,EAE+D,EAF/DA,YACGljC,EAC4D,mBACvF,OAAOmjC,IAAqBzpC,KAAI,SAACiF,GAC7B,OAAO,wBAAC,GAAD,sDAAqBukC,EAAavkC,IAAYqB,IAA9C,IAAqDrG,IAAKgF,SAKnEykC,EAAmB,SAAnBA,EAAoB,GAI2G,IAHvGC,EAGsG,EAHtGA,SAGsG,IAFtG3mB,aAEsG,MAF9F,EAE8F,EADnG1c,EACmG,mBAC1HsjC,EAAe,SAAC,GAA2E,IAA1E//B,EAAyE,EAAzEA,MAAOsZ,EAAkE,EAAlEA,OAAQH,EAA0D,EAA1DA,MAAOkK,EAAmD,EAAnDA,MAAU5mB,EAAyC,mBACtFujC,EAAe,IAAIx6B,OAAOxF,EAAMoD,GAAI,MAAMqC,KAAKtL,EAAS8P,MAAM,KAAM,GAAM9P,EAAS8P,MAAM,KAAM,GAAM9P,GAC3G,OAAO,mCAAGgf,GAAS,EAAI,cAACX,GAAD,0CAAoB/b,GAApB,IAA0BuD,QAAOsZ,SAAQ+J,QAAOlK,YAMnE,cAACT,GAAD,CAASzd,UAAU,MAAM+E,MAAOvD,EAAKlF,EAAEyI,EAAMS,SACrClI,UAAWynC,EAAe,eAAiB,IADShgC,EAAMoD,OAMpE68B,EAAW,SAAC,GAAD,IAAEjgC,EAAF,EAAEA,MAAOsZ,EAAT,EAASA,OAAQ+J,EAAjB,EAAiBA,MAAOlK,EAAxB,EAAwBA,MAAe1c,GAAvC,EAA+BX,IAA/B,2BAAuD,cAAC6d,GAAD,0CACjEld,GADiE,IAEpEuD,QACAsZ,SACA+J,QACAlK,QACA5gB,UAAW,IAAIiN,OAAOxF,EAAMoD,GAAI,MAAMqC,KAAKtL,EAAS8P,MAAM,KAAM,GAAM9P,EAAS8P,MAAM,KAAM,GAAM9P,GAAY,eAAiB,GAC9Hyf,WAAY,YAAqE,IAAnER,EAAkE,EAAlEA,kBACV,OAAOymB,EAAiB,aAACC,SAAUzc,EAAOlK,MAAOA,EAAQ,EAAGC,qBAAsB3c,UAI1F,OAAOqjC,EAAS3pC,KAAI,SAACZ,GAEjB,IAAOyK,EAAgCzK,EAAhCyK,MAAOqjB,EAAyB9tB,EAAzB8tB,MAAyB9tB,EAAlB+jB,OACrB,OADuC/jB,EAAV42B,SACd+T,IAAoBlX,OAExB,cAAC,IAAM3tB,SAAP,GAAqB2E,EAAMoD,GAAK,IAAM+V,GAEzCkK,EACO,wBAAC4c,EAAD,sDAAkB1qC,GAAlB,IAAyB4jB,SAAU1c,IAAnC,IAA0CrG,IAAK4J,EAAMoD,GAAK,IAAM+V,KAEhE,cAACD,GAAD,sDACA3jB,GADA,IAEH4jB,QACAE,SAAU0mB,EAAa,2BAAIxqC,GAAL,IAAY4jB,QAAOkK,SAAU5mB,IACnDrD,MAAO,CAACsgB,eAAgB,QACxBtjB,IAAK4J,EAAMoD,GAAK,IAAM+V,KALnB,IAMJpgB,SAAa,OAAJ0D,QAAI,IAAJA,OAAA,EAAAA,EAAM2c,mBAAoB3c,EAAK2c,uBAAoB3a,SAM/E,OACI,cAACs/B,GAAD,CAAcjiC,IAAKA,EAAKvD,UAAS,OAAEkE,QAAF,IAAEA,OAAF,EAAEA,EAAMlE,UAAzC,SACI,cAACqgB,GAAA,EAAD,CAAWrgB,UAAW,OAAQw5B,SAAS,KAAvC,SA/EA,eAAC8L,GAAD,WACI,eAACvlC,EAAA,EAAD,CAAKqC,QAAQ,OAAOyb,aAAa,SAASjb,eAAgB,aACrDD,WAAY,UADjB,UAEKijC,GACA0B,EAAiB,aAACC,SAAUN,EAAgB5tC,QAAS6K,OAE1D,cAACnE,EAAA,EAAD,CAAK2C,UAAW,KAAMN,QAAQ,OAAOO,WAAW,SAASC,eAAgB,WACpErC,MAAO,qBADZ,SAEK4mC,EAAe,aAACC,YAAaF,EAAmB7tC,QAAS6K,iBC1IxE0jC,GAAmBppC,YAAOuB,IAAPvB,CAAH,qCAClB,gBAAEG,EAAF,EAAEA,MAAO0a,EAAT,EAASA,OAAT,OAAqBI,GAAa,CAAC9a,QAAO0a,cAGjCwuB,GAAa,YAYwI,IAAD,EAXhHlP,EAWgH,EAXhHA,UAAWC,EAWqG,EAXrGA,UAWqG,IAThHW,kBASgH,MATnG,CACTD,OAAQ,EACRlM,OAAQ,EACRqW,SAAU,MACVzH,UAAW,EACXD,YAAa,EACb3iB,SAAUiU,IAASya,MAGyF,EAD9GjP,EAC8G,EAD9GA,MAQxC/+B,EAAYsC,IAAZtC,SAEDiuC,EAAoBjuC,EAAQ,OAAE6+B,QAAF,IAAEA,OAAF,EAAEA,EAAW7pB,YACzCk5B,EAAmBluC,EAAQ,OAAE8+B,QAAF,IAAEA,OAAF,EAAEA,EAAW9pB,YAExCm5B,EAA8C,KAAnB,OAAV1O,QAAU,IAAVA,OAAA,EAAAA,EAAY2O,cAAqB7a,IAASya,KAAOvO,GAAcA,EAAW2O,cAAgB3O,EAAW2O,aAAe,EAAI7a,IAAS8a,SAAW9a,IAASC,SAC5K,EAA2BlxB,IAApB5C,EAAP,EAAOA,SAASG,EAAhB,EAAgBA,QACVyzB,GAAoB,OAAVmM,QAAU,IAAVA,OAAA,EAAAA,EAAYnM,UAAoB,OAAVmM,QAAU,IAAVA,OAAA,EAAAA,EAAYnM,UAAWnjB,OAAOm+B,KAA4B,IAApB7O,EAAWnM,QAAcG,QAAQ,GAAK,IAAM,QACxH,OAAO,eAACqa,GAAD,CAAkBvuB,OAAQ,CAACC,IAAK3f,GAAhC,UAA2Ci/B,GAAaD,EAC3D,eAACjxB,GAAA,EAAD,CAAMG,WAAS,EAACrF,OAAQ,GAAxB,UACI,cAACkF,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,GAAIjb,OAAQ,GAA3B,SACI,eAACzC,EAAA,EAAD,CAAKqC,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,aAAcD,WAAY,SAAtF,UACI,cAAC5C,EAAA,EAAD,CAAKC,UAAW,YAAawC,OAAQ,+BAAgCtC,SAAU,WAC1EC,OAAQ,GACRgC,MAAO,+BAAgCQ,WAAY,SAAUC,eAAgB,SAFlF,SAGKmlC,EACG,cAAC,IAAD,CAAkBhqB,KAAMgqB,EAAa/pB,EAAGC,KAAM8pB,EAAansC,EACzCsiB,UAAW6pB,EAAavlC,OACxB2b,SAAU4pB,EAAa5lC,MAAOhD,KAAM,GACpCgE,QAAQ,WAAWib,IAAG,OAAEua,QAAF,IAAEA,OAAF,EAAEA,EAAW7pB,WAEnCuP,IAAK,6JACrB,cAACC,GAAA,EAAD,CAAQnb,QAAQ,WAAWib,IAAG,OAAEua,QAAF,IAAEA,OAAF,EAAEA,EAAW7pB,WAAsBjO,MAAO,CACtE2B,OAAQ,+BACRL,MAAO,gCAGDkc,IAAK,qCAGvB,eAACte,EAAA,EAAD,CAAKC,UAAW,YAAawC,OAAQ,+BAAgCtC,SAAU,WAC1EC,OAAQ,GAAI4C,MAAO,EACnBZ,MAAO,+BAAgCQ,WAAY,SACnDC,eAAgB,SAHrB,UAGgColC,EAC5B,cAAC,IAAD,CAAkBjqB,KAAMiqB,EAAYhqB,EAAGC,KAAM+pB,EAAYpsC,EAAGsiB,UAAW8pB,EAAYxlC,OACjE2b,SAAU6pB,EAAY7lC,MAAOhD,KAAM,GACnCgE,QAAQ,WAAWib,IAAG,OAAEwa,QAAF,IAAEA,OAAF,EAAEA,EAAW9pB,WAEnCuP,IAAK,6JACrB,cAACC,GAAA,EAAD,CAAQnb,QAAQ,WAAWib,IAAG,OAAEwa,QAAF,IAAEA,OAAF,EAAEA,EAAW9pB,WAAsBjO,MAAO,CACtE2B,OAAQ,+BACRL,MAAO,gCAGDkc,IAAK,mCAdnB,OAeA,eAACrb,GAAA,EAAD,CAAYG,QAAS,KAAMT,UAAW,KAAMkF,aAAc,EAA1D,UACI,cAAC5E,GAAA,EAAD,CAAYN,UAAW,OAAQ2D,MAAO,OAAQrG,UAAW,YAAzD,gBACK24B,QADL,IACKA,OADL,EACKA,EAAW7pB,aAEhB,cAAC9L,GAAA,EAAD,CAAYN,UAAW,IAAvB,eACA,cAACM,GAAA,EAAD,CAAYN,UAAW,OAAQ2D,MAAO,MAAtC,SACKuyB,EAAU9pB,gBAGlB+pB,EAAQ,cAAC,GAAD,SAAgB3yB,OAGjC,eAACwB,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,GAAIjb,OAAQ,GAAIJ,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,aAChFD,WAAY,SAAU3C,UAAW,cAAeI,UAAW,EADjE,UAGI,eAAC4C,GAAA,EAAD,CAAYG,QAAS,KAArB,0BAA+Bo2B,EAAWpoB,aAA1C,QAAmD,EAAnD,IAAuDynB,EAAU9pB,WAAjE,UACA,eAAC/O,EAAA,EAAD,CAAKqC,QAAS,OAAQ6P,cAAe,SAAUtP,WAAY,aAAcC,eAAgB,SACpF5C,UAAW,cADhB,UAEI,cAACgD,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,OAC7B1C,UAAW,eADvB,SAEK,MAGL,eAACgD,GAAA,EAAD,CAAYG,QAAS,KAAMT,UAAW,OAAQN,QAAS,OAAQO,WAAY,WAA3E,UACI,cAACK,GAAA,EAAD,CAAYG,QAAS,KAAMT,UAAW,OAAtC,SAGKlJ,IAAaC,IAASC,OAAS,UAAYy/B,IAASC,OAC/Czb,aAA4B4b,GAAcA,EAAW8O,YAAc9O,EAAW8O,YAAwB,EAAG,GACzG,UAAYlP,IAASE,KACrB1b,aAA4B4b,GAAcA,EAAW+O,UAAY/O,EAAW+O,UAAsB,EAAG,KAE/G,eAACtlC,GAAA,EAAD,CAAYG,QAAS,KAAMT,UAAW,OAAQ1C,UAAS,0BAAqBioC,GAA5E,mBACOA,IAAmB5a,IAASC,SAAW,IAAM,GAAKF,EADzD,wBAMN,6BA3EP,QC1CLqL,GAAYj6B,YAAOuB,IAAPvB,CAAH,8IAQF+pC,GAAaxxB,aAAgB,SAAhBA,EAA0B,YAS2C,IARtC/X,EAQqC,EARrCA,EACAwpC,EAOqC,EAPrCA,UACAjS,EAMqC,EANrCA,eACAD,EAKqC,EALrCA,eACAD,EAIqC,EAJrCA,cACAoS,EAGqC,EAHrCA,qBACAC,EAEqC,EAFrCA,sBACAC,EACqC,EADrCA,sBAGrD,EAA4BlsC,IAAMuK,UAAkBwhC,EAAUzrC,QAASyrC,EAAUzrC,QAAjF,oBAAOA,EAAP,KAAe6rC,EAAf,KACA,OAAO,eAAClhC,GAAA,EAAD,CAAMG,WAAS,EAAC2K,QAAS,EAAG5P,eAAgB,gBAAiBD,WAAY,aAAzE,UACH,eAAC+E,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,EAAGrb,QAAS,OAAQ6P,cAAe,SAAlD,UACI,cAAC,GAAD,CAAWvP,UAAW,IAAKN,QAAS,OAAQO,WAAY,SAAUC,eAAgB,aACvExC,UAAW,EAAG4H,aAAc,OADvC,SAEI,eAAChF,GAAA,EAAD,CAAYN,UAAW,OAAQS,QAAS,QAASyE,aAAc,EAAGrH,MAAO,gBAAzE,UACKvB,EAAE,mBACF,IACD,cAACsB,EAAA,EAAD,CACInB,KAAM,QAENqB,QAAS,kBAAMooC,GAAW7rC,IAC1B,aAAYiC,EAAE,wBAJlB,SAKKjC,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,WAMpC,eAACiG,GAAA,EAAD,CAAYN,UAAW,IAAKN,QAAS,OAAQO,WAAY,SAAUC,eAAgB,aACvExC,UAAW,EADvB,UAEI,eAAC4C,GAAA,EAAD,CAAYN,UAAW,OAAQkF,aAAc,EAAGzE,QAAS,KAAzD,cAAiEqlC,EAAUK,SAA3E,OACC9rC,EAAS,cAACiG,GAAA,EAAD,CAAYN,UAAW,OACXS,QAAS,KADrB,SAC4BqlC,EAAUM,WAAanrB,aAA4B1T,OAAOu+B,EAAUM,WAAWvb,QAAQ,KAAO,IAChI,cAACvqB,GAAA,EAAD,CAAYN,UAAW,OACXS,QAAS,KADrB,+DAIZ,eAACwW,GAAD,CAAuBzX,MAAI,EAACub,GAAI,EAAGrb,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,WAA1F,UACI,cAAC,EAAD,CAAQO,QAAS,YAAahE,KAAM,QAASoB,MAAO,UAC5C7B,QAAS+pC,IAAyB7kC,GAAe2E,QAAU,OAAS,QACpE9I,SAAUgpC,IAAyB7kC,GAAe4E,SAClDhI,QAAS61B,EAHjB,SAGiCr3B,EAAE,qBACnC,cAAC,EAAD,CAAQmE,QAAS,WAAYhE,KAAM,SAAUoB,MAAO,UAC5C7B,QAASgqC,IAA0B9kC,GAAe2E,QAAU,OAAS,QACrE9I,SAAUipC,IAA0B9kC,GAAe4E,SACnDhI,QAAS81B,EAHjB,SAGkCt3B,EAAE,sBACpC,cAAC,EAAD,CAAQmE,QAAS,WAAYhE,KAAM,SAAUoB,MAAO,YAC5C7B,QAASiqC,IAA0B/kC,GAAe2E,QAAU,OAAS,QACrE9I,SAAUkpC,IAA0B/kC,GAAe4E,SACnDhI,QAAS+1B,EAHjB,SAGkCv3B,EAAE,+B,wECpC1C+pC,GAAU,SAAC,GAOyC,IALrC1pC,EAKoC,EALpCA,KACA2pC,EAIoC,EAJpCA,UACA/wB,EAGoC,EAHpCA,KACA9G,EAEoC,EAFpCA,MACA83B,EACoC,EADpCA,YAsBjB,OAfIhxB,EAAO9G,GACC,EACD8G,EAAO9G,EACP,EAGH63B,EAAY,EAER3pC,EAAM2pC,EAAY,GAAKC,IAAiB93B,EAClC,GACC,EAEP,GC9CV+3B,GAAW,UACXC,GAAa,UAEbC,GAAgB5qC,YAAOuB,IAAPvB,CAAH,qOAGA,kBAA0B,IAA1B,EAAEG,MAAiBqN,QACzB,mBAA0B,EAA1B,EAAErN,MAAiBqN,QAAc,mBAA0B,EAA1B,EAAErN,MAAiBqN,QAkLlDq9B,GAzKI,SAAC,GAU4B,IAAD,EATvB95B,EASuB,EATvBA,KACAlQ,EAQuB,EARvBA,KAQuB,IAPvBiqC,0BAOuB,MA3BlB,IA2BkB,EANvBC,EAMuB,EANvBA,WAMuB,IAJvBC,mBAIuB,aAHvBC,gBAGuB,SAFvBC,EAEuB,EAFvBA,UAEuB,IADvBC,iBACuB,SACrC3b,EAAe5xB,IACfzC,EAAUq0B,EAAeA,EAAar0B,QAAU,QAChDiwC,EDuBmB,SACzBr6B,EACAlQ,GAEA,OAAKA,GAAS4yB,MAAMC,QAAQ7yB,GAIrBA,EAAKzB,KAAI,SAACsxB,EAAGrsB,GAAJ,mBAAC,eACVqsB,GADS,IAEZ2a,KAAMd,GAAQ,CACVx5B,OACAlQ,KAAMA,EACN2pC,UAAWnmC,EACXoV,KAAMiX,EAAEjX,KACR9G,MAAO+d,EAAE/d,MACT83B,YAVY,SAFsB,GC3BvB3W,CAAc/iB,EAAMlQ,GACvC,EAAoC2H,mBAAsE,KAA9C,UAAA4iC,EAAYA,EAAW5nC,OAAS,UAAhC,eAAqC6nC,MAAa,KAAO,QAArH,oBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAwC/iC,oBAAU,GAAlD,oBAAOgjC,EAAP,KAAqBC,EAArB,KAEMC,EACU,UAAZvwC,EACqB,OAAfmwC,EACAZ,GACAC,GACe,OAAfW,EACAX,GACAD,GACJiB,EAAU9qC,GAAQ4yB,MAAMC,QAAQ7yB,MAAWA,EAAK2C,OAEhDooC,EAAkB1tC,uBACpB,SAACM,GACG,GAAKmtC,EAAL,CACA,IAAOE,EAAsBrtC,EAAtBqtC,mBAGDC,EAAWD,IAAuBL,EACpC//B,OAAO+kB,SAASqb,IAAuBC,IACvCL,EAAgBI,GAEZT,EAAYS,IACZT,EAAYS,GAAqBR,MAEjCE,EAC8C,IAA1CH,EAAYS,GAAqBR,KAC3B,KACA,QAGVN,GACAA,EAAWK,EAAYS,QAInC,CAACT,EAAYL,EAAYS,EAAcG,IAGrCI,EAAuB7tC,uBAAY,SAACM,GACtC,GAAKmtC,EAAL,CACA,IACKntC,EAAMxC,UACNwC,EAAMxC,QAAQwH,SACdhF,EAAMxC,QAAS,GAAIA,QAAQgwC,UAE5B,OAAO,yBACX,MAA2BxtC,EAAMxC,QAAS,GAAIA,QAAvCgwC,EAAP,EAAOA,UAAWr5B,EAAlB,EAAkBA,MAClB,OACI,eAACi4B,GAAD,WACKM,GACG,cAAC1mC,GAAA,EAAD,CAAYN,UAAW,MAAOO,SAAU,GAAxC,mBAAgDkO,EAAhD,YAAyDu4B,KAE7D,cAAC1mC,GAAA,EAAD,CAAYN,UAAW,MAAOO,SAAU,GAAxC,SACKtI,IAAO6vC,GAAW3V,OAAO,+BAIvC,CAACsV,EAAST,IAEPe,EAAmB/tC,uBAAY,WAAO,IAAD,EACvCqtC,EAA4D,KAA9C,UAAAH,EAAYA,EAAW5nC,OAAS,UAAhC,eAAqC6nC,MAAa,KAAO,UACxE,CAACD,IAEJv0B,cAAqB,WACbu0B,GAAgBA,EAAW5nC,QAC3B+nC,EAA2D,IAA7CH,EAAYA,EAAW5nC,OAAS,GAAI6nC,KAC5C,KACA,UAEX,CAACD,IAeJ,OACI,cAACc,GAAA,EAAD,CAAqBpjC,SAAU,EAAGnF,MAAO,MAAzC,SACI,eAACwoC,GAAA,EAAD,CAAetrC,KAAMuqC,EAAYgB,YAAapB,GAAeY,EAC9CS,aAAcJ,EAD7B,UAEI,+BACI,iCAAgB5/B,GAAG,UAAUigC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAArD,UAEI,sBACIC,OAAO,KACPC,UAAWjB,EACXkB,YAAa,KAEjB,sBACIF,OAAO,MACPC,UAAWjB,EACXkB,YAAa,SAIzB,cAACC,GAAA,EAAD,CACIC,MAAO3B,EACP4B,QAAQ,OACRC,SAAU,EACVC,UAAU,EACVC,UAAU,EACVC,KAtCG,SAAC,GAA0B,IAAzB3tB,EAAwB,EAAxBA,EAAGpiB,EAAqB,EAArBA,EAAGpB,EAAkB,EAAlBA,QACvB,OAAKovC,GAAeA,EAAW5nC,OAI3B,mBAAGlB,UAAS,oBAAekd,EAAf,aAAqBpiB,EAArB,KAAZ,SACI,sBAAMoiB,EAAG,EAAGpiB,EAAG,EAAGgwC,GAAI,GAAI3oC,SAAU,GAAI4oC,WAAW,QAAQ1f,KAAK,UAAhE,SACK3xB,EAAQmC,UALV,4BAsCH,cAACmvC,GAAA,EAAD,CACIR,MAAM,EACNS,OAAQ,CACJ,SAACC,GAAD,OAAqBA,GAAW,EAAI1C,IACpC,SAAC2C,GAAD,OAAqBA,GAAW,EAAI3C,OAG3Ca,GAAWX,GACR,cAAC0C,GAAA,EAAD,CACI/e,OAAQ,CAACgf,OAAQ,UAAWC,gBAAiB,OAE7ClsC,SAAU,CAACtE,EAAG,IACdsc,QAAS,SAAClb,GAAD,OAAWutC,EAAqBvtC,MAGjD,cAACqvC,GAAA,EAAD,CACI98B,KAAK,WACL+8B,cAAc,QACdC,YAAa,EACbhB,QAAQ,QACRY,OAAQjC,EACRsC,KAAK,EACLC,WAAW,OACXC,mBAAmB,IAEtBjD,GACG,cAACkD,GAAA,EAAD,CACIp9B,KAAK,WACLg8B,QAAQ,QACRY,OAAO,QACPI,YAAa,EACbK,YAAa,EACbzgB,KAAK,gBACLugB,mBAAmB,UCvLrCG,GAAa,UACbC,GAAa,UA0KJC,GApJI,SAAC,GAKmB,IAJf1tC,EAIc,EAJdA,KACAkqC,EAGc,EAHdA,WAGc,IAFdD,0BAEc,MA1BjB,GA0BiB,MADd0D,iBACc,MADF,QACE,EAClC,EAAwChmC,oBAAU,GAAlD,oBAAOgjC,EAAP,KAAqBC,EAArB,KAEMgD,EAA0B,UAAdD,EAAwBH,GAAaC,GACjDI,EAA0B,UAAdF,EAAwBF,GAAaD,GAEjD1C,EAAU9qC,GAAQ4yB,MAAMC,QAAQ7yB,MAAWA,EAAK2C,OAEhDuoC,EAAuB7tC,uBAAY,SAACM,GAEtC,IAAKmtC,EAAS,MAAO,GACrB,GAAIntC,EAAMxC,SAAawC,EAAMxC,QAAQwH,QAAUhF,EAAMxC,QAAS,GAAIA,QAAS,CACvE,IAAOA,EAAWwC,EAAMxC,QAAS,GAA1BA,QACAuO,EAASvO,EAATuO,MACP,GAAIvO,EAAQ2yC,KACR,OACI,qCACI,0CAAapkC,KACb,2CAAcvO,EAAQ2yC,WAIlC,GAAI3yC,EAAQ4yC,KACR,OACI,qCACI,0CAAarkC,KACb,2CAAcvO,EAAQ4yC,WAKtC,OAAO,2BACR,CAACjD,IAEEC,EAAkB1tC,uBACpB,SAACM,GAEG,GAAKmtC,EAAL,CACA,IAAOE,EAAsBrtC,EAAtBqtC,mBAEDC,EAAWD,IAAuBL,EACxC,GAAI//B,OAAO+kB,SAASqb,IAAuBC,EAAU,CACjDL,EAAgBI,GAChB,MAAwBrtC,EAAMqwC,cAAe,GAAtC7yC,EAAP,EAAOA,QAASL,EAAhB,EAAgBA,KACZovC,GACAA,EAAW,CACPxgC,MAAOvO,EAAQuO,MACfwG,KAAMpV,EACNo3B,OAAQ/2B,EAAQ2yC,MAAQ3yC,EAAQ4yC,WAKhD,CAAC7D,EAAYS,EAAcG,IAGzBmD,EFEkB,SAACjuC,GACzB,GAAKA,IAAQ4yB,MAAMC,QAAQ7yB,GAA3B,CACA,IAAOkuC,EAAwDluC,EAAxDkuC,WAAYC,EAA4CnuC,EAA5CmuC,WAAYC,EAAgCpuC,EAAhCouC,cAAeC,EAAiBruC,EAAjBquC,cACxCC,EAAsBJ,EAAW3vC,KAAI,SAACmL,GAAD,MAAoB,CAC3DwG,KAAM,OACNxG,YAEE6kC,EAAsBJ,EAAW5vC,KAAI,SAACmL,GAAD,MAAoB,CAC3DwG,KAAM,OACNxG,YAEE8kC,EAAcF,EAAoBp9B,OAAOq9B,GAG/C,OAFuBH,EAAcl9B,OAAOm9B,GAEtB9vC,KAAI,SAAC2zB,EAAgB1uB,GAAjB,MACQ,SAA9BgrC,EAAahrC,GAAQ0M,KACf,CACExG,MAAO8kC,EAAahrC,GAAQkG,MAC5BokC,KAAM5b,GAER,CACExoB,MAAO8kC,EAAahrC,GAAQkG,MAC5BqkC,KAAM7b,OExBIuc,CAAazuC,GAEnC,OACI,cAACqrC,GAAA,EAAD,CAAqBvoC,MAAO,MAA5B,SACI,eAACwoC,GAAA,EAAD,CAAetrC,KAAMiuC,EAAe1C,YAAaR,EAAjD,UACI,iCACI,iCAAgBv/B,GAAG,YAAYigC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvD,UACI,sBACIC,OAAO,KACPC,UAAW8B,EACX7B,YAAa,KAEjB,sBACIF,OAAO,MACPC,UAAW8B,EACX7B,YAAa,OAGrB,iCAAgBvgC,GAAG,YAAYigC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvD,UACI,sBACIC,OAAO,KACPC,UAAW+B,EACX9B,YAAa,KAEjB,sBACIF,OAAO,MACPC,UAAW+B,EACX9B,YAAa,UAIzB,cAACC,GAAA,EAAD,CACIE,QAAQ,QACRD,MAAM,EACN/7B,KAAK,WACLw+B,yBAAuB,IAE3B,cAACjC,GAAA,EAAD,CACIR,MAAM,EACNS,OAAQ,CACJ,SAACC,GAAD,OAAqBA,GAAW,EAAI1C,IACpC,SAAC2C,GAAD,OAAqBA,GAAW,EAAI3C,OAG3Ca,GACG,cAAC+B,GAAA,EAAD,CACIhsC,SAAU,CAACtE,EAAG,IACdsc,QAAS,SAAClb,GAAD,OAAWutC,EAAqBvtC,MAGjD,cAACqvC,GAAA,EAAD,CACI98B,KAAK,OACLg8B,QAAQ,OACRY,OAAQc,EACRT,KAAK,EACLwB,kBAAmB,IACnBtB,mBAAmB,IAEvB,cAACL,GAAA,EAAD,CACI98B,KAAK,OACLg8B,QAAQ,OACRY,OAAQe,EACRV,KAAK,EACLwB,kBAAmB,IACnBtB,mBAAmB,IAEvB,cAACC,GAAA,EAAD,CACIp9B,KAAK,OACLg8B,QAAQ,OACRY,OAAO,QACPhgB,KAAK,kBACL6hB,kBAAmB,IACnBtB,mBAAmB,IAEvB,cAACC,GAAA,EAAD,CACIp9B,KAAK,OACLg8B,QAAQ,OACRY,OAAO,QACPhgB,KAAK,kBACL6hB,kBAAmB,IACnBtB,mBAAmB,U,mDCpKjCuB,GAAS,CACX,UACA,UACA,UACA,UACA,UACA,WAGEC,GAAmB1vC,IAAOiD,IAAV,6UAMT,gBAAE9C,EAAF,EAAEA,MAAF,gBAAgBA,EAAMC,UAAU4a,gBAYvC20B,GAAoB,SAAC,GAAD,IACKC,EADL,EACKA,GACAC,EAFL,EAEKA,GACAC,EAHL,EAGKA,YACAC,EAJL,EAIKA,YACAC,EALL,EAKKA,WACAC,EANL,EAMKA,SACAtiB,EAPL,EAOKA,KAPL,OAStB,4BACI,cAACuiB,GAAA,EAAD,CACIN,GAAIA,EACJC,GAAIA,EACJC,YAAaA,EACbC,YAAaA,EAAc,EAC3BC,WAAYA,EACZC,SAAUA,EACVtiB,KAAMA,OAaZwiB,GAAe,SAAC,GAAD,IAAEn0C,EAAF,EAAEA,QAAF,OACjB,oBAAIqG,MAAO,CAACR,YAAa,IAAzB,SACK7F,EAAQoD,KAAI,SAACgxC,EAAY/rC,GACtB,IAAOtC,EAA0CquC,EAA1CruC,MAAO5D,EAAmCiyC,EAAnCjyC,MAAwB40B,EAAWqd,EAA5Bp0C,QAAUmC,MACzBkyC,EAAoBrwC,IAAOiD,IAAV,6IAGClB,GAExB,OACI,6BACI,eAAC2tC,GAAD,WACI,iCAAM,cAACW,EAAD,IAAqBlyC,KAC3B,qCAAQ40B,EAAOhE,QAAQ,UAH/B,eAAiB1qB,UAWpBisC,GAAgB,SAAC,GAAgC,IAA/BzvC,EAA8B,EAA9BA,KAC3B,EAAsC5C,IAAMuK,cAASd,GAArD,oBAAO6oC,EAAP,KAAoBC,EAApB,KAEMC,EAAaxyC,IAAMC,aAAY,SAACqvB,EAAGlpB,GACrCmsC,EAAensC,KAChB,IAEGqsC,EAAazyC,IAAMC,aAAY,WACjCsyC,OAAe9oC,KAChB,IAEGipC,EAAmB1yC,IAAMC,aAAY,WACvC,IAAK2C,IAASA,EAAK2C,OAAQ,MAAO,GAClC,GAAI3C,EAAK2C,OAAS,EAAG,OAAO3C,EAC5BA,EAAK+uB,MAAK,SAAC7Y,EAAG8Y,GAAJ,OAAUA,EAAE1xB,MAAQ4Y,EAAE5Y,SAChC,IAAMyyC,EAAS/vC,EAAK+mB,MAAM,EAAG/mB,EAAK2C,QAAQ+K,QAAO,SAACwI,EAAG8Y,GAAJ,MAAW,CACxDl0B,KAAM,SACNwC,MAAO4Y,EAAE5Y,MAAQ0xB,EAAE1xB,UAEjB0yC,EAAShwC,EAAK+mB,MAAM,EAAG,GAAG7V,OAAO,CAAC6+B,IAExC,OADAx7B,QAAQC,IAAIw7B,GACLA,IACR,CAAChwC,IAEJ,OACI,cAACqrC,GAAA,EAAD,CAAqBpjC,SAAU,EAAGnF,MAAO,MAAzC,SACI,eAACmtC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACIhE,QAAS,QACTwD,YAAaA,EACbS,YAAarB,GACb9uC,KAAM8vC,IACNf,GAAI,MAEJE,YAAa,GACbC,YAAa,GACbpiB,KAAK,UACLggB,OAAO,OACPsD,OAAQ,EACRC,aAAc,EACdC,SAAU,EACVC,gBAAiB,cACjB5B,kBAAmB,IACnBtmB,aAAcunB,EACdpE,aAAcqE,EAjBlB,SAmBKC,IAAmBvxC,KAAI,SAACgxC,EAAO/rC,GAAR,OACpB,cAACqkB,GAAA,EAAD,CAAuBiF,KAAM8hB,GAAQprC,IAA1B+rC,EAAMz0C,WAGzB,cAAC+xC,GAAA,EAAD,CACInf,UAAW,SAACpwB,EAAYxC,GAAb,MAA4B,CAAC,IAAD,OAAKwC,GAAL,UAAiBxC,KACxD01C,aAAc,CACVnkC,gBAAiB,sBACjBxK,OAAQ,QAEZ4uC,UAAW,CACPvvC,MAAO,aAGf,cAACwvC,GAAA,EAAD,CAAQC,OAAO,WAAWC,MAAM,QAAQjQ,cAAc,SAAS9nB,QAASy2B,Y,SR/I5EnL,K,cAAAA,E,cAAAA,E,eAAAA,Q,cAMAC,K,QAAAA,E,QAAAA,E,SAAAA,Q,SSyBPyM,G,mVAAAA,K,aAAAA,E,gBAAAA,Q,wBCkGOlK,GD5ENmK,G,+MACe1tC,OAAS,CAACM,KAAM,EAAGinB,MAAO,GAAI9mB,IAAK,EAAGktC,OAAQ,I,EAC9CC,oBAAsBxb,aAAO,O,EAC7Byb,eAAiBC,eAAwCC,mBACtE,SAACl1C,GAAD,OAAkBA,EAAEg4B,Q,EAGPmd,eAAiB,CAC9BC,UAAW,CACPC,WAAY,WAEhBC,YAAa,CACTC,KAAM,UACNC,OAAQ,UACRC,KAAM,W,EAgPGC,gBAAkB,SAAC3xC,GAChC,OAAOA,EAAKi6B,Q,EAGC2X,mBAAqB,SAAC5xC,GACnC,MAAO,CAACA,EAAK6xC,KAAM7xC,EAAK8xC,M,EAGXC,eAAiB,SAAC/xC,GAC/B,OAAOA,EAAK8R,O,EAGCkgC,iBAAmB,SAAChyC,GAAD,OAAqBA,EAAK8R,MAAQ9R,EAAK4Y,KAAOi4B,GAAgB9Q,GAAK8Q,GAAgB7Q,M,EAEtGiS,YAAc,SAACjyC,GAC5B,OAAOA,EAAK8R,MAAQ9R,EAAK4Y,KAAO,0BAA4B,0B,EAG/Cs5B,aAAe,SAAClyC,GAC7B,OAAOA,EAAKi6B,Q,EAGCkY,eAAiB,SAACnyC,GAC/B,OAAOA,EAAK8R,MAAQ9R,EAAK4Y,KAAO,UAAY,W,6CAvPhD,WACI,MAA4Ew5B,KAAKz0C,MAApE00C,EAAb,EAAOryC,KAAP,IAA0BsyC,sBAA1B,MAA2C,QAA3C,EAAoDnvC,EAApD,EAAoDA,OAAQovC,EAA5D,EAA4DA,MAAOzvC,EAAnE,EAAmEA,MAE7D0vC,EAAiBhB,eAElBiB,QAAQ,CACLC,KAAM,GACNjB,OAAQ,EACRkB,KAAM,KAETC,OAAM,SAAC32C,EAAQgrB,GACZhrB,EAAEu1C,KAAOvqB,KAEZ4rB,UAAS,SAAC52C,GAAD,OAAYA,EAAEu1C,QAEtBsB,EAAOC,eACRvnC,GAAG,GACHinC,QAAQ,CAACO,WAAY,IACrBJ,OAAM,SAAC32C,EAAQgrB,GACZhrB,EAAE62C,KAAO7rB,KAEZ4rB,UAAS,SAAC52C,GAAD,OAAYA,EAAE62C,QAEtBG,EAAQF,eACTvnC,GAAG,GACHinC,QAAQ,CAACO,WAAY,KACrBJ,OAAM,SAAC32C,EAAQgrB,GACZhrB,EAAEg3C,MAAQhsB,KAEb4rB,UAAS,SAAC52C,GAAD,OAAYA,EAAEg3C,SAEtBC,EAAQH,eACTvnC,GAAG,GACHinC,QAAQ,CAACO,WAAY,KACrBJ,OAAM,SAAC32C,EAAQgrB,GACZhrB,EAAEi3C,MAAQjsB,KAEb4rB,UAAS,SAAC52C,GAAD,OAAYA,EAAEi3C,SAEtBC,EAAQJ,eACTvnC,GAAG,GACHinC,QAAQ,CAACO,WAAY,KACrBJ,OAAM,SAAC32C,EAAQgrB,GACZhrB,EAAEk3C,MAAQlsB,KAEb4rB,UAAS,SAAC52C,GAAD,OAAYA,EAAEk3C,SAEtBC,EAAYC,eACb7nC,GAAG,GACHonC,OAAM,SAAC32C,EAAQgrB,GACZhrB,EAAEq3C,GAAKrsB,KAEV4rB,UAAS,SAAC52C,GAAD,OAAYA,EAAEq3C,MAItBC,EAAQC,eACThoC,GAAG,GACHinC,QAAQ,CAACO,WAAY,KACrBJ,OAAM,SAAC32C,EAAQgrB,GACZhrB,EAAEs3C,MAAQtsB,KAEb4rB,UAAS,SAAC52C,GAAD,OAAYA,EAAEs3C,SAEtBE,EAAQD,eACThoC,GAAG,GACHinC,QAAQ,CAACO,WAAY,KACrBJ,OAAM,SAAC32C,EAAQgrB,GACZhrB,EAAEw3C,MAAQxsB,KAEb4rB,UAAS,SAAC52C,GAAD,OAAYA,EAAEw3C,SAEtBC,EAAgBlB,EAAeK,WAC/Bc,EAAcnB,EAAeC,UAG7BmB,EAAiBpB,EAAeiB,EAAMF,EAAMlB,KAG3CjvC,EAA0BgvC,KAA1BhvC,OAEP,GAAoD6tC,EAFnBmB,KAAlBnB,gBAEoD2C,GAA5D5zC,EAAP,EAAOA,KAAM6zC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,iBAE1BC,EAAMF,EAAU9zC,EAAMA,EAAK2C,OAAS,IAEpCsxC,EAAW,CADLH,EAAU9zC,EAAMk0C,KAAKF,IAAI,EAAGh0C,EAAK2C,OAAS,OAC/BqxC,EAAM,GAWvBG,EATahxC,EAASC,EAAOS,IAAMT,EAAO2tC,OAO3B,IACF,IAGbqD,EAAoBC,aAAW/B,GAQrC,OACI,eAACgC,GAAA,EAAD,CACInxC,OAAQA,EACRovC,MAAOA,EACPzvC,MAAOA,EACPM,OAAQA,EACRpD,KAAMA,EACN+zC,iBAAkBA,EAClBQ,WAAW,OACXV,OAAQA,EACRC,UAAWA,EACXG,SAAUA,EACVO,WAAYC,KAXhB,UAaI,eAACC,GAAA,EAAD,CAAOlpC,GAAI,EAAGrI,OAAQgxC,EAAaQ,SAAUvC,KAAKR,mBAAoBrjC,QAAS,CAAC1K,IAAK,GAAIktC,OAAQ,IAAjG,UACI,cAAC,KAAD,CAAO6D,eAAa,EAACC,qBAAsB,2BAA4BC,WAAW,EAC3EC,eAAe,EAAOC,cAAe,2BACrCzD,YAAa,6BACpB,cAAC,KAAD,CAAOqD,eAAa,EAACC,qBAAsB,2BACpCI,WAAY7C,KAAKpB,oBAAqBgE,cAAe,2BACrDzD,YAAa,6BACpB,cAAC2D,GAAA,EAAD,CAAmBpoB,KAAMslB,KAAKJ,mBAC9B,cAACmD,GAAA,EAAD,CAAYC,UAAWtC,EAAKD,WAAYtB,YAAauB,EAAKhG,WAC1D,cAACuI,GAAA,EAAD,CAAmBD,UAAWtC,EAAKD,WAAYxB,UAAWyB,EAAKhG,WAC/D,cAACqI,GAAA,EAAD,CAAYC,UAAWnC,EAAMJ,WAAYtB,YAAa0B,EAAMnG,WAC5D,cAACuI,GAAA,EAAD,CAAmBD,UAAWnC,EAAMJ,WAAYxB,UAAW4B,EAAMnG,WACjE,cAACqI,GAAA,EAAD,CAAYC,UAAWlC,EAAML,WAAYtB,YAAa2B,EAAMpG,WAC5D,cAACuI,GAAA,EAAD,CAAmBD,UAAWlC,EAAML,WAAYxB,UAAW6B,EAAMpG,WACjE,cAACqI,GAAA,EAAD,CAAYC,UAAWjC,EAAMN,WAAYtB,YAAa4B,EAAMrG,WAC5D,cAACuI,GAAA,EAAD,CAAmBD,UAAWjC,EAAMN,WAAYxB,UAAW8B,EAAMrG,WACjE,cAACwI,GAAA,EAAD,CAAkBC,UAAWnyC,EAAOunB,MAAO6qB,cAAepD,KAAKpB,sBAC/D,cAACyE,GAAA,EAAD,CACIC,SAAS,OACTH,UAAWnyC,EAAOunB,MAClBmC,KAAMslB,KAAKD,eACXwD,WAAYvD,KAAKD,eACjBqD,cAAepD,KAAKpB,oBACpBoE,UAAWhD,KAAKL,iBAEpB,cAAC6D,GAAA,EAAD,CACIC,OAAQ,CAAC,EAAG,IACZC,SAAU,OACVrD,QAAS,CACL,CACI2C,UAAWtC,EAAKD,WAChB3iC,KAAM,KACN48B,OAAQgG,EAAKhG,SACbkG,WAAYF,EAAKL,UAAUO,YAE/B,CACIoC,UAAWnC,EAAMJ,WACjB3iC,KAAM,KACN48B,OAAQmG,EAAMnG,SACdkG,WAAYC,EAAMR,UAAUO,YAEhC,CACIoC,UAAWlC,EAAML,WACjB3iC,KAAM,KACN48B,OAAQoG,EAAMpG,SACdkG,WAAYE,EAAMT,UAAUO,YAEhC,CACIoC,UAAWjC,EAAMN,WACjB3iC,KAAM,KACN48B,OAAQqG,EAAMrG,SACdkG,WAAYG,EAAMV,UAAUO,eAKxC,cAAC+C,GAAA,EAAD,CAAaF,OAAQ,CAAC,EAAG,IAAKC,SAAU,SACxC,cAACE,GAAA,EAAD,CACIzE,YA9EC,CACb1tC,IAAK,UACLoyC,OAAQ,UACRlF,OAAQ,aA6EA,cAACmF,GAAA,EAAD,CACIL,OAAQ,CAAC,EAAG,IACZT,UAAW,SAAAn5C,GAAC,OAAIA,EAAEq3C,IAClBb,QAASW,EAAUX,UACnBqD,SAAU,YAiBlB,eAACpB,GAAA,EAAD,CAAOlpC,GAAI,EAAGqqC,OAAQ,SAACM,EAAIC,GAAL,MAAY,CAAC,EAAGA,EAAK,MAAMjzC,OAAQ,IAAKwxC,SAAUjB,EAAxE,UACI,cAAC,KAAD,CAAOkB,eAAa,EAACC,qBAAsB,2BAA4BwB,OAAO,SACvEC,OAAO,SAAStB,cAAe,2BAC/BzD,YAAa,6BACpB,cAAC,KAAD,CAAOqD,eAAa,EAACC,qBAAsB,2BAA4BwB,OAAO,QAAQC,OAAO,QACtFC,MAAO,EAAGtB,WAAYzf,aAAO,OAAQwf,cAAe,2BACpDzD,YAAa,6BACpB,cAACiF,GAAA,EAAD,CAAkBhB,cAAepB,IACjC,cAACkB,GAAA,EAAD,CAAkBC,UAAWnyC,EAAOunB,MAAO6qB,cAAepD,KAAKpB,sBAC/D,cAACyF,GAAA,EAAD,aAAYrB,UAAW1B,GAAmBtB,KAAKhB,iBAC/C,cAACsF,GAAA,EAAD,CACIb,OAAQ,CAAC,EAAG,IACZc,WAAYvE,KAAKhB,eACjBqB,QAASkB,EACTyB,UAAW1B,OAGnB,cAACkD,GAAA,EAAD,CAAiBrF,YAAa,gB,GAxPrBn0C,aAyRZy5C,GAAmBC,aAAS,CAACt1C,MAAO,CAACqJ,UAAW,MAA7BisC,CAAoCC,eAAkBjG,KEzTzEkG,GAAiB,SAACr5C,GAC3B,OAAQA,EAAMuS,MACV,KAAKi0B,GAAU8S,MACX,OAAO,cAAC,GAAD,eAAgBt5C,IAC3B,KAAKwmC,GAAU+S,MACX,OAAO,cAAC,GAAD,eAAgBv5C,IAC3B,KAAKwmC,GAAUgT,MACX,OAAO,cAACN,GAAD,CAAkB72C,KAAMrC,EAAMqC,OACzC,QACI,OAAO,kFChBbo3C,GAAoBj4C,YAAOuB,IAAPvB,CAAH,oXAKF,qBAAEG,MAAiBqN,QAKf,mBAA0B,EAA1B,EAAErN,MAAiBqN,QAGxC,gBAAErN,EAAF,EAAEA,MAAO0a,EAAT,EAASA,OAAT,OAAqBD,GAAS,CAACza,QAAO0a,cAc7Bq9B,GAAc,YAM0E,IAL5C/d,EAK2C,EAL3CA,UACA35B,EAI2C,EAJ3CA,EACA45B,EAG2C,EAH3CA,UACAW,EAE2C,EAF3CA,WAE2C,IAD3Cod,iBAC2C,MAD/B,GAC+B,EACzFh9C,EAAWyC,IAAXzC,QACP,OAAO,eAAC88C,GAAD,CAAmBp9B,OAAQ,CAACC,IAAK3f,GAAUiU,QAAS,IAASxL,QAAS,OACnDQ,eAAgB,UADnC,UAEF+1B,GAAaC,EACV,eAAClxB,GAAA,EAAD,CAAMG,WAAS,EAACjF,eAAgB,eAAgB1C,SAAU,WAA1D,UACI,cAACwH,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,GAAIrb,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,aACpED,WAAY,SAAUH,OAAQ,GADpC,SAEI,eAACQ,GAAA,EAAD,CAAYG,QAAS,KAAMT,UAAW,KAAtC,UACI,cAACM,GAAA,EAAD,CAAYN,UAAW,OAAQ2D,MAAO,OAAQ9F,MAAO,cAArD,gBACKo4B,QADL,IACKA,OADL,EACKA,EAAW7pB,aAEhB,cAAC9L,GAAA,EAAD,CAAYN,UAAW,IAAvB,eACA,cAACM,GAAA,EAAD,CAAYN,UAAW,OAAQ2D,MAAO,MAAO9F,MAAO,cAApD,SACKq4B,EAAU9pB,kBAIvB,eAACpH,GAAA,EAAD,CAAMxF,MAAI,EAACub,GAAI,GAAIrb,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,aACpED,WAAY,UAAW3C,UAAW,cAAeI,UAAW,EADlE,UAEI,eAACL,EAAA,EAAD,CAAKqC,QAAS,OAAQ6P,cAAe,SAAUtP,WAAY,aAAcC,eAAgB,WACpF5C,UAAW,aADhB,UAEI,eAACgD,GAAA,EAAD,CAAYG,QAAS,KAAMX,OAAQ,GAAIE,UAAW,OACtC1C,UAAS,0BAAqBu5B,EAAWngB,UADrD,cAEIuE,aAA4B4b,EAAWwC,YAAa,EAAG,CAAC6a,cAAc,IAF1E,OAIA,cAAC5zC,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,OAAQtC,UAAW,GAChDJ,UAAS,0BAAqBu5B,EAAWngB,UADrD,SAEImgB,EAAWnM,OAAX,UACOmM,EAAWnM,OAAS,EAAI,IAAM,IADrC,OAC0CzP,aAA4B4b,EAAWnM,OAAQ,GADzF,KAEIrb,SAGZ,eAAChS,EAAA,EAAD,CAAKqC,QAAS,OAAQ6P,cAAe,SAAUtP,WAAY,aACtDC,eAAgB,WADrB,UAEI,eAACI,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,OAAQm0C,aAAc,WACnDr0C,OAAQ,GADpB,oBAEc+2B,EAAWyC,UAAY8a,aAAiBvd,EAAWyC,WAAa,KAF9E,OAIA,eAACh5B,GAAA,EAAD,CAAYG,QAAS,QAAST,UAAW,MAAOm0C,aAAc,WAAYE,SAAU,SAAUC,WAAY,SAC9F52C,UAAW,GADvB,UAC+BpB,EAAE,eADjC,MACqDu6B,EAAWD,OAAS3b,aAA4B4b,EAAWD,OAAQ,GAAK,cAIrI,cAAC5xB,GAAA,EAAD,CAAMxF,MAAI,EAAChC,SAAU,WAAYgD,IAAK,EAAG8mB,MAAO,EAAG7nB,MAAO,IAAKK,OAAQ,GAAvE,SACI,cAAC,GAAD,CAAgBgnC,aAAa,EAAOC,UAAU,EAAOl6B,KAAMi0B,GAAU8S,MAAOj3C,KAAMs3C,SAEhF,6BA7CX,Q,6HC5BLle,GAAYj6B,YAAOuB,IAAPvB,CAAH,8BAOTy4C,GAAsBz4C,YAAOuB,IAAPvB,CAAH,4IAIJ,qBAAEG,MAAiBqN,QAGlCkrC,GAAuB14C,YAAOuB,IAAPvB,CAAH,4BAEb24C,GAAUpgC,aAAgB,SAAU,CAACC,SAAS,GAApCD,CACnBta,IAAMiZ,KAAKjZ,IAAMuH,YAAW,WAYcT,GAAkC,IAVpEvE,EAUmE,EAVnEA,EACA25B,EASmE,EATnEA,UACAC,EAQmE,EARnEA,UACAK,EAOmE,EAPnEA,aACAC,EAMmE,EANnEA,WAEAO,EAImE,EAJnEA,IAImE,IAHnE2d,SAAWC,EAGwD,EAHxDA,SAAUC,EAG8C,EAH9CA,UAAWC,EAGmC,EAHnCA,YAAaC,EAGsB,EAHtBA,OAC7C1T,EAEmE,EAFnEA,YACG5/B,EACgE,mBAC/DuzC,EAA8BvzC,EAA9BuzC,YAAaC,EAAiBxzC,EAAjBwzC,aAGd59C,EAAYsC,IAAZtC,SACDi/B,EAAiBj/B,EAAU6+B,EAAU7pB,YACrCkqB,EAAiBl/B,EAAU8+B,EAAU9pB,YACrCke,EAAI,UAAM2L,EAAU7pB,WAAhB,cAAgC8pB,EAAU9pB,YAC7CtV,EAAY4C,IAAZ5C,SAEP,OAAO,eAACm+C,GAAA,EAAD,CAAMp0C,IAAKA,EAAX,UACH,eAACq0C,GAAA,EAAD,WACI,eAAC,GAAD,CAAWx1C,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,gBACvDD,WAAY,SADvB,UAEI,cAACK,GAAA,EAAD,CAAYG,QAAS,KAAMT,UAAW,OAAQnC,MAAO,cAAeu8B,WAAY,SAAhF,SACK9P,IAEL,eAACjtB,EAAA,EAAD,CAAKqC,QAAS,OAAQ6P,cAAe,MAAOrP,eAAgB,aAAcD,WAAY,SAAUtC,aAAc,EAA9G,UACI,cAACN,EAAA,EAAD,CAAKC,UAAW,YAAawC,OAAQ,+BAAgCtC,SAAU,WAC1EC,OAAQ,GACRgC,MAAO,+BAAgCQ,WAAY,SAAUC,eAAgB,SAFlF,SAGKm2B,EACG,cAAC,IAAD,CAAkBhb,KAAMgb,EAAU/a,EAAGC,KAAM8a,EAAUn9B,EACnCsiB,UAAW6a,EAAUv2B,OACrB2b,SAAU4a,EAAU52B,MAAOhD,KAAM,GACjCgE,QAAQ,WAAWib,IAAG,OAAEua,QAAF,IAAEA,OAAF,EAAEA,EAAW7pB,WAEnCuP,IAAK,6JACrB,cAACC,GAAA,EAAD,CAAQnb,QAAQ,WAAWib,IAAG,OAAEua,QAAF,IAAEA,OAAF,EAAEA,EAAW7pB,WAAsBjO,MAAO,CACtE2B,OAAQ,+BACRL,MAAO,gCAGDkc,IAAK,qCAGvB,eAACte,EAAA,EAAD,CAAKC,UAAW,YAAawC,OAAQ,+BAAgCtC,SAAU,WAC1EC,OAAQ,GAAI4C,MAAO,EACnBZ,MAAO,+BAAgCQ,WAAY,SACnDC,eAAgB,SAHrB,UAGgCo2B,EAC5B,cAAC,IAAD,CAAkBjb,KAAMib,EAAUhb,EAAGC,KAAM+a,EAAUp9B,EAAGsiB,UAAW8a,EAAUx2B,OAC3D2b,SAAU6a,EAAU72B,MAAOhD,KAAM,GACjCgE,QAAQ,WAAWib,IAAG,OAAEwa,QAAF,IAAEA,OAAF,EAAEA,EAAW9pB,WAEnCuP,IAAK,6JACrB,cAACC,GAAA,EAAD,CAAQnb,QAAQ,WAAWib,IAAG,OAAEwa,QAAF,IAAEA,OAAF,EAAEA,EAAW9pB,WAAsBjO,MAAO,CACtE2B,OAAQ,+BACRL,MAAO,gCAGDkc,IAAK,mCAdnB,aAkCR,eAACrb,GAAA,EAAD,CAAYZ,QAAS,OAAQ6P,cAAe,SAAUvP,UAAW,OAAQE,eAAgB,SAAUD,WAAY,SAAUvC,UAAW,EAApI,UACI,eAAC4C,GAAA,EAAD,CAAYN,UAAW,OAAQS,QAAS,KAAM25B,WAAY,SAA1D,cAAsErD,EAAtE,OAEA,cAACz2B,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,cAAe4C,QAAS,KAAM/C,UAAW,EACnES,MAAO,CAACs+B,cAAe,aADnC,SACkDngC,EAAE,iBAGxD,cAACk4C,GAAD,CAAsB92C,UAAW,EAAG4H,aAAc,EAAlD,SACI,cAACgb,GAAA,EAAD,MAGJ,eAACi0B,GAAD,WACI,cAACj0C,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,gBAAiB4C,QAAS,KAAhE,SACKnE,EAAE,2BAEP,eAACgE,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,cAAe4C,QAAS,KAA9D,UACK,IAAMxI,IAAO08C,EAAS3oB,MAAMmG,OAAO,cADxC,MAC0Dl6B,IAAO08C,EAASjyC,IAAIyvB,OAAO,eAKzF,eAACoiB,GAAD,WACI,cAACj0C,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,gBAAiB4C,QAAS,KAAhE,SACKnE,EAAE,0BAEP,cAACgE,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,cAAe4C,QAAS,KAA9D,SACKnE,EAAE,kBAAoB,IACfi6B,SAAiB/yB,EAAY6L,IAAgBvY,IAAaC,IAASC,OAASy/B,IAASC,OAASzb,aAA4Bsb,GACpHE,IAASE,KAAO1b,aAA4Bub,QAKlE,eAAC+d,GAAD,WACI,cAACj0C,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,gBAAiB4C,QAAS,KAAhE,SACKnE,EAAE,+BAEP,eAACgE,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,cAAe4C,QAAS,KAA9D,cACMwa,cAA6B85B,GAAextC,OAAO+kB,SAASyoB,GAAeA,EAAc,IAAMC,GAAgBztC,OAAO+kB,SAAS0oB,GAAgBA,EAAe,UAKxK,eAACT,GAAD,WACI,cAACj0C,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,gBAAiB4C,QAAS,KAAhE,SACKnE,EAAE,wBAEP,cAACgE,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,cAAe4C,QAAS,KAA9D,qBAMJ,eAAC8zC,GAAD,WACI,cAACj0C,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,gBAAiB4C,QAAS,KAAhE,SACKnE,EAAE,yBAEP,eAACgE,GAAA,EAAD,CAAYN,UAAW,OAAQnC,MAAO,cAAe4C,QAAS,KAA9D,UACmB,IAAdm0C,EACKvlC,IACA4L,aAA4B25B,EAAW,GAC5C,YAAMC,QAAN,IAAMA,OAAN,EAAMA,EAAazoC,qBAiChC,cAAC+oC,GAAA,EAAD,UACI,cAAC,EAAD,CAAQxvC,WAAS,EAAClF,QAAS,YAAahE,KAAM,SAAUM,WAAY+3C,EAC5Dj3C,MAAO,UACPC,QAASsjC,EAFjB,SAE+B9kC,EAAEw4C,EAAS,uBAAyB,oC,sBC9MtEM,GAAQ,SAAC,GAA0E,IAAxE7/B,EAAuE,EAAvEA,KAAM8/B,EAAiE,EAAjEA,QAASC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,sBAEvChyC,IAAb8xC,IACAA,EAAW,gBAGU9xC,IAArBgyC,IACAA,EAAmB,KAGvB,IAAMp4C,EAAUpD,uBAAY,WACxBq7C,GAAQ,KACT,CAACA,IAEJ,OACI,cAACI,GAAA,EAAD,CAAUlgC,KAAMA,EAAMigC,iBAAkBA,EAAkBp4C,QAASA,EAAnE,SACI,cAACs4C,GAAA,EAAD,CAAOt4C,QAASA,EAASk4C,SAAUA,EAAnC,SACKC,OCtBXI,GAAW75C,YAAOuB,IAAPvB,CAAF,gQAQF,mBAA0B,EAA1B,EAAEG,MAAiBqN,QAanBssC,GAAa,SAAC,GAAqE,IAAnEv7C,EAAkE,EAAlEA,OAAQsJ,EAA0D,EAA1DA,MAAO6R,EAAmD,EAAnDA,QAASqgC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,eAC3D,EAA4B/7C,IAAMuK,SAASjK,GAA3C,oBAAO07C,EAAP,KAAe7P,EAAf,KACM8P,EAAQ3d,eACd,OAAO0d,EAAU,eAACJ,GAAD,CAAW71C,OAAQ,GAAIL,MAAO,OAAQI,KAAM,EAAGH,QAAS,OAAQO,WAAY,SAAUC,eAAgB,SAAUqP,cAAe,MAAO/R,SAAU,QAAhJ,UACdmG,EAAQ,cAACrD,GAAA,EAAD,CAAYhD,UAAW,QAAvB,SAAiCqG,IAAsB,6BAChE,cAACrD,GAAA,EAAD,CAAYhD,UAAW,UAAWO,MAAO,gBAAiB4C,QAAS,QAAS+7B,SAAU,EAAtF,SAA0FhnB,IAC1F,eAAC,EAAD,CAAQ/U,QAAS,YAAahE,KAAM,QAASqB,QAAS,WAChDg4C,IACFA,IACA5P,GAAU,KAHd,cAKK2P,EALL,OAMA,cAAC,EAAD,aAAmBz4C,QAAS,kBAAI8oC,GAAU,IAAQhlB,QAAQ,GAAW80B,OACxD,8B,ULhBJ9zC,IAVG2/B,IAAcC,WAQbnE,IAAiBW,QAE4B,CAC1D2X,IAAK,CACD71B,KAAM,iHACN3oB,KAAM,MACN2U,WAAY,MACZxI,YAAa,GACbsyC,QAAS,OAEbC,IAAK,CACD/1B,KAAM,iHACN3oB,KAAM,MACN2U,WAAY,MACZxI,YAAa,GACbsyC,QAAS,OAEbE,KAAM,CACFh2B,KAAM,iHACN3oB,KAAM,OACN2U,WAAY,OACZxI,YAAa,GACbsyC,QAAS,QAEbG,KAAM,CACFj2B,KAAM,iHACN3oB,KAAM,OACN2U,WAAY,OACZxI,YAAa,GACbsyC,QAAS,QAEbI,KAAM,CACFl2B,KAAM,MACN3oB,KAAM,OACN2U,WAAY,OACZxI,YAAa,GACbsyC,QAAS,OAEbK,KAAM,CACFn2B,KAAM,MACN3oB,KAAM,OACN2U,WAAY,OACZxI,YAAa,GACbsyC,QAAS,OAEbM,IAAK,CACDp2B,KAAM,OACN3oB,KAAM,MACN2U,WAAY,MACZxI,YAAa,GACbsyC,QAAS,OAEbO,IAAK,CACDr2B,KAAM,OACN3oB,KAAM,MACN2U,WAAY,MACZxI,YAAa,GACbsyC,QAAS,OAEbQ,IAAK,CACDt2B,KAAM,OACN3oB,KAAM,MACN2U,WAAY,MACZxI,YAAa,GACbsyC,QAAS,OAEbS,IAAK,CACDv2B,KAAM,OACN3oB,KAAM,MACN2U,WAAY,MACZxI,YAAa,GACbsyC,QAAS,OAEbU,KAAM,CACFx2B,KAAM,OACN3oB,KAAM,OACN2U,WAAY,OACZxI,YAAa,GACbsyC,QAAS,QAEbW,MAAO,CACHz2B,KAAM,OACN3oB,KAAM,QACN2U,WAAY,QACZxI,YAAa,GACbsyC,QAAS,OAEbY,MAAO,CACH12B,KAAM,OACN3oB,KAAM,QACN2U,WAAY,QACZxI,YAAa,GACbsyC,QAAS,Y,SAeL5S,O,uBAAAA,I,+BAAAA,I,iBAAAA,I,wBAAAA,Q,KA0DkBxiB,aAA8B,CAAC,CACzD/b,MAAO,CACHoD,GAAI,UACJ3C,QAAS,eACT5B,YAAa,qCAEjBya,OAAQ,CAACG,KAAM,KAChB,CACCzZ,MAAO,CACHoD,GAAI,WACJ3C,QAAS,gBACT5B,YAAa,oCAEjBya,OAAQ,CAACG,KAAM,Q,44ZMjMPud,E,yBCFG,GACXgb,OCNW,CACXC,WAAW,QACXC,WAAY,cACZC,uBAAwB,aACxBC,SAAU,MACVC,UAAW,YACXC,uBAAwB,YACxBC,iBAAkB,eAClBC,cAAe,WACfC,eAAgB,0CAChBC,gBAAiB,cACjBC,cAAe,qBACfC,gBAAiB,eACjBC,eAAgB,mBAChBC,QAAS,MACTC,QAAS,OACTC,OAAQ,UACRC,WAAY,wBACZC,oBAAqB,2BACrBC,iBAAkB,2HAClBC,SAAU,sCACVC,cAAe,QACfC,aAAc,UACdC,sBAAuB,4BACvBC,uBAAwB,sBACxBC,mBAAoB,+GACpBC,4BAA6B,yKAC7BC,gBAAiB,UACjBC,uBAAwB,0BACxBC,kBAAkB,+DAClBC,wBAAwB,6BACxBC,cAAe,WACfC,wBAAyB,uBACzBC,oBAAqB,sMACrBC,iBAAkB,WAClBC,qBAAsB,mBACtBC,0BAA2B,2BAC3BC,iBAAkB,uBAClBC,sBAAuB,OACvBC,0BAA2B,WAC3BC,wBAAyB,2BACzBC,cAAe,WACfC,wBAAyB,uBACzBC,oBAAqB,kKACrBC,iBAAkB,WAClBC,qBAAsB,mBACtBC,0BAA2B,2BAC3BC,iBAAkB,uBAClBC,wBAAyB,2BACzBC,mBAAoB,iBACpBC,cAAe,SACfC,eAAgB,sBAChBC,WAAY,QACZC,WAAY,QACZC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,iBAAkB,OAClBC,gBAAiB,aACjBC,gBAAiB,OACjBC,kBAAmB,SACnBC,kBAAmB,YACnBC,mBAAoB,SACpBC,aAAc,oBACdC,YAAa,eACbC,qBAAsB,2BACtBC,gBAAiB,kCACjBC,iBAAkB,sBAClBC,gBAAiB,UACjBC,iBAAkB,WAClBC,iBAAkB,WAClBC,WAAY,QACZC,eAAgB,aAChBC,aAAc,UACdC,cAAe,YACfC,kBAAmB,uBACnBC,mBAAoB,WACpBC,yBAA0B,wBAC1BC,cAAe,QACfC,sBAAuB,4CACvBC,wBAAyB,iBACzBC,yBAA0B,8DAC1BC,sBAAuB,iBACvBC,wBAAyB,iBACzBC,yBAA0B,8DAC1BC,sBAAuB,iBACvBC,sBAAuB,cACvBC,iBAAkB,iBAClBC,eAAgB,6CAChBC,mBAAoB,0BACpBC,cAAe,WACfC,cAAe,WACfC,gBAAiB,mBACjBC,YAAa,SACbC,WAAY,aACZC,gBAAiB,QACjBC,eAAgB,OAChBC,WAAY,QACZC,SAAU,MACVC,OAAQ,UACRC,OAAQ,UACRC,cAAe,YACfC,aAAc,WACdC,WAAY,QACZC,WAAY,QACZC,iBAAkB,SAClBC,YAAa,SACbC,sBAAuB,MACvBC,uBAAwB,SACxBC,eAAgB,YAChBC,iBAAkB,SAClBC,wBAAyB,mBACzBC,qBAAsB,gBACtBC,qBAAsB,QACtBC,8BAA+B,mBAC/BC,cAAe,YACfC,WAAY,QACZC,aAAc,WACdC,iBAAkB,gBAClBC,SAAU,MACVC,aAAc,SACdC,eAAgB,YAChBC,YAAa,SACbC,cAAe,YACfC,UAAW,OACXC,UAAW,OACXC,SAAU,MACVC,cAAe,aACfC,SAAU,MACVC,mBAAoB,gBACpBC,mBAAoB,WACpBC,SAAU,MACVC,aAAc,UACdC,SAAU,MACVC,QAAS,KACTC,aAAc,YACdC,YAAa,SACbC,WAAY,mBACZC,iBAAkB,gBAClBC,uBAAwB,qBACxBC,oBAAqB,kBACrBC,wBAAyB,uBACzBC,gBAAiB,cACjBC,mBAAoB,iBACpBC,oBAAqB,kBACrBC,iBAAkB,gCAClBC,8BAA+B,uBAC/BC,kBAAmB,gBACnBC,mBAAmB,iBACnBC,wBAAyB,sBACzBC,iBAAkB,eAClBC,kBAAmB,eACnBC,oBAAqB,SACrBC,kBAAmB,cACnBC,iBAAkB,oBAClBC,gBAAiB,eACjBC,oBAAqB,4BACrBC,mBAAoB,uBACpBC,oBAAqB,4BACrBC,mBAAoB,uBACpBC,eAAgB,sCAChBC,kBAAmB,gBACnBC,6BAA6B,2DAC7BC,gBAAgB,gBAChBC,wBAAwB,6BACxBC,6BAA6B,gJAC7BC,6BAA6B,kCAC7BC,kCAAkC,wDAClCC,yBAAyB,sEACzBC,oBAAoB,sCACpBC,4BAA4B,qCAC5BC,mBAAmB,oBACnBC,mBAAmB,4CACnBC,mCAAmC,uCACnCC,sBAAsB,mBACtBC,gBAAgB,aAChBC,0BAA0B,gDAC1BC,mBAAmB,iBACnBC,mBAAmB,iBACnBC,2BAA2B,mCAC3BC,iBAAiB,0CACjBC,uBAAuB,yCACvBC,mBAAmB,iBACnBC,2BAA2B,2EAC3BC,qBAAqB,mBACrBC,WAAY,QACZC,WAAW,QACXC,wBAAyB,YACzBC,kBAAmB,MACnBC,2BAA4B,gBAC5BC,kBAAmB,gBACnBC,qBAAsB,wBACtBC,uBAAwB,wBACxBC,YAAY,SACZC,uBAAuB,2DACvBC,4BAA4B,0DAC5BC,4BAA4B,+FAC5BC,6BAA6B,0BAC7BC,oBAAoB,2CACpBC,wBAAyB,YACzBC,YAAa,SACbC,qBAAsB,aACtBC,sBAAuB,cACvBC,qBAAsB,YACtBC,0BAA2B,kBAC3BC,mBAAoB,WACpBC,oBAAqB,YACrBC,kBAAmB,QACnBC,cAAc,qBACdC,sBAAuB,iCACvBC,+BAAgC,eAChCC,yBAA0B,SAC1BC,6BAA8B,eD7M9B7W,OEPW,CACX8W,aAAc,UACdjG,WAAY,QACZK,eAAgB,YAChB6F,YAAa,SACbC,YAAa,SACbC,eAAgB,oBAChBC,aAAc,UACdC,wBAAyB,uBACzBC,cAAe,WACfC,yBAA0B,mCAC1BC,iBAAkB,8CAClBC,sBAAuB,2BACvBC,iBAAkB,kBAClBC,kBAAmB,2BACnBC,aAAc,gBACdC,gBAAiB,mBACjBjL,mBAAoB,iBACpBkL,oBAAqB,YACrBC,oBAAqB,UACrBC,cAAe,YACfC,kBAAmB,gBAEnBC,YAAa,SACbC,kBAAmB,eACnBC,YAAa,SACbC,aAAc,UACdC,WAAY,QACZC,gBAAiB,cACjBC,mBAAoB,iBACpBC,QAAS,UACTC,YAAa,SACbC,eAAgB,kBAChBC,WAAY,QACZC,eAAgB,aAChBC,iBAAkB,eAClBC,qBAAsB,oBACtBC,kBAAmB,gBACnBC,aAAc,UACdC,cAAc,WACdC,sBAAsB,yCACtBvF,kBAAmB,iBFjCnBwF,OGRW,CACXC,YAAa,SACbC,SAAU,MACVC,cAAe,WACflL,cAAe,WACfD,aAAc,UACd2C,WAAY,QACZyI,WAAY,QACZC,YAAa,SACbjJ,eAAgB,YAChBkJ,YAAa,SACbC,aAAc,UACdC,cAAe,aACfC,uBAAwB,sBACxBC,iBAAkB,gBAClBC,yBAA0B,YAC1BC,oBAAqB,MACrBC,qBAAsB,OACtBC,iBAAkB,QAClBC,kBAAmB,SACnBC,eAAgB,QAChBC,iBAAkB,SAClBC,kBAAmB,UACnBC,uBAAwB,gBACxBC,sBAAuB,eACvBC,eAAgB,OAChBC,iBAAkB,SAClBC,uBAAwB,gBACxBC,gBAAiB,QACjBC,eAAgB,OAChBC,oBAAqB,aACrBC,oBAAqB,aACrBC,kBAAmB,WACnBC,iBAAkB,UAClBC,mBAAoB,aACpBC,iBAAkB,SAClBC,yBAA0B,YAC1BC,oBAAqB,MACrBC,qBAAsB,OACtBC,eAAgB,OAChBC,iBAAkB,SAClBC,gBAAiB,QACjBC,cAAe,MACfC,eAAgB,OAChBC,sBAAuB,YACvBC,qBAAsB,UACtBC,sBAAuB,WACvBC,sBAAuB,WACvBC,uBAAwB,aACxBC,YAAa,QACbC,aAAc,QACdC,YAAa,OACbC,UAAW,KACXC,cAAe,SACfC,WAAY,MACZC,YAAa,OACbC,YAAa,OACbC,eAAgB,WAChBC,cAAe,SACfrM,YAAa,SACbsM,eAAgB,aAChBC,UAAW,OACXxL,eAAgB,YAChByL,mBAAoB,mBACpBC,cAAe,aACfrL,SAAU,MACVsL,eAAgB,eAChBC,YAAa,SACb7G,YAAa,SACb8G,oBAAqB,YACrBC,cAAc,0BACdC,gBAAgB,2BAChBC,iBAAiB,6BACjBC,mBAAoB,cACpBC,oBAAqB,eACrBC,aAAc,OACdC,eAAgB,cAChBC,SAAU,MACVC,UAAW,OACXC,aAAc,QACdC,eAAgB,SAChBC,sBAAuB,kBACvBC,YAAa,MACbC,mBAAoB,OACpBC,aAAc,OACdC,aAAc,OACdC,oBAAqB,YACrBC,mBAAoB,OACpBC,mBAAoB,OACpBC,0BAA2B,MAC3BC,6BAA8B,SAC9BxL,kBAAmB,oBHlFnBl9C,MITW,CACX2oD,eAAgB,uGAChBC,UAAW,8BACXC,aAAc,oCACdC,SAAU,+BCCC,GACX/U,OCNW,CACXC,WAAW,eACXC,WAAY,2BACZC,uBAAwB,uCACxBC,SAAU,eACVC,UAAW,eACXC,uBAAwB,uCACxBC,iBAAkB,2BAClBC,cAAe,eACfC,eAAgB,6DAChBC,gBAAiB,uCACjBC,cAAe,2BACfC,gBAAiB,2BACjBC,eAAgB,uCAChBC,QAAS,2BACTC,QAAS,eACTC,OAAQ,eACRC,WAAY,uCACZC,oBAAqB,6CACrBC,iBAAkB,oPAClBC,SAAU,+CACVC,cAAe,eACfC,aAAc,eACdC,sBAAuB,yDACvBC,uBAAwB,uCACxBC,mBAAoB,yIACpBC,4BAA6B,qPAC7BC,gBAAiB,eACjBC,uBAAwB,uCACxBC,kBAAkB,sHAClBC,wBAAwB,+DACxBC,cAAe,eACfC,wBAAyB,uCACzBC,oBAAqB,iYACrBC,iBAAkB,eAClBC,qBAAsB,mDACtBC,0BAA2B,2BAC3BC,iBAAkB,uCAClBC,sBAAuB,eACvBC,0BAA2B,eAC3BC,wBAAyB,uCACzBC,cAAe,eACfC,wBAAyB,uCACzBC,oBAAqB,0PACrBC,iBAAkB,eAClBC,qBAAsB,mDACtBC,0BAA2B,2BAC3BC,iBAAkB,uCAClBC,wBAAyB,uCACzBC,mBAAoB,2BACpBC,cAAe,qBACfC,eAAgB,4BAChBC,WAAY,eACZC,WAAY,eACZC,QAAS,UACTC,QAAS,gBACTC,QAAS,UACTC,iBAAkB,2BAClBC,gBAAiB,2BACjBC,gBAAiB,2BACjBC,kBAAmB,2BACnBC,kBAAmB,2BACnBC,mBAAoB,2BACpBC,aAAc,mDACdC,YAAa,iCACbC,qBAAsB,oDACtBC,gBAAiB,wDACjBC,iBAAkB,yDAClBC,gBAAiB,eACjBC,iBAAkB,eAClBC,iBAAkB,eAClBC,WAAY,kBACZC,eAAgB,qBAChBC,aAAc,eACdC,cAAe,eACfC,kBAAmB,kCACnBC,mBAAoB,2BACpBC,yBAA0B,wCAC1BC,cAAe,eACfC,sBAAuB,wDACvBC,wBAAyB,2BACzBC,yBAA0B,8DAC1BC,sBAAuB,2BACvBC,wBAAyB,2BACzBC,yBAA0B,8DAC1BC,sBAAuB,2BACvBC,sBAAuB,2BACvBC,iBAAkB,iCAClBC,eAAgB,6DAChBC,mBAAoB,oDACpBC,cAAe,2BACfC,cAAe,2BACfC,gBAAiB,2BACjBC,YAAa,2BACbC,WAAY,2BACZC,gBAAiB,2BACjBC,eAAgB,2BAChBC,WAAY,eACZC,SAAU,eACVC,OAAQ,eACRC,OAAQ,eACRC,cAAe,2BACfC,aAAc,iCACdC,WAAY,iCACZC,WAAY,2BACZC,iBAAkB,2BAClBC,YAAa,eACbC,sBAAuB,eACvBC,uBAAwB,eACxBC,eAAgB,2BAChBC,iBAAkB,eAClBC,wBAAyB,2BACzBC,qBAAsB,2BACtBC,qBAAsB,iCACtBC,8BAA+B,6CAC/BC,cAAe,2BACfC,WAAY,eACZC,aAAc,mBACdC,iBAAkB,2BAClBC,SAAU,eACVC,aAAc,2BACdC,eAAgB,iCAChBC,YAAa,qBACbC,cAAe,2BACfC,UAAW,eACXC,UAAW,eACXC,SAAU,MACVC,cAAe,yBACfC,SAAU,MACVC,mBAAoB,uCACpBC,mBAAoB,uCACpBC,SAAU,eACVC,aAAc,2BACdC,SAAU,eACVC,QAAS,eACTC,aAAc,2BACdC,YAAa,2BACbC,WAAY,kBACZC,iBAAkB,8BAClBC,uBAAwB,2BACxBC,oBAAqB,2BACrBC,wBAAyB,mDACzBC,gBAAiB,2BACjBC,mBAAoB,2BACpBC,oBAAqB,iCACrBC,iBAAkB,yDAClBC,8BAA+B,iCAC/BC,kBAAmB,uCACnBC,mBAAmB,2BACnBC,wBAAyB,2BACzBC,iBAAkB,qBAClBC,kBAAmB,2BACnBC,oBAAqB,2BACrBC,kBAAmB,qCACnBC,iBAAkB,iCAClBC,gBAAiB,iCACjBC,oBAAqB,yDACrBC,mBAAoB,yDACpBC,oBAAqB,yDACrBC,mBAAoB,yDACpBC,eAAgB,gDAChBC,kBAAmB,iCACnBC,6BAA6B,uFAC7BC,gBAAgB,iCAChBC,wBAAwB,2DACxBC,6BAA6B,qRAC7BC,6BAA6B,gEAC7BC,kCAAkC,kIAClCC,yBAAyB,oJACzBC,oBAAoB,uDACpBC,4BAA4B,6CAC5BC,mBAAmB,uCACnBC,mBAAmB,sGACnBC,mCAAmC,mGACnCC,sBAAsB,mDACtBC,gBAAgB,2BAChBC,0BAA0B,8EAC1BC,mBAAmB,2BACnBC,mBAAoB,2BACpB8J,kBAAmB,uCACnB7J,2BAA2B,mDAC3BC,iBAAiB,6DACjBC,uBAAuB,qCACvBC,mBAAmB,2BACnBC,2BAA2B,2GAC3BC,qBAAqB,2BACrBC,WAAY,eACZC,WAAW,eACXC,wBAAyB,eACzBC,kBAAmB,eACnBC,2BAA4B,2BAC5BC,kBAAmB,2BACnBC,qBAAsB,uCACtBC,uBAAwB,uCACxBC,YAAY,eACZC,uBAAuB,iIACvBC,4BAA4B,iIAC5BC,4BAA4B,0IAC5BC,6BAA6B,+GAC7BC,oBAAoB,qHACpBC,wBAAyB,yBACzBC,YAAa,eACbC,qBAAsB,qCACtBC,sBAAuB,2BACvBC,qBAAsB,qBACtBC,0BAA2B,2BAC3BC,mBAAoB,uCACpBC,oBAAqB,2BACrBC,kBAAmB,eACnBC,cAAc,wCACdC,sBAAuB,oDACvBC,+BAAgC,2BAChCC,yBAA0B,2BAC1BC,6BAA8B,oBD9M9B7W,OEPW,CACX8W,aAAc,eACdjG,WAAY,eACZK,eAAgB,2BAChB6F,YAAa,iCACbC,YAAa,2BACbC,eAAgB,iCAChBC,aAAc,qBACdC,wBAAyB,uCACzBC,cAAe,qBACfC,yBAA0B,+DAC1BC,iBAAkB,6CAClBC,sBAAuB,2BACvBC,iBAAkB,gCAClBC,kBAAmB,2BACnBC,aAAc,2BACdC,gBAAiB,2BACjBjL,mBAAoB,2BACpBkL,oBAAqB,qBACrBC,oBAAqB,qBACrBC,cAAe,2BACfC,kBAAmB,2BAEnBC,YAAa,2BACbC,kBAAmB,2BACnBC,YAAa,2BACbC,aAAc,2BACdC,WAAY,2BACZC,gBAAiB,kBACjBC,mBAAoB,mCACpBC,QAAS,2BACTC,YAAa,2BACbC,eAAgB,2BAChBC,WAAY,uCACZC,eAAgB,2BAChBC,iBAAkB,iCAClBC,qBAAsB,6CACtBC,kBAAmB,2BACnBC,aAAc,2BACdC,cAAc,2BACdC,sBAAsB,qEACtBvF,kBAAmB,kCFjCnBwF,OGRW,CACXC,YAAa,eACbC,SAAU,MACVC,cAAe,eACflL,cAAe,eACfD,aAAc,eACd2C,WAAY,eACZyI,WAAY,eACZC,YAAa,eACbjJ,eAAgB,2BAChBkJ,YAAa,eACbC,aAAc,eACdC,cAAe,2BACfC,uBAAwB,uCACxBC,iBAAkB,6CAClBC,yBAA0B,2BAC1BC,oBAAqB,eACrBC,qBAAsB,eACtBC,iBAAkB,eAClBC,kBAAmB,eACnBC,eAAgB,gBAChBC,iBAAkB,2BAClBC,kBAAmB,eACnBC,uBAAwB,2BACxBC,sBAAuB,2BACvBC,eAAgB,2BAChBC,iBAAkB,eAClBC,uBAAwB,2BACxBC,gBAAiB,2BACjBC,eAAgB,qBAChBC,oBAAqB,qBACrBC,oBAAqB,mBACrBC,kBAAmB,mBACnBC,iBAAkB,mBAClBE,iBAAkB,eAClBD,mBAAoB,yBACpBE,yBAA0B,2BAC1BC,oBAAqB,eACrBC,qBAAsB,eACtBC,eAAgB,eAChBC,iBAAkB,2BAClBC,gBAAiB,eACjBC,cAAe,eACfC,eAAgB,2BAChBC,sBAAuB,2BACvBC,qBAAsB,eACtBC,sBAAuB,eACvBC,sBAAuB,eACvBC,uBAAwB,2BACxBC,YAAa,2BACbC,aAAc,eACdC,YAAa,eACbC,UAAW,eACXC,cAAe,eACfC,WAAY,eACZC,YAAa,eACbC,YAAa,eACbC,eAAgB,2BAChBC,cAAe,eACfrM,YAAa,qBACbsM,eAAgB,qBAChBC,UAAW,qBACXxL,eAAgB,qBAChByL,mBAAoB,yBACpBC,cAAe,mBACfrL,SAAU,MACVsL,eAAgB,2BAChBC,YAAa,eACb7G,YAAa,eACb8G,oBAAqB,iCACrBC,cAAc,sCACdC,gBAAgB,sCAChBC,iBAAiB,sCACjBC,mBAAoB,2BACpBC,oBAAqB,2BACrBC,aAAc,eACdC,eAAgB,2BAChBC,SAAU,SACVC,UAAW,SACXC,aAAc,4BACdC,eAAgB,2BAChBC,sBAAuB,6CACvBC,YAAa,eACbC,mBAAoB,2BACpBC,aAAc,eACdC,aAAc,eACdC,oBAAqB,2BACrBC,mBAAoB,eACpBC,mBAAoB,eACpBC,0BAA2B,eAC3BC,6BAA8B,eAC9BxL,kBAAmB,kCHlFnBl9C,MITW,CACX2oD,eAAgB,mIAChBC,UAAW,2DACXC,aAAc,6EACdC,SAAU,2E,SVGF/vB,K,cAAAA,E,eAAAA,M,KAOL,IAAMiwB,EAAY,CACrBhwB,MAAM,eAAKiwB,GACXhwB,MAAM,eAAKiwB,IAGfv1D,IAAKw1D,IAAIC,KAAkBC,KAAK,CAC5BL,YACAM,GAAI,CAAC,SAAU,SAAU,SAAU,SACnCC,UAAW,SACXC,IAAKzwB,EAAaC,MAClBywB,KAAM,cACNC,YAAa3wB,EAAaC,MAC1B2wB,cAAe,CAAC5wB,EAAaC,MAAOD,EAAaE,OACjD2wB,cAAc,EACdC,cAAe,CACXC,aAAa,GAGjBC,MAAO,CACHC,SAAU,kBAEVC,oBAAqB,GACrBC,4BAA4B,EAC5BC,2BAA4B,CAAC,KAAM,SAAU,KAC7CC,aAAa,KAINz2D,I,QWvCHH,EXuCGG,IAAf,E,gBYzCa02D,EAAa,SAAC/yD,GACvB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SAA2E,sBAAM7wB,EAAE,umBAmDjF00D,EAAe,SAAChzD,GACzB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACH,sBAAM7wB,EAAE,qKAGH20D,EAAc,SAACjzD,GACxB,OAAO,eAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,UACH,sBAAM7wB,EAAE,mUACR,sBAAMA,EAAE,wFAIH40D,EAAW,SAAClzD,GACrB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACH,sBAAM7wB,EAAE,07BAGH60D,EAAW,SAACnzD,GACrB,OAAM,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACF,sBAAM7wB,EAAE,0jCAGHiP,EAAe,SAACvN,GACzB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACH,sBAAM7wB,EAAE,0HAGH80D,EAAW,SAACpzD,GACrB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACH,sBAAM7wB,EAAE,okBAAokB6wB,KAAK,cAG5kBkkC,EAAiB,SAACrzD,GAC3B,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACH,sBAAME,SAAS,UAAUC,SAAS,UAAUhxB,EAAE,qlCAIzCg1D,EAAgB,SAACtzD,GAC1B,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACH,sBACI7wB,EAAE,8VAGDi1D,EAAe,SAACvzD,GACzB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACH,sBAAME,SAAS,UAAUC,SAAS,UAAUhxB,EAAE,2TAGzCk1D,EAAmB,SAACxzD,GAC7B,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACH,sBAAM7wB,EAAE,gaAGHm1D,EAAc,SAACzzD,GACxB,OAAO,eAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,iBACF,sBAAM7wB,EAAE,+2CAGJo1D,EAAU,SAAC1zD,GACpB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SAEH,sBAAME,SAAS,UAAUC,SAAS,UAAUhxB,EAAE,gjBAGzCq1D,EAAW,SAAC3zD,GACrB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SAEC,sBAAME,SAAS,UAAUC,SAAS,UAAUhxB,EAAE,gyBAG7Cs1D,EAAc,SAAC5zD,GACxB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACN,sBAAME,SAAS,UAAUC,SAAS,UAAUhxB,EAAE,sKAStCu1D,EAAe,SAAC7zD,GACzB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACN,sBAAM7wB,EAAE,mZAGAw1D,EAAa,SAAC9zD,GACvB,OAAO,eAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,iBACF,sBAAM7wB,EAAE,kZAGJy1D,EAAe,SAAC/zD,GACzB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACN,sBAAM7wB,EAAE,mUAAmU6wB,KAAK,cAGxU6kC,EAAY,SAACh0D,GACtB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SAEH,sBAAM7wB,EAAE,sHAIH21D,EAAa,SAACj0D,GACvB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACN,sBAAME,SAAS,UAAUC,SAAS,UAAUhxB,EAAE,oVAQtC41D,EAAS,SAACl0D,GACnB,OAAO,eAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,UACH,sBAAM7wB,EAAE,qCACR,sBAAM+wB,SAAS,UAAUC,SAAS,UAAUhxB,EAAE,yGAC9C,sBAAMA,EAAE,kCACR,sBAAM+wB,SAAS,UAAUC,SAAS,UAAUhxB,EAAE,mGAC9C,sBAAMA,EAAE,iEACR,sBAAMA,EAAE,oCACR,sBAAM+wB,SAAS,UAAUC,SAAS,UAAUhxB,EAAE,kEA8BzC61D,EAAY,SAACn0D,GACtB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SAEC,sBAAM7wB,EAAE,wPAcP81D,EAAgB,SAACp0D,GAC1B,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBkvB,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA1D,SACH,sBAAMC,SAAS,UAAUC,SAAS,UAAUhxB,EAAE,+0BAA+0B6wB,KAAK,cAG73BklC,EAAW,SAACr0D,GACrB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBkvB,QAAQ,YAAY,cAAY,OAAO,cAAY,WAAvE,SACH,sBAAM5wB,EAAE,wrCAKHg2D,EAAY,SAACt0D,GACtB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACH,sBAAM7wB,EAAE,sFAGHi2D,EAAY,SAACv0D,GACtB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAC3DC,MAAM,6BADf,SAEH,sBAAMC,SAAS,UAAUC,SAAS,UAC5BhxB,EAAE,2bAGH8oB,EAAc,SAACpnB,GACxB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAOnF,EAAMmF,MAAQnF,EAAMmF,MAAQ,KAAMK,OAAQxF,EAAMwF,OAASxF,EAAMwF,OAAS,KAC1F0pB,QAAQ,YAAYC,KAAK,OADlC,SAEH,sBACI7wB,EAAE,8KADN,SAEI,kCAAkBk2D,cAAc,MAAMC,cAAc,YAAYliD,KAAK,SAASmf,KAAK,UAAUtpB,GAAG,YAC9EssD,IAAI,OAAOC,YAAY,qBA8DxCjuC,EAAY,SAAC1mB,GACtB,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SACH,sBACI7wB,EAAE,ojNAaDs2D,EAAa,WACtB,OAAO,cAAC3lC,EAAA,EAAD,CAAS9pB,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAAzD,SACH,sBAAME,SAAS,UAAUC,SAAS,UAC5BhxB,EAAE,65B,mCC7UHu2D,EAAW,SAACC,EAAYC,GACjC,IAAIC,EAAInmC,SAASimC,EAAI1rC,MAAM,EAAG,GAAI,IAC9B6rC,EAAIpmC,SAASimC,EAAI1rC,MAAM,EAAG,GAAI,IAC9BiI,EAAIxC,SAASimC,EAAI1rC,MAAM,EAAG,GAAI,IAElC,YAAYlgB,IAAR6rD,EACO,QAAUC,EAAI,KAAOC,EAAI,KAAO5jC,EAAI,KAAO0jC,EAAM5kD,WAAa,IAE9D,OAAS6kD,EAAI,KAAOC,EAAI,KAAO5jC,EAAI,KAGrC6jC,EAAmBx0D,OAAOy0D,OAAO,CAC1CtzD,QAAS,UACTuzD,aAAc,UACdC,eAAgB,UAChBnnD,UAAW,UACXonD,eAAgB,UAChBC,iBAAkB,UAClBh5C,QAAS,UACTi5C,QAAS,UACT9sD,MAAO,UACP8T,YAAa,UACb7N,cAAe,UACf8mD,YAAY,GAAD,OAAKZ,EAAS,UAAW,SACpCa,QAAQ,UACRxxD,OAAQ,UACRyxD,YAAa,UACbC,OAAQ,UACR/4C,IAAK,UACLg5C,aAAc,UACdC,SAAS,GAAD,OAAMjB,EAAS,UAAW,SAClCkB,MAAO,UACPC,SAAU,UACVC,UAAW,6EACXj0C,KAAK,GAAD,OAAK6yC,EAAS,UAAW,SAC7BqB,MAAO,UACP/5D,KAAM,UACNg6D,QAAQ,GAAD,OAAKtB,EAAS,UAAW,MAChCuB,KAAK,UAELC,OAAO,gBAAD,OAAkBxB,EAAS,UAAW,UAGnCyB,EAAoB51D,OAAOy0D,OAAPz0D,OAAA,IAAAA,CAAA,GAAkBw0D,I,SCzCpChmD,gBAAf,qvDCFe,OAA0B,yCCA1B,OAA0B,uCCU5BJ,GAAc,CACvB6X,GAAI,SACJ4vC,GAAI,SACJC,GAAI,SACJznD,GAAI,SACJ+Q,GAAI,SACJ3Q,GAAI,SACJgwB,MAAO,SACPs3B,MAAO,UAIPp9C,GAAc,GAgFLq9C,GAAY,SAAC,GAAD,IAAE/0D,EAAF,EAAEA,MAAF,OAAkBuN,aAAjB,IAAD,0+GA/EA,SAAC,GAAD,IAAEvN,EAAF,EAAEA,MAAF,OAAkBuN,aAAjB,MAAD,8lCAEFvN,EAAMC,UAAUC,QACVF,EAAMC,UAAUwzD,aACdzzD,EAAMC,UAAUyzD,eACtB1zD,EAAMC,UAAUsM,UACVvM,EAAMC,UAAU0zD,eACd3zD,EAAMC,UAAU2zD,iBAC1B5zD,EAAMC,UAAU2a,QAChB5a,EAAMC,UAAU4zD,QAClB7zD,EAAMC,UAAU8G,MACT/G,EAAMC,UAAU4a,YACd7a,EAAMC,UAAU+M,cAClBhN,EAAMC,UAAU6zD,YACrB9zD,EAAMC,UAAU8zD,QACjB/zD,EAAMC,UAAUsC,OACVvC,EAAMC,UAAU+zD,YACtBh0D,EAAMC,UAAUg0D,OAChBj0D,EAAMC,UAAUm0D,MACnBp0D,EAAMC,UAAUib,IACNlb,EAAMC,UAAUi0D,aACpBl0D,EAAMC,UAAUk0D,SACfn0D,EAAMC,UAAUq0D,UACjBt0D,EAAMC,UAAUo0D,SACrBr0D,EAAMC,UAAUw0D,KAEfz0D,EAAMC,UAAUogB,KACrBrgB,EAAMC,UAAUy0D,OACf10D,EAAMC,UAAUu0D,QAEjBtB,EAASlzD,EAAMC,UAAU4zD,QAAS,OAChC7zD,EAAMC,UAAU4zD,QACdX,EAASlzD,EAAMC,UAAU4zD,QAAS,OAChC7zD,EAAMC,UAAU4zD,QAChBX,EAASlzD,EAAMC,UAAUs0D,MAAO,OAC9BrB,EAASlzD,EAAMC,UAAUs0D,MAAO,QACjCrB,EAASlzD,EAAMC,UAAUs0D,MAAO,OAC3Bv0D,EAAMC,UAAUC,SA2CxCD,CAAU,CAACD,UAvCiB,SAAC,GAAD,IAAEA,EAAF,EAAEA,MAAF,OAAkBuN,aAAjB,IAAD,w2BAEJvN,EAAMC,UAAUib,IAChBlb,EAAMC,UAAUib,IACblb,EAAMC,UAAUib,IACdlb,EAAMC,UAAUib,IACpBlb,EAAMC,UAAUib,IAChBlb,EAAMC,UAAUib,IACflb,EAAMC,UAAUib,IACXlb,EAAMC,UAAUib,IAIMlb,EAAMC,UAAU+0D,SAEjDh1D,EAAMC,UAAUib,IAKhBlb,EAAMC,UAAUib,IAMhBlb,EAAMC,UAAUg1D,KAKhBj1D,EAAMC,UAAUib,IAIhBlb,EAAMC,UAAUib,KAKpCg6C,CAAiB,CAACl1D,UAClBm1D,GAKgBC,GAMAC,GAiCHloD,GAAY6X,GAIZ7X,GAAYynD,GAIZznD,GAAY0nD,GAIZ1nD,GAAYC,GAIZD,GAAYgR,GAIZhR,GAAYK,GAMEkK,GAAY,IC1K9B49C,GAAU,SAACC,GAAD,IAAUC,EAAV,uDAAqB,GAArB,gBAA+BD,EAAKC,EAApC,QACVnoD,GAAe,EACfooD,GAAa,SAACn7D,GACvB,IAAM2F,EAA0B,SAAd3F,EAAuBi5D,EAAmBoB,EACtDe,EAAc,CAChBC,QAAS11D,EAAUsC,OACnBrC,QAASD,EAAUsM,UACnBtJ,SAAUhD,EAAU2zD,iBACpB5uD,MAAO/E,EAAU+zD,aAErB,MAAO,CACH4B,cAAc,aAAD,OAAeF,EAAYC,SACxCE,cAAc,GAAD,OAAKxoD,GAAO,EAAZ,MACbyoD,YAAa3oD,GACb3K,aAAc,YAI2F,IACjGZ,EADgG,IAHrFa,WAGqF,MAH/E,EAG+E,MAFrFC,WAEqF,MAF/E,EAE+E,MADrFC,aACqF,MAD7E,UAC6E,EAEpG,OAAQA,GACJ,IAAK,UACL,IAAK,WACL,IAAK,QACDf,EAAQ8zD,EAAa/yD,GACrB,MACJ,QACIf,EAAQe,EAEhB,MAAM,qBAAN,OACMF,EADN,oBACqBb,EADrB,qCAEac,EAAM2K,GAFnB,iBAKJkY,aAAc,YAG8E,IACpF3jB,EADmF,IAFxEa,WAEwE,MAFlE,EAEkE,MADxEE,aACwE,MADhE,UACgE,EAEvF,OAAQA,GACJ,IAAK,UACL,IAAK,WACL,IAAK,QACDf,EAAQ8zD,EAAa/yD,GACrB,MACJ,QACIf,EAAQe,EAEhB,MAAM,GAAN,OAAUF,EAAV,oBAAyBb,M,UC5C/B2f,GAAK,SAAC,GAAsB,IAArBthB,EAAoB,EAApBA,UACT,MAAO,CACH2M,aAAa,GAAD,OAJE,EAIF,MACZ2M,QAAS,KACTzV,OAAO,KAAD,OAPM,EAON,MACNL,QAAS,QACTI,OAAO,MACPkJ,gBAAiB9M,EAAUC,QAC3BqB,SAAU,WACV6C,KAAM,EACNinB,MAAO,EACPomB,OAAQ,IAIHskB,GAAc,SAAC,GAA8E,IAA7E91D,EAA4E,EAA5EA,UACnBuD,EAAQ8xD,GAjBU,IAkBlBzxD,EAASyxD,GAlBS,IAmBxB,MAAO,CACHU,eAAgB,CACZC,KAAM,CACFpyD,OAAQyxD,GAAQ,IAChB,OAAQ,CACJ9xD,QACAK,UAEJ,6BAA8B,CAE1BjC,MAAO3B,EAAUi2D,iBAErB,UAAW,CACPnpD,gBAAiB,WAErB,gBAAiB,CACbnL,MAAO3B,EAAU4a,iBAqCxBs7C,GAAU,SAAC,GAAsB,IAArBl2D,EAAoB,EAApBA,UACrB,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACFr0D,MAAO3B,EAAUsM,UACjB,UAAW,CACP3K,MAAO3B,EAAU0zD,gBAErB,iBAAkB,CACd/xD,MAAO3B,EAAU2zD,sBAsBxBwC,GAAW,SAAC,GAAsB,IAArBn2D,EAAoB,EAApBA,UACtB,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACFr0D,MAAO3B,EAAU4a,YACjB,qBAAsB,CAClBrZ,QAAS,EACTuL,gBAAiB9M,EAAUogB,UAclCg2C,GAAY,SAAC,GAA4E,IAA3Ep2D,EAA0E,EAA1EA,UAGjBuD,EAAQ8xD,GAAQ,IAChBzxD,EAASyxD,GAAQ,IACjB90D,EAAO80D,GAAQ,IAErB,MAAO,CACHU,eAAgB,CACZC,KAAM,CACFzyD,QACAK,SACAoL,QAAS,EACTnL,OAAQwxD,GAAQ,GAChBld,SAAU,QACV,wBAAyB,CACrBnpC,QAASqmD,GAdRgB,GAeDzyD,OAAQ,OACRL,MAAO,QAEX,iBAAkB,CACd5B,MAAO3B,EAAU4a,YAEjB,uCAAwC,CACpC9N,gBAAiB,cACjBynD,QAxJR,EAyJQ8B,YAzBA,EA0BA/zD,OAAO,SAAD,OAAWtC,EAAUC,UAE/B,qBAAsB,CAClB6M,gBAAiB9M,EAAUC,QAC3Bs0D,QA9JR,IAiKA,qCAAsC,CAClC,iCAAkC,CAC9BznD,gBAAiB9M,EAAUC,SAE/B,uBAAwB,CACpB6M,gBAAiB9M,EAAUg0D,OAC3B1xD,OAAQ,OACRiyD,QAAS,IAEb,qBAAsB,CAClBznD,gBAAiB9M,EAAU+M,cAC3BwnD,QAAS,MAKrB1nD,aAAc,GACdypD,MAAO,CACH3pD,aAAc,GACdrK,OAAO,SAAD,OAAWtC,EAAU+M,eAC3BspD,YArDQ,EAsDRvpD,gBAAiB,cACjB,KAAM,CACFynD,QAxLJ,GA2LA9wD,UAAW,cAGf8yD,MAAO,CACH98C,UAAW,OACX3M,gBAAiB9M,EAAU+M,cAC3BxJ,MAAOhD,EACPqD,OAAQrD,MAOXi2D,GAAY,SAAC,GAA4E,IAA3Ex2D,EAA0E,EAA1EA,UACvB,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACF,cAAiB,aACjB,2CAA4C,CACxC3xD,SAAU,UAKd65B,WAAY,SACZ75B,SAAUgxD,GAAQ,IAClB1oD,aAAc0oD,GAAQ,GACtBoB,WAAY,SACZ1tD,YAAassD,GAAQ,IACrBrsD,aAAcqsD,GAAQ,KAE1BqB,KAAM,CACF/0D,MAAO3B,EAAUsM,UACjBjI,SAAU,SACV,UAAW,CACP1C,MAAO3B,EAAU0zD,eACjB5mD,gBAAiB,WAErB,WAAY,CACRnL,MAAO3B,EAAU2zD,kBAErB,aAAc,CACVhyD,MAAO3B,EAAU8zD,UAGzB6C,UAAW,CACP/yD,OAAQyxD,GAAQ,IAChBhxD,SAAUgxD,GAAQ,IAClBvoD,gBAAiB9M,EAAUC,QAC3B,UAAW,CACP6M,gBAAiB9M,EAAUwzD,cAE/B,iBAAkB,CAEd1mD,gBAAiB9M,EAAU42D,eAC3Bj1D,MAAO3B,EAAU62D,kBAKzBC,UAAW,CACPlzD,OAAQyxD,GAAQ,IAChBhxD,SAAU,SACVoyD,WAAY,UAKhBM,UAAW,CACPnzD,OAAQyxD,GAAQ,IAChBhxD,SAAU,UAMd2yD,kBAAmB,CACfpzD,OAAQyxD,GAAQ,IAChBhxD,SAAU,UAEd4yD,SAAU,CACNrzD,OAAQyxD,GAAQ,IAEhBhxD,SAAU,SACVoyD,WAAY,SACZ90D,MAAO3B,EAAU+M,cACjB0oD,YAAaz1D,EAAUsC,OACvBwK,gBAAiB9M,EAAUib,IAC3B,UAAW,CACPtZ,MAAO3B,EAAU4a,YACjB66C,YAAaz1D,EAAU4a,YACvB9N,gBAAiB9M,EAAUib,KAE/B,iBAAkB,CACdnO,gBAAiB9M,EAAU42D,eAC3Bj1D,MAAO3B,EAAU62D,gBAEjBpB,YAAaz1D,EAAUsC,YAgB9BspB,GAAa,SAAC,GAA4E,EAA3E5rB,UACxB,MAAO,CACH+1D,eAAgB,KAeXmB,GAAW,SAAC,GAA2E,IAA1El3D,EAAyE,EAAzEA,UACtB,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACFrpD,aAAc0oD,GAAQ,GACtB8B,gBAAiB,OACjBrqD,gBAAiB9M,EAAUm0D,MAC3B,qBAAsB,CAClBgD,gBAAiB,YAgCxBC,GAAW,SAAC,GAAqB,EAApBp3D,UACtB,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACF,OAAQ,CACJpyD,OAAQ,kBACRL,MAAO,uBAWd8zD,GAAgB,SAAC,GAA+E,IAA9Er3D,EAA6E,EAA7EA,UAC3B,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACF3xD,SAAU,SACVT,OAAQ,GACR1B,UAAW,OACXoC,IAAK,EACLH,KAAM,EACN,gBAAiB,CACbxC,MAAO3B,EAAU+M,eAErB,kBAAmB,CACfpL,MAAO3B,EAAU+M,mBAMxBuqD,GAAe,SAAC,GAAyF,IAAxFt3D,EAAuF,EAAvFA,UAAU3F,EAA6E,EAA7EA,UACpC,MAAO,CACH07D,eAAgB,CACZC,KAAM,CACF,YAAa,CACTx0D,UAAW,IAEfF,SAAU,WACV+C,SAAU,SACVyI,gBAAiB9M,EAAUib,IAC3B3Y,OAAQkzD,GAAWn7D,GAAWirB,aAAa,CAAC5iB,MAAM1C,EAAUsC,SAC5DqK,aAAc,EACd,mCAAoC,CAEhCoH,SAAU,wBAGd,+BAAgC,CAC5BvQ,QAAS,OACT6P,cAAe,MACftP,WAAY,SACZwH,SAAU,SACVvH,eAAgB,gBAChBH,OAAQ,EACRD,OAAO,WAEX,aAAc,CACVJ,QAAS,QAEb,QAAS,CACL+zD,cAAe,OACf51D,MAAO,+BAEXqH,aAAc,EACd,UAAW,CACP1G,OAAQkzD,GAAWn7D,GAAWirB,aAAa,CAAC5iB,MAAM1C,EAAU+zD,eAEhE,aAAc,CACVjnD,gBAAiB9M,EAAU42D,eAC3BnB,YAAaz1D,EAAU42D,eACvBj1D,MAAO3B,EAAU62D,iBAErB,sBAAuB,CACnB30D,UAAW,kBAEf,qBAAsB,CAClB8M,QAAS,EACT1M,OAAQ,cACRwK,gBAAiB,cACjBnL,MAAO,8BACP,YAAa,CACTw9B,WAAY,eAGhB,OAAQ,CACJ/T,MAAO,QACP9mB,IAAK,EACLhD,SAAU,WACVi2D,cAAe,OACfC,WAAY,8CACZ71D,MAAO,+BAEX,sBAAuB,CACnBoS,SAAU,OACVxQ,MAAO,SAGf,0BAA2B,CACvByL,QAAS,2BACT+E,SAAU,OACVxQ,MAAO,QAEX,2BAA4B,CACxByL,QAAQ,EACRpL,OAAQyxD,GAAQ,KAEpB,uBAAwB,CAEpBzxD,OAAQyxD,GAAQ,IAChB5hD,WAAY4hD,GAAQ,IAAKthD,SAAU,YAU1C0jD,GAAkB,SAAC,GAAgF,IAA/Ez3D,EAA8E,EAA9EA,UAC7B,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACFpyD,OAAQ,uBACRL,MAAO,uBACP,OAAQ,CACJK,OAAQ,wBACRL,MAAO,wBACP5B,MAAO,WAEX,4BAA6B,CACzBiC,OAAQ,6BACRL,MAAO,6BACP,OAAQ,CACJK,OAAQ,kBACRL,MAAO,oBAGf,+BAA+B,CAC3B5B,MAAM3B,EAAU+M,cAChB,UAAW,CACPpL,MAAM3B,EAAU4a,eAI5B/R,MAAO,CACHtF,MAAO,WAKVm0D,GAAkB,SAAC,GAAiC,IAAhC13D,EAA+B,EAA/BA,UAAW3F,EAAoB,EAApBA,UACxC,MAAO,CACH07D,eAAgB,CACZC,KAAM,CACF,8BAA+B,CAC3BpyD,OAAQyxD,GAAQ,IAChBhxD,SAAU,UAEdT,OAAQyxD,GAAQ,IAChB57C,UAAW,mCACX9M,aAAc,iBACd9I,OAAQ,QACRQ,SAAU,SACV1C,MAAO3B,EAAU4a,YACjB66C,YAAaz1D,EAAUsC,OACvB,8CAA+C,CAC3CmzD,YAAaz1D,EAAUsC,QAE3BwK,gBAAiB9M,EAAUib,IAC3B,UAAW,CACPnO,gBAAiB9M,EAAUib,IAC3Bw6C,YAAaz1D,EAAU4a,YACvB,4CAA6C,CACzC66C,YAAaz1D,EAAU4a,aAE3B,gCAAiC,CAC7B66C,YAAaz1D,EAAUC,UAG/B,iBAAkB,CACd6M,gBAAiB9M,EAAU42D,eAC3Bj1D,MAAO3B,EAAU+M,cACjBzK,OAAQ,aACRmzD,YAAaz1D,EAAUsC,QAG3B,oDAAqD,CACjDX,MAAO3B,EAAUC,QACjB6M,gBAAiB6qD,aAAK33D,EAAUC,QAAS,IACzCqC,OAAQkzD,GAAWn7D,GAAWirB,aAAa,CAAC5iB,MAAOi1D,aAAK33D,EAAUC,QAAS,WAOlF23D,GAAgB,CACzBC,aAAc,CACVC,eAAe,IAGVC,GAAoB,SAAC,GAAsB,IAArB/3D,EAAoB,EAApBA,UAC/B,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACF3xD,SAAU,SACV1C,MAAO3B,EAAU+M,cACjBJ,aAAc,OAElBuX,KAAM,CACF7f,SAAU,QAEduW,YAAa,CACT,iBAAkB,CACd9N,gBAAiB,cACjBnL,MAAO3B,EAAUsM,UACjB,UAAW,CACPQ,gBAAiB9M,EAAUu0D,WAMvCvxD,SAAU,MAsCTg1D,GAAc,SAAC,GAAsB,IAArBh4D,EAAoB,EAApBA,UACzB,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACFpyD,OAAQyxD,GAAQ,IAChBtsD,YAAassD,GAAQ,IACrBrsD,aAAcqsD,GAAQ,IACtB1zD,MAAO3B,EAAU+M,cACjB,UAAW,CACPpL,MAAO3B,EAAU4a,YACjBukB,WAAWn/B,EAAUk0D,UAMzB,kDAAmD,CAC/C,aAAa,CACTvyD,MAAO3B,EAAU4a,YACjBtY,OAAQ,aAgBnB+hB,GAAc,SAAC,GAAgC,IAA/BrkB,EAA8B,EAA9BA,UAAU3F,EAAoB,EAApBA,UACnC,MAAO,CACH07D,eAAgB,CACZC,KAAM,CACFpyD,OAAQyxD,GAAQ,IAChB4C,WAAYzC,GAAWn7D,GAAWirB,aAAa,CAAC5iB,MAAM,mBAEtDqG,YAAassD,GAAQ,IACrBrsD,aAAcqsD,GAAQ,IACtB1zD,MAAO3B,EAAU+M,cAEjB,gCAAiC,CAE7BD,gBAAiB9M,EAAUk0D,UAE/B,+BAAgC,CAC5B1wD,QAAS,OACT6P,cAAe,MACftP,WAAY,gBACZwH,SAAU,SACVvH,eAAgB,gBAChB,kDAAmD,CAE/C,UAAW,CACPR,QAAS,UAIrB,kDAAmD,CAE/C27B,WAAY,OACZx9B,MAAO3B,EAAU4a,iBAexBs9C,GAAS,SAAC,GAAyE,IAAxEl4D,EAAuE,EAAvEA,UACpB,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACFS,WAAY,SACZznD,QAAQ,KAAD,OAAO5B,GAAP,MACPwtB,SAAU,UACV7mB,SAAU,kBACV1P,SAAU6I,GAAYgR,GACtBvc,MAAO3B,EAAU+M,cACjB,UAAW,CACPD,gBAAiB,eAErB,kBAAmB,CACfyzB,cAAe,cAEnB,iBAAkB,CACd5+B,MAAO3B,EAAU4a,YACjB,UAAW0G,GAAG,CAACthB,eAEnB,gEAAiEshB,GAAG,CAACthB,cACrE,kBAAmB,CACf4D,OAAQ,mBACR28B,cAAe,cAEnB,qBAAsB,CAClB/8B,QAAS,YAqBhB20D,GAAa,SAAC,GAAsB,IAArBn4D,EAAoB,EAApBA,UACxB,MAAO,CACH+1D,eAAgB,CACZC,KAAM,CACFP,YAAY,GAAD,OAAKz1D,EAAUo4D,kBCrvB7BC,GAAa,SAAC,GAA0F,IAAzFr4D,EAAwF,EAAxFA,UAAW3F,EAA6E,EAA7EA,UACnC,MAAO,CACHi+D,qBAAsB,CAClBvC,eAAgB,CACZC,KAAM,CACFzyD,MAAM,0BACN47B,WAAYn/B,EAAUm0D,MACtB16C,UAAWzZ,EAAUy0D,OACrB9nD,aAAckkC,MAEdvuC,OAAQkzD,GAAWn7D,GAAWkI,aAAa,CAACG,MAAM1C,EAAUg0D,SAC5D,QAAS,CACL3vD,SAAU,OACV1C,MAAO3B,EAAU+M,eAErB,qCAAsC,CAClC1I,SAAU,QAEd,yDAA0D,CACtD/C,SAAU,WACV0N,QAAS,MAMzBupD,UAAW,CACPxC,eAAgB,CACZC,KAAM,CACFzyD,MAAM,0BACN47B,WAAYn/B,EAAUm0D,MACtB16C,UAAWzZ,EAAUy0D,OACrB9nD,aAAckkC,MACdvuC,OAAQkzD,GAAWn7D,GAAWirB,aAAa,CAAC5iB,MAAO,SACnD,QAAS,CACL2B,SAAU,OACV1C,MAAO3B,EAAU+M,eAErB,qCAAsC,CAClC1I,SAAU,QAEd,yDAA0D,CACtD/C,SAAU,WACV0N,QAAS,MAMzBwpD,8BAA+B,CAC3BzC,eAAgB,CACZC,KAAM,CACF,QAAS,CACL3xD,SAAU,OACV1C,MAAO3B,EAAU+M,eAErBoyB,WAAYn/B,EAAUm0D,MACtB16C,UAAWzZ,EAAUy0D,OACrB9nD,aAAckkC,MAEdvuC,OAAQkzD,GAAWn7D,GAAWkI,aAAa,CAACG,MAAM1C,EAAUg0D,SAC5D3vD,SAAU,IACV,2EAA4E,CACxEoxD,YAAaz1D,EAAUg0D,QAE3B,kCAAmC,CAC/B1xD,OAAQkzD,GAAWn7D,GAAWirB,aAAa,CAAC5iB,MAAO,kBACnD+1D,kBAAmBz4D,EAAUg0D,OAC7BvwD,UAAW,aACXG,OAAQ,GACR0H,UAAW,GACXotD,UAAW,GACX70D,OAAQ,EACRuF,aAAc,EACd,wBAAyB,CACrBzH,MAAO3B,EAAU+M,eAErB,wDAAyD,CACrD1I,SAAU,WAIlB,qCAAsC,CAClCA,SAAU,QAEd,iGAAkG,CAC9FgyD,YAAa,GAEjB,+BAAgC,CAC5Bn0D,UAAW,QAEf,4CAA6C,CACzCqB,MAAM,0BACN+H,UAAU,2BACVlC,aAAc,SAElB,yDAA0D,CACtDqsD,YAAa,kBAM7BkD,mCAAoC,CAChC5C,eAAgB,CACZC,KAAM,CACF,QAAS,CACL3xD,SAAU,OACV1C,MAAO3B,EAAU+M,eAErBoyB,WAAan/B,EAAUm0D,MACvB16C,UAAWzZ,EAAUy0D,OACrB9nD,aAAckkC,MACdvuC,OAAQkzD,GAAWn7D,GAAWirB,aAAa,CAAC5iB,MAAO,SACnD2B,SAAU,IACV,6BAA8B,CAC1BA,SAAU6I,GAAYC,IAE1B,gFAAiF,CAC7EsoD,YAAaz1D,EAAUg0D,QAE3B,kCAAmC,CAC/B1xD,OAAQkzD,GAAWn7D,GAAWirB,aAAa,CAAC5iB,MAAO,kBACnD+1D,kBAAmBz4D,EAAUg0D,OAC7BvwD,UAAW,aACXG,OAAQ,GACR0H,UAAW,GACXotD,UAAW,GACX70D,OAAQ,EACRuF,aAAc,EACd,wBAAyB,CACrBzH,MAAO3B,EAAU+M,eAErB,wDAAyD,CACrD1I,SAAU,WAIlB,qCAAsC,CAClCA,SAAU,QAEd,mGAAoG,CAChGgyD,YAAa,GAEjB,gCAAiC,CAC7Bn0D,UAAW,QAEf,iDAAkD,CAC9CqB,MAAM,0BACN+H,UAAU,2BACVlC,aAAc,SAElB,0DAA2D,CACvDqsD,YAAa,kBAM7BmD,uBAAwB,CACpB7C,eAAgB,CACZC,KAAM,CACF,uHAAwH,CACpH6C,qBAAsBhoB,MACtBioB,wBAAyBjoB,OAE7B,4HAA6H,CACzHkoB,oBAAqBloB,MACrBmoB,uBAAwBnoB,OAE5B,2CAA4C,CACxC/jC,gBAAiB9M,EAAUyzD,gBAE/B,oGAAqG,CACjG,UAAW,CACPgC,YAAa,mBAMjCwD,sBAAuB,CACnBlD,eAAgB,CACZC,KAAM,CACF,qHAAsH,CAClH6C,qBAAsBhoB,MACtBioB,wBAAyBjoB,OAE7B,0HAA2H,CACvHkoB,oBAAqBloB,MACrBmoB,uBAAwBnoB,OAE5B,2CAA4C,CACxC/jC,gBAAiB9M,EAAUyzD,mBAK3CyF,wBAAyB,CACrBnD,eAAgB,CACZC,KAAM,CACF3xD,SAAU,OAItB80D,kBAAmB,CACfnD,KAAM,IAEVoD,cAAe,CACXrD,eAAgB,CACZC,KAAM,CACF,KAAM,CACF3xD,SAAU,SACVsI,aAAckkC,MACdvuC,OAAQkzD,GAAWn7D,GAAWirB,aAAa,CAAC5iB,MAAO,kBACnDoK,gBAAiB9M,EAAUu0D,SAG/B,uCAAwC,CACpCznD,gBAAiB9M,EAAUC,SAI/B,iBAAkB,CAEd0B,MAAO3B,EAAU6zD,aAGrB,wBAAyB,CACrB,uBAAwB,CACpB/mD,gBAAiB,cACjBnL,MAAO3B,EAAUC,QACjBw1D,YAAa,eAIjB,iBAAkB,CAEd9zD,MAAO3B,EAAU4a,YACjB9N,gBAAiB9M,EAAUC,UAKnC,gCAAiC,CAC7B6M,gBAAiB9M,EAAUwzD,iBAO3C6F,mBAAoB,CAChBtD,eAAgB,CACZC,KAAM,CACF1qD,UAAU,2BACVlC,aAAc,WAI1BkwD,yBAA0B,CACtBvD,eAAgB,CACZC,KAAM,CACF,KAAM,CACF1zD,OAAQkzD,GAAWn7D,GAAWirB,aAAa,CAAC5iB,MAAO,kBACnD+1D,kBAAmBz4D,EAAUg0D,OAC7BvwD,UAAW,aACXG,OAAQ,GACR0H,UAAW,GACXotD,UAAW,GACX70D,OAAQ,EACRuF,aAAc,GAGlB,mBAAoB,CAChBzH,MAAO3B,EAAU+M,eAErB,6BAA8B,CAC1B1I,SAAU6I,GAAYC,OAKtCosD,eAAgB,CACZxD,eAAgB,CACZC,KAAM,CACF,KAAM,CACF3xD,SAAU,UAEd,gCAAiC,CAC7B1C,MAAO3B,EAAU+M,cACjB1I,SAAU,SACV,iBAAkB,CACdyI,gBAAiB9M,EAAUC,QAE3B0M,aAAckkC,WAMlC2oB,sBAAuB,CACnBC,aAAc,MC9QbC,GAAW,SAACr/D,GACrB,IF0mBoB,EAhmBA,EEVd2F,EAAmD,SAAd3F,EAAuBi5D,EAAmBoB,EAC/E30D,EAAQ45D,YAAe,CACzB/lD,QAASxG,GACTwsD,QAAS,CACLC,KAAMx/D,EACN4F,QAAS,CACLogC,MAAOrgC,EAAUC,QACjB65D,KAAM95D,EAAUC,QAChB1F,KAAMyF,EAAUC,QAChB85D,aAA4B,SAAd1/D,EAAqB,OAAO,QAE9CiS,UAAW,CACP+zB,MAAOrgC,EAAUsM,UACjBwtD,KAAM95D,EAAUsM,UAChB/R,KAAMyF,EAAUsM,UAChBytD,aAA4B,SAAd1/D,EAAqB,OAAO,QAG9C2/D,kBAAmB,EACnBC,YAAa,GACb96B,WAAY,CACR+6B,MAAOl6D,EAAUib,IACjBy6C,QAAS11D,EAAUo0D,UAEvBsC,KAAM,CACFz2D,QAASD,EAAU4a,YACnBtO,UAAWtM,EAAU+M,cACrBlM,SAAUb,EAAU6zD,aAIxBhZ,OAAQ,CAAC,MAAS,OAAQ,MAAS,QACnCl/C,OAAQ,CACJw+D,aAAc,IACdC,MAAOp6D,EAAU0zD,eACjB1wD,SAAUhD,EAAU2zD,iBAEpB9yD,SAAUb,EAAU6zD,YACpBwG,OAAQr6D,EAAU2zD,kBAEtBC,QAAQ,CACJkG,KAAM95D,EAAU4zD,SAEpB9sD,MAAO,CACHgzD,KAAM95D,EAAU8G,MAChBvM,KAAMyF,EAAU8G,MAChBizD,aAA4B,SAAd1/D,EAAqB,OAAO,SAGlDigE,WAAY,CAERp8B,WAAY,SACZ75B,SAAU,GACV0gB,GAAI,CACA1gB,SAAU6I,GAAY6X,GACtBtR,WAAY,UAEhBkhD,GAAI,CACAtwD,SAAU6I,GAAYynD,GACtBlhD,WAAY,UAEhBmhD,GAAI,CACAvwD,SAAU6I,GAAY0nD,GACtBnhD,WAAY,UAEhBtG,GAAI,CACA9I,SAAU6I,GAAYC,GACtBsG,WAAY,UAEhByK,GAAI,CACA7Z,SAAU6I,GAAYgR,GACtBzK,WAAY,SACZ5P,OAAO,GAEX0J,GAAI,CACAlJ,SAAU6I,GAAYK,GACtB1J,OAAQ,GAEZ02D,UAAW,CACPl2D,SAAU,IAEdqf,OAAQ,CACJrf,SAAU,IAEdk5B,MAAO,CACHl5B,SAAU6I,GAAYqwB,MACtBi9B,UAAWx6D,EAAU4a,aAEzBi6C,MAAO,CACHxwD,SAAU,GACVm2D,UAAWx6D,EAAU+M,gBAG7B0tD,WAAW,aACPC,SFpFY,EEoFK,CAAC16D,aFnFnB,CACH+1D,eAAgB,CACZC,KAAM,CACFlpD,gBAJ6B,EAApB9M,UAIkBib,IAC3BjM,QAASqmD,GAAQ,QEgFrBsF,eFzED,CACH5E,eAAgB,CACZC,KAAM,CACFhnD,QAASqmD,GAAQ,MEuErBuF,eFhED,CACH7E,eAAgB,CACZC,KAAM,CACFhnD,QAAS,KE8Db8mD,YAAaA,GAAY,CAAC91D,cAC1Bk2D,QAASA,GAAQ,CAACl2D,cAClBm2D,SAAUA,GAAS,CAACn2D,cAEpB4rB,WAAYA,GAAW,CAAC5rB,cACxB66D,WFfD,CACH9E,eAAgB,CACZC,KAAM,CAACpyD,OAAQ,0BEcfk3D,WFwMD,CACH/E,eAAgB,CACZC,KAAM,CACFpyD,OAAQ,kBACRL,MAAO,kBAEP,6BAA8B,CAC1BK,OAAQ,wBACRL,MAAO,yBAGX,QAAS,CACLA,MAAO,OACPK,OAAQ,WEpNhBm3D,QF2lBD,CACHhF,eAAgB,CACZC,KAAM,CACF,uBAAwB,CACpBxyD,QAAS,OACT27B,WAAY,UE/lBpB+4B,OAAQA,GAAO,CAACl4D,cAChB43D,cAAeA,GACfR,SAAUA,GAAS,CAACp3D,cACpBw2D,UAAWA,GAAU,CAACx2D,YAAW3F,cACjCq9D,gBAAiBA,GAAgB,CAAC13D,cAClCo2D,UAAWA,GAAU,CAACp2D,cACtBy3D,cAAeA,GAAc,CAACz3D,cAC9B+3D,kBAAmBA,GAAkB,CAAC/3D,cACtCg7D,aFvDD,CACHjF,eAAgB,CACZC,KAAM,CACF,0BAA2B,CACvBh0D,WAAY,EACZP,YAAa,EACb0H,UAAW,YEkDnBmuD,aAAcA,GAAa,CAACt3D,YAAU3F,cACtC4gE,SFufY,EEvfK,CAACj7D,aFwfnB,CACH+1D,eAAgB,CACZ7yC,KAAM,CACFpW,gBAJ6B,EAApB9M,UAIkBm0D,UE1f/B9vC,YAAaA,GAAY,CAACrkB,YAAU3F,cACpC6gE,QFidD,CACHnF,eAAgB,CACZC,KAAM,CACF,oBAAqB,CACjBhnD,QAAS,eEpdjBgpD,YAAaA,GAAY,CAACh4D,cAC1Bm7D,kBFumBD,CACHpF,eAAgB,CACZC,KAAM,CACFjiD,SAAU,OACVtS,YAAY,GAAD,OAnwBP,EAmwBO,MACX,kBAAmB,CACfmC,OAAO,6BACPL,MAAM,6BACN,IAAO,CACHK,OAAO,+BACPL,MAAM,oCEhnBlB8zD,cAAeA,GAAc,CAACr3D,cAE9Bk3D,SAAUA,GAAS,CAACl3D,YAAW3F,cAC/B89D,WAAYA,GAAW,CAACn4D,eACrBq4D,GAAW,CAACr4D,YAAW3F,eAE9B+gE,MAAO,CAACzuD,aF9JM,KEgKlB,OAAO,2BACA5M,GAAU,CACTqN,QACAysD,KAAMx/D,EACNiI,OAAQkzD,GAAWn7D,GAAY6S,eAC/BlN,UAAyB,SAAd3F,EAAuBi5D,EAAmBoB,M,SVzKrDp6D,K,YAAAA,E,eAAAA,M,KWHL,I,GCAKyuC,GCEAsyB,GCFA55B,GHACv5B,GAAcpJ,OAAOy0D,OAAO,CACjCtrD,KAAM,MISDqzD,GAAmB17D,YAAO8f,IAAP9f,CAAH,iRAMnB,YAAiE,IAA/Duf,EAA8D,EAA9DA,KAAKE,EAAyD,EAAzDA,KAAyD,IAApDC,iBAAoD,MAA1C,GAA0C,MAAvCC,gBAAuC,MAA9B,GAA8B,MAA3Bhf,YAA2B,MAAtB,GAAsB,EAC9D,MAAM,0CAAN,OAC2B4e,EAD3B,sDAE2BE,EAF3B,sCAGWC,EAHX,qCAIUC,EAJV,+CAKoBhf,EAAK,GALzB,oB,SHjBAwoC,K,gBAAAA,E,oBAAAA,E,mBAAAA,Q,cCEAsyB,K,oBAAAA,E,kBAAAA,E,gBAAAA,E,kBAAAA,E,sBAAAA,E,gCAAAA,E,sBAAAA,E,mBAAAA,Q,cCFA55B,K,kBAAAA,E,oBAAAA,E,+BAAAA,Q,KEGL,ICHKzmC,GAKAH,GDFCsnC,GAA6B,CACtC,CACIljC,IAAKwiC,GAAiBC,SACtBY,OAAQ,4BAEZ,CACIrjC,IAAKwiC,GAAiBE,cACtBW,OAAQ,mC,SCVJtnC,K,cAAAA,E,WAAAA,Q,cAKAH,K,aAAAA,E,WAAAA,Q,KAKL,ICVK4zB,GCAAmW,GAMA22B,GCNAC,GHUC9pD,GAAmD,CAAC,GAAK,GAAK,I,SCV/D+c,K,oBAAAA,E,oBAAAA,E,aAAAA,Q,cCAAmW,K,cAAAA,E,cAAAA,E,eAAAA,Q,cAMA22B,K,QAAAA,E,QAAAA,E,SAAAA,Q,cCNAC,K,YAAAA,E,qBAAAA,Q,KAKL,IASKjhC,GAMA/I,GAKAS,GApBC3nB,GAET,CACA,KAAQ,GACR,SAAY,K,SAKJiwB,K,WAAAA,E,eAAAA,Q,cAMA/I,K,UAAAA,E,aAAAA,Q,cAKAS,K,wBAAAA,E,sBAAAA,E,wBAAAA,E,sBAAAA,E,kBAAAA,E,mBAAAA,Q,KAYL,ICvBKmV,GDuBCj0B,GAAgB,M,SCvBjBi0B,O,uBAAAA,I,+BAAAA,I,qBAAAA,I,kCAAAA,Q,KAOL,IAyCKq0B,GAOAC,GAhDCjzB,GAAuB,CAChCrB,GAAoBC,SAEpBD,GAAoBG,QACpBH,GAAoBzF,eAGb2G,GAAkH,CACzH,CACIpB,gBAAiBE,GAAoBC,SACrCzG,IAAK,mEACLyF,UAAW,wBACXC,gBAAiB,oBAErB,CAACY,gBAAiBE,GAAoBE,aAAcz+B,MAAO,qBAC3D,CAACq+B,gBAAiBE,GAAoBG,QAAS1+B,MAAO,gBACtD,CACIq+B,gBAAiBE,GAAoBzF,cACrC94B,MAAO,qBACPmsB,YAAQ1tB,EACRq0D,iBAAkB,GAClBz2B,iBAAa59B,K,SAoBTm0D,O,qBAAAA,I,iBAAAA,I,yBAAAA,I,oBAAAA,Q,cAOAC,O,qBAAAA,I,iBAAAA,I,yBAAAA,I,oBAAAA,Q,KAOL,IC5EKznC,GD4EDoU,GAAiD,CACxD,CACIx/B,MAAO,CACHoD,GAAI,UAAW3C,QAAS,gBAE5B6Y,OAAQ,CAACG,KAAM,YACf0S,OAAQ+T,GAAoB2sB,SAEhC,CACI7sD,MAAO,CACHoD,GAAI,UAAW3C,QAAS,cAG5B6Y,OAAQ,CAACG,KAAM,iBAEf0S,OAAQ+T,GAAoB2sB,SAEhC,CACI7sD,MAAO,CACHoD,GAAI,YAAa3C,QAAS,kBAE9B6Y,OAAQ,CAACG,KAAM,cACf0S,OAAQ+T,GAAoB2sB,SAEhC,CACI7sD,MAAO,CACHoD,GAAI,SAAU3C,QAAS,eAE3B6Y,OAAQ,CAACG,KAAM,WACf0S,OAAQ+T,GAAoB2sB,SAEhC,CACI7sD,MAAO,CACHoD,GAAI,SAAU3C,QAAS,eAE3B6Y,OAAQ,CAACG,KAAM,WACf0S,OAAQ+T,GAAoB2sB,UAKvBkG,GAAgB,CACzBC,YAAa,CAAC,CACV33C,KAAMitC,EACNhvC,OAAQ,CAACG,KAAM,kBACfzZ,MAAO,CACHoD,GAAI,SAAU3C,QAAS,gBAE5B,CACC4a,KpBzHyB,SAAC9lB,GAC9B,OAAO,eAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,UACH,sBAAM7wB,EAAE,oOACR,sBAAMA,EAAE,iPACR,sBAAMA,EAAE,+PACR,sBAAMA,EAAE,qQoBqHRylB,OAAQ,CAACG,KAAM,wBACfzZ,MAAO,CACHoD,GAAI,eAAgB3C,QAAS,sBAGrCwyD,kBAAmB,CAAC,CAChB53C,KpBxHqB,SAAC9lB,GAC1B,OAAO,eAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,UACH,sBACI7wB,EAAE,2XACN,sBAAMA,EAAE,oFACR,sBAAMA,EAAE,qFACR,sBAAMA,EAAE,mFACR,sBAAMA,EAAE,oFACR,sBAAMA,EAAE,2EoBiHRylB,OAAQ,CAACG,KAAM,mBACfzZ,MAAO,CACHoD,GAAI,UAAW3C,QAAS,iBAE7B,CACC4a,KpB9FmB,SAAC9lB,GACxB,OAAO,eAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,UACH,sBACI7wB,EAAE,ksBACN,sBACIA,EAAE,4IoB0FNylB,OAAQ,CAACG,KAAM,iBACfzZ,MAAO,CACHoD,GAAI,QAAS3C,QAAS,gBAkC9ByyD,aAAc,CAAC,CACX73C,KAAM2tC,EACN1vC,OAAQ,CAACG,KAAM,mBACfzZ,MAAO,CACHoD,GAAI,UACJ3C,QAAS,mBAQR0yD,GAAmB,CAC5BC,WAAY,CAAC,CAET95C,OAAQ,CAACG,KAAM,oBACfzZ,MAAO,CACHoD,GAAI,QACJ3C,QAAS,eAEd,CACC4a,KAAM8uC,EACN7wC,OAAQ,CAACG,KAAM,yBACfzZ,MAAO,CACHoD,GAAI,aACJ3C,QAAS,mBAEd,CACC4a,KpBoIuB,SAAC9lB,GAC5B,OAAO,cAACivB,EAAA,EAAD,2BAAajvB,GAAb,IAAoBmF,MAAM,KAAKK,OAAO,KAAK0pB,QAAQ,YAAYC,KAAK,OAApE,SAEH,sBAAME,SAAS,UAAUC,SAAS,UAC5BhxB,EAAE,09HoBvIRylB,OAAQ,CAACG,KAAM,2BACfzZ,MAAO,CACHoD,GAAI,eACJ3C,QAAS,uBAqBR4yD,GAAa,S,SCrOdjoC,K,gBAAAA,E,aAAAA,Q,KCAL,ICGK0R,GAUAw2B,GCXAC,I,SDCAz2B,K,wBAAAA,E,wBAAAA,E,gBAAAA,E,sBAAAA,E,wBAAAA,E,+BAAAA,Q,cAUAw2B,K,wBAAAA,E,wBAAAA,E,gBAAAA,E,sBAAAA,E,kBAAAA,E,wBAAAA,E,kBAAAA,E,+BAAAA,Q,cCXAC,K,cAAAA,E,kBAAAA,E,cAAAA,E,aAAAA,Q,KCKL,IAAMr9C,GAA8B,SAAChhB,GAAkG,IAAvEw3B,EAAsE,uDAA1C,EAAG8mC,EAAuC,uCACzI,IAAKhxD,OAAO+kB,SAASryB,GAAQ,OAAOA,EACpC,IAAI0yC,OAAmBnpC,IAAVvJ,EAAsBA,EAAMy3B,eAAe,KAAM,CAC1DC,sBAAuBF,IACxB/mB,QAAQ,cAAe,WAAQlH,EAClC,YAAgBA,GAATvJ,OAAqBuJ,EAAY+0D,GAAUA,EAAOrkB,aAAeE,GAAiBn6C,GAAS0yC,GAK/F,SAASyH,GAAiBn6C,GAI7B,IAHA,IAAIkR,EAAWlR,EAAO0yC,EAAiB,GAEnC6rB,EAAY,EACTrtD,GAAY,KACfA,GAAY,IACZqtD,IAMJ,OAHA7rB,EAASxhC,EAASiE,YAAY,GAE9Bu9B,GATiB,CAAC,GAAI,IAAK,IAAK,IAAK,KASjB6rB,GAIjB,IAAM3mC,GAAmB,SAAC4mC,GAC7B,IAAKA,EAAM,OAAOA,EAClB,IAAMC,EAAWD,EAAK/0C,MAAM,EAAG,GACzBi1C,EAAWF,EAAK/0C,MAAM+0C,EAAKn5D,OAAS,GAC1C,MAAM,GAAN,OAAUo5D,EAAV,eAAyBC,IAGtB,SAASx5B,GAAa56B,GACzB,OAAKA,QAAuBf,IAAZe,GAAqC,OAAZA,GAAuC,KAAnBA,EAAQq0D,OAIjDr0D,EAAQs0D,OAAO,EAAG,GAAK,MAAQt0D,EAAQs0D,OAAOt0D,EAAQjF,OAAS,GAFxE,G,2DC1CFw5D,GAAW,CACpBC,mBAAoB,CAChB5wD,GAAI,qBACJ6wD,WAAY,gBAEhBC,gBAAiB,CACb9wD,GAAI,kBACJ6wD,WAAY,+BAEhBE,OAAQ,CACJ/wD,GAAI,SACJ6wD,WAAY,aAEhBG,iBAAkB,CACdhxD,GAAI,mBACJ6wD,WAAY,yBAEhBI,aAAc,CACVjxD,GAAI,eACJ6wD,WAAY,+BAEhBK,kBAAmB,CACflxD,GAAI,oBACJ6wD,WAAY,uBAEhBM,kBAAmB,CACfnxD,GAAI,oBACJ6wD,WAAY,6BAEhBO,yBAA0B,CACtBpxD,GAAI,oBACJ6wD,WAAY,4BACZ5pB,QAAS,IAEboqB,0BAA2B,CACvBrxD,GAAI,4BACJ6wD,WAAY,YACZ5pB,QAAS,IAEbqqB,0BAA2B,CACvBtxD,GAAI,4BACJ6wD,WAAY,YACZ5pB,QAAS,IAEbsqB,aAAc,CACVvxD,GAAI,eACJ6wD,WAAY,YACZ5pB,QAAS,IAEbuqB,UAAW,CACPxxD,GAAI,MACJ6wD,WAAY,WACZ5pB,QAAS,KC5CJwqB,GAAb,oDACI,WAAY52D,GAAmB,IAAD,+BAE1B,cAAMA,EAAMmF,KAiBR0xD,cAnBsB,IAyBtBC,WAzBsB,IA+BtBC,iBA/BsB,EAKtBzxC,MAAM0xC,mBACN1xC,MAAM0xC,kBAAN,gBAA8BJ,GAGlC,EAAKniE,KAAOuL,EAAMmF,GAClB,EAAKlF,QAAUD,EAAMmF,GACrB,EAAK2xD,MAAQjsC,KAAKosC,MAClB,EAAKF,YAAc/2D,EAAMg2D,WACzB,EAAKa,SAAW72D,EAAMosC,QAbI,EADlC,0CAsBI,WACI,OAAOL,KAAK8qB,WAvBpB,gBA4BI,WACI,OAAO9qB,KAAK+qB,QA7BpB,sBAkCI,WACI,OAAO/qB,KAAKgrB,gBAnCpB,gBAAiCzxC,Q,QCNpB4xC,GAAW,SAACC,GAAD,IAA2B7/D,EAA3B,uDAAwC,GAAxC,MAA+C,CAAC6/D,EAAU7/D,IAerE8/D,GAAmB,SAAC,GAAuF,IAAtFC,EAAqF,EAArFA,UAAWj8C,EAA0E,EAA1EA,SAEzC,OAAOi8C,EAAUhwD,QAAO,SAAC+T,EAAD,GAAyD,IAAD,oBAA5C+7C,EAA4C,KAAlC7/D,EAAkC,KAExE,OAAO,cAAC6/D,EAAD,2BAAc7/D,GAAd,aAAsB8jB,OAE/BA,K,gCCvBH,IAAKk8C,EAYAC,EASAC,E,+GArBAF,K,8BAAAA,E,wBAAAA,E,8BAAAA,E,wBAAAA,E,eAAAA,M,cAYAC,K,+BAAAA,M,cASAC,K,kBAAAA,E,qBAAAA,M,2DChBNC,EAAU,I,QAAIC,GAEdC,EAAkB,CAAC,EAAG,GACfC,EAAiB,CAC1BH,UACAI,YAAY,WAAD,4BAAE,WAAOhuD,EAAmCvS,GAA1C,SAAAuY,EAAA,sDACT4nD,EAAQK,KAAK,CACT5pC,OAAQopC,EAAS9rC,WACjB7xB,KAAM,CAACkQ,KAAMA,EAAMkuD,KAAMzgE,KAHpB,2CAAF,qDAAC,GAMZ0gE,UAAU,WAAD,4BAAE,WAAOC,EAAmCC,GAA1C,SAAAroD,EAAA,sDACP4nD,EAAQK,KAAK,CACT5pC,OAAQopC,EAAShyC,MACjB3rB,KAAM,CAACkQ,KAAMouD,EAAWF,KAAMG,KAH3B,2CAAF,qDAAC,GAMVC,YAAY,WAAD,4BAAE,WAAOC,EAAYlB,GAAnB,qBAAArnD,EAAA,4EAEYqnD,EAASmB,gBAFrB,mEAEsCD,EAAKE,IAAIC,cAF/C,6BAECF,EAFD,eAGSnB,EAASsB,eAHlB,uEAGmCJ,EAAKE,IAAIG,aAH5C,4BAGDD,EAHC,KAOLf,EAAQK,KAAK,CAAC5pC,OAAQ,gBAAiBv0B,KAAM,CAACu9D,WAAUmB,WAChDG,SAAiE,IAAxDb,EAAgBt4B,WAAU,SAACq5B,GAAD,OAAKA,GAAKn0D,OAAOi0D,MAAiBj0D,OAAOi0D,GAAU,aARzF,kDAWLf,EAAQK,KAAK,CAAC5pC,OAAQ,QAASv0B,KAAM,CAACqG,MAAK,QAXtC,0DAAF,qDAAC,GAkBZ24D,eAAe,WAAD,4BAAE,WAAOC,EAAWC,GAAlB,SAAAhpD,EAAA,sDACZ4nD,EAAQK,KAAK,CAAC5pC,OAAQ,aAAcv0B,KAAM,CAACk/D,OAAQA,EAAQD,KAAMA,KADrD,2CAAF,qDAAC,GAKfE,SAAU,kBAAMrB,EAAQsB,iB,OCtCtBC,EAA4C,CAC9C,EAAGC,uCACH,EAAGA,gEAGMC,EAAoB,uCAAG,WAAOv6B,GAAP,qBAAA9uB,EAAA,kEAEtBqnD,EAAkC,IAAIiC,IAAsB,CAC9DC,IAAKJ,EACLK,OAAQ,mCACRC,gBANa,KAObC,QAAQ,KAELC,EAAatC,EAAbsC,WAEQC,gBAAyBj5D,IAAZm+B,EAVA,iCAWlB66B,EAAUE,gBAXQ,cAYlBC,EAAMH,EAAUG,IACtB/B,EAAeC,YAAY,WAAY,CAAC+B,UAAWD,IAb3B,UAclBzC,EAAS2C,SAdS,QAexBzB,EAAO,IAAI0B,IAAK5C,GAChBU,EAAeO,YAAYC,EAAMlB,GAhBT,2BAkBhBsC,EAAUC,gBAAyBj5D,IAAZm+B,EAlBP,uBAmBxBzwB,QAAQC,IAAI,8CAA8CwwB,EAAQu4B,GAGlEkB,OAAK53D,EACC,IAAI8kB,MAAM,6BAvBQ,YAwBjBqZ,IAAWu4B,EAAS6C,gBAxBH,wBAyBxB7rD,QAAQC,IAAI,4CAA4CwwB,EAASu4B,EAAUsC,EAAUQ,SAzB7D,UA0BP9C,EAAS+C,qBA1BF,qDA4Bd/C,EAASgD,QA5BK,QA6BpBhD,EAASiD,2BACT/B,EAAO,IAAI0B,IAAK5C,GAEhBU,EAAeO,YAAYC,EAAMlB,GAhCb,8BAkCpBkB,OAAK53D,EACC,IAAI8kB,MAAM,6BAnCI,iCAsCrB,CAAC4xC,WAAUkB,SAtCU,kCAwC5BlqD,QAAQC,IAAI,qDAAZ,MACAypD,EAAeI,UAAUT,EAAU77B,cAAe,CAACM,YAAarB,IAAiBE,cAAe76B,MAAK,OAzCzE,0DAAH,sDAmFpBo6D,EAAwB,uCAAG,WAAQlD,GAAR,eAAArnD,EAAA,0DAChCqnD,IAAYA,EAASsC,UADW,uBAEzBA,EAAatC,EAAbsC,UACPtrD,QAAQC,IAAI,gCACZqrD,EAAUa,IAAI,cACdb,EAAUa,IAAI,WACdb,EAAUa,IAAI,kBANkB,8DAAH,sD,kCCxFxBC,EAAe,uCAAG,gCAAAzqD,EAAA,+EAEK0qD,MAFL,UAEjBrD,EAFiB,OAGjBsD,EAAgBvmC,OAAOumC,UACzBtD,IAAYsD,EAJO,wBAKbpC,EAAO,IAAI0B,IAAK5C,GALH,SAMbsD,EAASC,QAAQ,CAACC,OAAQ,wBANb,cAOnB9C,EAAeO,YAAYC,EAAMlB,GAPd,kBAQZ,CAACA,WAAUkB,SARC,sCAUZ53D,GAVY,0DAcvB0N,QAAQC,IAAI,gDAAZ,MACAypD,EAAeI,UAAUT,EAAU77B,cAAe,CAACM,YAAarB,IAAiBC,SAAU56B,MAAK,OAfzE,0DAAH,qDAyCf26D,EAAmB,uCAAG,WAAOzD,GAAP,SAAArnD,EAAA,0DAC3BqnD,GAAmD,oBAAhCA,EAAS0D,mBADD,gCAKrB1D,EAAS0D,qBALY,2CAAH,sDCqCnBC,EAAkB,IA7E/B,4DACWC,iBADX,OAEWC,cAFX,OAIYC,kBAJZ,OAWWpgC,SAXX,sBAWsB,4BAAA/qB,EAAA,6DACd,EAAKmrD,aAAergC,IAAiBC,SACrC,EAAKqgC,yBAFS,SAGIX,IAHJ,QAGRY,EAHQ,UAKV,EAAKJ,YAAcI,EAAIhE,SACvB,EAAK6D,SAAWG,EAAI9C,MAExB,EAAK+C,YARS,2CAXtB,KAuBWtgC,cAvBX,uCAuB2B,WAAO8D,GAAP,eAAA9uB,EAAA,6DACnB,EAAKmrD,aAAergC,IAAiBE,cACrC,EAAKogC,yBAFc,kBAIE/B,EAAqBv6B,GAJvB,QAIVu8B,EAJU,UAMZ,EAAKJ,YAAcI,EAAIhE,SACvB,EAAK6D,SAAWG,EAAI9C,MAExBlqD,QAAQC,IAAI,2BACZ,EAAKgtD,UAAUx8B,GAVC,uHAvB3B,2DAwCWy8B,MAxCX,sBAwCmB,sBAAAvrD,EAAA,sEACE,EAAKorD,yBADP,mFAxCnB,KA4CYA,uBA5CZ,sBA4CqC,sBAAAprD,EAAA,2DACrB,EAAKmrD,aADgB,cAEnBrgC,IAAiBE,cAFE,SAUnBF,IAAiBC,SAVE,uBAGjB,EAAKkgC,YAHY,gCAIV,EAAKA,YAAsCtB,UAAU6B,cAJ3C,uBAMfjB,EAAyB,EAAKU,aANf,qBAOd,EAAKA,mBACL,EAAKC,SARS,8CAWfJ,EAAoB,EAAKG,aAXV,sBAYd,EAAKA,mBACL,EAAKC,SAbS,mGA5CrC,KAgEYI,UAAY,SAACx8B,GACjB,OAAQ,EAAKq8B,cACT,KAAMrgC,IAAiBE,eFjBG,SAACq8B,EAAekB,EAAYz5B,GAC9D,IAAO66B,EAAatC,EAAbsC,UACHtC,GAAYsC,GAAaA,EAAUC,YAMnCD,EAAU8B,GAAG,WAAW,SAACt7D,EAAqBlL,GACtCkL,GACA43D,EAAeI,UAAUT,EAAU77B,cAAe,CAACM,YAAarB,IAAiBE,cAAe76B,UAEpG,MAA4BlL,EAAQymE,OAAQ,GAArClD,EAAP,EAAOA,SAAUG,EAAjB,EAAiBA,QACjBgB,EAAUgC,eAAe,CAACnD,WAAUG,YAIpCZ,EAAeO,YAAYC,EAAMlB,MAErCsC,EAAU8B,GAAG,kBAAkB,SAACt7D,EAAqBlL,GACjD,MAA4BA,EAAQymE,OAAQ,GAArClD,EAAP,EAAOA,SAAUG,EAAjB,EAAiBA,QACbx4D,GACA43D,EAAeI,UAAUT,EAAU77B,cAAe,CAACM,YAAarB,IAAiBE,cAAe76B,UAEpGw5D,EAAUiC,cAAc,CAACpD,WAAUG,YACnCZ,EAAeO,YAAYC,EAAMlB,MAErCsC,EAAU8B,GAAG,cAAc,SAACt7D,EAAqBlL,GAC7C,IAAOmL,EAAWnL,EAAQymE,OAAQ,GAA3Bt7D,QACHD,GACA43D,EAAeI,UAAUT,EAAU77B,cAAe,CAACM,YAAarB,IAAiBE,cAAe76B,UAEpG43D,EAAee,eAAe,GAAI14D,GAClCiO,QAAQC,IAAI,mCEfRutD,CAAuB,EAAKZ,YAAa,EAAKC,UAC9C,MACJ,KAAMpgC,IAAiBC,SDpDDs8B,ECqDA,EAAK4D,YDrDU1C,ECqDG,EAAK2C,SDpDjD7D,IACAA,EAASoE,GAAG,mBAAmB,SAACjD,GAGxBA,EAAS/7D,OACTs7D,EAAeO,YAAYC,EAAMlB,GAEjCU,EAAee,gBAAgB,EAAG,gCAI1CzB,EAASoE,GAAG,gBAAgB,SAAC9C,GACzBZ,EAAeO,YAAYC,EAAMlB,MAErCA,EAASoE,GAAG,cAAc,SAAC1C,EAAcC,GAErCjB,EAAee,eAAeC,EAAMC,OAjBf,IAAC3B,EAAekB,GCjBjD,6CAMI,WACI,OAAOrsB,KAAKivB,iBAPpB,M,gBCFO,SAASW,EAAT,GAWJ,IARKC,EAQN,EARMA,cAAeC,EAQrB,EARqBA,wBAAyBx8D,EAQ9C,EAR8CA,YAAay8D,EAQ3D,EAR2DA,iBASnDrE,EAAU1gE,IAAMgS,SAAQ,kBAAM6uD,EAAekB,aAAY,IAC/D/hE,IAAMgH,WAAU,WACZ,IAAMg+D,EAAetE,EAAQuE,WAAU,YAAoE,IAAlEriE,EAAiE,EAAjEA,KACrC,OADsG,EAA3Du0B,QAEvC,IAAK,QACD7uB,GAAcA,EAAY1F,GAC1B,MACJ,IAAK,cACDmiE,GAAmBA,EAAiBniE,GACpC,MAKJ,IAAK,gBACD,MAAsCA,GAAc,CAChD0+D,cAAU73D,EACV02D,cAAU12D,EACVg4D,QAAS,GAHNH,EAAP,EAAOA,SAAUnB,EAAjB,EAAiBA,SAAUsB,EAA3B,EAA2BA,QAK3BoD,GAAgBA,EAAc,CAACvD,WAAUnB,WAAUsB,YACnD,MACJ,IAAK,aACDqD,GAA0BA,IAE1B3tD,QAAQC,IAAIxU,OAIxB,OAAO,kBAAMoiE,EAAaE,iBAC3B,CAACxE,EAASmE,EAAeC,EAAyBx8D,EAAay8D","file":"static/js/main~493df0b3.9576a8eb.chunk.js","sourcesContent":["import { LanguageKeys, ThemeKeys, UpColor } from '@loopring-web/common-resources';\n\nexport enum PlatFormType {\n    mobile = 'mobile',\n    desktop = 'desktop',\n    tablet = 'tablet'\n}\n\nexport type PlatFormKeys = keyof typeof PlatFormType\n\nexport interface SettingsState {\n    themeMode: ThemeKeys\n    language: LanguageKeys\n    platform: PlatFormKeys\n    currency: 'USD' | 'CYN'\n    upColor: keyof typeof UpColor\n    slippage: number | 'N'\n    coinJson: any\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PlatFormType, SettingsState } from \"./interface\";\nimport { Currency, i18n, LanguageKeys, ThemeKeys, ThemeType, UpColor } from '@loopring-web/common-resources';\nimport moment from 'moment';\nimport * as imgConfig  from '@loopring-web/common-resources/assets/images/coin/loopring.json'\nimport { Slice } from '@reduxjs/toolkit/src/createSlice';\n// import { localStore } from '@loopring-web/common-resources/src/storage';\n\nconst initialState: SettingsState = {\n    themeMode: ThemeType.dark, //localStore.getItem('ThemeType')?localStore.getItem('ThemeType') as ThemeKeys :ThemeType.dark,\n    language: i18n.language as LanguageKeys, //localStore.getItem('LanguageKey')?localStore.getItem('LanguageKey') as LanguageKeys: i18n.language as LanguageKeys,\n    platform: PlatFormType.desktop,\n    currency: Currency.dollar,//localStore.getItem('Currency')?localStore.getItem('Currency') as keyof typeof Currency: Currency.dollar,\n    upColor: UpColor.green,//localStore.getItem('UpColor')?localStore.getItem('UpColor') as keyof typeof UpColor: UpColor.green,\n    coinJson: imgConfig.frames,\n    slippage: 'N',\n}\n\nexport const settingsSlice:Slice<SettingsState> = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        setTheme(state, action: PayloadAction<ThemeKeys>) {\n            // localStore.setItem('ThemeType',action.payload)\n            state.themeMode = action.payload\n        },\n        setLanguage(state, action: PayloadAction<LanguageKeys>) {\n            i18n.changeLanguage(action.payload);\n            if (action.payload) {\n                // action.payload === 'en_US' ? moment.locale('en') : moment.locale(action.payload.toLocaleLowerCase());\n                action.payload === 'en_US' \n                    ? moment.updateLocale('en', {\n                            relativeTime : {\n                                future: \"in %s\",\n                                past:   \"%s ago\",\n                                s  : 'a few seconds',\n                                ss : '%d seconds',\n                                m:  \"a minute\",\n                                mm: \"%d minutes\",\n                                h:  \"an hour\",\n                                hh: \"%d hours\",\n                                d:  \"a day\",\n                                dd: \"%d days\",\n                                w:  \"a week\",\n                                ww: \"%d weeks\",\n                                M:  \"a month\",\n                                MM: \"%d months\",\n                                y:  \"a year\",\n                                yy: \"%d years\",\n                            }\n                        })\n                    : moment.updateLocale('zh-cn', {\n                        relativeTime : {\n                            future: \"%s后\",\n                            past:   \"%s前\",\n                            s  : '几秒',\n                            ss : '%d 秒',\n                            m:  \"1 分钟\",\n                            mm: \"%d 分钟\",\n                            h:  \"1 小时\",\n                            hh: \"%d 小时\",\n                            d:  \"1 天\",\n                            dd: \"%d 天\",\n                            w:  \"1 周\",\n                            ww: \"%d 周\",\n                            M:  \"1 个月\",\n                            MM: \"%d 个月\",\n                            y:  \"1 年\",\n                            yy: \"%d 年\",\n                        }\n                    });\n                state.language = action.payload\n            }\n        },\n        setPlatform(state, action: PayloadAction<keyof typeof PlatFormType>) {\n            state.platform = action.payload\n        },\n        setCurrency(state, action: PayloadAction<'USD' | 'CYN'>) {\n            // localStore.setItem('Currency',action.payload)\n            state.currency = action.payload\n        },\n        setUpColor(state, action: PayloadAction<keyof typeof UpColor>) {\n            // localStore.setItem('UpColor',action.payload)\n            state.upColor = action.payload\n        },\n        setSlippage(state, action: PayloadAction<'N' | number>) {\n            // localStore.setItem('UpColor',action.payload)\n            state.slippage = action.payload\n        },\n        setCoinJson(state, action: PayloadAction<any>) {\n            // localStore.setItem('UpColor',action.payload)\n            state.coinJson = action.payload\n        },\n    },\n})\nexport const {setTheme, setLanguage, setPlatform, setCurrency, setUpColor, setSlippage, setCoinJson} = settingsSlice.actions\n// export const { setTheme,setPlatform,setLanguage } = settingsSlice.actions","import { useDispatch, useSelector } from 'react-redux'\nimport { setCoinJson, setCurrency, setLanguage, setPlatform, setSlippage, setTheme, setUpColor, } from './reducer'\nimport { PlatFormType, SettingsState } from \"./interface\";\nimport { LanguageKeys, LanguageType, ThemeKeys, ThemeType, UpColor } from '@loopring-web/common-resources';\nimport React from 'react';\n\nexport function useSettings(): SettingsState & {\n    setPlatform(value: keyof typeof PlatFormType): void,\n    setTheme(value: ThemeKeys): void,\n    setUpColor(value: keyof typeof UpColor): void,\n    setCurrency(value: 'USD' | 'CYN'): void,\n    setLanguage(value: LanguageKeys): void,\n    setSlippage(value: 'N' | number): void,\n    setCoinJson(value: any): void\n} {\n    const settings: SettingsState = useSelector((state: any) => state.settings)\n    const dispatch = useDispatch();\n    return {\n        ...settings,\n        setTheme: React.useCallback((value: keyof typeof ThemeType) => dispatch(setTheme(value)), [dispatch]),\n        setLanguage: React.useCallback((value: keyof typeof LanguageType) => dispatch(setLanguage(value)), [dispatch]),\n        setPlatform: React.useCallback((value: keyof typeof PlatFormType) => dispatch(setPlatform(value)), [dispatch]),\n        setCurrency: React.useCallback((value: 'USD' | 'CYN') => dispatch(setCurrency(value)), [dispatch]),\n        setUpColor: React.useCallback((value: keyof typeof UpColor) => dispatch(setUpColor(value)), [dispatch]),\n        setSlippage: React.useCallback((value: 'N' | number) => dispatch(setSlippage(value)), [dispatch]),\n        setCoinJson: React.useCallback((value: any) => dispatch(setCoinJson(value)), [dispatch]),\n    }\n\n}\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport { ModalState, ModalStatePlayLoad } from './interface';\nimport {\n    AmmInfoProps,\n    DepositInfoProps,\n    ResetInfoProps,\n    SwapInfoProps,\n    TransferInfoProps,\n    WithdrawInfoProps\n} from '../../../index';\nimport { IBData } from '@loopring-web/common-resources';\n\nconst initialState: ModalState<IBData<any>, any> = {\n    isShowTransfer: {isShow: false, props: {}},\n    isShowWithdraw: {isShow: false, props: {}},\n    isShowDeposit: {isShow: false, props: {}},\n    isShowResetAccount: {isShow: false, props: {}},\n    isShowSwap: {isShow: false, props: {}},\n    isShowAmm: {isShow: false, props: {}},\n    isShowConnect: {isShow: false, step: 0},\n    isShowAccount: {isShow: false, step: 0},\n}\n\nexport const modalsSlice:Slice<ModalState<IBData<any>, any>> = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        setShowAmm(state, action: PayloadAction<ModalStatePlayLoad & { props?: Partial<AmmInfoProps<any, any, any, any>> }>) {\n            const {props, isShow} = action.payload;\n            state.isShowAmm.isShow = isShow;\n            if (props) {\n                Object.keys(props).map(key => {\n                    state.isShowAmm.props[ key ] = props[ key ]\n                })\n            }\n        },\n        setShowSwap(state, action: PayloadAction<ModalStatePlayLoad & { props?: Partial<SwapInfoProps<any, any, any>> }>) {\n            const {props, isShow} = action.payload;\n            state.isShowSwap.isShow = isShow;\n            if (props) {\n                Object.keys(props).map(key => {\n                    state.isShowSwap.props[ key ] = props[ key ]\n                })\n            }\n        },\n        setShowTransfer(state, action: PayloadAction<ModalStatePlayLoad & { props?: Partial<TransferInfoProps<IBData<any>, any>> }>) {\n            const {props, isShow} = action.payload;\n            state.isShowTransfer.isShow = isShow;\n            if (props) {\n                Object.keys(props).map(key => {\n                    state.isShowTransfer.props[ key ] = props[ key ]\n                })\n            }\n        },\n        setShowWithdraw(state, action: PayloadAction<ModalStatePlayLoad & { props?: Partial<WithdrawInfoProps<IBData<any>, any>> }>) {\n            const {props, isShow} = action.payload;\n            state.isShowWithdraw.isShow = isShow;\n            if (props) {\n                Object.keys(props).map(key => {\n                    state.isShowWithdraw.props[ key ] = props[ key ]\n                })\n            }\n        },\n        setShowDeposit(state, action: PayloadAction<ModalStatePlayLoad & { props?: Partial<DepositInfoProps<IBData<any>, any>> }>) {\n            const {props, isShow} = action.payload;\n            state.isShowDeposit.isShow = isShow;\n            if (props) {\n                Object.keys(props).map(key => {\n                    state.isShowDeposit.props[ key ] = props[ key ]\n                })\n            }\n        },\n        setShowResetAccount(state, action: PayloadAction<ModalStatePlayLoad & { props?: Partial<ResetInfoProps<IBData<any>, any>> }>) {\n            const {props, isShow} = action.payload;\n            state.isShowResetAccount.isShow = isShow;\n            if (props) {\n                Object.keys(props).map(key => {\n                    state.isShowResetAccount.props[ key ] = props[ key ]\n                })\n            }\n        },\n        setShowConnect(state, action: PayloadAction<{ isShow: boolean, step ?: number }>) {\n            const {isShow, step} = action.payload;\n            state.isShowConnect = {\n                isShow,\n                step:  step?step: 0\n            };\n        },\n        setShowAccount(state, action: PayloadAction<{ isShow: boolean, step?: number }>) {\n            const {isShow, step} = action.payload;\n            state.isShowAccount = {\n                isShow,\n                step:  step?step: 0\n            };\n        }\n    },\n})\nexport const {\n    setShowTransfer,\n    setShowWithdraw,\n    setShowDeposit,\n    setShowResetAccount,\n    setShowSwap,\n    setShowAmm,\n    setShowConnect,\n    setShowAccount\n} = modalsSlice.actions\n// export const { setTheme,setPlatform,setLanguage } = settingsSlice.actions\n","import {\n    AmmInfoProps,\n    DepositInfoProps,\n    ResetInfoProps,\n    SwapInfoProps,\n    TransferInfoProps,\n    WithdrawInfoProps\n} from '../../../components';\nimport { AmmData, IBData } from '@loopring-web/common-resources';\n\nexport enum ModalType {\n    transfer = 'transfer',\n    deposit = 'deposit',\n    withdraw = 'withdraw',\n}\n\nexport type ModalTypeKeys = keyof typeof ModalType\n\nexport type ModalStatePlayLoad = {\n    isShow: boolean,\n}\n\nexport interface ModalState<T, I, A = AmmData<IBData<string>>, C = unknown> {\n    isShowTransfer: ModalStatePlayLoad & { props: Partial<TransferInfoProps<T, I>> },\n    isShowWithdraw: ModalStatePlayLoad & { props: Partial<WithdrawInfoProps<T, I>> },\n    isShowDeposit: ModalStatePlayLoad & { props: Partial<DepositInfoProps<T, I>> },\n    isShowResetAccount: ModalStatePlayLoad & { props: Partial<ResetInfoProps<T, I>> },\n    isShowSwap: ModalStatePlayLoad & { props: Partial<SwapInfoProps<T, I, C>> },\n    isShowAmm: ModalStatePlayLoad & { props: Partial<AmmInfoProps<A, I, C>> },\n    isShowConnect: ModalStatePlayLoad & {step: number} ,\n    isShowAccount: ModalStatePlayLoad & {step: number} ,\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { ModalState, ModalStatePlayLoad } from './interface';\nimport {\n    setShowAccount,\n    setShowAmm,\n    setShowConnect,\n    setShowDeposit,\n    setShowResetAccount,\n    setShowSwap,\n    setShowTransfer,\n    setShowWithdraw\n} from './reducer';\nimport {\n    AmmInfoProps,\n    DepositInfoProps,\n    ResetInfoProps,\n    SwapInfoProps,\n    TransferInfoProps,\n    WithdrawInfoProps\n} from '../../../index';\nimport { AmmData, IBData } from '@loopring-web/common-resources';\nimport React from 'react';\n\nexport const useOpenModals = <T extends IBData<any>, I, A = AmmData<IBData<string>>, C = unknown>() => {\n    const dispatch = useDispatch();\n    return {\n        modals: useSelector((state: any) => state.modals) as ModalState<T, I>,\n        setShowTransfer: React.useCallback((state: ModalStatePlayLoad & { props?: Partial<TransferInfoProps<T, I>> }) => dispatch(setShowTransfer(state)), [dispatch]),\n        setShowDeposit: React.useCallback((state: ModalStatePlayLoad & { props?: Partial<DepositInfoProps<T, I>> }) => dispatch(setShowDeposit(state)), [dispatch]),\n        setShowWithdraw: React.useCallback((state: ModalStatePlayLoad & { props?: Partial<WithdrawInfoProps<T, I>> }) => dispatch(setShowWithdraw(state)), [dispatch]),\n        setShowResetAccount: React.useCallback((state: ModalStatePlayLoad & { props?: Partial<ResetInfoProps<T, I>> }) => dispatch(setShowResetAccount(state)), [dispatch]),\n        setShowAmm: React.useCallback((state: ModalStatePlayLoad & { props?: AmmInfoProps<A, I, C> }) => dispatch(setShowAmm(state)), [dispatch]),\n        setShowSwap: React.useCallback((state: ModalStatePlayLoad & { props?: SwapInfoProps<T, I, C> }) => dispatch(setShowSwap(state)), [dispatch]),\n        setShowAccount: React.useCallback((state: ModalStatePlayLoad & { step?: number }) => dispatch(setShowAccount(state)), [dispatch]),\n        setShowConnect: React.useCallback((state: ModalStatePlayLoad & { step?: number }) => dispatch(setShowConnect(state)), [dispatch]),\n    }\n\n}\n","export default __webpack_public_path__ + \"static/media/loading.02349004.svg\";","import {\n    Box,\n    Button as MuButton,\n    IconButton,\n    ToggleButton,\n    ToggleButtonGroup as MuToggleButtonGroup,\n} from \"@material-ui/core\";\nimport { ButtonProps, TGItemJSXInterface, ToggleButtonGroupProps } from './Interface';\nimport { WithTranslation } from \"react-i18next\";\nimport styled from \"@emotion/styled\";\nimport loadingSvg from '@loopring-web/common-resources/assets/svg/loading.svg'\nimport { CloseIcon, DropDownIcon, QRIcon } from '@loopring-web/common-resources';\n\nexport const Button = styled(MuButton)<ButtonProps>`\n  && {\n    &.MuiButton-root.Mui-disabled {\n      ${({loading, theme}) => {\n    return loading === 'true' ? `\n           color:transparent;\n           background:${theme.colorBase.primary};\n           &::after{\n            display: block;\n            content: url(${loadingSvg});\n            height: 40px;\n            width: 40px;\n            position: absolute;\n            transform:scale(.55);\n            display:flex;\n            flex-direction:row;\n            align-items: center;\n            justify-content: center;\n            color:#fff  \n           }\n       ` : ''\n}\n}\n    }\n  }\n` as React.ComponentType<ButtonProps>;\n\nexport const ToggleButtonGroup = ({\n                                      t,\n                                      value,\n                                      setValue,\n                                      handleChange,\n                                      size = 'medium',\n                                      tgItemJSXs,\n                                      data,\n                                      exclusive,\n                                      onChange\n                                  }: WithTranslation & ToggleButtonGroupProps) => {\n    if (setValue) {\n        handleChange = (_e: React.MouseEvent<HTMLElement, MouseEvent>, value: any) => {\n            setValue(value)\n            if (onChange) {\n                onChange(_e, value)\n            }\n        }\n    }\n    if (data) {\n        tgItemJSXs = data.map(({value, key, disabled}) => {\n            return {value, JSX: t(key), tlabel: t(key), disabled}\n        })\n    }\n    return <MuToggleButtonGroup size={size} value={value} exclusive={exclusive} onChange={handleChange}>\n        {tgItemJSXs?.map(({value, JSX, tlabel, disabled, key}: TGItemJSXInterface) =>\n            <ToggleButton key={key ? key : value} value={value}\n                          aria-label={tlabel}\n                          disabled={disabled}>{JSX}</ToggleButton>)}\n    </MuToggleButtonGroup>;\n\n}\n\nexport const ModalCloseButton = ({onClose, t}: {\n    onClose?: {\n        bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void;\n    }['bivarianceHack']\n} & WithTranslation) => {\n    return <Box className={'close-button'} alignSelf={'flex-end'} position={'absolute'} zIndex={99} marginTop={'-28px'} marginRight={'12px'}>\n        <IconButton aria-label={t('labelClose')} color={'inherit'} size={'small'} onClick={(event) => {\n            onClose && onClose(event, 'escapeKeyDown')\n        }}>\n            <CloseIcon/>\n        </IconButton>\n    </Box>\n}\nexport const ModalBackButton = ({onBack, t}: {\n    onBack?:()=>void\n} & WithTranslation) => {\n    return <Box alignSelf={'flex-start'} marginTop={-3} marginLeft={1.5}>\n        <IconButton color={'inherit'} aria-label={t('labelBack')} size={'small'} onClick={() => {\n            onBack && onBack()\n        }}>\n            <DropDownIcon style={{transform:'rotate(90deg) scale(1.5)'}}/>\n        </IconButton>\n    </Box>\n}\nexport const QRButtonStyle = ({onQRClick, t}: {\n    onQRClick?:()=>void\n} & WithTranslation) => {\n    return <Box alignSelf={'flex-start'} marginTop={-1/2*7} marginLeft={1.5} position={'absolute'}>\n        <IconButton color={'inherit'} aria-label={t('labelBack')} size={'medium'} onClick={() => {\n            onQRClick && onQRClick()\n        }}>\n            <QRIcon   />\n        </IconButton>\n    </Box>\n}\n\n\n\n\n","/* Rectangle 340 */\nimport styled from '@emotion/styled';\nimport { Box, Typography } from '@material-ui/core/';\nimport React from 'react';\nimport { BtnPercentageProps } from './Interface';\n\nconst PointOnStyled = styled(Box)`\n  width: 16px;\n  height: 16px;\n  box-sizing: border-box;\n  cursor: pointer;\n  background: var(--color-text-primary); //var(--color-text-secondary);\n  //background:transparent;\n  ${({theme}) => theme.border.defaultFrame({d_W: 1, d_R: 12, c_key: 'var(--color-secondary)'})};\n\n` as typeof Box\nconst PointStyled = styled(Box)`\n  width: 24px;\n  height: 24px;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  :after {\n    content: '';\n    width: 8px;\n    height: 8px;\n    background: var(--color-box);\n    ${({theme}) => theme.border.defaultFrame({d_W: 1, d_R: 2, c_key: 'var(--color-secondary)'})};\n  }\n` as typeof Box\nconst Track = styled.div`\n  width: 100%;\n  height: 4px;\n  border-radius: 4px;\n  position: absolute;\n  background-color: var(--color-divide);\n  z-index: 99;\n  left: 1px;\n  right: 1px;\n  transform: translateY(-50%);\n  top: 50%;\n  //display: flex;\n  //align-items: center;\n`\nconst Thumb = styled(Box)`\n  height: 4px;\n  border-radius: 4px;\n  position: absolute;\n  background-color: var(--color-secondary); //var(--color-text-secondary);\n  z-index: 102;\n  left: 1px;\n  transform: translateY(-50%);\n  top: 50%;\n  //display: flex;\n  //align-items: center;\n` as typeof Box\n\n\nexport const BtnPercentage = ({selected = -1, handleChanged, anchors}: BtnPercentageProps) => {\n    const _anchors = anchors && anchors.length ? anchors : [0, 20, 40, 60, 80, 100];\n    const _handleChanged = React.useCallback((item) => {\n        handleChanged(item)\n    }, [handleChanged])\n    return <Box width={'100%'} display={'flex'} boxSizing={'content-box'} paddingY={1}>\n        <Box flex={1} height={'100%'} margin={1}>\n            <Box component={'div'} zIndex={'88'} display={'flex'} alignItems={'center'} justifyContent={'stretch'}\n                 position={'relative'}>\n                <Track/>\n                <Thumb width={`${selected}%`}/>\n                <Box component={'div'} zIndex={'121'} flex={1} display={'flex'} alignItems={'center'} width={'100%'}\n                     height={'100%'} position={'relative'}>\n                    {_anchors.map((item: number, index) => {\n                        if (selected === item) {\n                            return <React.Fragment key={index}>\n                                <PointOnStyled left={`calc(${item}% - 7px)`} position={'absolute'}/>\n                                <Typography component={'span'} style={{fontSize: '1.6rem'}} position={'absolute'}\n                                            top={16} left={`calc(${selected}% - 12px)`}>{selected}%</Typography>\n                            </React.Fragment>\n                        }\n                        return <PointStyled key={index} left={`calc(${item}% - 12px)`} position={'absolute'}\n                                            onClick={() => {\n                                                _handleChanged(item)\n                                            }}/>\n                    })\n                    }\n                </Box>\n            </Box>\n            <Box component={'div'} display={'flex'} alignItems={'center'} justifyContent={'space-between'}\n                 position={'relative'} marginTop={1.2}>\n                <Typography component={'span'} variant={'body2'} color={'textSecondary'}\n                            marginLeft={-1}>{selected !== 0 ? '0%' : ' '}</Typography>\n                <Typography component={'span'} variant={'body2'} color={'textSecondary'}\n                            marginRight={-1}>{selected !== 100 ? '100%' : ' '}</Typography>\n            </Box>\n        </Box>\n    </Box>\n\n}","import React from 'react';\n\nexport function useFocusRef<T extends HTMLInputElement>({value, shouldFocusOn, callback}: {\n    value?: any,\n    shouldFocusOn?: boolean | undefined,\n    // ref: React.RefObject<T>,\n    callback?: (prorps: { current: any },) => void\n}) {\n    const ref = React.useRef<T>(null);\n    React.useEffect(() => {\n        if (shouldFocusOn) {\n            ref?.current?.focus()\n        }\n        callback && callback({current: ref.current});\n    }, [value, shouldFocusOn]);\n    return ref;\n}\n\n","import { CoinKey, IBData } from '@loopring-web/common-resources';\nimport {\n    BasicACoinTradeHookProps,\n    DefaultProps,\n    DepositExtendProps,\n    DepositInfoProps as _DepositInfoProps,\n    ResetExtendProps,\n    ResetInfoProps as _ResetInfoProps,\n    TransferExtendProps,\n    TransferInfoProps as _TransferInfoProps,\n    WithdrawExtendProps,\n    WithdrawInfoProps as _WithdrawInfoProps,\n} from './components/Interface';\nimport { SwapData, SwapTradeBaseEventProps, SwapTradeBaseProps, } from './components/SwapWrap/Interface';\nimport { AmmPanelBaseProps } from './Amm';\n\nexport type SwapTradeData<T> = {\n    sell: T,\n    buy: T,\n    slippage: number | string,\n    __cache__?: {\n        [ key: string ]: any\n    }\n}\n\nexport type { SwapData }\n\nexport type ModalProps = {\n    open: boolean,\n    onClose: { bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void; }['bivarianceHack'];\n    btnDisable?: boolean\n}\n\nexport type ResetProps<T, I> = BasicACoinTradeHookProps<T, I> & Required<ResetExtendProps<T>>\nexport type DepositProps<T, I> = BasicACoinTradeHookProps<T, I> & DepositExtendProps<T,I>;\nexport type WithdrawProps<T, I> = BasicACoinTradeHookProps<T, I> & WithdrawExtendProps<T, I, CoinKey<I>>;\nexport type TransferProps<T, I> = BasicACoinTradeHookProps<T, I> & TransferExtendProps<T, I, CoinKey<I>>;\n\n\nexport  type  ResetInfoProps<T, I> = DefaultProps<T, I> & _ResetInfoProps;\nexport  type  DepositInfoProps<T, I> = DefaultProps<T, I> & _DepositInfoProps<I>;\nexport  type  WithdrawInfoProps<T, I> = DefaultProps<T, I> & _WithdrawInfoProps<CoinKey<I>>;\nexport  type  TransferInfoProps<T, I> = DefaultProps<T, I> & _TransferInfoProps<CoinKey<I>>;\n\nexport  type  SwapInfoProps<T, I, TCD> = SwapTradeBaseProps<T, I, TCD>;\nexport  type  AmmInfoProps<T, I, ACD, C = IBData<I>> = AmmPanelBaseProps<T, I, ACD, C>;\n\n\n/**\n *  @type SwapProps\n *  @param swapTradeData: SwapTradeData<T>\n *  @callback handleSwapPanelEvent {\n *      @param type='buy'|'sell'|'exchange'\n *      @param to='menu'|'button' to the view of list for select item\n *      @param SwapData<T>\n *  }\n *  @callback onSwapClick :(\n *      @param SwapData<T>\n *  )  => void {\n *  @param tradeCalcData TradeCalcData<I>\n *  @param swapBtnStatus='disable'|'loading'\n *  @param tokenSellProps i18n done string\n *  @param tokenBuyProps i18n done string\n *  @callback onChangeEvent?: (\n *      @param index=0|1  0：when view on type button, 1: when view on type menu\n *      @param data: SwapData<T>\n *  ) => SwapData<T>\n */\n\n\nexport type SwapProps<T, I, TCD> = {\n    tradeData: SwapTradeData<T> | undefined,\n    handleSwapPanelEvent: (data: SwapData<SwapTradeData<T>>, switchType: 'buyTomenu' | 'sellTomenu' | 'exchange' | 'buyTobutton' | 'sellTobutton') => Promise<void>,\n    onChangeEvent?: (index: 0 | 1, data: SwapData<SwapTradeData<T>>) => SwapData<SwapTradeData<T>>,\n} & SwapInfoProps<T, I, TCD> & SwapTradeBaseEventProps<T, I> & SwapTradeBaseProps<T, I, TCD>\n\n\nexport type SwitchData<T> = {\n    to: 'menu' | 'button'\n    tradeData: T,\n}\n\nexport enum TradeBtnStatus {\n    AVAILABLE = 'AVAILABLE',\n    DISABLED = 'DISABLED',\n    LOADING = 'LOADING',\n}\n\nexport enum SwitchType {\n    TO_MENU = 'Tomenu',\n    TO_BTN = 'Tobutton',\n}\n\nexport enum SwapType {\n    BUY_CLICK = 'buyTomenu',\n    SEll_CLICK = 'sellTomenu',\n    EXCHANGE_CLICK = 'exchange',\n    BUY_SELECTED = 'buyTobutton',\n    SELL_SELECTED = 'sellTobutton',\n}\n\nexport type  ModalPanelProps = {\n    open: boolean,\n    onClose: { bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void; }['bivarianceHack'];\n    content: React.ElementType<any> | JSX.Element,\n    _height?: number | string,\n    _width?: number | string,\n}\n","import { OutlinedInput, InputAdornment } from '@material-ui/core'\nimport { SearchIcon } from '@loopring-web/common-resources'\nimport { OutlinedInputProps } from '@material-ui/core/OutlinedInput/OutlinedInput';\nimport React from 'react';\n\nexport type InputSearchProps  = {\n    value?: string;\n    // onChange?: (value: string) => void;\n} & OutlinedInputProps\n\nexport const InputSearch =  React.forwardRef(({\n    value,\n    onChange,\n    ...rest\n}: InputSearchProps , _ref: React.ForwardedRef<any>) => {\n    return <OutlinedInput\n        {...{...rest}}\n        className={'search'}\n        aria-label={'search'}\n        placeholder={'Search'}\n        value={value}\n        onChange={(event: any) => {\n            if (onChange) {\n                onChange(event.target.value)\n            }\n        }}\n        startAdornment={\n            <InputAdornment color={'var(--color-text-secondary)'} position=\"start\">\n                <SearchIcon />\n            </InputAdornment>\n        }\n    />\n} )\n","import { InputButtonProps } from '../../basic-lib';\nimport { AmmData, CoinInfo, IBData } from '@loopring-web/common-resources';\nimport { AmmChgData, AmmDepositBaseProps, AmmWithdrawBaseProps } from '../components';\n\nexport enum AmmPanelType {\n    Deposit = 'Deposit',\n    WithDraw = 'WithDraw',\n}\n\n/**\n *\n */\nexport type AmmPanelBaseProps<T, I, ACD, C> = {\n    ammDepositData: T,\n    ammWithdrawData: T,\n    tabSelected?: keyof typeof AmmPanelType,\n    disableDeposit?: boolean,\n    disableWithdraw?: boolean,\n    ammCalcData: ACD,\n    tokenDepositAProps?: Partial<InputButtonProps<C, I, CoinInfo<I>>>,\n    tokenDepositBProps?: Partial<InputButtonProps<C, I, CoinInfo<I>>>,\n    tokenWithDrawAProps?: Partial<InputButtonProps<C, I, CoinInfo<I>>>,\n    tokenWithDrawBProps?: Partial<InputButtonProps<C, I, CoinInfo<I>>>,\n    ammDepositBtnI18nKey?: string,\n    ammWithdrawBtnI18nKey?: string,\n    height?: number,\n    width?: number,\n}\n\nexport type AmmProps<T extends AmmData<C extends IBData<I> ? C : IBData<I>>, I, ACD, C = IBData<I>> =\n    AmmPanelBaseProps<T, I, ACD, C>\n    & {\n    handleAmmAddChangeEvent: (data: T, focusOn: 'coinA' | 'coinB') => void,\n    handleAmmRemoveChangeEvent: (data: T, focusOn: 'coinA' | 'coinB') => void,\n    onChangeEvent?: (data: AmmChgData<T>) => AmmChgData<T>,\n    onRefreshData?:()=>void,\n}\n    & AmmWithdrawBaseProps<T, I>\n    & AmmDepositBaseProps<T, I>\n\n\n\n\n\n","import { CoinInfo, CoinMap, IBData } from '@loopring-web/common-resources';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { BasicACoinTradeProps } from './Interface';\nimport { InputButton, } from '../../basic-lib';\n\nexport const BasicACoinTrade = <T extends IBData<I>,\n    I>({\n           t, tradeData, onChangeEvent, coinMap, walletMap, disabled,\n           inputButtonDefaultProps, handleError, inputBtnRef, inputButtonProps,\n           ...rest\n       }: BasicACoinTradeProps<T, I> & WithTranslation) => {\n    const getDisabled = () => {\n        if (disabled || tradeData === undefined || walletMap === undefined || coinMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const handleOnClick = React.useCallback((_event: React.MouseEvent, _ref: any) => {\n        onChangeEvent(1, {tradeData, to: 'menu'});\n    }, [tradeData, onChangeEvent])\n    const handleCountChange: any = React.useCallback((_tradeData: T, _ref: any) => {\n        //const focus: 'buy' | 'sell' = _ref?.current === buyRef.current ? 'buy' : 'sell';\n        if (tradeData.tradeValue !== _tradeData.tradeValue) {\n            onChangeEvent(0, {tradeData: {...tradeData, ..._tradeData}, to: 'button'});\n        }\n\n        // onCoinValueChange(ibData);\n    }, [onChangeEvent, tradeData]);\n\n    if (typeof handleError !== 'function') {\n        handleError = ({belong, balance, tradeValue}: T) => {\n            if (typeof tradeValue !== 'undefined' && balance < tradeValue || (tradeValue && !balance)) {\n                return {error: true, message: t('tokenNotEnough', {belong: belong})}\n            }\n            return {error: false, message: ''}\n        }\n    }\n\n    const inputBtnProps = {\n        subLabel: t('tokenMax'),\n        emptyText: t('tokenSelectToken'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        handleError: handleError as any,\n        handleCountChange,\n        handleOnClick,\n        ...inputButtonDefaultProps,\n        ...inputButtonProps,\n        ...rest\n    }\n\n\n    return <InputButton<T, I, CoinInfo<I>> ref={inputBtnRef} disabled={getDisabled()}  {...{\n        ...inputBtnProps,\n        inputData: tradeData ? tradeData : {} as T,\n        coinMap: coinMap ? coinMap : {} as CoinMap<I, CoinInfo<I>>\n    }} ></InputButton>\n\n}\n\n\n\n","import { CloseIcon, globalSetup, IBData } from '@loopring-web/common-resources';\nimport { TradeBtnStatus } from '../Interface';\nimport { Trans, WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Button, IconClearStyled, TextField, TypographyGood } from '../../../index';\nimport { DepositViewProps } from './Interface';\nimport { BasicACoinTrade } from './BasicACoinTrade';\nimport { debounce } from 'lodash';\n\n\n//SelectReceiveCoin\nexport const DepositWrap = <T extends IBData<I>,\n    I>({\n           t, disabled, walletMap, tradeData, coinMap,\n           //  onTransferClick,\n           title, description,\n           depositBtnStatus,\n           onDepositClick,\n           isNewAccount,\n           handleError,\n           addressDefault,\n           handleOnAddressChange,\n           handleAddressError,\n           wait = globalSetup.wait,\n           ...rest\n       }: DepositViewProps<T, I> & WithTranslation) => {\n    const inputBtnRef = React.useRef();\n    const getDisabled = () => {\n        if (disabled || tradeData === undefined || walletMap === undefined || coinMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const [address, setAddress] = React.useState<string | undefined>(addressDefault ? addressDefault : '');\n    const [addressError, setAddressError] = React.useState<{ error: boolean, message?: string | React.ElementType<HTMLElement> } | undefined>();\n    // const [error, setError] = React.useState<{ error: boolean, message?: string | React.ElementType }>({\n    //     error: false,\n    //     message: ''\n    // });\n    const debounceAddress = React.useCallback(debounce(({address}: any) => {\n        if (handleOnAddressChange) {\n            handleOnAddressChange(address)\n        }\n    }, wait), [handleOnAddressChange, debounce])\n    const handleClear = React.useCallback(() => {\n        // @ts-ignore\n        // addressInput?.current?.value = \"\";\n        setAddress('')\n    }, [])\n    const _handleOnAddressChange = React.useCallback((event) => {\n        const address = event.target.value;\n        if (handleAddressError) {\n            const error = handleAddressError(address)\n            if (error?.error) {\n                setAddressError(error)\n            }\n        }\n        setAddress(address);\n        debounceAddress({address})\n    }, [debounce, wait, handleAddressError])\n    const inputButtonDefaultProps = {\n        label: t('depositLabelEnterToken'),\n    }\n    return <Grid className={walletMap ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}>\n        <Grid item>\n            <Typography component={'h4'} textAlign={'center'} variant={'h3'} marginBottom={2}>\n                {title ? title : t('depositTitle')}\n            </Typography>\n            <Typography component={'p'} variant=\"body1\">\n                <Trans i18nKey={description ? description : 'depositDescription'}>\n                    Once your deposit is <TypographyGood component={'span'}>confirmed on Ethereum</TypographyGood>, it\n                    will be added to your balance within <TypographyGood component={'span'}>2 minutes</TypographyGood>.\n                </Trans>\n            </Typography>\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <BasicACoinTrade {...{\n                ...rest,\n                t,\n                disabled,\n                walletMap,\n                tradeData,\n                coinMap,\n                inputButtonDefaultProps,\n                inputBtnRef: inputBtnRef,\n            }} />\n        </Grid>\n        {isNewAccount ? <Grid item marginTop={2} alignSelf={\"stretch\"} position={'relative'}>\n            <TextField\n                value={address}\n                error={addressError && addressError.error ? true : false}\n                label={t('depositLabelRefer')}\n                placeholder={t('depositLabelPlaceholder')}\n                onChange={_handleOnAddressChange}\n                // SelectProps={{IconComponent: DropDownIcon}}\n                // required={true}\n                // inputRef={addressInput}\n                helperText={<Typography\n                    variant={'body2'}\n                    component={'span'}>{addressError && addressError.error ? addressError.message : ''}</Typography>}\n                fullWidth={true}\n            />\n            {address !== '' ?\n                <IconClearStyled size={'small'} style={{top: '30px'}} aria-label=\"Clear\" onClick={handleClear}>\n                    <CloseIcon/>\n                </IconClearStyled> : ''}\n        </Grid> : <></>}\n        <Grid item marginTop={2} alignSelf={'stretch'}>\n            <Button fullWidth variant={'contained'} size={'medium'} color={'primary'} onClick={() => {\n                onDepositClick(tradeData)\n            }}\n                // style={{width: '200px'}}\n                    loading={!getDisabled() && depositBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={getDisabled() || depositBtnStatus === TradeBtnStatus.DISABLED || depositBtnStatus === TradeBtnStatus.LOADING ? true : false}\n            >{t(`depositLabelBtn`)}\n            </Button>\n\n        </Grid>\n    </Grid>\n}\n\n","import { IBData } from '@loopring-web/common-resources';\nimport { TradeBtnStatus } from '../Interface';\nimport { Trans, WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Button } from '../../basic-lib';\nimport { ResetViewProps } from './Interface';\nimport { BasicACoinTrade } from './BasicACoinTrade';\nimport { TypographyStrong } from '../../../index';\n\n\nexport const ResetWrap = <T extends IBData<I>,\n    I>({\n           t, disabled, walletMap, tradeData, coinMap,\n           //  onTransferClick,\n           resetBtnStatus,\n           onResetClick,\n           fee,\n           ...rest\n       }: ResetViewProps<T, I> & WithTranslation) => {\n    const inputBtnRef = React.useRef();\n    const getDisabled = () => {\n        if (disabled || tradeData === undefined || walletMap === undefined || coinMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const inputButtonDefaultProps = {\n        label: t('restLabelEnterToken'),\n    }\n    return <Grid className={walletMap ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}>\n        <Grid item>\n            <Typography component={'h4'} textAlign={'center'} variant={'h3'} marginBottom={2}>\n                {t('resetTitle')}\n            </Typography>\n            <Typography component={'p'} variant=\"body1\">\n                <Trans i18nKey=\"resetDescription\">\n                    Create a new signing key for layer-2 authentication (no backup needed). This will\n                    <TypographyStrong component={'span'}>cancel all your pending orders</TypographyStrong>.\n                </Trans>\n            </Typography>\n\n        </Grid>\n        <Grid item marginTop={2}>\n            <Typography component={'p'} variant=\"body1\" height={20}>\n                {t('resetFee', {count: fee?.count, price: fee?.price})}\n            </Typography>\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <BasicACoinTrade {...{\n                ...rest,\n                t,\n                disabled,\n                walletMap,\n                tradeData,\n                coinMap,\n                inputButtonDefaultProps,\n                inputBtnRef: inputBtnRef,\n            }} />\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"center\"}>\n            <Button fullWidth variant={'contained'} size={'medium'} color={'primary'} onClick={() => {\n                onResetClick(tradeData)\n            }}\n                    style={{width: '200px'}}\n                    loading={!getDisabled() && resetBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={getDisabled() || resetBtnStatus === TradeBtnStatus.DISABLED || resetBtnStatus === TradeBtnStatus.LOADING ? true : false}\n            >{t(`resetLabelBtn`)}\n            </Button>\n        </Grid>\n    </Grid>\n}\n\n\n\n","import { Trans, WithTranslation } from 'react-i18next';\nimport React, { ChangeEvent } from 'react';\nimport { FormControlLabel, Grid, ListItemText, Radio, RadioGroup, Typography } from '@material-ui/core';\nimport { CloseIcon, DropDownIcon, globalSetup, IBData, WithdrawTypes } from '@loopring-web/common-resources';\nimport { TradeBtnStatus } from '../Interface';\nimport { Button, IconClearStyled, MenuItem, TextField,TypographyGood, TypographyStrong } from '../../../index';\nimport { WithdrawViewProps } from './Interface';\nimport { BasicACoinTrade } from './BasicACoinTrade';\nimport { debounce } from 'lodash';\n\nexport const WithdrawWrap = <T extends IBData<I>,\n    I>({\n           t, disabled, walletMap, tradeData, coinMap,\n           addressDefault,\n           withdrawTypes = WithdrawTypes,\n           withdrawType,\n           chargeFeeToken = 'ETH',\n           chargeFeeTokenList,\n           onWithdrawClick,\n           withdrawBtnStatus,\n           handleFeeChange,\n           handleWithdrawTypeChange,\n           handleOnAddressChange, handleAddressError,\n           wait = globalSetup.wait,\n           ...rest\n       }: WithdrawViewProps<T, I> & WithTranslation) => {\n    const [_withdrawType, setWithdrawType] = React.useState<string | undefined>(withdrawType);\n    const [feeIndex, setFeeIndex] = React.useState<any | undefined>(0);\n    const [address, setAddress] = React.useState<string | undefined>(addressDefault ? addressDefault : '');\n    const [addressError, setAddressError] = React.useState<{ error: boolean, message?: string | React.ElementType<HTMLElement> } | undefined>();\n\n    const inputBtnRef = React.useRef();\n    const getDisabled = () => {\n        if (disabled || tradeData === undefined || walletMap === undefined || coinMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const inputButtonDefaultProps = {\n        label: t('withdrawLabelEnterToken'),\n    }\n\n\n    const _handleWithdrawTypeChange = React.useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setWithdrawType(e.target?.value);\n        if (handleWithdrawTypeChange) {\n            handleWithdrawTypeChange(e.target?.value as any);\n        }\n    }, [handleWithdrawTypeChange])\n\n    const _handleFeeChange = React.useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const index = e.target ? Number(e.target.value) : 0;\n        setFeeIndex(index)\n        if (handleFeeChange) {\n            handleFeeChange(chargeFeeTokenList[ index ]);\n        }\n    }, [chargeFeeTokenList, handleFeeChange])\n\n    const debounceAddress = React.useCallback(debounce(({address}: any) => {\n        if (handleOnAddressChange) {\n            handleOnAddressChange(address)\n        }\n    }, wait), [handleOnAddressChange, debounce])\n    const _handleOnAddressChange = React.useCallback((event) => {\n        const address = event.target.value;\n        if (handleAddressError) {\n            const error = handleAddressError(address)\n            if (error?.error) {\n                setAddressError(error)\n            }\n        }\n        setAddress(address);\n        debounceAddress({address})\n\n    }, [debounce, wait, handleAddressError])\n\n    const handleClear = React.useCallback(() => {\n        // @ts-ignore\n        // addressInput?.current?.value = \"\";\n        setAddress('')\n    }, [])\n\n    return <Grid className={walletMap ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"} minHeight={540}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}\n                  flexWrap={'nowrap'}>\n        <Grid item>\n            <Typography component={'h4'} textAlign={'center'} variant={'h3'} marginBottom={2}>\n                {t('withdrawTitle')}\n            </Typography>\n            <Typography component={'p'} variant=\"body1\">\n                <Trans i18nKey=\"withdrawDescription\">\n                    Your withdrawal will be processed in the next batch, which usually takes <TypographyGood\n                    component={'span'}>30 minutes to 2 hours</TypographyGood>. (There will be <TypographyStrong\n                    component={'span'}> a large delay</TypographyStrong> if the Ethereum gas price <TypographyStrong\n                    component={'span'}>exceeds 500 GWei</TypographyStrong>.）\n                </Trans>\n            </Typography>\n\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <BasicACoinTrade {...{\n                ...rest,\n                t,\n                disabled,\n                walletMap,\n                tradeData,\n                coinMap,\n                inputButtonDefaultProps,\n                inputBtnRef: inputBtnRef,\n            }} />\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"} position={'relative'}>\n            <TextField\n                value={address}\n                error={addressError && addressError.error ? true : false}\n                label={t('withdrawLabelAddress')}\n                placeholder={t('LabelPleaseInputWalletAddress')}\n                onChange={_handleOnAddressChange}\n                disabled={chargeFeeTokenList.length ? false : true}\n                required={true}\n                SelectProps={{IconComponent: DropDownIcon}}\n                helperText={<Typography component={'span'}\n                                        variant={'body2'}>{addressError && addressError.error ? addressError.message : ''}</Typography>}\n                fullWidth={true}\n            />\n            {address !== '' ? <IconClearStyled size={'small'}   style={{top:'30px'}} aria-label=\"Clear\" onClick={handleClear}>\n                <CloseIcon/>\n            </IconClearStyled> : ''}\n        </Grid>\n        <Grid item marginTop={2} alignSelf={'stretch'}>\n            <RadioGroup row aria-label=\"withdraw\" name=\"withdraw\" value={_withdrawType}\n                        onChange={(e) => {\n                            _handleWithdrawTypeChange(e);\n                        }\n                        }>\n                {Object.keys(withdrawTypes).map((key) => {\n                    return <FormControlLabel key={key} value={key} control={<Radio/>}\n                                             label={`${t('withdrawTypeLabel' + key)}: ${withdrawTypes[ key ]}Gas`}/>\n                })}\n            </RadioGroup>\n        </Grid>\n        {/* TODO: check whether there's a need to show deposit fee */}\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <TextField\n                id=\"withdrawFeeType\"\n                select\n                label={t('withdrawLabelFee')}\n                value={feeIndex}\n                onChange={(event: React.ChangeEvent<any>) => {\n                    _handleFeeChange(event)\n                }}\n                disabled={chargeFeeTokenList.length ? false : true}\n                SelectProps={{IconComponent: DropDownIcon}}\n                fullWidth={true}\n            >{chargeFeeTokenList.map(({belong, fee}, index) => {\n                // @ts-ignore\n                return <MenuItem key={index} value={index} withNoCheckIcon={'true'}>\n                    <ListItemText primary={<Typography\n                        sx={{display: 'inline'}}\n                        component=\"span\"\n                        variant=\"body1\"\n                        color=\"text.primary\"\n                    >{belong}</Typography>} secondary={<Typography\n                        sx={{display: 'inline'}}\n                        component=\"span\"\n                        variant=\"body1\"\n                        color=\"text.primaryLight\"\n                    >{fee}</Typography>}/>\n                </MenuItem>\n            })\n            }</TextField>\n        </Grid>\n        <Grid item marginTop={2} alignSelf={'stretch'}>\n            <Button fullWidth variant={'contained'} size={'medium'} color={'primary'} onClick={() => {\n                onWithdrawClick(tradeData)\n            }}\n                    loading={!getDisabled() && withdrawBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={getDisabled() || withdrawBtnStatus === TradeBtnStatus.DISABLED || withdrawBtnStatus === TradeBtnStatus.LOADING ? true : false}\n            >{t(`withdrawLabelBtn`)}\n            </Button>\n            {/* TODO: link to last deposit history */}\n            {/*<Box marginTop={2} display={'flex'} justifyContent={'center'}>*/}\n            {/*    <Link component={RouterLink} to={'/'}> <Typography variant={'body2'}>*/}\n            {/*        {t('withdrawLabelLinkRecent')}*/}\n\n            {/*    </Typography></Link>*/}\n            {/*</Box>*/}\n        </Grid>\n    </Grid>\n}\n","import { Trans, WithTranslation } from 'react-i18next';\nimport React, { ChangeEvent } from 'react';\nimport { Grid, ListItemText, Typography } from '@material-ui/core';\n// import { Link as RouterLink } from 'react-router-dom';\nimport { CloseIcon, DropDownIcon, globalSetup, IBData } from '@loopring-web/common-resources';\nimport { Button, IconClearStyled, MenuItem, TextField, TradeBtnStatus, TypographyGood } from '../../index';\nimport { TransferViewProps } from './Interface';\nimport { BasicACoinTrade } from './BasicACoinTrade';\nimport { debounce } from 'lodash';\n\n\nexport const TransferWrap = <T extends IBData<I>,\n    I>({\n           t, disabled, walletMap, tradeData, coinMap,\n           chargeFeeToken = 'ETH',\n           chargeFeeTokenList,\n           onTransferClick,\n           handleFeeChange,\n           transferBtnStatus,\n           addressDefault,\n           handleOnAddressChange,\n           handleAddressError,\n           wait = globalSetup.wait,\n           ...rest\n       }: TransferViewProps<T, I> & WithTranslation) => {\n    // const [_chargeFeeToken, setChargeFeeToken] = React.useState<any | undefined>(\n    //     chargeFeeToken && chargeFeeTokenList.length ? chargeFeeTokenList[ chargeFeeToken as any ] : undefined);\n\n    const inputBtnRef = React.useRef();\n    const getDisabled = () => {\n        if (disabled || tradeData === undefined || walletMap === undefined || coinMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const inputButtonDefaultProps = {\n        label: t('transferLabelEnterToken'),\n    }\n\n\n    const [address, setAddress] = React.useState<string | undefined>(addressDefault ? addressDefault : '');\n    const [addressError, setAddressError] = React.useState<{ error: boolean, message?: string | React.ElementType<HTMLElement> } | undefined>();\n    const [feeIndex, setFeeIndex] = React.useState<any | undefined>(0);\n\n    const debounceAddress = React.useCallback(debounce(({address}: any) => {\n        if (handleOnAddressChange) {\n            handleOnAddressChange(address)\n        }\n    }, wait), [handleOnAddressChange, debounce])\n    const _handleOnAddressChange = React.useCallback((event) => {\n        const address = event.target.value;\n        if (handleAddressError) {\n            const error = handleAddressError(address)\n            if (error?.error) {\n                setAddressError(error)\n            }\n        }\n        setAddress(address);\n        debounceAddress({address})\n    }, [debounce, wait, handleAddressError])\n\n    const _handleFeeChange = React.useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const index = e.target ? Number(e.target.value) : 0;\n        setFeeIndex(index)\n        if (handleFeeChange) {\n            handleFeeChange(chargeFeeTokenList[ index ]);\n        }\n    }, [chargeFeeTokenList, handleFeeChange]);\n\n    // const addressInput = React.useRef();\n    const handleClear = React.useCallback(() => {\n        // @ts-ignore\n        // addressInput?.current?.value = \"\";\n        setAddress('')\n    }, [])\n\n    return <Grid className={walletMap ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'}\n                 alignItems={\"stretch\"} flex={1} height={'100%'} flexWrap={'nowrap'}\n    >\n        <Grid item>\n            <Typography component={'h4'} textAlign={'center'} variant={'h3'} marginBottom={2}>\n                {t('transferTitle')}\n            </Typography>\n            <Typography component={'p'} variant=\"body1\">\n                <Trans i18nKey=\"transferDescription\">\n                    Transfer to any valid Ethereum addresses instantly. Please <TypographyGood component={'span'}>make\n                    sure</TypographyGood> the recipient address <TypographyGood component={'span'}>accepts Loopring\n                    layer-2 </TypographyGood> payments before you proceed.\n                </Trans>\n            </Typography>\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <BasicACoinTrade {...{\n                ...rest,\n                t,\n                disabled,\n                walletMap,\n                tradeData,\n                coinMap,\n                inputButtonDefaultProps,\n                inputBtnRef: inputBtnRef,\n            }} />\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"} position={'relative'}>\n            <TextField\n                value={address}\n                error={addressError && addressError.error ? true : false}\n                label={t('transferLabelAddress')}\n                placeholder={t('transferLabelAddressInput')}\n                onChange={_handleOnAddressChange}\n                disabled={chargeFeeTokenList.length ? false : true}\n                SelectProps={{IconComponent: DropDownIcon}}\n                // required={true}\n                // inputRef={addressInput}\n                helperText={<Typography\n                    variant={'body2'}\n                    component={'span'}>{addressError && addressError.error ? addressError.message : ''}</Typography>}\n                fullWidth={true}\n            />\n            {address !== '' ?\n                <IconClearStyled size={'small'} style={{top: '30px'}} aria-label=\"Clear\" onClick={handleClear}>\n                    <CloseIcon/>\n                </IconClearStyled> : ''}\n        </Grid>\n\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <TextField\n                id=\"transferFeeType\"\n                select\n                label={t('transferLabelFee')}\n                value={feeIndex}\n                onChange={(event: React.ChangeEvent<any>) => {\n                    _handleFeeChange(event)\n                }}\n                disabled={chargeFeeTokenList.length ? false : true}\n                SelectProps={{IconComponent: DropDownIcon}}\n                fullWidth={true}\n            >{chargeFeeTokenList.map(({belong, fee}, index) => {\n                // @ts-ignore\n                return <MenuItem key={index} value={index} withNoCheckIcon={'true'}>\n                    <ListItemText primary={<Typography\n                        sx={{display: 'inline'}}\n                        component=\"span\"\n                        variant=\"body1\"\n                        color=\"text.primary\"\n                    >{belong}</Typography>} secondary={<Typography\n                        sx={{display: 'inline'}}\n                        component=\"span\"\n                        variant=\"body1\"\n                        color=\"text.primaryLight\"\n                    >{fee}</Typography>}/>\n                </MenuItem>\n            })\n            }</TextField>\n        </Grid>\n        <Grid item marginTop={2} alignSelf={'stretch'}>\n            <Button fullWidth variant={'contained'} size={'medium'} color={'primary'} onClick={() => {\n                onTransferClick(tradeData)\n            }}\n                    loading={!getDisabled() && transferBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={getDisabled() || transferBtnStatus === TradeBtnStatus.DISABLED || transferBtnStatus === TradeBtnStatus.LOADING ? true : false}\n            >{t(`transferLabelBtn`)}\n            </Button>\n            {/* TODO: link to last deposit history */}\n            {/*<Box marginTop={2} display={'flex'} justifyContent={'center'}>*/}\n            {/*    <Link component={RouterLink} to={'/'}> <Typography*/}\n            {/*        variant={'body2'}> {t('transferLabelLinkRecent')}</Typography></Link>*/}\n            {/*</Box>*/}\n        </Grid>\n    </Grid>;\n}\n","import styled from '@emotion/styled';\nimport { Box, IconButton, LinearProgress, linearProgressClasses } from '@material-ui/core';\nimport { css } from '@emotion/react';\n\n\nexport const BorderLinearProgress = styled(LinearProgress)(({theme}) => ({\n    height: 10,\n    borderRadius: 5,\n    [ `&.${linearProgressClasses.colorPrimary}` ]: {\n        backgroundColor: theme.colorBase.textSecondary, //theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\n    },\n    [ `& .${linearProgressClasses.bar}` ]: {\n        borderRadius: 5,\n        backgroundColor: theme.colorBase.primary,\n    },\n}));\nexport const IconClearStyled = styled(IconButton)`\n  position: absolute;\n  top: 20px;\n  right: 4px;\n` as typeof IconButton\n\nexport const IconButtonStyled = styled(IconButton)`\n  &.MuiButtonBase-root {\n    svg {\n      color: var(--color-text-primary);\n    }\n  }\n\n  .MuiToolbar-root &.MuiButtonBase-root {\n    svg {\n      font-size: ${({theme}) => theme.fontDefault.h4};\n      height: var(--btn-icon-size-small);\n      width: var(--btn-icon-size-small);\n\n    }\n\n    &.outline {\n      background-color: var(--color-box);\n      margin: 0 ${({theme}) => theme.unit / 2}px;\n      ${({theme}) => theme.border.defaultFrame({c_key: 'transparent'})};\n\n      &:last-child {\n        margin-right: 0;\n\n      }\n    }\n\n  }\n` as typeof IconButton\n\nconst cssAutoRefresh = (_props: any) => css`\n  @keyframes rotate {\n    25% {\n      transform: rotate(-135deg);\n    }\n    50% {\n      transform: rotate(-135deg);\n    }\n    75% {\n      transform: rotate(-315deg);\n    }\n    100% {\n      transform: rotate(-315deg);\n    }\n  }\n\n  @keyframes hide1 {\n    25% {\n      left: -.5em;\n      opacity: 0;\n    }\n    50% {\n      left: 0;\n      opacity: 1;\n    }\n  }\n\n  @keyframes hide2 {\n    25% {\n      right: -.5em;\n      opacity: 0;\n    }\n    50% {\n      right: 0;\n      opacity: 1;\n    }\n  }\n\n  @keyframes container {\n    //0% { background-image:}\n    //5% { background-image: none }\n    25% {\n      transform: translate3d(0, -50%, 0);\n      width: .5em;\n    }\n    50% {\n      transform: translate3d(-100%, -50%, 0);\n      width: .5em;\n    }\n    75% {\n      transform: translate3d(-50%, -50%, 0);\n      width: 1em;\n    }\n  }\n`\n//      //background-image: url(\"data:image/svg+xml,%3Csvg width='34' height='27' viewBox='0 0 34 27' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fillRule='evenodd' clipRule='evenodd' d='M19.354 12.7874H33.4527V12.8709L11.4393 26.1381L22.351 17.5019L19.354 12.7874ZM11.1439 0V26.3259L0 17.5228L11.1439 0Z' fill='%231C60FF'/%3E%3C/svg%3E%0A\");\nexport const CountDownStyled = styled(Box)`\n  ${({theme}) => cssAutoRefresh({theme})}\n  width: var(--btn-icon-size);\n  height: var(--btn-icon-size);\n  height: var(--btn-icon-size);\n  position: relative;\n  background-size: 68%;\n  background-repeat: no-repeat;\n  background-position: center;\n\n  &.outline {\n    background-color: var(--field-opacity);\n    margin: 0 ${({theme}) => theme.unit / 2}px;\n    ${({theme}) => theme.border.defaultFrame({c_key: 'transparent'})};\n    text-align: center;\n    line-height: var(--btn-icon-size);\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n\n  &.logo {\n    background-image: url(\"data:image/svg+xml,%3Csvg width='34' height='27' viewBox='0 0 34 27' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fillRule='evenodd' clipRule='evenodd' d='M19.354 12.7874H33.4527V12.8709L11.4393 26.1381L22.351 17.5019L19.354 12.7874ZM11.1439 0V26.3259L0 17.5228L11.1439 0Z' fill='%231C60FF'/%3E%3C/svg%3E%0A\");\n  }\n\n  &.countdown {\n    font-size: ${({theme}) => theme.fontDefault.h6};\n    display: inline-block;\n    color: var(--color-primary);\n\n    .circle {\n      font-size: ${({theme}) => theme.fontDefault.h4};\n      width: 1em;\n      height: 1em;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate3d(-50%, -50%, 0);\n      animation: container var(--durationInternal) steps(1) infinite;\n      overflow: hidden;\n\n      &::before,\n      &::after {\n        display: block;\n        content: '';\n        box-sizing: border-box;\n        border: .125em solid transparent;\n        border-radius: 50%;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 1em;\n        transform: rotate(45deg);\n        animation-timing-function: linear, steps(1);\n        animation-duration: var(--durationInternal), var(--durationInternal);\n        animation-iteration-count: infinite, infinite;\n      }\n\n      &::before {\n        border-color: transparent transparent var(--auto-refresh-color) var(--auto-refresh-color);\n        animation-name: rotate, hide1;\n        left: 0;\n      }\n\n      &::after {\n        border-color: var(--auto-refresh-color) var(--auto-refresh-color) transparent transparent;\n        animation-delay: var(--delay), var(--delay);\n        animation-name: rotate, hide2;\n        right: 0;\n      }\n    }\n` as typeof Box\n","import { TGItemJSXInterface, ToggleButtonGroup } from '../../../basic-lib';\nimport React from 'react';\nimport CurrencyInput from 'react-currency-input-field';\nimport { globalSetup } from '@loopring-web/common-resources';\nimport styled from '@emotion/styled';\nimport { Box } from '@material-ui/core';\nimport { WithTranslation } from 'react-i18next';\nimport { useFocusRef } from '../../../basic-lib/form/hooks';\n\nconst Styled = styled(Box)`\n  .MuiToggleButtonGroup-root {\n    .MuiToggleButtonGroup-grouped:first-of-type {\n      margin-left: -1px;\n    }\n    display: flex;\n    flex: 1;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-content: space-between;\n  }\n`\nconst InputStyled = styled(CurrencyInput)`\n  text-align: right;\n  color: var(--color-text-primary);\n\n  ::placeholder {\n    color: var(--color-text-secondary);\n  }\n;\n  width: 48px; //calc(100% - 2rem);\n  height: 100%; //var(--btn-Input-height);\n  border: 0;\n  margin: 0;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n  font-size: ${({theme}) => theme.fontDefault.h6};\n  display: block;\n  //padding: .8rem 1rem;\n  min-width: 0;\n  background: none;\n  box-sizing: border-box;\n  animation-name: mui-auto-fill-cancel;\n  letter-spacing: inherit;\n  animation-duration: 10ms;\n  -webkit-tap-highlight-color: transparent;\n\n  :focus {\n    outline: 0;\n    border-color: transparent;\n  }\n}\n\n` as typeof CurrencyInput\nexport const SlippagePanel = ({\n                                  slippageList,\n                                  slippage,\n                                  wait = globalSetup.wait,\n                                  handleChange,\n                                  ...rest\n                              }: WithTranslation & {\n\n\n    slippageList: Array<number | string>,\n    slippage: number | string, wait?: number,\n    handleChange: (newValue: any, customValue: any) => void\n}) => {\n    const [cValue, setcValue] = React.useState<number | undefined>(0.3);\n    const inputEle = useFocusRef({\n        shouldFocusOn: false,\n        value: cValue,\n    });\n    const handleContChange = React.useCallback((value: any, _name: any) => {\n            setcValue(value);\n        }\n        , []);\n    const toggleData = slippageList.reduce((pre, value, index) => {\n        let item: TGItemJSXInterface;\n        if (RegExp('slippage:').test(value.toString())) {\n            value = value.toString().replace('slippage:', '');\n            if (!isNaN(Number(value)) && Number(value) !== cValue) {\n                setcValue(Number(value))\n            }\n            item = {\n                value: cValue,\n                JSX: <>{rest.t('labelCustomer')} : <InputStyled ref={inputEle} placeholder={'N%'} allowDecimals={true}\n                                                                decimalsLimit={2}\n                                                                onValueChange={handleContChange} value={cValue}\n                                                                maxLength={3} suffix=\"%\"/></>,\n                tlabel: cValue + '%',\n                key: cValue + '-' + index,\n            }\n        } else {\n            item = {\n                value: value,\n                JSX: <>{value}%</>,\n                tlabel: value + '%',\n                key: value + '-' + index,\n            }\n        }\n\n        pre.push(item);\n        return pre;\n    }, [] as TGItemJSXInterface[])\n    const [value, setValue] = React.useState(slippage);\n    const _handleChange = (event: React.MouseEvent<HTMLElement>, newValue: number | string) => {\n        if (event.target !== inputEle.current) {\n            setValue(newValue);\n            if (cValue !== 0.1 && cValue !== 0.5 && cValue !== 1)\n                if (handleChange) {\n                    handleChange(newValue, cValue !== 0.1 && cValue !== 0.5 && cValue !== 1 ? cValue : undefined)\n                }\n            //TODO close\n        } else {\n\n        }\n\n    }\n    return <Styled\n        height={'var(--slippage-pop-height)'}\n        width={'var(--slippage-pop-width)'} padding={2}\n        display={'flex'}>  {\n        <ToggleButtonGroup exclusive {...{...rest, tgItemJSXs: toggleData, value: value, size: 'small'}}\n                           handleChange={_handleChange}/>\n    }\n    </Styled>\n}","import { Grid } from '@material-ui/core';\nimport { DropDownIcon } from '@loopring-web/common-resources';\nimport { SwitchData } from '../../Interface';\nimport { IconButtonStyled } from '../Styled';\n\nexport const ToolBarItemBack = <T extends any>({\n                                                   onChangeEvent,\n                                                   tradeData\n                                               }: { tradeData: T, onChangeEvent: (index: 0 | 1, data: SwitchData<T>) => Promise<void> }) => {\n    return <Grid container justifyContent={'flex-start'}>\n        <IconButtonStyled edge=\"start\" sx={{transform: 'rotate(90deg)', transformOrigin: '50%'}}\n                          className={'switch'}\n                          color=\"inherit\"\n                          onClick={() => {\n                              onChangeEvent(0, {tradeData, to: 'button'})\n                          }\n                          }\n                          aria-label=\"to Professional\">\n\n            <DropDownIcon/>\n        </IconButtonStyled>\n    </Grid>\n}","import { CoinInfo, CoinKey, IBData } from '@loopring-web/common-resources';\nimport { Trans, WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { CoinMenu, EmptyDefault, InputSelect, InputSelectProps } from '../../../basic-lib';\nimport { Box, Link, Typography } from '@material-ui/core';\nimport { TradeMenuListProps } from '../Interface';\nimport { useTheme } from '@emotion/react';\n\n\nexport const TradeMenuList = <T extends IBData<I>,\n    I>({\n           t, onChangeEvent, walletMap, selected, tradeData, coinMap, _height,\n           ...rest\n       }: TradeMenuListProps<T, I> & WithTranslation) => {\n    const ref = React.useRef<any>(null);\n    const inputSelectProps: InputSelectProps<I> = {\n        placeholder: 'tokenSearchCoin',\n        focusOnInput: true,\n        allowScroll: true,\n        selected: '',\n        panelRender: () => <></>,\n    }\n    //TODO: for error and when empty\n    const PanelEmptyRender = () => {\n        return <><EmptyDefault height={\"calc(100% - 35px)\"} message={() => {\n            return <Trans i18nKey=\"labelEmptyDefault\">\n                Content is Empty\n            </Trans>\n        }}/></>\n    }\n    const theme = useTheme();\n    const backElement = React.useMemo(() => <>\n        <Typography fontSize={'body1'}>\n            <Link color=\"textSecondary\" onClick={() => {\n                onChangeEvent(0, {tradeData, to: 'button'})\n            }} style={{textAlign: 'right'}}>{t('labelCancel')}</Link>\n        </Typography>\n    </>, [onChangeEvent, tradeData])\n    try {\n        // const selected: string | undefined = swapData.tradeData[ swapData.type ].belong ? swapData.tradeData[ swapData.type ]?.belong : '';\n        const filterBy = (coinInfo: CoinInfo<I>, filterString: string) => {\n            return filterString && filterString.length ? RegExp(filterString, 'i').test(coinInfo.simpleName as string) : true;\n        }\n        const PanelRender = ({selected, value}: any) => {\n            const handleSelect = (_event: any, itemKey: CoinKey<I>) => {\n                onChangeEvent(0, {...{tradeData: {...tradeData, belong: itemKey}}, to: 'button'})\n            }\n            return <CoinMenu\n                height={_height  ?\n                        typeof _height === 'number' ?\n                            ` calc(${_height + 'px'}  - 2 * var(--toolbar-row-padding) - ${theme.unit * 3}px ) `\n                            :` calc(${_height}  - 2 * var(--toolbar-row-padding) - ${theme.unit * 3}px )`\n                        : '410px'}\n                {...{\n                coinMap: coinMap, //swapData.type === 'sell' ? tradeCalcData?.sellCoinInfoMap : tradeCalcData?.buyCoinInfoMap as any,\n                filterBy,\n                // height: '410px',\n                filterString: value,\n                handleSelect,\n                walletMap: walletMap,//tradeCalcData?.walletMap as any,   // TODO get form parents Data\n                selected, t, ...rest\n            }} ref={ref}  ></CoinMenu>\n        }\n        return <>\n            <Box className={'menu-panel'} flex={1} height={'100%'} width={'100%'}>\n                <InputSelect {...{\n                    ...{...inputSelectProps, selected},\n                    backElement,\n                    panelRender: PanelRender, t, ...rest\n                }}/> </Box>\n        </>\n    } catch (error) {\n        //todo: showError Page, reload\n        return <>\n            <Box flex={1} height={'100%'} width={'100%'}> <InputSelect {...{\n                ...inputSelectProps,\n                panelRender: PanelEmptyRender, t, ...rest\n            }}/> </Box>\n        </>\n    }\n\n\n}\n","import { SwitchData } from '../../Interface';\nimport { IBData, TradeCalcData } from '@loopring-web/common-resources';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { TradeMenuList } from '../tool/TradeMenuList';\nimport { SwapMenuListProps } from './Interface';\n\nexport const SwapMenuList = <T extends IBData<I>,\n    I,\n    TCD extends TradeCalcData<I>>({\n                                      onChangeEvent,\n                                      tradeCalcData,\n                                      swapData,\n                                      ...rest\n                                  }: SwapMenuListProps<T, TCD> & WithTranslation) => {\n    const selected: string | undefined = swapData.tradeData[ swapData.type ].belong ? swapData.tradeData[ swapData.type ]?.belong : '';\n    const tradeData = swapData.tradeData[ swapData.type ];\n    const coinMap = swapData.type === 'sell' ? tradeCalcData?.sellCoinInfoMap : tradeCalcData?.buyCoinInfoMap as any;\n    const walletMap = tradeCalcData?.walletMap as any;   //IBData<I>\n    const handleOnChangeIndex = React.useCallback((index: 0 | 1, {tradeData, to}: SwitchData<IBData<I>>) => {\n        onChangeEvent(index, {\n            ...swapData,\n            tradeData: {...swapData.tradeData, [ swapData.type ]: tradeData},\n            to: to,\n        });\n    }, [swapData, onChangeEvent])\n    return <TradeMenuList  {...{\n        ...rest,\n        selected,\n        tradeData,\n        coinMap,\n        walletMap,\n        onChangeEvent: handleOnChangeIndex\n    }}  />\n}\n","import { SwapTradeData, TradeBtnStatus } from '../../Interface';\nimport {\n    CoinInfo,\n    CoinMap,\n    DropDownIcon,\n    EmptyValueTag,\n    ExchangeIcon,\n    IBData,\n    ReverseIcon,\n    SlippageTolerance,\n    TradeCalcData\n} from '@loopring-web/common-resources';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Button, InputButton, PopoverPure } from '../../../basic-lib';\nimport { usePopupState } from 'material-ui-popup-state/hooks';\nimport { bindHover, bindPopover } from 'material-ui-popup-state/es';\nimport { SwapTradeProps } from './Interface';\nimport { useSettings } from '../../../../stores';\nimport { IconButtonStyled } from '../Styled';\nimport { SlippagePanel } from '../tool';\nimport { Box } from '@material-ui/core/';\n\nexport const SwapTradeWrap = <T extends IBData<I>,\n    I,\n    TCD extends TradeCalcData<I>>({\n                                      t,\n                                      onChangeEvent,\n                                      isStob,\n                                      switchStobEvent,\n                                      swapData, disabled,\n                                      handleError, swapBtnStatus,\n                                      onSwapClick, swapBtnI18nKey,\n                                      tradeCalcData,\n                                      tokenSellProps,\n                                      tokenBuyProps,\n                                      ...rest\n                                  }: SwapTradeProps<T, I, TCD> & WithTranslation) => {\n    const sellRef = React.useRef();\n    const buyRef = React.useRef();\n    const {slippage} = useSettings();\n    const slippageArray: Array<number | string> = SlippageTolerance.concat(`slippage:${slippage}`) as Array<number | string>;\n    const [error, setError] = React.useState<{ error: boolean, message?: string | React.ElementType }>({\n        error: false,\n        message: ''\n    });\n    const [_isStoB, setIsStoB] = React.useState(typeof isStob !== 'undefined' ? isStob : true);\n\n    const _onSwitchStob = React.useCallback((_event: any) => {\n        setIsStoB(!_isStoB)\n        if (typeof switchStobEvent === 'function') {\n            switchStobEvent(!_isStoB)\n        }\n    }, [switchStobEvent, _isStoB])\n\n\n    const getDisabled = React.useCallback(() => {\n        if (disabled || tradeCalcData === undefined || tradeCalcData.sellCoinInfoMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    }, [disabled, tradeCalcData]);\n    const tradeData = swapData.tradeData\n\n    const handleOnClick = React.useCallback((_event: React.MouseEvent, ref: any) => {\n        const focus: 'buy' | 'sell' = ref.current === buyRef.current ? 'buy' : 'sell';\n        onChangeEvent(1, {tradeData: swapData.tradeData, type: focus, to: 'menu'});\n    }, [swapData, onChangeEvent])\n    const handleCountChange = React.useCallback((ibData: IBData<I>, _ref: any) => {\n        const focus: 'buy' | 'sell' = _ref?.current === buyRef.current ? 'buy' : 'sell';\n        if (swapData.tradeData[ focus ].tradeValue !== ibData.tradeValue) {\n            onChangeEvent(0, {tradeData: {...swapData.tradeData, [ focus ]: ibData}, type: focus, to: 'button'});\n        }\n    }, [swapData, onChangeEvent]);\n    const covertOnClick = React.useCallback(() => {\n        onChangeEvent(0, {\n            tradeData: {sell: swapData.tradeData.buy, buy: swapData.tradeData.sell} as SwapTradeData<T>,\n            type: 'exchange',\n            to: 'button'\n        });\n    }, [swapData, onChangeEvent]);\n    const _onSlippageChange = React.useCallback((slippage: number | string, customSlippage: number | string | undefined) => {\n        popupState.close();\n        onChangeEvent(0, {\n            ...swapData,\n            tradeData: {\n                ...swapData.tradeData,\n                slippage: slippage,\n                __cache__: {\n                    ...swapData.tradeData.__cache__,\n                    customSlippage: customSlippage\n                }\n            }\n        });\n    }, [swapData, onChangeEvent])\n    if (typeof handleError !== 'function') {\n        handleError = ({belong, balance, tradeValue}: any) => {\n            if (balance < tradeValue || (tradeValue && !balance)) {\n                const _error = {error: true, message: t('tokenNotEnough', {belong: belong})}\n                setError(_error);\n                return _error\n\n            }\n            setError({error: false, message: ''});\n            return {error: false, message: ''}\n        }\n    }\n    const propsSell = {\n        label: t('tokenEnterPaymentToken'),\n        subLabel: t('tokenMax'),\n        emptyText: t('tokenSelectToken'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        ...tokenSellProps,\n        handleError,\n        handleCountChange,\n        handleOnClick,\n        ...rest\n    }\n    const propsBuy = {\n        label: t('tokenEnterReceiveToken'),\n        subLabel: t('tokenHave'),\n        emptyText: t('tokenSelectToken'),\n        placeholderText: '0.00',\n        maxAllow: false,\n        ...tokenBuyProps,\n        // handleError,\n        handleCountChange,\n        handleOnClick,\n        ...rest\n    }\n    const popupState = usePopupState({\n        variant: 'popover',\n        popupId: 'slippagePop',\n    })\n    const label = React.useMemo(() => {\n        if (error.error) {\n            if (typeof error.message === 'string') {\n                return t(error.message)\n            } else if (error.message !== undefined) {\n                return error.message;\n            } else {\n                return t('labelError')\n            }\n\n        }\n        if (swapBtnI18nKey) {\n            const key = swapBtnI18nKey.split(',');\n            return t(key[ 0 ], key && key[ 1 ] ? {arg: key[ 1 ]} : undefined)\n        } else {\n            return t(`swapBtn`)\n        }\n\n    }, [error,t,swapBtnI18nKey])\n\n\n    const priceImpact = (tradeCalcData && tradeCalcData.priceImpact) ? parseFloat(tradeCalcData.priceImpact).toPrecision(3).toString() + ' %' : EmptyValueTag\n\n    const fee = (tradeCalcData && tradeCalcData.fee) ? ((parseFloat(tradeCalcData.fee) / 100).toString() + '%') : EmptyValueTag\n\n    const minimumReceived = (tradeCalcData && tradeCalcData.minimumReceived) ? tradeCalcData.minimumReceived : EmptyValueTag\n\n    return <Grid className={tradeCalcData ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"} flexWrap={'nowrap'}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}>\n        <Grid item marginTop={2} display={'flex'} alignSelf={\"stretch\"} justifyContent={'flex-start'}\n              alignItems={\"center\"} flexDirection={\"column\"} flexBasis={'initial'}>\n            {/*<Grid container direction={\"column\"} spacing={1} alignItems={\"center\"} alignContent={\"center\"}>*/}\n            {/*    <Grid item>*/}\n            <InputButton<any, I, CoinInfo<I>> ref={sellRef} disabled={getDisabled()}  {...{\n                ...propsSell,\n                isHideError: true,\n                inputData: tradeData ? tradeData.sell : {} as any,\n                coinMap: tradeCalcData && tradeCalcData.sellCoinInfoMap ? tradeCalcData.sellCoinInfoMap : {} as CoinMap<I, CoinInfo<I>>\n            }} />\n            {/*</Grid>*/}\n            {/*<Grid item>*/}\n            <Box alignSelf={\"center\"} marginY={1}>\n                <IconButtonStyled size={'medium'} onClick={covertOnClick} color=\"inherit\"\n                                  aria-label={t('tokenExchange')}>\n                    <ExchangeIcon/>\n                </IconButtonStyled>\n            </Box>\n            {/*</Grid>*/}\n            {/*<Grid item>*/}\n            <InputButton<any, I, CoinInfo<I>> ref={buyRef} disabled={getDisabled()} {...{\n                ...propsBuy,\n                // maxAllow:false,\n                isHideError: true,\n                inputData: tradeData ? tradeData.buy : {} as any,\n                coinMap: tradeCalcData && tradeCalcData.buyCoinInfoMap ? tradeCalcData.buyCoinInfoMap : {} as CoinMap<I, CoinInfo<I>>\n            }} />\n            {/*</Grid>*/}\n            {/*</Grid>*/}\n        </Grid>\n        <Grid item>\n            <Typography component={'p'} variant=\"body1\" height={24} lineHeight={'24px'}>\n                {tradeData.buy?.belong && tradeData.sell?.belong && tradeCalcData ? <>\n                    {_isStoB ? `1${tradeData.sell?.belong} \\u2248 ${tradeCalcData.StoB ? tradeCalcData.StoB : EmptyValueTag} ${tradeData.buy?.belong}`\n                        : `1${tradeData.buy?.belong} \\u2248 ${tradeCalcData.BtoS ? tradeCalcData.BtoS : EmptyValueTag} ${tradeData.sell?.belong}`}\n                    <IconButtonStyled size={'small'} aria-label={t('tokenExchange')} onClick={_onSwitchStob}\n                        // style={{transform: 'rotate(90deg)'}}\n                    ><ReverseIcon/></IconButtonStyled>\n                </> : EmptyValueTag}\n            </Typography>\n        </Grid>\n        <Grid item alignSelf={\"stretch\"}>\n            <Grid container direction={\"column\"} spacing={1} alignItems={\"stretch\"}>\n                <Grid item paddingBottom={3} sx={{color: 'text.secondary'}}>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}\n                          height={24}>\n                        <Typography component={'p'} variant=\"body1\">{t('swapTolerance')}</Typography>\n                        <Typography component={'p'} variant=\"body1\">\n                            {tradeCalcData ? <>\n                                <span>\n                                    <IconButtonStyled\n                                        {...bindHover(popupState)}\n                                        size={'small'}\n                                        sx={{fontSize: '1.4rem', height: '24px', minWidth: '24px', width: '24px'}}\n                                        className={'clock-loading'}\n                                        color=\"inherit\"\n                                        aria-label=\"3' price update\">\n                                        <DropDownIcon/>\n                                    </IconButtonStyled>\n                                    <PopoverPure\n                                        className={'arrow-right'}\n                                        {...bindPopover(popupState)}\n                                        {...{\n                                            anchorOrigin: {vertical: 'bottom', horizontal: 'right'},\n                                            transformOrigin: {vertical: 'top', horizontal: 'right'}\n                                        }}\n                                    >\n                                        <SlippagePanel {...{\n                                            ...rest, t,\n                                            handleChange: _onSlippageChange,\n                                            slippageList: slippageArray,\n                                            slippage: tradeData.slippage ? tradeData.slippage : tradeCalcData.slippage ? tradeCalcData.slippage : 0.5\n                                        }} />\n                                    </PopoverPure>\n                                </span>\n                                <Typography\n                                    component={'span'}>{tradeData.slippage ? tradeData.slippage : tradeCalcData.slippage ? tradeCalcData.slippage : 0.5}%</Typography></> : EmptyValueTag\n                            }\n                        </Typography>\n                    </Grid>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}>\n                        <Typography component={'p'} variant=\"body1\"> {t('swapPriceImpact')}</Typography>\n                        <Typography component={'p'}\n                                    variant=\"body1\"> {priceImpact}  </Typography>\n                    </Grid>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}>\n                        <Typography component={'p'} variant=\"body1\"> {t('swapMinReceive')}</Typography>\n                        <Typography component={'p'}\n                                    variant=\"body1\">{minimumReceived} </Typography>\n                    </Grid>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}>\n                        <Typography component={'p'} variant=\"body1\"> {t('swapFee')} </Typography>\n                        <Typography component={'p'}\n                                    variant=\"body1\">{fee}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button variant={'contained'} size={'large'} color={'primary'} onClick={() => {\n                        onSwapClick(swapData.tradeData)\n                    }}\n                            loading={!getDisabled() && swapBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                            disabled={getDisabled() || swapBtnStatus === TradeBtnStatus.DISABLED || swapBtnStatus === TradeBtnStatus.LOADING || error.error ? true : false}\n                            fullWidth={true}>{label}\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n\n    </Grid>\n}\n\n","import styled from '@emotion/styled';\n\nexport const SvgStyled = styled.div`\n  & svg{\n    width: 24px;\n    height: 24px;\n  }\n`\n","import {\n    AmmData,\n    AmmInData,\n    DropDownIcon,\n    EmptyValueTag,\n    IBData,\n    LinkedIcon,\n    ReverseIcon,\n    SlippageTolerance\n} from '@loopring-web/common-resources';\nimport { WithTranslation } from 'react-i18next';\nimport { AmmDepositWrapProps } from './Interface';\nimport { Button, InputCoin, PopoverPure } from '../../../basic-lib';\nimport React from 'react';\nimport { usePopupState } from 'material-ui-popup-state/hooks';\nimport { Grid, Typography } from '@material-ui/core';\nimport { IconButtonStyled } from '../Styled';\nimport { bindHover, bindPopover } from 'material-ui-popup-state/es';\nimport { SlippagePanel } from '../tool';\nimport { TradeBtnStatus } from '../../Interface';\nimport { SvgStyled } from './styled';\nimport { useSettings } from '../../../../stores';\nimport { Box } from '@material-ui/core/';\n\n\nexport const AmmDepositWrap = <T extends AmmData<C extends IBData<I> ? C : IBData<I>>,\n    I,\n    ACD extends AmmInData<I>,\n    C = IBData<I>>({\n                       t,\n                       disabled,\n                       isStob,\n                       switchStobEvent,\n                       ammDepositBtnStatus,\n                       ammCalcData,\n                       ammDepositBtnI18nKey,\n                       onAmmAddClick,\n                       tokenAProps,\n                       tokenBProps,\n                       onChangeEvent,\n                       handleError,\n                       ammData,\n                       ...rest\n                   }: AmmDepositWrapProps<T, I, ACD, C> & WithTranslation) => {\n    const coinARef = React.useRef();\n    const coinBRef = React.useRef();\n    const {slippage} = useSettings();\n    const slippageArray: Array<number | string> = SlippageTolerance.concat(`slippage:${slippage}`) as Array<number | string>;\n    const [error, setError] = React.useState<{ error: boolean, message?: string | React.ElementType }>({\n        error: false,\n        message: ''\n    });\n    const [_isStoB, setIsStoB] = React.useState(typeof isStob !== 'undefined' ? isStob : true);\n\n    const _onSwitchStob = React.useCallback((_event: any) => {\n        console.log('...', _event)\n        setIsStoB(!_isStoB)\n        if (typeof switchStobEvent === 'function') {\n            switchStobEvent(!_isStoB)\n        }\n    }, [switchStobEvent, _isStoB])\n\n    const getDisabled = () => {\n        if (disabled || ammCalcData === undefined || ammCalcData.coinInfoMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    if (typeof handleError !== 'function') {\n        handleError = ({belong, balance, tradeValue}: any) => {\n            if (balance < tradeValue || (tradeValue && !balance)) {\n                const _error = {error: true, message: t('tokenNotEnough', {belong: belong})}\n                setError(_error);\n                return  _error\n\n            }\n            setError({error: false, message: ''});\n            return {error: false, message: ''}\n        }\n        // handleError = ({belong, balance, tradeValue}: any) => {\n        //     if (balance < tradeValue || (tradeValue && !balance)) {\n        //         return {error: true, message: t('tokenNotEnough', {belong: belong})}\n        //     }\n        //     return {error: false, message: ''}\n        // }\n    }\n    const handleCountChange = React.useCallback((ibData: IBData<I>, _ref: any) => {\n        const focus: 'coinA' | 'coinB' = _ref?.current === coinARef.current ? 'coinA' : 'coinB';\n        if (ammData[ focus ].tradeValue !== ibData.tradeValue) {\n            onChangeEvent({tradeData: {...ammData, [ focus ]: ibData}, type: focus});\n        }\n    }, [ammData, onChangeEvent]);\n    const propsA: any = {\n        label: t('labelTokenAmount'),\n        subLabel: t('labelAvailable'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        ...tokenAProps,\n        handleError,\n        handleCountChange,\n        ...rest\n    }\n    const propsB: any = {\n        label: t('labelTokenAmount'),\n        subLabel: t('labelAvailable'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        ...tokenBProps,\n        handleError,\n        handleCountChange,\n        ...rest\n    }\n    const popupState = usePopupState({\n        variant: 'popover',\n        popupId: 'slippagePop',\n    })\n    const _onSlippageChange = React.useCallback((slippage: number | string, customSlippage: number | string | undefined) => {\n        popupState.close();\n        onChangeEvent({\n            tradeData: {\n                ...ammData, slippage: slippage,\n                __cache__: {\n                    ...ammData.__cache__,\n                    customSlippage: customSlippage\n                }\n            }, type: 'coinA'\n        });\n    }, [ammData, onChangeEvent]) ;\n    const label = React.useMemo(()=>{\n        if(error.error){\n            if(typeof  error.message === 'string'){\n                return  t(error.message)\n            }else if(error.message !== undefined){\n                return error.message;\n            }else{\n                return t('labelError')\n            }\n\n        }\n        if (ammDepositBtnI18nKey) {\n            const key = ammDepositBtnI18nKey.split(',');\n            return t(key[ 0 ], key && key[ 1 ] ? {arg: key[ 1 ]} : undefined)\n        } else {\n            return t(`labelAddLiquidityBtn`)\n        }\n    },[error,ammDepositBtnI18nKey,t])\n\n    return <Grid className={ammCalcData ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}>\n        <Grid item marginTop={2} display={'flex'} alignSelf={\"stretch\"} justifyContent={''} alignItems={\"stretch\"}\n              flexDirection={\"column\"}>\n            <InputCoin<any, I, any> ref={coinARef} disabled={getDisabled()} {...{\n                ...propsA,\n                isHideError:true,\n                order: 'right',\n                inputData: ammData ? ammData.coinA : {} as any,\n                coinMap: ammCalcData ? ammCalcData.coinInfoMap : {} as any\n            }}/>\n            <Box alignSelf={\"center\"} marginY={1}>\n                <SvgStyled>\n                    <LinkedIcon/>\n                </SvgStyled>\n            </Box>\n            <InputCoin<any, I, any> ref={coinBRef} disabled={getDisabled()} {...{\n                ...propsB,\n                isHideError:true,\n                order: 'right',\n                inputData: ammData ? ammData.coinB : {} as any,\n                coinMap: ammCalcData ? ammCalcData.coinInfoMap : {} as any\n            }}/>\n        </Grid>\n\n        <Grid item>\n            <Typography component={'p'} variant={'body1'} height={24} lineHeight={'24px'}>\n                {ammData.coinA?.belong && ammData.coinB?.belong && ammCalcData ? <>\n                    {_isStoB ? `1${ammData.coinA?.belong} \\u2248 ${ammCalcData.AtoB ? ammCalcData.AtoB : EmptyValueTag} ${ammData.coinB?.belong}`\n                        : `1${ammData.coinB?.belong} \\u2248 ${ammCalcData.AtoB ? (1 / ammCalcData.AtoB) : EmptyValueTag} ${ammData.coinA?.belong}`}\n                    <IconButtonStyled size={'small'} aria-label={t('tokenExchange')} onClick={_onSwitchStob}\n                    ><ReverseIcon/></IconButtonStyled>\n                </> : EmptyValueTag}\n            </Typography>\n        </Grid>\n        <Grid item alignSelf={\"stretch\"}>\n            <Grid container direction={\"column\"} spacing={1} alignItems={\"stretch\"}>\n                <Grid item paddingBottom={3} sx={{color: 'text.secondary'}}>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}\n                          height={24}>\n                        <Typography component={'p'} variant=\"body1\">{t('swapTolerance')}</Typography>\n                        <Typography component={'p'} variant=\"body1\">\n\n                            {ammCalcData ? <>\n                                <span>\n                                    <IconButtonStyled\n                                        {...bindHover(popupState)}\n                                        sx={{fontSize: '1.4rem', height: '24px', minWidth: '24px', width: '24px'}}\n                                        className={'clock-loading'}\n                                        color=\"inherit\"\n                                        aria-label=\"3' price update\">\n                                        <DropDownIcon/>\n                                    </IconButtonStyled>\n                                    <PopoverPure\n                                        className={'arrow-right'}\n                                        {...bindPopover(popupState)}\n                                        {...{\n                                            anchorOrigin: {vertical: 'bottom', horizontal: 'right'},\n                                            transformOrigin: {vertical: 'top', horizontal: 'right'}\n                                        }}\n                                    >\n                                        <SlippagePanel {...{\n                                            ...rest, t,\n                                            handleChange: _onSlippageChange,\n                                            slippageList: slippageArray,\n                                            slippage: ammData.slippage ? ammData.slippage : ammCalcData.slippage ? ammCalcData.slippage : 0.5\n                                        }} />\n                                    </PopoverPure>\n                                </span>\n\n                                <Typography\n                                    component={'span'}>{ammData.slippage ? ammData.slippage : ammCalcData.slippage ? ammCalcData.slippage : 0.5}%</Typography></> : EmptyValueTag\n                            }\n                        </Typography>\n                    </Grid>\n\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}>\n                        <Typography component={'p'} variant=\"body1\"> {t('swapFee')} </Typography>\n                        <Typography component={'p'}\n                                    variant=\"body1\">{t(ammCalcData ? ammCalcData.feeJoin : EmptyValueTag)}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button variant={'contained'} size={'large'} color={'primary'} onClick={() => {\n                        onAmmAddClick(ammData)\n                    }}\n                            loading={!getDisabled() && ammDepositBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                            disabled={getDisabled() || ammDepositBtnStatus === TradeBtnStatus.DISABLED || ammDepositBtnStatus === TradeBtnStatus.LOADING ? true : false}\n                            fullWidth={true}>\n                        {label}\n\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>\n}","import {\n    AmmData,\n    AmmInData,\n    CoinInfo,\n    DropDownIcon,\n    EmptyValueTag,\n    IBData,\n    LinkedIcon,\n    ReverseIcon,\n    SlippageTolerance\n} from '@loopring-web/common-resources';\nimport { AmmWithdrawWrapProps } from './Interface';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { usePopupState } from 'material-ui-popup-state/hooks';\nimport { Grid, Typography } from '@material-ui/core';\nimport { BtnPercentage, Button, IconButtonStyled, InputCoin, PopoverPure, TradeBtnStatus } from '../../../index';\nimport { bindHover, bindPopover } from 'material-ui-popup-state/es';\nimport { SlippagePanel } from '../tool';\nimport { useSettings } from '../../../../stores';\nimport { Box } from '@material-ui/core/';\nimport { SvgStyled } from './styled';\n\nexport const AmmWithdrawWrap = <T extends AmmData<C extends IBData<I> ? C : IBData<I>>,\n    I,\n    ACD extends AmmInData<I>,\n    C = IBData<I>>({\n                       t,\n                       disabled,\n                       isStob,\n                       switchStobEvent,\n                       ammWithdrawBtnStatus,\n                       ammCalcData,\n                       onAmmRemoveClick,\n                       tokenAProps,\n                       tokenBProps,\n                       anchors,\n                       ammWithdrawBtnI18nKey,\n                       onChangeEvent,\n                       handleError,\n                       ammData,\n                       selectedPercentage = -1,\n                       ...rest\n                   }: AmmWithdrawWrapProps<T, I, ACD, C> & WithTranslation) => {\n    const coinARef = React.useRef();\n    const coinBRef = React.useRef();\n    const {slippage} = useSettings();\n    const slippageArray: Array<number | string> = SlippageTolerance.concat(`slippage:${slippage}`) as Array<number | string>;\n    const [_selectedPercentage, setSelectedPercentage] = React.useState(selectedPercentage);\n\n    const [_isStoB, setIsStoB] = React.useState(typeof isStob !== 'undefined' ? isStob : true);\n    const [error, setError] = React.useState<{ error: boolean, message?: string | React.ElementType }>({\n        error: false,\n        message: ''\n    });\n    const _onSwitchStob = React.useCallback((_event: any) => {\n        setIsStoB(!_isStoB)\n        if (typeof switchStobEvent === 'function') {\n            switchStobEvent(!_isStoB)\n        }\n    }, [switchStobEvent, _isStoB])\n\n    const getDisabled = () => {\n        if (disabled || ammCalcData === undefined || ammCalcData.coinInfoMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    if (typeof handleError !== 'function') {\n        handleError = ({belong, balance, tradeValue}: any) => {\n            if (balance < tradeValue || (tradeValue && !balance)) {\n                const _error = {error: true, message: t('tokenNotEnough', {belong: belong})}\n                setError(_error);\n                return  _error\n\n            }\n            setError({error: false, message: ''});\n            return {error: false, message: ''}\n        }\n        // handleError = ({belong, balance, tradeValue}: any) => {\n        //     if (balance < tradeValue || (tradeValue && !balance)) {\n        //         return {error: true, message: t('tokenNotEnough', {belong: belong})}\n        //     }\n        //     return {error: false, message: ''}\n        // }\n    }\n    const handleCountChange = React.useCallback((ibData: IBData<I>, _ref: any, flag = -1) => {\n        let focus: 'coinA' | 'coinB' | 'percentage';\n        if (flag !== _selectedPercentage) {\n            setSelectedPercentage(flag)\n        }\n        if (_ref) {\n            focus = _ref?.current === coinARef.current ? 'coinA' : 'coinB';\n            if (ammData[ focus ].tradeValue !== ibData.tradeValue) {\n                onChangeEvent({tradeData: {...ammData, [ focus ]: ibData}, type: focus});\n            }\n        } else {\n            onChangeEvent({tradeData: {...ammData, [ 'coinA' ]: ibData}, type: 'percentage'});\n        }\n    }, [ammData, onChangeEvent]);\n    const onPercentage = (value: any) => {\n        ammData[ 'coinA' ].tradeValue = ammData[ 'coinA' ].balance * value / 100;\n        handleCountChange(ammData[ 'coinA' ], null, value)\n    }\n    const _onSlippageChange = React.useCallback((slippage: number | string, customSlippage: number | string | undefined) => {\n        popupState.close();\n        onChangeEvent({\n            tradeData: {\n                ...ammData, slippage: slippage,\n                __cache__: {\n                    ...ammData.__cache__,\n                    customSlippage: customSlippage\n                }\n            }, type: 'coinA'\n        });\n    }, [ammData, onChangeEvent])\n    const propsA: any = {\n        label: t('labelTokenAmount'),\n        subLabel: t('labelAvailable'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        ...tokenAProps,\n        handleError,\n        handleCountChange,\n        ...rest\n    }\n    const propsB: any = {\n        label: t('labelTokenAmount'),\n        subLabel: t('labelAvailable'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        ...tokenBProps,\n        handleError,\n        handleCountChange,\n        ...rest\n    }\n    const popupState = usePopupState({\n        variant: 'popover',\n        popupId: 'slippagePop',\n    })\n\n    const label = React.useMemo(()=>{\n        if(error.error){\n            if(typeof  error.message === 'string'){\n                return  t(error.message)\n            }else if(error.message !== undefined){\n                return error.message;\n            }else{\n                return t('labelError')\n            }\n\n        }\n        if (ammWithdrawBtnI18nKey) {\n            const key = ammWithdrawBtnI18nKey.split(',');\n            return t(key[ 0 ], key && key[ 1 ] ? {arg: key[ 1 ]} : undefined)\n        } else {\n            return t(`labelRemoveLiquidityBtn`)\n        }\n        // return  t(ammWithdrawBtnI18nKey ? t(ammWithdrawBtnI18nKey) : t(`labelRemoveLiquidityBtn`))\n    },[error,ammWithdrawBtnI18nKey,t])\n\n    return <Grid className={ammCalcData ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}>\n        <Grid item marginTop={2} display={'flex'} alignSelf={\"stretch\"} justifyContent={''} alignItems={\"stretch\"}\n              flexDirection={\"column\"}>\n            <InputCoin<IBData<I>, I, CoinInfo<I>> ref={coinARef} disabled={getDisabled()} {...{\n                ...propsA,\n                isHideError:true,\n                order: 'right',\n                inputData: ammData ? ammData.coinA : {} as any,\n                coinMap: ammCalcData ? ammCalcData.coinInfoMap : {} as any\n            }}/>\n            <Box alignSelf={\"center\"} marginY={1}>\n                <SvgStyled>\n                    <LinkedIcon/>\n                </SvgStyled>\n            </Box>\n            <InputCoin<IBData<I>, I, CoinInfo<I>> ref={coinBRef} disabled={getDisabled()} {...{\n                ...propsB,\n                isHideError:true,\n                order: 'right',\n                inputData: ammData ? ammData.coinB : {} as any,\n                coinMap: ammCalcData ? ammCalcData.coinInfoMap : {} as any\n            }}/>\n            <Grid item alignSelf={'stretch'} marginTop={2}>\n                <BtnPercentage selected={_selectedPercentage} anchors={anchors}\n                               handleChanged={onPercentage}></BtnPercentage>\n            </Grid>\n        </Grid>\n\n        <Grid item>\n            <Typography component={'p'} variant=\"body1\" height={24} lineHeight={'24px'}>\n                {ammData.coinA?.belong && ammData.coinB?.belong && ammCalcData ? <>\n                    {_isStoB ? `1${ammData.coinA?.belong} \\u2248 ${ammCalcData.AtoB ? ammCalcData.AtoB : EmptyValueTag} ${ammData.coinB?.belong}`\n                        : `1${ammData.coinB?.belong} \\u2248 ${ammCalcData.AtoB ? (1 / ammCalcData.AtoB) : EmptyValueTag} ${ammData.coinA?.belong}`}\n                    <IconButtonStyled size={'small'} aria-label={t('tokenExchange')} onClick={_onSwitchStob}\n                    ><ReverseIcon/></IconButtonStyled>\n                </> : EmptyValueTag}\n            </Typography>\n        </Grid>\n        <Grid item alignSelf={\"stretch\"}>\n            <Grid container direction={\"column\"} spacing={1} alignItems={\"stretch\"}>\n                <Grid item paddingBottom={3} sx={{color: 'text.secondary'}}>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}\n                          height={24}>\n                        <Typography component={'p'} variant=\"body1\">{t('swapTolerance')}</Typography>\n                        <Typography component={'p'} variant=\"body1\">\n\n                            {ammCalcData ? <>\n                                <span>\n                                    <IconButtonStyled\n                                        {...bindHover(popupState)}\n                                        sx={{fontSize: '1.4rem', height: '24px', minWidth: '24px', width: '24px'}}\n                                        className={'clock-loading'}\n                                        color=\"inherit\"\n                                        aria-label=\"3' price update\">\n                                        <DropDownIcon/>\n                                    </IconButtonStyled>\n                                    <PopoverPure\n                                        className={'arrow-right'}\n                                        {...bindPopover(popupState)}\n                                        {...{\n                                            anchorOrigin: {vertical: 'bottom', horizontal: 'right'},\n                                            transformOrigin: {vertical: 'top', horizontal: 'right'}\n                                        }}\n                                    >\n                                        <SlippagePanel {...{\n                                            ...rest, t,\n                                            handleChange: _onSlippageChange,\n                                            slippageList: slippageArray,\n                                            slippage: ammData.slippage ? ammData.slippage : ammCalcData.slippage ? ammCalcData.slippage : 0.5\n                                        }} />\n                                    </PopoverPure>\n                                </span>\n\n                                <Typography\n                                    component={'span'}>{ammData.slippage ? ammData.slippage : ammCalcData.slippage ? ammCalcData.slippage : 0.5}%</Typography></> : EmptyValueTag\n                            }\n                        </Typography>\n                    </Grid>\n\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}>\n                        <Typography component={'p'} variant=\"body1\"> {t('swapFee')} </Typography>\n                        <Typography component={'p'}\n                                    variant=\"body1\">{t(ammCalcData ? ammCalcData.feeExit : EmptyValueTag)}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button variant={'contained'} size={'large'} color={'primary'} onClick={() => {\n                        onAmmRemoveClick(ammData)\n                    }}\n                            loading={!getDisabled() && ammWithdrawBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                            disabled={getDisabled() || ammWithdrawBtnStatus === TradeBtnStatus.DISABLED || ammWithdrawBtnStatus === TradeBtnStatus.LOADING || error.error ? true : false}\n                            fullWidth={true}>\n                        {label}\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>;\n\n}\n\n","import { IBData } from '@loopring-web/common-resources';\nimport { BasicACoinTradeHookProps } from '../Interface';\nimport React from 'react';\nimport { SwitchData } from '../../Interface';\nimport { useDeepCompareEffect } from 'react-use';\nimport { ToolBarItemBack } from '../tool';\n\nexport const useBasicTrade = <T extends IBData<I>,\n    I>({tradeData, handlePanelEvent, walletMap, coinMap, ...rest}: BasicACoinTradeHookProps<T, I>) => {\n    tradeData = tradeData ? tradeData : {} as T;\n    // data used on trade input btn click to menu list and back to the input data transfer\n    const [switchData, setSwitchData] = React.useState<SwitchData<T>>({\n        to: 'button',\n        tradeData: tradeData\n    } as SwitchData<T>);\n    // index is switch panel index number 1 is btn view\n    const [index, setIndex] = React.useState(0);\n    useDeepCompareEffect(() => {\n        if (tradeData !== switchData.tradeData) {\n            setSwitchData({...switchData, tradeData: tradeData});\n        }\n    }, [tradeData]);\n    const onChangeEvent = React.useCallback(async (_index: 0 | 1, {to, tradeData}: SwitchData<T>) => {\n        if (handlePanelEvent) {\n            await handlePanelEvent({to, tradeData}, `To${to}` as any);\n        }\n        if (typeof rest.onChangeEvent == 'function') {\n            setSwitchData(rest.onChangeEvent(_index, {to, tradeData}));\n        } else {\n            if (to === 'menu') {\n                setSwitchData({tradeData, to});\n            } else if (to === 'button') {\n                const count = tradeData.belong ? walletMap[ tradeData.belong ]?.count : 0;\n                setSwitchData({tradeData: {...tradeData, balance: count}, to});\n            }\n        }\n        if (_index !== index) {\n            setIndex(_index);\n        }\n    }, [handlePanelEvent, tradeData, walletMap, coinMap, rest, index]);\n\n    const toolBarItemBack = React.useMemo(() => <ToolBarItemBack onChangeEvent={onChangeEvent}\n                                                                 tradeData={tradeData}/>, [tradeData, onChangeEvent])\n    return {\n        //toolbar UI\n        toolBarItemBack,\n        //Data, panel and function\n        onChangeEvent,\n        index,\n        switchData\n\n    }\n}","import { CountDownStyled } from '../Styled';\nimport { Box, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { globalSetup, refreshTime } from '@loopring-web/common-resources';\nimport { debounce } from 'lodash';\n\nexport const  CountDownIcon = React.memo(({onRefreshData,wait=globalSetup.wait}:{wait?:number,onRefreshData?:()=>void})=>{\n    const countDownRef = React.useRef<any>();\n    const [refreshCount, setRefreshCount] = React.useState(0);\n    const nodeTimer = React.useRef<NodeJS.Timeout | -1>(-1);\n    const logoTimer = React.useRef<NodeJS.Timeout | -1>(-1);\n    const startCountDown = React.useCallback(() => {\n        if(countDownRef && countDownRef.current) {\n            countDownRef.current?.classList.add('countdown');\n            countDownRef.current?.classList?.remove('logo');\n            setRefreshCount(refreshTime-1);\n            if(nodeTimer.current !== -1){\n                clearInterval(nodeTimer.current as NodeJS.Timeout);\n            }\n            nodeTimer.current = setInterval(decreaseNum, 1000)\n        }\n    }, [countDownRef,nodeTimer])\n    const _refresh = React.useCallback(debounce(() => {\n        if(countDownRef && countDownRef.current) {\n            setRefreshCount(0)\n            if(nodeTimer.current !== -1){\n                clearInterval(nodeTimer.current as NodeJS.Timeout);\n            }\n            if(logoTimer.current !==-1){\n                clearTimeout(logoTimer.current as NodeJS.Timeout);\n            }\n            countDownRef.current?.classList?.remove('countdown');\n            countDownRef.current?.classList?.add('logo');\n\n            logoTimer.current = setTimeout(() => {\n                startCountDown()\n            }, 1000 - wait);\n\n            if (typeof onRefreshData === 'function') {\n                onRefreshData();\n            }\n        }\n    },wait), [onRefreshData, countDownRef,refreshTime,nodeTimer,startCountDown]);\n\n    const decreaseNum = React.useCallback(() => setRefreshCount((prev) => {\n        if (prev > 1) {\n            return prev - 1\n        } else if(prev == 1){\n            //@ts-ignore\n            countDownRef?.current?.classList?.remove('countdown');\n            //@ts-ignore\n            countDownRef?.current?.classList?.add('logo');\n            //_refresh()\n            return 0\n        }else {\n            //@ts-ignore\n            countDownRef?.current?.classList?.add('countdown');\n            //@ts-ignore\n            countDownRef?.current?.classList?.remove('logo');\n            return refreshTime-1\n        }\n    }), [refreshCount]);\n    const cleanSubscribe = React.useCallback(()=>{\n        clearInterval(nodeTimer.current as NodeJS.Timeout);\n        clearTimeout(logoTimer.current as NodeJS.Timeout);\n    },[nodeTimer,logoTimer] )\n    React.useEffect(() => {\n        _refresh();\n        return cleanSubscribe;\n    }, []);\n    return <CountDownStyled ref={countDownRef}\n                            className={'clock-loading outline logo'}\n                            onClick={_refresh}>\n        <Typography component={'span'} className={'text-count'}>{refreshCount>0?refreshCount:''}</Typography>\n        <Box className={'circle'}/>\n    </CountDownStyled>\n})","import { SwapProps, SwapTradeData } from '../Interface';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { SwitchPanel, SwitchPanelProps } from '../../basic-lib';\nimport {  IBData, TradeCalcData } from '@loopring-web/common-resources';\n// import { useDeepCompareEffect } from 'react-use';\n// import clockLoading from '@loopring-web/common-resources/assets/svg/clock-loading.svg';\nimport {  SwapMenuList, SwapTradeWrap,SwapData } from '../components';\nimport { CountDownIcon } from '../components/tool/Refresh';\n\nexport const SwapPanel = withTranslation('common', {withRef: true})(<T extends IBData<I>,\n    I,\n    TCD extends TradeCalcData<I>>({\n                                      disabled,\n                                      handleSwapPanelEvent, tradeCalcData,\n                                      handleError,\n                                      onSwapClick,\n                                      onRefreshData,\n                                      swapBtnStatus,\n                                      tokenSellProps,\n                                      tokenBuyProps,\n                                      ...rest\n                                  }: SwapProps<T, I, TCD> & WithTranslation) => {\n    // useSettings()\n    let swapTradeData: SwapTradeData<T>\n    if (tradeCalcData && tradeCalcData.sellCoinInfoMap) {\n        swapTradeData = ({\n            // @ts-ignore\n            sell: {\n                belong: tradeCalcData.sellCoinInfoMap ? tradeCalcData.sellCoinInfoMap[ tradeCalcData.coinSell ]?.simpleName : undefined,\n                balance: tradeCalcData.walletMap ? tradeCalcData.walletMap[ tradeCalcData.coinSell ]?.count : 0\n            },\n            // @ts-ignore\n            buy: {\n                belong: tradeCalcData.sellCoinInfoMap ? tradeCalcData.sellCoinInfoMap[ tradeCalcData.coinBuy ]?.simpleName : undefined,\n                balance: tradeCalcData.walletMap ? tradeCalcData.walletMap[ tradeCalcData.coinBuy ]?.count : 0\n            },\n            slippage: tradeCalcData.slippage,\n        });\n    } else {\n        swapTradeData = {\n            // @ts-ignore\n            sell: {\n                belong: undefined,\n                balance: 0\n            },\n            // @ts-ignore\n            buy: {\n                belong: undefined,\n                balance: 0,\n            }\n        }\n\n    }\n\n    const [index, setIndex] = React.useState(0);\n    const [swapData, setSwapData] = React.useState<SwapData<SwapTradeData<T>>>({\n        to: 'button',\n        type: 'buy',\n        tradeData: {\n            ...swapTradeData\n        }\n    })\n\n\n    React.useEffect(() => {\n        if (rest.tradeData && rest.tradeData !== swapData.tradeData\n            // && (rest.tradeData.sell.tradeValue !== swapData.tradeData.sell.tradeValue\n            //     || rest.tradeData.buy.tradeValue !== swapData.tradeData.buy.tradeValue)\n        ) {\n            setSwapData({...swapData, tradeData: rest.tradeData});\n        }\n    }, [rest.tradeData, swapData])\n    const onChangeEvent = React.useCallback(async (_index: 0 | 1, {\n        to,\n        tradeData,\n        type\n    }: SwapData<SwapTradeData<T>>) => {\n        await handleSwapPanelEvent && handleSwapPanelEvent({\n            to,\n            tradeData,\n            type\n        }, type === 'exchange' ? 'exchange' : `${type}To${to}` as any);\n        if (typeof rest.onChangeEvent == 'function') {\n            setSwapData(rest.onChangeEvent(_index, {to, tradeData, type}));\n        } else {\n            if (type === 'exchange') {\n                const countBuy = (tradeData.buy.belong && tradeCalcData.walletMap) ? tradeCalcData.walletMap[ tradeData.buy.belong ]?.count : 0;\n                const countSell = (tradeData.sell.belong && tradeCalcData.walletMap) ? tradeCalcData.walletMap[ tradeData.sell.belong ]?.count : 0;\n                setSwapData({\n                    tradeData: {\n                        ...swapData.tradeData,\n                        sell: {belong: tradeData.sell.belong, balance: countSell, tradeValue: 0},\n                        buy: {belong: tradeData.buy.belong, balance: countBuy, tradeValue: 0},\n                    } as SwapTradeData<T>, to, type: 'buy'\n                });\n            } else if (to === 'menu') {\n                setSwapData({tradeData, to, type});\n            } else if (to === 'button') {\n                const count = (tradeData[ type ].belong && tradeCalcData.walletMap) ? tradeCalcData.walletMap[ tradeData[ type ].belong ]?.count : 0;\n                let _tradeData = {\n                    ...tradeData,\n                    [ type ]: {\n                        ...tradeData[ type ],\n                        balance: count ? count : 0,\n                    }\n                };\n                setSwapData({tradeData: _tradeData, to, type});\n            }\n        }\n        if (_index !== index) {\n            setIndex(_index);\n        }\n\n    }, [handleSwapPanelEvent, tradeCalcData, rest, index, swapData]);\n    const props: SwitchPanelProps<'tradeMenuList' | 'trade'> = {\n        index: index, // show default show\n        panelList: [\n            {\n                key: \"trade\",\n                element: React.useMemo(  () => <SwapTradeWrap<T, I, TCD> key={\"trade\"} {...{\n                    ...rest,\n                    swapData,\n                    tradeCalcData,\n                    onSwapClick,\n                    onChangeEvent,\n                    disabled,\n                    swapBtnStatus,\n                    tokenSellProps,\n                    tokenBuyProps,\n                    handleError,\n                }}/>,[ rest,\n                    swapData,\n                    tradeCalcData,\n                    onSwapClick,\n                    onChangeEvent,\n                    disabled,\n                    swapBtnStatus,\n                    tokenSellProps,\n                    tokenBuyProps,\n                    handleError]),\n                toolBarItem: React.useMemo(  () =><Grid container justifyContent={'flex-end'}>\n                    {/*<IconButtonStyled edge=\"end\"*/}\n                    {/*                  className={'switch outline'}*/}\n                    {/*                  color=\"inherit\"*/}\n                    {/*                  aria-label=\"to Professional\">*/}\n                    {/*    <ProToLiteIcon/>*/}\n                    {/*</IconButtonStyled>*/}\n                    {/*<IconButtonStyled edge=\"end\"*/}\n                    {/*                  className={'clock-loading outline'}*/}\n                    {/*                  color=\"inherit\"*/}\n                    {/*                  aria-label=\"3' price update\">*/}\n                    {/*    <img src={clockLoading} alt={'loading'} width={28} height={28}/>*/}\n                    {/*</IconButtonStyled>*/}\n                    <CountDownIcon onRefreshData={onRefreshData}/>\n                </Grid> ,[onRefreshData])\n            },\n            {\n                key: \"tradeMenuList\",\n                element:React.useMemo(  () =><SwapMenuList<T, I, TCD> key={\"tradeMenuList\"} {...{\n                    ...rest,\n                    onChangeEvent,\n                    tradeCalcData,\n                    swapData\n                }}/>,[onChangeEvent,tradeCalcData,swapData,rest]),\n                toolBarItem: undefined\n            },\n        ],\n\n    }\n    return <SwitchPanel {...{...rest, ...props, size:'large'}} />\n}) as <T extends IBData<I>,\n    I,\n    TCD extends TradeCalcData<I>> (props: SwapProps<T, I, TCD> & React.RefAttributes<any>) => JSX.Element;\n","import { DepositProps } from '../Interface';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { IBData } from '@loopring-web/common-resources';\nimport { SwitchPanel, SwitchPanelProps } from '../../basic-lib';\nimport { DepositWrap, TradeMenuList, useBasicTrade } from '../components';\nimport React from 'react';\n\n\nexport const DepositPanel = withTranslation('common', {withRef: true})(<T extends IBData<I>, I>(\n    {\n        onDepositClick,\n        depositBtnStatus,\n        ...rest\n    }: DepositProps<T, I> & WithTranslation) => {\n\n    const {\n        // toolBarItemBack,\n        onChangeEvent,\n        index,\n        switchData\n\n    } = useBasicTrade({ ...rest });\n\n    const props: SwitchPanelProps<'tradeMenuList' | 'trade'> = {\n        index: index, // show default show\n        panelList: [{\n            key: \"trade\",\n            element:React.useMemo(() => <DepositWrap<T, I> key={\"transfer\"}\n                                              {...{\n                                                  ...rest,\n                                                  tradeData: switchData.tradeData,\n                                                  onChangeEvent,\n                                                  disabled: !!rest.disabled,\n                                                  onDepositClick,\n                                                  depositBtnStatus,\n                                              }} />,[onChangeEvent,onDepositClick,rest,switchData,depositBtnStatus,rest]),\n            toolBarItem: undefined\n        },\n            {\n                key: \"tradeMenuList\",\n                element: React.useMemo( () => <TradeMenuList {...{\n                    ...rest,\n                    onChangeEvent,\n                    //rest.walletMap,\n                    selected: switchData.tradeData.belong,\n                    tradeData: switchData.tradeData,\n                    //oinMap\n                }}/>,[switchData,rest,onChangeEvent]),\n                toolBarItem: undefined\n                // toolBarItem: toolBarItemBack\n            },]\n    }\n    return <SwitchPanel {...{...rest, ...props}} />\n}) as <T, I>(props: DepositProps<T, I> & React.RefAttributes<any>) => JSX.Element;\n\n// export const TransferModal = withTranslation()","import { ResetProps } from '../Interface';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { IBData } from '@loopring-web/common-resources';\nimport { SwitchPanel, SwitchPanelProps } from '../../basic-lib';\nimport { ResetWrap, TradeMenuList, useBasicTrade } from '../components';\nimport React from 'react';\n\nexport const ResetPanel = withTranslation('common', {withRef: true})(<T extends IBData<I>, I>(\n    {\n        // tradeData,\n        // disabled,\n        // coinMap,\n        // walletMap,\n        // handleError,\n\n        // walletMap,\n        // coinMap,\n        onResetClick,\n        resetBtnStatus,\n        fee,\n        ...rest\n    }: ResetProps<T, I> & WithTranslation) => {\n    const {\n        //toolbar UI\n        // toolBarItemBack,\n        //Data, panel and function\n        onChangeEvent,\n        index,\n        switchData\n\n    } = useBasicTrade({...rest});\n\n    const props: SwitchPanelProps<'tradeMenuList' | 'trade'> = {\n        index: index, // show default show\n        panelList: [{\n            key: \"trade\",\n            element: React.useMemo(  () => <ResetWrap<T, I> key={\"transfer\"}\n                                            {...{\n                                                ...rest,\n                                                tradeData: switchData.tradeData,\n                                                onChangeEvent,\n                                                disabled: rest.disabled ? true : false,\n                                                fee,\n                                                resetBtnStatus,\n                                                onResetClick,\n                                            }} />,[onChangeEvent,onResetClick,rest,switchData,resetBtnStatus,rest]),\n            toolBarItem: undefined\n        },\n            {\n                key: \"tradeMenuList\",\n                element: () => <TradeMenuList {...{\n                    ...rest,\n                    onChangeEvent,\n                    //rest.walletMap,\n                    selected: switchData.tradeData.belong,\n                    tradeData: switchData.tradeData,\n                    //oinMap\n                }}/>,\n                toolBarItem: undefined\n                // toolBarItem: toolBarItemBack\n            },]\n    }\n    return <SwitchPanel {...{...rest, ...props}} />\n}) as <T, I>(props: ResetProps<T, I> & React.RefAttributes<any>) => JSX.Element;\n\n// export const TransferModal = withTranslation()","import { WithTranslation, withTranslation } from 'react-i18next';\nimport { SwitchPanel, SwitchPanelProps } from '../../basic-lib';\nimport { WithdrawProps } from '../Interface';\nimport { IBData } from '@loopring-web/common-resources';\nimport { TradeMenuList, useBasicTrade, WithdrawWrap } from '../components';\nimport React from 'react';\n\nexport const WithdrawPanel = withTranslation('common', {withRef: true})(<T extends IBData<I>, I>(\n    {\n        // tradeData,\n        // disabled,\n        // coinMap,\n        // walletMap,\n        // handleError,\n\n        // walletMap,\n        // coinMap,\n        chargeFeeTokenList,\n        onWithdrawClick,\n        withdrawBtnStatus,\n        ...rest\n    }: WithdrawProps<T, I> & WithTranslation) => {\n\n    // const [transferData, setTransferData] = React.useState<SwitchData<T>>({\n    //     to: 'button',\n    //     tradeData: tradeData\n    // } as SwitchData<T>);\n    // const [index, setIndex] = React.useState(0);\n    const {\n        //toolbar UI\n        // toolBarItemBack,\n        //Data, panel and function\n        onChangeEvent,\n        index,\n        switchData\n\n    } = useBasicTrade({...rest});\n\n    const props: SwitchPanelProps<'tradeMenuList' | 'trade'> = {\n        index: index, // show default show\n        panelList: [{\n            key: \"trade\",\n            element: React.useMemo( () => <WithdrawWrap<T, I> key={\"transfer\"}\n                                               {...{\n                                                   ...rest,\n                                                   chargeFeeTokenList: chargeFeeTokenList ? chargeFeeTokenList : [],\n                                                   tradeData: switchData.tradeData,\n                                                   onChangeEvent,\n                                                   disabled: !!rest.disabled,\n                                                   onWithdrawClick,\n                                                   withdrawBtnStatus,\n\n                                               }} />,[onChangeEvent,chargeFeeTokenList,rest,switchData,onWithdrawClick,withdrawBtnStatus]),\n            toolBarItem: undefined\n        },\n            {\n                key: \"tradeMenuList\",\n                element: React.useMemo( () => <TradeMenuList {...{\n                    ...rest,\n                    onChangeEvent,\n                    //rest.walletMap,\n                    selected: switchData.tradeData.belong,\n                    tradeData: switchData.tradeData,\n                    //oinMap\n                }}/>,[switchData,rest,onChangeEvent]),\n                toolBarItem: undefined\n            },]\n    }\n    return <SwitchPanel {...{...rest, ...props}} />\n}) as <T, I>(props: WithdrawProps<T, I> & React.RefAttributes<any>) => JSX.Element;","import { WithTranslation, withTranslation } from 'react-i18next';\nimport { SwitchPanel, SwitchPanelProps } from '../../basic-lib';\nimport { TransferProps } from '../Interface';\nimport { IBData } from '@loopring-web/common-resources';\nimport { TradeMenuList, TransferWrap, useBasicTrade } from '../components';\nimport React from 'react';\n\nexport const TransferPanel = withTranslation('common', {withRef: true})(<T extends IBData<I>, I>(\n    {\n        // tradeData,\n        // disabled,\n        // coinMap,\n        // walletMap,\n        // handleError,\n\n        // walletMap,\n        // coinMap,\n        chargeFeeTokenList,\n        onTransferClick,\n        transferBtnStatus,\n        ...rest\n    }: TransferProps<T, I> & WithTranslation) => {\n\n    // const [transferData, setTransferData] = React.useState<SwitchData<T>>({\n    //     to: 'button',\n    //     tradeData: tradeData\n    // } as SwitchData<T>);\n    // const [index, setIndex] = React.useState(0);\n    const {\n        //toolbar UI\n        // toolBarItemBack,\n        //Data, panel and function\n        onChangeEvent,\n        index,\n        switchData\n\n    } = useBasicTrade({...rest});\n\n    const props: SwitchPanelProps<'tradeMenuList' | 'trade'> = {\n        index: index, // show default show\n        panelList: [{\n            key: \"trade\",\n            element: React.useMemo(() => <TransferWrap<T, I> key={\"transfer\"}\n                                                             {...{\n                                                                 ...rest,\n                                                                 chargeFeeTokenList: chargeFeeTokenList ? chargeFeeTokenList : [],\n                                                                 tradeData: switchData.tradeData,\n                                                                 onChangeEvent,\n                                                                 disabled: !!rest.disabled,\n                                                                 onTransferClick,\n                                                                 transferBtnStatus,\n\n                                                             }} />, [onChangeEvent, chargeFeeTokenList, rest, switchData, onTransferClick, transferBtnStatus]),\n            toolBarItem: undefined\n        },\n            {\n                key: \"tradeMenuList\",\n                element: React.useMemo( () => <TradeMenuList {...{\n                    ...rest,\n                    onChangeEvent,\n                    //rest.walletMap,\n                    selected: switchData.tradeData.belong,\n                    tradeData: switchData.tradeData,\n                    //oinMap\n                }}/>,[switchData,rest,onChangeEvent]),\n                toolBarItem: undefined\n                // toolBarItem: toolBarItemBack\n            },]\n    }\n    return <SwitchPanel {...{...rest, ...props}} />\n}) as <T, I>(props: TransferProps<T, I> & React.RefAttributes<any>) => JSX.Element;","import { Box, Modal as MuiModal } from '@material-ui/core';\nimport {\n    AmmPanel,\n    AmmProps,\n    DepositPanel,\n    DepositProps,\n    ModalCloseButton,\n    ModalPanelProps,\n    ResetPanel,\n    ResetProps,\n    SwapPanel,\n    SwapProps,\n    SwitchPanelStyled,\n    TransferPanel,\n    TransferProps,\n    useOpenModals,\n    WithdrawPanel,\n    WithdrawProps\n} from '../../';\nimport { IBData } from '@loopring-web/common-resources';\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport { useTheme } from '@emotion/react';\n\n\nconst Modal = withTranslation('common')(({\n                                             open,\n                                             onClose,\n                                             content,\n                                             _height,\n                                             _width,\n                                             ...rest\n                                         }: ModalPanelProps & WithTranslation) => {\n    return <MuiModal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n    >\n        {/*<SwitchPanelStyled style={{boxShadow: '24'}} {...{_height: height, _width: width}}  >*/}\n        {/*    /!*<ModalCloseButton onClose={onClose} {...rest} />*!/*/}\n        {/*    */}\n        {/*</SwitchPanelStyled>*/}\n        {/*<>*/}\n\n        <SwitchPanelStyled style={{boxShadow: '24'}} position={'relative'}\n            {...{\n                _width: `calc(var(--modal-width)`,\n                _height: _height\n            }}\n                           flex={1} display={'flex'}>\n            <Box display={'flex'} width={\"100%\"} flexDirection={'column'}>\n                <ModalCloseButton onClose={onClose} {...rest} />\n                {/*{onBack ? <ModalBackButton onBack={onBack}  {...rest}/> : <></>}*/}\n            </Box>\n            <Box className={'trade-panel'}>\n                {content}\n            </Box>\n\n        </SwitchPanelStyled>\n        {/*</>*/}\n\n    </MuiModal>\n})\n\nexport const ModalPanel = <T extends IBData<I>, I>({\n                                                       transferProps,\n                                                       withDrawProps,\n                                                       depositProps,\n                                                       resetProps,\n                                                       ammProps,\n                                                       swapProps,\n\n                                                       ...rest\n                                                   }: {\n    _width?: number | string,\n    _height?: number | string,\n    transferProps: TransferProps<T, I>,\n    withDrawProps: WithdrawProps<T, I>,\n    depositProps: DepositProps<T, I>,\n    resetProps: ResetProps<T, I>\n    ammProps: AmmProps<any, T, any>\n    swapProps: SwapProps<T, I, any>\n}) => {\n    const {\n        modals,\n        setShowAmm,\n        setShowSwap,\n        setShowTransfer,\n        setShowDeposit,\n        setShowWithdraw,\n        setShowResetAccount\n    } = useOpenModals()\n    const {\n        isShowTransfer,\n        isShowWithdraw,\n        isShowDeposit,\n        isShowResetAccount,\n        isShowAmm,\n        isShowSwap\n    } = modals;\n    const theme = useTheme();\n    return <>\n        <Modal open={isShowTransfer.isShow} onClose={() => setShowTransfer({isShow: false})}\n               content={<TransferPanel<any, any> {...{\n                   ...rest, _width: `calc(var(--modal-width) - ${theme.unit*5/2}px)`,\n                   _height: 'var(--lage-modal-height)', ...transferProps, ...isShowTransfer.props\n               }}> </TransferPanel>}/>\n        <Modal open={isShowWithdraw.isShow} onClose={() => setShowWithdraw({isShow: false})}\n               content={<WithdrawPanel<any, any> {...{\n                   ...rest, _width: `calc(var(--modal-width) - ${theme.unit*5/2}px)`,\n                   _height: 'var(--lage-modal-height)', ...withDrawProps, ...isShowWithdraw.props\n               }}  > </WithdrawPanel>}/>\n        <Modal open={isShowDeposit.isShow}\n               onClose={() => setShowDeposit({isShow: false})}\n               content={<DepositPanel<any, any> {...{\n                   ...rest, _width: `calc(var(--modal-width) - ${theme.unit*5/2}px)`,\n                   _height: 'var(--modal-height)', ...depositProps, ...isShowDeposit.props\n               }} > </DepositPanel>}/>\n        <Modal open={isShowResetAccount.isShow}\n               onClose={() => setShowResetAccount({...isShowResetAccount, isShow: false})}\n               content={<ResetPanel<any, any> {...{\n                   ...rest, _width: `calc(var(--modal-width) - ${theme.unit*5/2}px)`,\n                   _height: 'var(--modal-height)', ...resetProps, ...isShowResetAccount.props\n               }} > </ResetPanel>}/>\n        <Modal open={isShowAmm.isShow}\n               onClose={() => setShowAmm({...isShowAmm, isShow: false} as any)}\n               content={<AmmPanel<any, any, any> {...{\n                   ...rest,\n                   _width: `calc(var(--modal-width) - ${theme.unit*5/2}px)`,\n                   _height: 'var(--modal-height)', ...ammProps, ...isShowAmm.props\n               }} > </AmmPanel>}/>\n        <Modal open={isShowSwap.isShow}\n               onClose={() => setShowSwap({...isShowSwap, isShow: false} as any)}\n               content={<SwapPanel<any, any, any> {...{\n                   ...rest, _width: `calc(var(--modal-width) - ${theme.unit*5/2}px)`,\n                   _height: 'var(--modal-height)', ...swapProps, ...isShowSwap.props\n               }} > </SwapPanel>}/>\n    </>\n\n}","import styled from '@emotion/styled';\nimport { BoxProps, Grid, Typography } from '@material-ui/core';\nimport { css, Theme } from '@emotion/react';\nimport { UpColor } from '@loopring-web/common-resources';\nimport { Box } from '@material-ui/core/';\nimport React from 'react';\n\n// @ts-ignore\nexport const boxLiner = ({theme}: { theme:Theme }) => css`\n  background: var(--color-box-linear);\n  .coinInput-wrap, .btnInput-wrap, .MuiOutlinedInput-root {\n    background: var(--field-opacity);\n    border-color: var(--opacity);\n    :hover{\n      border-color: var(--color-border-hover);\n    }\n  }\n`\nexport const TypographyStrong = styled(Typography)`\n  color: var(--color-secoundary);\n` as typeof Typography\nexport const TypographyGood = styled(Typography)`\n  color: var(--color-success);\n` as typeof Typography\nexport const TablePaddingX = ({pLeft = 24, pRight = 24}: { pLeft: number, pRight: number }) => css`\n  .rdg-row, .rdg-header-row {\n    .rdg-cell:first-of-type {\n      padding-left: ${pLeft}px;\n    }\n\n    .rdg-cell:last-of-type {\n      padding-right: ${pRight}px;\n    }\n  }\n`\nexport const VipStyled = styled(Typography)`\n  margin-left: ${({theme}) => theme.unit}px;\n  padding: ${({theme}) => theme.unit / 4}px ${({theme}) => theme.unit}px;\n  ${({theme}) => theme.border.defaultFrame({c_key: 'rgba(0,0,0,0)', d_R: 0.25})};\n  background-color: var(--vip-bg);\n  height: 2rem;\n  //line-height: 2rem;\n  color: var(--vip-text);\n` as typeof Typography\nexport const floatTag = ({theme, custom}: any) => css`\n  .float-group {\n    font-weight: lighter;\n\n    .float-tag.float-increase {\n      color: ${custom.chg === UpColor.green ? theme.colorBase.success : theme.colorBase.error}\n    }\n\n    .float-tag.float-decrease {\n      color: ${custom.chg === UpColor.green ? theme.colorBase.error : theme.colorBase.success};\n    }\n\n    .float-tag.float-none {\n      color: ${theme.colorBase.textPrimary};\n    }\n  }\n`\nexport const AvatarIconPair = ({theme}: any) => css`\n  //.MuiAvatar-root {\n  //  width: var(--chart-title-coin-size);\n  //  height: var(--chart-title-coin-size);\n  //}\n\n  .icon-next {\n    margin-left: -${theme.unit}px;\n  }`\nexport const baseTitleCss = ({theme, custom}: any) => css`\n  height: 72px;\n\n  ${AvatarIconPair({theme})}\n  h3.MuiTypography-root {\n    font-size: 1.6rem;\n    margin-left: ${theme.unit}px;\n    color: ${theme.colorBase.textSecondary};\n\n    .MuiTypography-root {\n      margin: 0 ${theme.unit / 4}px;\n    }\n\n    .next-coin {\n      color: ${theme.colorBase.textPrimary};\n    }\n  }\n\n  ${floatTag({theme, custom})};\n\n  .float-chart {\n    margin-left: ${theme.unit}px;\n\n    .chart-change {\n      color: ${theme.colorBase.textSecondary};\n    }\n  }\n`\nexport const ButtonListRightStyled = styled(Grid)`\n  .MuiButton-root:not(:last-child) {\n    margin-right: ${({theme}) => theme.unit}px;\n  }\n` as typeof Grid\nexport const modalContentBaseStyle = ({theme}: any) => css`\n  &:focus-visible {\n    outline: 0\n  }\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding-top: var(--toolbar-row-padding);\n  border: 0;\n  border-radius: ${theme.unit}px;\n\n`\n// height:100%;\n// margin-top: var(--toolbar-row-padding-minus);\n// padding-top: var(--toolbar-row-padding);\n// .menu-panel{\n//     height: ${_height  ?\n//          typeof _height === 'number' ?\n//              ` calc(${_height + 'px'} -  var(--toolbar-row-padding)  ) `\n//              :` calc(${_height} -  var(--toolbar-row-padding)  )`:'210px'};\n// }        \nexport const SwitchPanelStyled: any = styled(Box)<{ _height?: number | string, _width?: number | string } & BoxProps>`\n  .MuiModal-root & {\n    .react-swipeable-view-container > div {\n      background: var(--opacity);\n    }\n\n    .container {\n      padding-bottom: 0;\n\n    }\n  }\n\n  .trade-panel {\n    .react-swipeable-view-container {\n      & > div {\n        padding: 0 ${({theme}) => theme.unit * 5 / 2}px ${({theme}) => theme.unit * 5}px;\n\n        .container {\n          height: 100%;\n          padding-top: 0;\n        }\n      }\n    }\n  }\n\n  && {\n    ${({theme}) => modalContentBaseStyle({theme: theme})}\n    ${({_height, _width, theme}) => `\n     \n      background: ${theme.colorBase.box};\n      .react-swipeable-view-container {\n           height: ${_height && Number.isNaN(_height) ? _height + 'px' : _height ? _height : '100%'} ;\n           width: ${_width && Number.isNaN(_width) ? _width + 'px' : _width ? _width : '100%'};\n           & > div{\n              height:initial;\n              overflow: hidden !important;\n              padding-bottom:var(--toolbar-row-padding); \n              background: initial;\n           }\n       }\n      \n      .trade-panel{\n        .react-swipeable-view-container {\n           & > div{\n              height: calc(100% -  var(--toolbar-row-padding));\n              padding-bottom:0; \n              overflow: hidden !important   \n          }\n        }\n      }\n      \n    `}\n  }\n\n  ${({_height, theme}) => `\n  .MuiModal-root & {\n     .coin-menu {\n          height:${_height ?\n          typeof _height === 'number' ?\n                  ` calc(${_height + 'px'} - ${theme.unit * 4}px - 2 * var(--toolbar-row-padding)  ) `\n                  : ` calc(${_height} - ${theme.unit * 4}px - 2 * var(--toolbar-row-padding)  )`\n          : '410px'} !important;\n     }\n  }`};\n` as React.ElementType<{ _height?: number | string, _width?: number | string } & BoxProps>\n\n\nexport const toolBarPanel = ({theme}: any) => css`\n  .MuiToolbar-root {\n    align-content: stretch;\n    justify-content: flex-end;\n    box-sizing: border-box;\n    height: var(--toolbar-row-padding-minus);\n    //min-height: var(--toolbar-row-padding);\n    margin-top: var(--toolbar-row-padding-minus);\n\n    .MuiIconButton-root {\n      height: var(--btn-icon-size);\n      width: var(--btn-icon-size);\n      min-width: var(--btn-icon-size);\n      margin: 0;\n      display: flex;\n      padding: 0;\n      justify-content: center;\n      justify-items: center;\n      align-items: center;\n      font-size: ${theme.fontDefault.h4};\n    }\n  }\n`\n\nexport const TableFilterStyled = styled(Box)`\n  margin-left: 26px;\n  margin-bottom: ${({theme}) => theme.unit * 2}px;\n` as typeof Box\n\nexport const AnimationArrow = styled(Box)`\n  &.arrowCta {\n    transform-origin: center;\n    display: block;\n    height: 12px;\n    width: 12px;\n    border: 9px solid transparent;\n    transform: rotate(45deg) scale(.5);\n    position: relative;\n    margin: ${({theme}) => theme.unit * 2}px;\n    //margin: 25vh auto;\n  }\n\n  &.arrowCta:after,\n  &.arrowCta:before {\n    content: \"\";\n    display: block;\n    height: inherit;\n    width: inherit;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  &.arrowCta:after {\n    border-bottom: 3px solid white;\n    border-right: 3px solid white;\n    top: 0;\n    left: 0;\n    opacity: 1;\n    animation: bottom-arrow 1.65s infinite;\n  }\n\n  @keyframes bottom-arrow {\n    0% {\n      opacity: 1;\n      transform: translate(0, 0);\n    }\n    45% {\n      opacity: 0;\n      transform: translate(12px, 12px);\n    }\n    46% {\n      opacity: 0;\n      transform: translate(-16px, -16px);\n    }\n    90% {\n      opacity: 1;\n      transform: translate(-6px, -6px);\n    }\n    100% {\n      opacity: 1;\n      transform: translate(-6px, -6px);\n    }\n  }\n\n  &.arrowCta:before {\n    top: 0;\n    left: 0;\n    border-bottom: 3px solid white;\n    border-right: 3px solid white;\n    animation: top-arrow 1.65s infinite;\n  }\n\n  @keyframes top-arrow {\n    0% {\n      transform: translate(-6px, -6px);\n    }\n    35% {\n      transform: translate(0, 0);\n    }\n    90% {\n      opacity: 1;\n      transform: translate(0, 0);\n    }\n    100% {\n      opacity: 1;\n      transform: translate(0, 0);\n    }\n  }\n` as typeof Box\n\n\n\n","import { PanelContent, SwipeableViewsStyled } from '../../basic-lib';\nimport { AmmChgData, AmmDepositWrap, AmmWithdrawWrap } from '../components';\nimport { BoxProps, Grid, Tab, Tabs, Toolbar } from '@material-ui/core';\nimport { useLocation } from 'react-router-dom'\nimport qs from 'query-string'\nimport { AmmData, AmmInData, IBData } from '@loopring-web/common-resources';\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport { AmmPanelType, AmmProps } from './Interface';\nimport React, { useEffect } from 'react';\nimport { useDeepCompareEffect } from 'react-use';\nimport { Box } from '@material-ui/core/';\nimport { useTheme } from '@emotion/react';\nimport { CountDownIcon } from '../components/tool/Refresh';\nimport styled from '@emotion/styled';\nimport { boxLiner, toolBarPanel } from '../../styled';\n// import { WithdrawProps } from '../Interface';\n\nenum AmmPanelTypeMap {\n    Deposit = 0,\n    WithDraw = 1\n}\n\nconst WrapStyle = styled(Box)<BoxProps & { _height?: number | string, _width?: number | string; }>`\n  ${({ _width, _height}) => `       \n      width: ${typeof _width === 'string' ? _width : typeof _width === 'number' ? _width + 'px' : `var(--swap-box-width)`};   \n      height: ${typeof _height === 'string' ? _height : typeof _height === 'number' ? _height + 'px' : `var(--swap-box-height)`};`}\n  ${({theme}) => boxLiner({theme})}\n  ${({theme}) => toolBarPanel({theme})}\n  border-radius: ${({theme}) => theme.unit}px;\n  .MuiToolbar-root{\n    //padding-left:0;\n    justify-content: space-between;\n  }\n` as (props: BoxProps & { _height?: number | string, _width?: number | string }) => JSX.Element;\nconst TabPanelBtn = ({t, value, handleChange}: WithTranslation & any) => {\n  return <Tabs\n      value={value}\n      onChange={handleChange}\n      aria-label=\"disabled tabs example\"\n  >\n      <Tab label={t('labelLiquidityDeposit')} value={0}/>\n      <Tab label={t('labelLiquidityWithdraw')} value={1}/>\n  </Tabs>\n}\nexport const AmmPanel = withTranslation('common', {withRef: true})(<T extends AmmData<C extends IBData<I> ? C : IBData<I>>, I,\n  ACD extends AmmInData<I>,\n  C = IBData<I>>(\n  {\n      t,\n      tabSelected = AmmPanelType.Deposit,\n      ammDepositData,\n      ammWithdrawData,\n      disableDeposit,\n      disableWithdraw,\n      handleAmmAddChangeEvent,\n      handleAmmRemoveChangeEvent,\n      ammCalcData,\n      tokenDepositAProps,\n      tokenDepositBProps,\n      tokenWithDrawAProps,\n      tokenWithDrawBProps,\n      ammDepositBtnStatus,\n      ammWithdrawBtnStatus,\n      ammDepositBtnI18nKey,\n      ammWithdrawBtnI18nKey,\n      onRefreshData,\n      onAmmAddClick,\n      onAmmRemoveClick,\n      onChangeEvent,\n      handleError,\n      height,\n      width,\n      anchors,\n      ...rest\n  }: AmmProps<T, I, ACD, C> & WithTranslation) => {\n  const [index, setIndex] = React.useState(AmmPanelTypeMap[ tabSelected ]);\n  const [ammChgDepositData, setAmmChgDepositData] = React.useState<AmmChgData<T>>({\n      tradeData: ammDepositData,\n      type: 'coinA'\n  });\n  const [ammChgWithdrawData, setAmmChgWithdrawData] = React.useState<Pick<AmmChgData<T>, 'tradeData'> & { type?: 'coinA' | 'coinB' | 'percentage' }>({tradeData: ammWithdrawData});\n  let routerLocation = useLocation()\n  const search = routerLocation?.search\n  const customType = qs.parse(search)?.type\n\n  useEffect(() => {\n      if (customType) {\n          setIndex(customType === 'remove' ? AmmPanelTypeMap.WithDraw : AmmPanelTypeMap.Deposit)\n      }\n  }, [customType])\n  //\n  useDeepCompareEffect(() => {\n      if (ammDepositData !== ammChgDepositData.tradeData) {\n          setAmmChgDepositData({...ammChgDepositData, tradeData: ammDepositData});\n      }\n      if (ammWithdrawData !== ammChgWithdrawData.tradeData && ammChgWithdrawData.type !== 'percentage') {\n          setAmmChgWithdrawData({...ammChgWithdrawData, tradeData: ammWithdrawData});\n      }\n  }, [ammDepositData, ammWithdrawData]);\n\n  const _onChangeAddEvent = React.useCallback(async ({tradeData, type}: AmmChgData<T>) => {\n      await handleAmmAddChangeEvent(tradeData, type)\n      if (typeof onChangeEvent == 'function') {\n          setAmmChgDepositData(onChangeEvent({tradeData, type} as AmmChgData<T>));\n      } else {\n          setAmmChgDepositData({tradeData, type})\n      }\n  }, [handleAmmAddChangeEvent, onChangeEvent])\n  const _onChangeRemoveEvent = React.useCallback(async ({\n                                                            tradeData,\n                                                            type,\n                                                            // percentage\n                                                        }: Pick<AmmChgData<T>, 'tradeData'> & { type: 'coinA' | 'coinB' | 'percentage', percentage?: number }) => {\n\n      await handleAmmRemoveChangeEvent(tradeData, type === 'percentage' ? 'coinA' : type)\n      if (typeof onChangeEvent == 'function') {\n          setAmmChgWithdrawData(onChangeEvent({tradeData, type} as AmmChgData<T>));\n      } else {\n          setAmmChgWithdrawData({tradeData, type});\n      }\n\n  }, [handleAmmRemoveChangeEvent, onChangeEvent]);\n  // const [tab, setTab] = React.useState(0);\n  const handleTabChange = React.useCallback((_event: any, newValue: any) => {\n      if (index !== newValue) {\n          setIndex(newValue);\n      }\n\n  }, [index]);\n  const panelList: Pick<PanelContent<\"ammDeposit\" | \"ammWithdraw\">, 'key' | 'element'>[] = [\n      {\n          key: \"ammDeposit\",\n          element: React.useMemo(() => <AmmDepositWrap<T, I, ACD, C> key={\"ammDeposit\"} {...{\n              t,\n              ...rest,\n              disableDeposit,\n              ammDepositBtnStatus,\n              ammDepositBtnI18nKey,\n              ammCalcData,\n              onAmmAddClick,\n              handleError,\n              onChangeEvent: _onChangeAddEvent,\n              ammData: ammChgDepositData.tradeData,\n              tokenAProps: {...tokenDepositAProps},\n              tokenBProps: {...tokenDepositBProps},\n          }}/>, [rest, ammChgDepositData, tokenDepositAProps, tokenDepositBProps, disableDeposit,\n              ammDepositBtnStatus,\n              ammDepositBtnI18nKey,\n              rest,\n              ammCalcData,\n              onAmmAddClick,\n              handleError]),\n      },\n      {\n          key: \"ammWithdraw\",\n          element: React.useMemo(() => <AmmWithdrawWrap<T, I, ACD, C> key={\"ammWithdraw\"} {...{\n              t,\n              ...rest,\n              anchors,\n              disableDeposit,\n              ammWithdrawBtnStatus,\n              ammWithdrawBtnI18nKey,\n              ammCalcData,\n              onAmmRemoveClick,\n              handleError,\n              selectedPercentage: -1,\n              onChangeEvent: _onChangeRemoveEvent,\n              ammData: ammChgWithdrawData.tradeData,\n              tokenAProps: {...tokenWithDrawAProps},\n              tokenBProps: {...tokenWithDrawBProps},\n          }}/>, [\n              rest,\n              tokenWithDrawAProps, tokenWithDrawBProps, anchors,\n              disableDeposit,\n              ammWithdrawBtnStatus,\n              ammWithdrawBtnI18nKey,\n              ammCalcData,\n              onAmmRemoveClick,\n              handleError,]),\n      },\n  ];\n  const theme = useTheme();\n  return <WrapStyle display={'flex'} className={'trade-panel container'}\n                    paddingTop={'var(--toolbar-row-padding)'}\n                    paddingBottom={3} flexDirection={'column'} flexWrap={'nowrap'}>\n      {/*<Grid container className={''} direction={'column'}*/}\n      {/*      justifyContent={\"space-between\"} */}\n      {/*      // paddingTop={'var(--toolbar-row-padding)'}*/}\n      {/*      }>*/}\n          <Toolbar className={'large'} variant={'regular'}   >\n              <Box alignSelf={'center'} justifyContent={'flex-start'} display={'flex'}>\n                  <TabPanelBtn {...{t, value: index, handleChange: handleTabChange, ...rest}} />\n              </Box>\n              <Box alignSelf={'center'}>\n                  <CountDownIcon onRefreshData={onRefreshData}/>\n              </Box>\n\n          </Toolbar>\n          <SwipeableViewsStyled  axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={index} >\n              {panelList.map((panel) => {\n                  return <Grid item justifyContent={'space-evenly'} alignItems={'stretch'} height={'100%'}\n                               key={panel.key}>{panel.element}</Grid>\n              })}\n          </SwipeableViewsStyled>\n\n\n      {/*</Grid>*/}\n  </WrapStyle>\n}) as <T extends AmmData<C extends IBData<I> ? C : IBData<I>>, I,\n  ACD extends AmmInData<I>,\n  C = IBData<I>>(props: AmmProps<T, I, ACD, C> & React.RefAttributes<any>) => JSX.Element;\n\n\n","import styled from \"@emotion/styled\";\nimport { Box, debounce,  } from \"@material-ui/core\";\nimport { CloseIcon, CoinInfo, CoinKey, globalSetup } from '@loopring-web/common-resources';\nimport React from \"react\";\nimport { InputSelectProps } from \"./Interface\";\nimport { useFocusRef, usePanelRef } from \"../hooks\";\nimport { WithTranslation } from 'react-i18next';\nimport { InputSearch } from './InputSearch';\nimport { IconClearStyled } from '../../../panel';\n\n\nconst WrapStyled = styled(Box)`\n  padding: 0;\n  margin: 0;\n  flex: 1;\n  min-height: 100%;\n  width: 100%;\n  display: flex;\n\n  .search-wrap {\n    //flex-grow: 1;\n    //width: 100%;\n    //min-width: 100%;\n    //& label{\n    //  display: none;\n    //}\n    //\n    .MuiInputBase-root {\n      margin: 0;\n      //width: 100%;\n      max-width: inherit;\n      height: var(--toolbar-row-height);\n\n      .MuiInputBase-input {\n        height: inherit;\n      }\n    }\n\n` as typeof Box;\n\nfunction _InputSelect<C, I extends string = CoinKey<C>>({\n                                                            t,\n                                                            handleContentChange,\n                                                            wait = globalSetup.wait,\n                                                            panelRender,\n                                                            inputProps,\n                                                            placeholder,\n                                                            focusOnInput,\n                                                            backElement,\n                                                            selected,\n                                                        }: InputSelectProps<C, I> & WithTranslation, _ref: React.ForwardedRef<C>\n) {\n\n    const [value, setValue] = React.useState<{ selected: string | undefined, focusOnInput: boolean }>({\n        selected: '',\n        focusOnInput: focusOnInput ? focusOnInput : false\n    })\n    const debounceContentChange = debounce((props: any) => {\n        if (handleContentChange) {\n            handleContentChange(props)\n        }\n    }, wait)\n    const _handleContentChange = React.useCallback((value) => {\n        setValue({...value, selected: value});\n        debounceContentChange(value)\n    }, [debounceContentChange, value])\n\n    const inputEle = useFocusRef({\n        shouldFocusOn: value.focusOnInput,\n        value: value.selected,\n    });\n    // let height = '100%';\n    // let width = '100%';\n    const panelRef = usePanelRef({\n        // callback:({current})=>{\n        //  height = current.offsetHeight;\n        //   width = current.offsetWidth;\n        // }\n    });\n\n    const handleClear = React.useCallback(() => {\n        // @ts-ignore\n        // addressInput?.current?.value = \"\";\n        setValue({...value, selected: ''})\n    }, [])\n    return <WrapStyled flexDirection={'column'} alignItems={'stretch'} justifyContent={\"flex-start\"} ref={_ref}>\n        <Box display={'flex'} flexWrap={'nowrap'} alignItems={'center'} justifyContent={'space-between'} paddingBottom={2} paddingLeft={5 / 2} paddingRight={5 / 2}>\n            {/*/!*<Grid item xs={12} flex={1}>*!/*/}\n            {/*<OutlinedInput*/}\n            {/*    ref={inputEle}*/}\n            {/*    {...inputProps}*/}\n            {/*    key={'search'}*/}\n            {/*    value={value.selected}*/}\n            {/*    placeholder={t(selected ? selected : placeholder)}*/}\n            {/*    onChange={_handleContentChange}*/}\n            {/*    className={'search-wrap'}*/}\n            {/*    aria-label={t(placeholder)}*/}\n            {/*    startAdornment={<InputAdornment position=\"start\">*/}\n            {/*        <SearchIcon/>*/}\n            {/*    </InputAdornment>}*/}\n            {/*/>*/}\n            <Box alignSelf={\"stretch\"} position={'relative'} flex={1}>\n                {/* <SearchWrap/> */}\n                <InputSearch key={'search'}\n                             fullWidth\n                             ref={inputEle}\n                             {...inputProps}\n                             aria-label={t(placeholder)}\n                             placeholder={t(selected ? selected : placeholder)}\n                             value={value?.selected}\n                             className={'search-wrap'}\n                             onChange={_handleContentChange} />\n                {value?.selected !== '' ? <IconClearStyled size={'small'}  style={{top:'6px'}} aria-label=\"Clear\" onClick={handleClear}>\n                    <CloseIcon/>\n                </IconClearStyled> : ''}\n            </Box>\n            {backElement?<Box marginLeft={2}>{backElement}</Box>:<></>}\n            {/*</Grid>*/}\n        </Box>\n        <Box flex={1} ref={panelRef}>\n\n            {panelRender({selected, value: value.selected})}\n        </Box>\n    </WrapStyled>\n\n}\n\nexport const InputSelect = React.memo(React.forwardRef(_InputSelect)) as\n    <C, I = CoinInfo<C>>(props: InputSelectProps<C, I> & WithTranslation & React.RefAttributes<HTMLDivElement>) => JSX.Element;\n//as React.ComponentType<InputButtonProps<coinType,CoinInfo> & RefAttributes<HTMLDivElement>>;\n// export const InputSelectSearch=withTranslation()(()=><></>)","import React from 'react';\n\nexport function usePanelRef<T extends HTMLInputElement>({callback}: {\n    callback?: (prorps: { current: any }) => void\n}) {\n    const ref = React.useRef<T>(null);\n    React.useEffect(() => {\n        if (ref.current) {\n            callback && callback({current: ref.current});\n        }\n    }, [])\n    return ref;\n}\n\n// {\n//     const ref = React.useRef<T>(null);\n//     React.useEffect(() => {\n//\n//         callback && callback({current: ref.current});\n//         return ref\n//     }, [height, width, callback]);\n//     return ref;\n// }","import styled from '@emotion/styled';\nimport { Box, BoxProps, Button, ButtonProps } from '@material-ui/core';\nimport React from 'react';\nimport CurrencyInput from 'react-currency-input-field';\n\nexport const IWrap = styled(Box)`\n  ${({theme}) => theme.border.defaultFrame({c_key: 'var(--opacity)'})};\n \n  .label-wrap {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-transform: capitalize;\n  }\n\n  .message-wrap {\n    .MuiFormHelperText-root {\n      color: var(--color-error);\n      text-align: right;\n      font-size: ${({theme}) => theme.fontDefault.h6};\n    }\n\n  }\n\n  .sub-label {\n    text-align: right;\n    cursor: pointer;\n\n    .max-allow {\n      text-decoration: underline dotted;\n\n      &:hover {\n        color: var(--color-secoundary);\n      }\n    }\n\n    .no-balance {\n      text-decoration: none;\n    }\n  }\n\n  .coinInput-wrap, .btnInput-wrap {\n    position: relative;\n    box-sizing: border-box;\n    background: var(--color-box);\n    border-radius: ${({theme}) => theme.unit / 2}px;\n    margin-top: ${({theme}) => `${theme.unit / 2}px`};\n    height: var(--btn-Input-height);\n   \n    ::before {\n      content: '';\n      display: block;\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      top: 0;\n      left: 0;\n      box-sizing: border-box;\n      pointer-events: none;\n      z-index: 1;\n      \n    }\n\n\n    &.error {\n      ${({theme}) => `\n        ${theme.border.defaultFrame({c_key: theme.colorBase.error, d_R: 0.5})};\n      `\n      // input,button,.icon-wrap{\n      //   ${({theme}) => `\n      //       ${theme.border.defaultFrame({c_key: theme.colorBase.error, d_R: 0.5})};\n      //   `};\n      // }\n      //\n      // .input-wrap-right input,.icon-wrap-left {\n      //       border-top-left-radius: 0px;\n      //       border-bottom-left-radius: 0px;\n      //       border-left:0\n      // }\n      //\n      // .input-wrap-left input,.icon-wrap-right,button {\n      //     border-top-right-radius: 0px;\n      //     border-bottom-right-radius: 0px;\n      //     border-right:0\n      // }\n    }\n  }\n\n  .input-wrap {\n    //min-width: 128px;\n    // width: 100%;\n    flex: 1;\n    height: 100%\n  }\n\n  .icon-wrap, .btn-wrap {\n    max-width: var(--btn-max-width);\n    min-width: var(--coin-min-width);\n\n    .MuiButton-label {\n      justify-content: flex-start;\n    }\n\n  }\n\n` as typeof Box\nexport const CoinWrap:React.ComponentType<BoxProps & { logoColor?: any }> = styled(Box)<BoxProps & { logoColor?: any }>`\n  & {\n\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-right: 1px solid transparent;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-size: ${({theme}) => theme.fontDefault.h5};\n    color: var(--color-text-primary);\n\n    .placeholder {\n      color: var(--color-text-secondary);\n    }\n  }\n\n  &.icon-wrap-right > div {\n    justify-content: flex-start;\n    padding-left: ${({theme}) => theme.unit / 2 * 3}px;\n    align-items: center;\n  }\n\n  &.icon-wrap-left > div {\n    justify-content: flex-end;\n    padding-right: ${({theme}) => theme.unit / 2 * 3}px;\n    align-items: center;\n  }\n\n` ;\nexport const ISBtn:React.ComponentType<ButtonProps & { logoColor?: any }> = styled(Button)<ButtonProps & { logoColor?: any }>`\n  && {\n    width: 100%;\n    height: 100%;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-right: 1px solid transparent;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-size: ${({theme}) => theme.fontDefault.h5};\n    color: var(--color-text-primary);\n\n    .placeholder {\n      color: var(--color-text-secondary);\n    }\n  }\n\n  // .logo-icon svg {\n    //   color: ${({logoColor}) => logoColor}\n  // }\n  //.MuiAvatar-root {\n  //  width: 24px;\n  //  height: 24px;\n  //}\n\n  .MuiButton-endIcon svg {\n    color: var(--color-text-primary)\n      // color: ${({logoColor}) => logoColor}\n  }\n\n  &:hover, &:active {\n    color: var(--color-text-primary);\n    background: var(--color-box-hover);\n  }\n` ;\nexport const IInput = styled(CurrencyInput)`\n  text-align: right;\n  color: var(--color-text-primary);\n\n  ::placeholder {\n    color: var(--color-text-secondary);;\n  }\n\n  width: 100%; //calc(100% - 2rem);\n  height: 100%; //var(--btn-Input-height);\n  border: 0;\n  margin: 0;\n\n\n  font-size: ${({theme}) => theme.fontDefault.h4};\n  display: block;\n  padding: .8rem 1rem;\n  min-width: 0;\n  background: none;\n  box-sizing: border-box;\n  animation-name: mui-auto-fill-cancel;\n  letter-spacing: inherit;\n  animation-duration: 10ms;\n  -webkit-tap-highlight-color: transparent;\n  + label {\n    height: 0;\n    width: 0;\n  }\n  :focus {\n    outline: 0;\n    & + label::before {\n      content:'';\n      position: absolute;\n      top:0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      ${({theme}) => `${theme.border.defaultFrame({c_key: 'var(--color-border-hover)',d_R: 0.5})};`};\n    }\n  }\n  .error &:focus {\n    & + label::before {\n      ${({theme}) => `${theme.border.defaultFrame({c_key: 'var(--opacity)',d_R: 0.5})};`}\n    }\n  }\n\n  .input-wrap-right & {\n    text-align: right;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n   \n\n    :focus {\n      \n    }\n  }\n\n  .input-wrap-left & {\n    text-align: left;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    \n\n    :focus {\n     \n    }\n  }\n}` as typeof CurrencyInput\n// border-left:  ${theme.border.borderConfig({c_key: 'blur'})};\n// ${theme.mode === 'dark' ? `border-color: transparent` : ''};\n// ${theme.border.defaultFrame({c_key: 'focus', d_R: 0.5})};\n// border-top-left-radius: 0px;\n// border-bottom-left-radius: 0px;\n// border-right:  ${theme.border.borderConfig({c_key: 'blur'})};\n// ${theme.mode === 'dark' ? `border-color: transparent` : ''};\n// ${theme.border.defaultFrame({c_key: 'focus', d_R: 0.5})};\n// border-top-right-radius: 0;\n// border-bottom-right-radius: 0;","import { Avatar,\n    // Box, Button, ButtonProps,\n    FormHelperText, FormLabel, Grid } from \"@material-ui/core\";\n// import styled from \"@emotion/styled\";\n// // import { debounce } from \"lodash\"\n// import CurrencyInput from 'react-currency-input-field';\nimport {\n    AvatarCoinStyled,\n    CoinInfo,\n    DropDownIcon,\n    getThousandFormattedNumbers,\n    IBData\n} from '@loopring-web/common-resources';\nimport { InputButtonProps } from \"./Interface\";\nimport React from \"react\";\nimport { useFocusRef } from \"../hooks\";\nimport { useSettings } from '../../../../stores';\nimport { IInput, ISBtn, IWrap } from \"./style\";\n\nfunction _InputButton<T extends IBData<C>, C, I extends CoinInfo<C>>({\n                                                                         label = \"Enter token\",\n                                                                         handleError,\n                                                                         subLabel = \"Max\",\n                                                                         // wait = globalSetup.wait,\n                                                                         coinMap,\n                                                                         maxAllow,\n                                                                         disabled,\n                                                                         emptyText = 'tokenSelectToken',\n                                                                         placeholderText = '0.00',\n                                                                         inputData,\n                                                                         handleCountChange,\n                                                                         handleOnClick,\n                                                                         focusOnInput,\n                                                                         name,\n                                                                         isHideError=false,\n                                                                         // isAllowBalanceClick\n                                                                     }\n                                                                         : InputButtonProps<T, C, I>, ref: React.ForwardedRef<any>) {\n    const {balance, belong, tradeValue} = (inputData ? inputData : {}) as IBData<C>;\n    const [sValue, setsValue] = React.useState<number | undefined>(tradeValue ? tradeValue : undefined);\n    const [error, setError] = React.useState<{ error: boolean, message?: string | React.ElementType }>({\n        error: false,\n        message: ''\n    });\n    // let _error = {error: false, message: ''};\n    // if (handleError && inputData) {\n    //     let error:any = handleError(inputData, ref);\n    //     _error = error ? error : {error: false}\n    // }\n    const _handleError = React.useCallback((value: any) => {\n        if (handleError) {\n            let _error = handleError({\n                balance: Number(balance),\n                belong, ...{tradeValue: value},\n                maxAllow\n            } as T & { maxAllow?: boolean }, ref);\n            setError(_error ? _error : {error: false});\n        }\n    }, [handleError, balance, belong, maxAllow, ref])\n\n    const inputCallback = React.useCallback(({current}) => {\n            if (inputData && (inputData.tradeValue !== Number(current?.value))) {\n                setsValue(inputData.tradeValue);\n                _handleError(inputData.tradeValue);\n                // debounceCount({...inputData, ...{tradeValue: inputData.tradeValue}})\n                // _handleContChange(current?.value, name)\n            }\n        },\n        [inputData, _handleError])\n    const inputEle = useFocusRef({\n        callback: inputCallback,\n        shouldFocusOn: focusOnInput,\n        value: tradeValue,\n    });\n    // const debounceCount = debounce(({...props}: any) => {\n    //     if (handleCountChange) {\n    //         handleCountChange({...props}, ref)\n    //     }\n    // }, wait)\n    const _handleContChange = React.useCallback((value: any, _name: any) => {\n            _handleError(value);\n            setsValue(value);\n            if (handleCountChange) {\n                handleCountChange({...inputData, ...{tradeValue: value}} as any, ref)\n            }\n            //debounceCount({...inputData, ...{tradeValue: value}})\n        }\n        , [_handleError, setsValue, inputData, handleCountChange, ref])\n\n    // const _handleContChange =\n    // const _handleOnClick = React.useCallback((event: React.MouseEvent) => {\n    //     if (handleOnClick) handleOnClick(event,ref)\n    // }, [])\n    const _handleMaxAllowClick = React.useCallback((_event: React.MouseEvent) => {\n        if (maxAllow) {\n            _handleContChange(balance, name)\n            //setsValue(balance);\n        }\n    }, [_handleContChange, balance, name, maxAllow]);\n    //@ts-ignore\n    const {coinJson} = useSettings();\n    const coinIcon: any = coinJson[ belong ];\n    //\"x\": 248,\n    // \"y\": 322,\n    // \"w\": 36,\n    // \"h\": 35,\n    // \"offX\": 0,\n    // \"offY\": 0,\n    // \"sourceW\": 37,\n    // \"sourceH\": 36\n    // const coinInfo: any = coinMap[ belong ] ? coinMap[ belong ] : {};\n    // const hasLoaded = useImage(coinInfo.icon ? coinInfo.icon : '').hasLoaded;\n\n    // formatValue(sValue)\n    return <> <IWrap component={'div'} ref={ref}>\n        <Grid container component={'div'} className={'label-wrap'} justifyContent={'space-between'}\n              paddingBottom={1 / 2}>\n            <Grid item xs={6}><FormLabel className={'main-label'}>{label}</FormLabel></Grid>\n            <Grid item xs={6} className={'sub-label'}>{subLabel && belong ?\n                <FormLabel className={maxAllow && balance > 0 ? \"max-allow\" : 'no-balance'}\n                           onClick={_handleMaxAllowClick}>\n                    <span>{maxAllow ? subLabel + ':' : ''}</span>\n                    <span>{balance ? getThousandFormattedNumbers(balance) : '0'}</span>\n                </FormLabel> : null}</Grid>\n        </Grid>\n        <Grid container className={`btnInput-wrap ${error.error ? 'error' : ''}`} wrap={'nowrap'} alignItems={'stretch'}\n              alignContent={'stretch'}>\n            <Grid item className={'btn-wrap'}>\n                <ISBtn onClick={(event) => handleOnClick(event, ref)} endIcon={<DropDownIcon/>} disabled={disabled}>\n                    {belong ?\n                        <Grid container align-items={'center'} display={'flex'}>\n                            <Grid item className={'logo-icon'} height={'var(--list-menu-coin-size)'}\n                                  width={'var(--list-menu-coin-size)'} alignItems={'center'} justifyContent={'center'}>\n                                {coinIcon ?\n                                    <AvatarCoinStyled imgx={coinIcon.x} imgy={coinIcon.y} imgheight={coinIcon.height}\n                                                      imgwidth={coinIcon.width}\n                                                      variant=\"circular\" alt={coinMap[ belong ]?.simpleName as string}\n                                        // src={sellData?.icon}\n                                                      src={'data:image/svg+xml;utf8,' + '<svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H36V36H0V0Z\"/></svg>'}/>\n                                    : <Avatar variant=\"circular\" alt={coinMap[ belong ]?.simpleName as string} style={{\n                                        height: 'var(--list-menu-coin-size)',\n                                        width: 'var(--list-menu-coin-size)'\n                                    }}\n                                        // src={sellData?.icon}\n                                              src={'static/images/icon-default.png'}/>}\n                            </Grid>\n                            <Grid item paddingLeft={1}>{coinMap[ belong ]?.simpleName}</Grid>\n                        </Grid>\n                        : <span className={'placeholder'}>{emptyText}</span>\n                    }\n                </ISBtn>\n            </Grid>\n            <Grid item className={'input-wrap input-wrap-right'}>\n                <IInput ref={inputEle} onValueChange={_handleContChange} value={\n                    typeof sValue === 'undefined' ? '' : sValue\n                } allowNegativeValue={false}\n                        name={name}\n                        disabled={!(!disabled || belong)}\n                        placeholder={placeholderText}\n                        aria-placeholder={placeholderText} aria-label={label} decimalsLimit={10000000}/>\n                <label></label>\n            </Grid>\n        </Grid>\n        {isHideError? <></>: <Grid container className={'message-wrap'} wrap={'nowrap'} alignItems={'stretch'} alignContent={'stretch'}\n                                   justifyContent={'flex-end'}>\n            <Grid item><FormHelperText>{error.message}</FormHelperText></Grid>\n        </Grid>}\n\n\n    </IWrap>\n    </>\n\n}\n\nexport const InputButton = React.memo(React.forwardRef(_InputButton)) as\n    <T extends IBData<C>, C, I extends CoinInfo<C>>(props: InputButtonProps<T, C, I> & React.RefAttributes<any>) => JSX.Element;\n//as React.ComponentType<InputButtonProps<coinType,CoinInfo> & RefAttributes<HTMLDivElement>>;\n","import { experimentalStyled, InputAdornment, TextField, } from \"@material-ui/core\";\nimport styled from \"@emotion/styled\";\nimport {\n    DatePicker as MuDatePicker,\n    DatePickerProps as MuDatePickerProps,\n    DateRangeDelimiter,\n    DateRangePicker as MuDateRangePicker,\n    DateRangePickerProps as MuDateRangePickerProps\n} from '@material-ui/pickers';\n\nimport { TFunction } from 'i18next';\nimport { CalendarIcon } from '@loopring-web/common-resources';\n\nconst DateTextField = styled(TextField)`\n  position: relative;\n\n  && .MuiInputBase-input {\n    padding-right: 1rem;\n    position: relative;\n    padding-right: 0px;\n    cursor: pointer;\n    pointer-events: none;\n  }\n\n  .MuiIconButton-label {\n    width: 100%;\n    display: flex;\n    align-items: baseline;\n    justify-content: inherit;\n  }\n\n  .MuiIconButton-edgeEnd, .MuiInputAdornment-positionEnd {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 1px;\n    padding: 0;\n    height: auto;\n    //text-indent: -.4rem;\n    margin-left: -.4rem;\n    //padding-right: .4rem;\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n\n    & svg {\n      font-size: 1.8rem;\n      color:var(--color-text-primary)\n    }\n\n  }\n\n  .MuiInputAdornment-positionEnd.date-range-adornment {\n    pointer-events: none;\n    cursor: pointer;\n    top: 2px;\n    margin-left: -.8rem;\n\n  }\n\n`;\n\nconst DateRangeDelimiterStyled = styled(DateRangeDelimiter)`\n    margin: 0 ${({theme}) => theme.unit}px !important;\n`\n\nexport type DateRangePickerProps = {} & Omit<MuDateRangePickerProps, 'renderInput'>;\n\nexport const DateRangePicker = experimentalStyled(({...props}: DateRangePickerProps & { t: TFunction }) => {\n\n    return <MuDateRangePicker\n        {...props}\n        calendars={props.calendars ? props.calendars : 2}\n        mask={props.mask ? props.mask : \"__-__-__\"}\n        inputFormat={props.inputFormat ? props.inputFormat : 'YY-MM-DD'}\n        openPickerIcon={<CalendarIcon/>}\n        OpenPickerButtonProps={props.OpenPickerButtonProps}\n        renderInput={(startProps, endProps) => {\n            startProps.InputProps = {\n                ...startProps.InputProps, endAdornment: (\n                    <InputAdornment position=\"end\" component={'button'} className={'date-range-adornment'}>\n                        <span className={'MuiIconButton-label'}>\n                            <CalendarIcon/>\n                        </span>\n                    </InputAdornment>\n                )\n            }\n            endProps.InputProps = {\n                ...endProps.InputProps, readOnly: true, endAdornment: (\n                    <InputAdornment position=\"end\" component={'button'} className={'date-range-adornment'}>\n                        <span className={'MuiIconButton-label'}>\n                            <CalendarIcon/>\n                        </span>\n                    </InputAdornment>\n                )\n            }\n            return (<>\n                <DateTextField {...{...startProps, helperText: null, label: undefined}} placeholder={'YY-MM-DD'}/>\n                <DateRangeDelimiterStyled>-</DateRangeDelimiterStyled>\n                <DateTextField {...{...endProps, helperText: null, label: undefined}} placeholder={'YY-MM-DD'}/>\n            </>)\n        }\n        }\n    />\n})<DateRangePickerProps>`\n\n` as React.ComponentType<DateRangePickerProps & { t?: TFunction }>\n\nexport type DatePickerProps = {} & Omit<MuDatePickerProps, 'renderInput'>;\nexport const DatePicker = styled(({\n                                      t,\n                                      inputFormat,\n                                      value,\n                                      ...props\n                                  }: DatePickerProps & { t?: TFunction }) => <MuDatePicker\n\n    disableFuture={props.disableFuture ? props.disableFuture : true}\n    mask={props.mask ? props.mask : \"__-__-__\"}\n    inputFormat={inputFormat ? inputFormat : 'YY-MM-DD'}\n    openTo={props.openTo ? props.openTo : 'date'}\n    views={props.views ? props.views : [\"year\", \"date\"]}\n    value={value}\n    openPickerIcon={<CalendarIcon/>}\n    renderInput={(props) => {\n        props.InputProps = {...props.InputProps}\n        return (<DateTextField {...{...props, helperText: null}}  />)\n    }}\n    {...props} />\n)<DatePickerProps>`\n\n` as React.ComponentType<DatePickerProps & { t?: TFunction }>\n// (({ theme }) => ({\n//     position: 'relative',\n//     '& .MuiIconButton-edgeEnd': {\n//         position: 'absolute',\n//         left: 0,\n//         right: 0,\n//         padding: 0,\n//         height: '100%',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         color: theme.palette.primary.light\n//     }\n// }))\n","import styled from \"@emotion/styled\";\nimport { FormControlLabel as MuFormControlLabel, TextField as MuTextField } from \"@material-ui/core\";\n\n// ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1/2})};\nexport const FormControlLabel = styled(MuFormControlLabel)`\n  && {\n    padding-right: ${({theme}) => theme.unit * 2}px;\n    background-color: inherit;\n    border-radius: ${({theme}) => theme.unit / 2}px;\n    color: var(--color-text-secondary);\n  }\n`\nexport const TextField = styled(MuTextField)`\n  label + & {\n    //margin-top: 24px;\n    margin-top: 0;\n  }\n\n  && {\n    .MuiSelect-nativeInput + svg {\n      position: absolute;\n      right: .4rem;\n      top:  ${({theme}) => theme.unit}px;\n      color: var(--color-text-secondary);\n    }\n\n    &:not(.MuiFormControl-fullWidth) {\n      max-width: 260px;\n\n    }\n\n    text-overflow: fade();\n  }\n\n  &:focus {\n    ${({theme}) => theme.border.defaultFrame({c_key: 'focus', d_R: 0.5})};\n    outline: transparent;\n  }\n` as typeof MuTextField;\n","import { Avatar,\n    // Box,\n    // BoxProps,\n    FormHelperText, FormLabel, Grid } from \"@material-ui/core\";\n// import styled from \"@emotion/styled\";\n// import CurrencyInput from 'react-currency-input-field';\nimport { AvatarCoinStyled, CoinInfo, getThousandFormattedNumbers, IBData } from '@loopring-web/common-resources';\nimport { InputCoinProps } from \"./Interface\";\nimport React from \"react\";\nimport { useFocusRef } from \"../hooks\";\nimport { useSettings } from '../../../../stores';\nimport { IInput, CoinWrap, IWrap } from \"./style\";\n// import { useImage } from '../../resource';\n\nfunction _InputCoin<T extends IBData<C>, C, I extends CoinInfo<C>>({\n                                                                       order = 'left',\n                                                                       label = \"Amount\",\n                                                                       handleError,\n                                                                       subLabel = \"Available\",\n                                                                       // wait = globalSetup.wait,\n                                                                       coinMap,\n                                                                       maxAllow,\n                                                                       disabled,\n                                                                       placeholderText = '0.00',\n                                                                       inputData,\n                                                                       handleCountChange,\n                                                                       focusOnInput,\n                                                                       name,\n                                                                   }\n                                                                       : InputCoinProps<T, C, I>, ref: React.ForwardedRef<any>) {\n    const {balance, belong, tradeValue} = (inputData ? inputData : {}) as IBData<C>;\n    const [sValue, setsValue] = React.useState<number | undefined>(tradeValue ? tradeValue : undefined);\n    // let _error = {error: false, message: ''};\n    // if (handleError && inputData) {\n    //     let error:any = handleError(inputData, ref);\n    //     _error = error ? error : {error: false}\n    // }\n    const _handleError = React.useCallback((value: any) => {\n        if (handleError) {\n            let _error = handleError({\n                balance: Number(balance),\n                belong, ...{tradeValue: value},\n                maxAllow\n            } as T & { maxAllow?: boolean }, ref);\n            setError(_error ? _error : {error: false});\n        }\n    }, [handleError, balance, belong, maxAllow, ref])\n    const [error, setError] = React.useState<{ error: boolean, message?: string | React.ElementType }>({\n        error: false,\n        message: ''\n    });\n    const inputCallback = React.useCallback(({current}) => {\n            if (inputData && (inputData.tradeValue !== Number(current?.value))) {\n                setsValue(inputData.tradeValue);\n                _handleError(inputData.tradeValue);\n                // debounceCount({...inputData, ...{tradeValue: inputData.tradeValue}})\n                // _handleContChange(current?.value, name)\n            }\n        },\n        [inputData, _handleError])\n    const inputEle = useFocusRef({\n        callback: inputCallback,\n        shouldFocusOn: focusOnInput,\n        value: tradeValue,\n    });\n\n    // const debounceCount = debounce(({...props}: any) => {\n    //     if (handleCountChange) {\n    //         handleCountChange({...props}, ref)\n    //     }\n    // }, wait)\n    const _handleContChange = React.useCallback((value: any, _name: any) => {\n            _handleError(value);\n            setsValue(value);\n            if (handleCountChange) {\n                handleCountChange({...inputData, ...{tradeValue: value}} as any, ref)\n            }\n            //debounceCount({...inputData, ...{tradeValue: value}})\n        }\n        , [_handleError, setsValue, inputData, handleCountChange, ref])\n\n    // const _handleContChange =\n    // const _handleOnClick = React.useCallback((event: React.MouseEvent) => {\n    //     if (handleOnClick) handleOnClick(event,ref)\n    // }, [])\n    const _handleMaxAllowClick = React.useCallback((_event: React.MouseEvent) => {\n        if (maxAllow) {\n            _handleContChange(balance, name)\n            //setsValue(balance);\n        }\n    }, [_handleContChange, balance, name, maxAllow]);\n    const {coinJson} = useSettings();\n    const coinIcon: any = coinJson[ belong ];\n\n    // const coinInfo: any = coinMap[ belong ] ? coinMap[ belong ] : {};\n    // const hasLoaded = useImage(coinInfo.icon ? coinInfo.icon : '').hasLoaded;\n    // formatValue(sValue)\n    return <> <IWrap component={'div'} ref={ref}>\n        <Grid container component={'div'} className={'label-wrap'} justifyContent={'space-between'}\n              paddingBottom={1 / 2}>\n            <Grid item xs={6}><FormLabel className={'main-label'}>{label}</FormLabel></Grid>\n            <Grid item xs={6} className={'sub-label'}>{subLabel && belong ?\n                <FormLabel className={maxAllow && balance > 0 ? \"max-allow\" : 'no-balance'}\n                           onClick={_handleMaxAllowClick}>\n                    <span>{maxAllow ? subLabel + ':' : ''}</span>\n                    <span>{balance ? getThousandFormattedNumbers(balance) : '0'}</span>\n                </FormLabel> : null}</Grid>\n        </Grid>\n\n        <Grid container className={`coinInput-wrap ${error.error ? 'error' : ''}`} wrap={'nowrap'}\n              alignItems={'stretch'}\n              alignContent={'stretch'}>\n\n            <CoinWrap order={order === 'left' ? 2 : 1}\n                      display={'flex'}\n                      alignItems={'center'}\n                      className={`icon-wrap icon-wrap-${order}`}>\n                <Grid container align-items={'center'} display={'flex'}>\n                    <Grid item order={order === 'left' ? 2 : 1} paddingLeft={order === 'left' ? 1 : 0}\n                          className={'logo-icon'}\n                          height={'var(--list-menu-coin-size)'} width={'var(--list-menu-coin-size)'}\n                          alignItems={'center'} justifyContent={'center'}>\n                        {coinIcon ?\n                            <AvatarCoinStyled imgx={coinIcon.x} imgy={coinIcon.y} imgheight={coinIcon.height}\n                                              imgwidth={coinIcon.width}\n                                              variant=\"circular\" alt={coinMap[ belong ]?.simpleName as string}\n                                // src={sellData?.icon}\n                                              src={'data:image/svg+xml;utf8,' + '<svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H36V36H0V0Z\"/></svg>'}/>\n                            : <Avatar variant=\"circular\" alt={coinMap[ belong ]?.simpleName as string} style={{\n                                height: 'var(--list-menu-coin-size)',\n                                width: 'var(--list-menu-coin-size)'\n                            }}\n                                // src={sellData?.icon}\n                                      src={'static/images/icon-default.png'}/>}\n                    </Grid>\n                    <Grid item order={order === 'left' ? 1 : 2}\n                          paddingLeft={order === 'left' ? 0 : 1}>{coinMap[ belong ]?.simpleName}</Grid>\n                </Grid>\n            </CoinWrap>\n            <Grid order={order === 'left' ? 1 : 2} flex={1} item className={`input-wrap input-wrap-${order}`}>\n                <IInput ref={inputEle} onValueChange={_handleContChange} value={sValue} allowNegativeValue={false}\n                        disabled={!(!disabled || belong)}\n                        placeholder={placeholderText}\n                        aria-placeholder={placeholderText} aria-label={label} decimalsLimit={10000000}/>\n                <label></label>\n            </Grid>\n        </Grid>\n\n        <Grid container className={'message-wrap'} wrap={'nowrap'} alignItems={'stretch'} alignContent={'stretch'}\n              justifyContent={'flex-end'}>\n            <Grid item><FormHelperText>{error.message}</FormHelperText></Grid>\n        </Grid>\n\n    </IWrap>\n    </>\n\n}\n\nexport const InputCoin = React.memo(React.forwardRef(_InputCoin)) as\n    <T extends IBData<C>, C, I extends CoinInfo<C>>(props: InputCoinProps<T, C, I>, ref: React.RefAttributes<any>) => JSX.Element;\n//as React.ComponentType<InputButtonProps<coinType,CoinInfo> & RefAttributes<HTMLDivElement>>;\n","import { Box, Button, Container, Link, LinkProps, MenuItem, MenuProps, Tab, Typography } from \"@material-ui/core\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { WithTranslation } from \"react-i18next\";\n// @ts-ignore\nimport { anchorRef, bindHover, bindMenu, bindTrigger, usePopupState } from \"material-ui-popup-state/hooks\";\nimport { BasicHeaderItem, HeadMenuType, MenuItemLink, MenuItemProps } from './Interface'\nimport styled from \"@emotion/styled\";\nimport clsx from \"clsx\";\nimport { DropDownIcon } from '@loopring-web/common-resources';\nimport { css } from \"@emotion/react\";\nimport Menu from 'material-ui-popup-state/HoverMenu';\nimport React, { ForwardedRef, RefAttributes } from \"react\";\n// import Popover from 'material-ui-popup-state/HoverPopover';\n// background-color: ${theme.colorBase.primaryLight};\n\nconst hr = ({theme}: any) => css`\n  border-radius: ${theme.unit / 2}px;\n  content: '';\n  margin: 0 8px;\n  display: block;\n  height: 2px;\n  //margin-bottom: -2px;  \n  background: transparent;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const MenuTab = styled(Tab)`\n  opacity: 1;\n  font-family: Roboto;\n  font-size: ${({theme}) => theme.fontDefault.h6};\n  height: var(--header-height);\n\n  &.MuiTab-root.Mui-selected {\n    //background-color: chocolate;\n\n    color: var(--color-text-primary);\n\n    &:after {\n      ${hr}\n    }\n  }\n` as unknown as typeof Tab;\nexport const HeaderMenu = styled(Container)`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  position: relative;\n` as typeof Container;\nconst StyledHeadMenuItem = styled(Link)<LinkProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-transform: capitalize;\n  font-size: ${({theme}) => theme.fontDefault.h5};\n  box-shadow: inherit;\n  height: var(--header-height);\n  color: var(--color-text-secondary);\n  position: relative;\n\n  &.layer-0 {\n    .MuiButtonBase-root {\n      opacity: 1;\n      color: inherit;\n\n      &:hover {\n        // color: var(--primary);\n      }\n    }\n\n\n    .MuiTab-root {\n      &:hover {\n        //color: var(--primary);\n      }\n    }\n\n\n    //.MuiButtonBase-root {\n    //  opacity: 1;\n    //  color: inherit;\n    //}\n  }\n\n  svg {\n    width: var(--header-menu-icon-size);\n    height: var(--header-menu-icon-size);\n  }\n\n  &&.layer-next {\n    display: flex;\n  }\n\n}\n` as typeof Link;\nconst StyledLayer2Item = styled(MenuItem)<MenuItemProps<any>>`\n  padding: 0 1.2rem;\n  border-left-color: transparent;\n  height: 100%;\n\n  p {\n    font-size: ${({theme}) => theme.fontDefault.h5};\n    line-height: 2em;\n  }\n\n  h5 {\n    color: var(--color-text-primary);\n    text-transform: capitalize;\n    line-height: 2em;\n  }\n\n  &:hover {\n    border-left-color: transparent;\n\n    h5 {\n      color: var(--color-primary)\n    }\n\n    //background: var(--color-box-hover);\n  }\n\n  // .dot {\n  //   width: 24px;\n  //   text-align: center;\n  //   text-indent: .3em;\n  //   //font-size:1.1em;\n  //   transform: scale(1.2) translateY(5px);\n  //   color: var(--color-primary)\n  //\n  // }\n` as typeof MenuItem;\n\n\nconst StyledHeaderMenuSub = styled(Menu)<MenuProps>`\n  && {\n    color: var(--color-text-secondary);\n\n    ul {\n      background-color: var(--color-box-secondary);\n      padding: 0;\n\n      .layer-1 {\n        height: var(--header-menu-list-height)\n      }\n    }\n\n\n  }` as typeof Menu;\nconst StyledTabBtn = styled(Button)`\n  && {\n    text-transform: capitalize;\n    display: flex;\n    height: 100%;\n    color: var(--color-text-secondary);\n    font-size: ${({theme}) => theme.fontDefault.h5};\n    padding: 0 16px;\n\n    svg {\n      transition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n    }\n\n    &:hover {\n      background-color: inherit;\n      color: var(--color-text-primary);\n\n      svg {\n        transform: rotate(180deg);\n      }\n\n    }\n\n    &.Mui-selected {\n      color: var(--color-text-primary);\n\n      &:after {\n        ${hr}\n      }\n    }\n\n`;\n\nexport const HeadMenuItem = React.memo(React.forwardRef(<I extends BasicHeaderItem>({\n                                                                                        className,\n                                                                                        layer,\n                                                                                        handleListKeyDown,\n                                                                                        children,\n                                                                                        router,\n                                                                                    }: MenuItemLink<I>, ref: ForwardedRef<any>) => {\n    return <StyledHeadMenuItem\n        className={clsx([`layer-${layer}`, className])} ref={ref}\n        onClick={handleListKeyDown ? handleListKeyDown : undefined}\n        // disabled={status === HeaderMenuTabStatus.disabled}\n        {...{\n            component: RouterLink,\n            to: router ? router.path : '',\n            style: {textDecoration: \"none\"},\n            // ...props\n        }} >  {children}</StyledHeadMenuItem>;\n})) as <I extends BasicHeaderItem>(props: MenuItemLink<I>) => JSX.Element;\n\n\nexport let Layer2Item: <I extends BasicHeaderItem>(props: (MenuItemProps<I> & WithTranslation)) => JSX.Element;\nLayer2Item = React.memo(<I extends BasicHeaderItem>({t, label}: MenuItemProps<I> & WithTranslation) => {\n    return <StyledLayer2Item key={label.id}>\n        {/*<Box className={'dot'} paddingTop={0}>&#x25CF;</Box>*/}\n        <Box display={\"flex\"} paddingRight={1.5} flexDirection={\"column\"} justifyContent={\"space-around\"}>\n            <Box paddingTop={0.5} lineHeight={'1.1'}><Typography component={'h5'}\n                                                                 variant=\"h5\">{t(label.i18nKey)}</Typography></Box>\n            <Box><Typography component={'p'}\n                             variant={'body2'}>{label?.description ? t(label.description) : ''}</Typography></Box>\n        </Box>\n    </StyledLayer2Item>\n}) as <I extends BasicHeaderItem>(props: MenuItemProps<I> & WithTranslation) => JSX.Element;\n\n\nexport const HeaderMenuSub = React.memo(React.forwardRef(<I extends BasicHeaderItem>({\n                                                                                         t,\n                                                                                         label,\n                                                                                         className,\n                                                                                         renderList,\n                                                                                         layer = 0\n                                                                                     }: HeadMenuType<I> & WithTranslation, ref: ForwardedRef<any>) => {\n\n    const popupState = usePopupState({variant: 'popover', popupId: `popupId: 'tradeHeaderSubMenu'`});\n    return <><StyledTabBtn {...bindHover(popupState)} key={label.id} className={className} ref={ref}> <Typography\n        component={'span'}\n        variant={'body1'} paddingRight={1}>{t(label.i18nKey)}</Typography><DropDownIcon/></StyledTabBtn>\n        <StyledHeaderMenuSub key={`menu-${layer}-${label.id}`}\n                             {...bindMenu(popupState)}\n                             getContentAnchorEl={null}\n                             anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                             transformOrigin={{vertical: 'top', horizontal: 'left'}}\n                             className={`menu-${layer}-${label.id}`}>\n            {renderList && renderList({handleListKeyDown: popupState.close})}\n        </StyledHeaderMenuSub>\n        {/*</ParentPopupState.Provider>*/}\n    </>\n})) as <I extends BasicHeaderItem> (props: HeadMenuType<I> & WithTranslation & RefAttributes<any>) => JSX.Element;\n\n\n\n\n\n\n","import { Avatar, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core/';\nimport { WithTranslation } from \"react-i18next\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { CoinItemProps, CoinMenuProps } from \"./Interface\";\nimport { AvatarCoinStyled, CoinInfo, CoinKey, WalletCoin } from '@loopring-web/common-resources';\nimport { Virtuoso } from 'react-virtuoso';\nimport { useSettings } from '../../../stores';\n\n\nfunction _CoinMenu<C, I extends CoinInfo<C>>({\n                                                 coinMap = {}, walletMap = {}, filterBy = (ele, filterString) => {\n        return filterString && filterString.length ? RegExp(filterString).test(ele.simpleName as string) : true\n    }, filterString, handleSelect, allowScroll = true, selected = null,\n                                                 listProps = {},\n                                                 height = '100px',\n                                                 ...rest\n                                             }: CoinMenuProps<C, I> & WithTranslation, _ref: React.Ref<HTMLUListElement>) {\n    const [select, setSelect] = React.useState<CoinKey<C> | null>(selected as CoinKey<C>);\n    const virtuoso = React.useRef(null);\n    let rowIndex = 0;\n    React.useEffect(() => {\n        if (select !== selected) {\n            setSelect(selected);\n        }\n    }, [select, selected])\n    //const list = React.useMemo(() =>\n    const list = Object.keys(coinMap).reduce((list: Array<{ walletCoin: WalletCoin<C>, key: string }>, key) => {\n        if (filterBy(coinMap[ key ], filterString)) {\n            const walletCoin: WalletCoin<C> = walletMap[ key ] ? walletMap[ key ] : {belong: key, count: 0}\n            list.push({walletCoin, key: key});\n            if (select === key) {\n                rowIndex = list.length - 1;\n            }\n        }\n        return list;\n    }, [])\n    const handleListItemClick = React.useCallback((_event: React.MouseEvent, select: CoinKey<C>) => {\n        setSelect(select);\n        handleSelect && handleSelect(_event, select);\n    }, [handleSelect])\n    return <Virtuoso<{ walletCoin: WalletCoin<C>, key: string }> data={list}\n                                                                 className={'coin-menu'}\n                                                                 style={{minHeight: '210px', height: height}}\n                                                                 ref={virtuoso}\n                                                                 initialTopMostItemIndex={rowIndex}\n                                                                 itemContent={(index, item) => {\n                                                                     let {walletCoin, key} = item;//list[ index ];\n                                                                     return <CoinItem<C> key={index} {...{\n                                                                         coinInfo: coinMap[ key ] as CoinInfo<C>,\n                                                                         walletCoin,\n                                                                         select: select,\n                                                                         handleListItemClick,\n                                                                         itemKey: key as CoinKey<C>, ...rest\n                                                                     }} ></CoinItem>\n\n                                                                 }}\n    />\n\n}\n\nexport const CoinMenu = React.memo(React.forwardRef(_CoinMenu)) as unknown as <C, I = CoinInfo<C>>(props: CoinMenuProps<C, I> & WithTranslation & React.RefAttributes<HTMLDivElement>) => JSX.Element;\n\nconst StyledCoinItem = styled(ListItem)`\n  && {\n    width: 100%;\n    display: flex;\n    justify-content: stretch;\n    justify-items: center;\n    height: var(--list-coin-item);\n    box-sizing: border-box;\n    padding-left: ${({theme}) => theme.unit / 2 * 5}px;\n    padding-right: ${({theme}) => theme.unit / 2 * 5}px;\n  }\n  &.Mui-selected, &.Mui-focusVisible {\n    background:var(--color-box-hover);\n    &:hover {\n      background:var(--color-box-hover);\n    }\n  }\n  .MuiListItemIcon-root {\n    height: var(--btn-icon-size);\n    width: var(--btn-icon-size);\n    min-width: var(--btn-icon-size);\n    margin-right: ${({theme}) => theme.unit}px;\n    display: flex;\n    justify-content: center;\n    justify-items: center;\n    align-items: center;\n    \n    .MuiAvatar-root {\n      transform-origin: center;\n    }\n  }\n\n  .MuiListItemText-multiline {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n\n`\n\nexport const CoinItem = React.memo(React.forwardRef(<C extends any>({\n                                                                        // t,\n                                                                        coinInfo,\n                                                                        walletCoin,\n                                                                        select,\n                                                                        itemKey,\n                                                                        handleListItemClick\n                                                                    }: CoinItemProps<C> & WithTranslation, ref: React.ForwardedRef<any>) => {\n    const {simpleName} = coinInfo;\n    // const hasLoaded = useImage(coinInfo.icon ? coinInfo.icon : '').hasLoaded;\n    const {coinJson} = useSettings();\n    const coinIcon: any = coinJson [ simpleName ];\n\n    return <StyledCoinItem\n        button\n        ref={ref}\n        key={itemKey as string}\n        selected={select === simpleName}\n        onClick={(event: React.MouseEvent) => handleListItemClick(event, itemKey)}\n    >\n        <ListItemIcon>\n            {/*<img src={coinInfo.icon} alt={t(simpleName)}/>*/}\n            {/*<Avatar alt={simpleName}*/}\n            {/*        src={coinInfo.icon}*/}\n            {/*        srcSet={`${coinInfo.icon},./images/icon-default.png`}/>*/}\n            {/*<Avatar variant=\"square\" alt={coinInfo?.simpleName}*/}\n            {/*    // src={sellData?.icon}*/}\n            {/*        src={hasLoaded ? coinInfo.icon : 'static/images/icon-default.png'}/>*/}\n            {coinIcon ?\n                <AvatarCoinStyled imgx={coinIcon.x} imgy={coinIcon.y} imgheight={coinIcon.height}\n                                  imgwidth={coinIcon.width}\n                                  variant=\"circular\" alt={simpleName as string}\n                    // src={sellData?.icon}\n                                  src={'data:image/svg+xml;utf8,' + '<svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H36V36H0V0Z\"/></svg>'}/>\n                : <Avatar variant=\"circular\" alt={simpleName as string} style={{\n                    height: 'var(--list-menu-coin-size)',\n                    width: 'var(--list-menu-coin-size)'\n                }}\n                    // src={sellData?.icon}\n                          src={'static/images/icon-default.png'}/>}\n        </ListItemIcon>\n        <ListItemText primary={simpleName} secondary={\n            <>\n                <Typography sx={{display: 'block'}} component=\"span\" color=\"textSecondary\" variant=\"body1\">\n                    {walletCoin.count}\n                </Typography>\n            </>\n        }/>\n    </StyledCoinItem>\n})) as unknown as <C>(props: CoinItemProps<C> & WithTranslation & React.RefAttributes<any>) => JSX.Element;\n\n//  <C>(props: CoinItemProps<C> & RefAttributes<HTMLElement>) => JSX.Element;\n//as React.ComponentType<InputButtonProps<coinType,CoinInfo> & RefAttributes<HTMLDivElement>>;\n\n\n\n","import styled from \"@emotion/styled\";\nimport { MenuItem, MenuItemProps } from \"@material-ui/core\";\n\n\nexport const TabItemPlus = styled<any>(MenuItem)`\n  && {\n    &.Mui-focusVisible {\n      background-color: transparent;\n    }\n\n    margin: 0;\n    padding: 0 0 0 1.6rem;\n\n    &:hover {\n      background-color: transparent;\n      border-left-color: transparent;\n    }\n\n    .MuiIconButton-root {\n      svg {\n        width: var(--header-menu-icon-size);\n        height: var(--header-menu-icon-size);\n        color: var(--color-text-secondary);\n      }\n\n      :hover {\n        svg {\n          color: var(--color-text-primary);\n        }\n\n        color: var(--color-text-primary);\n      }\n    }\n\n  }\n` as React.ElementType<MenuItemProps>;\n\n\n","import styled from \"@emotion/styled\";\nimport { Box } from '@material-ui/core'\nimport { Divider, ListItem, ListItemAvatar, ListItemText, Typography, ListItemProps } from '@material-ui/core';\nimport { WithTranslation } from 'react-i18next';\nimport { SubMenuListProps } from './Interface';\n\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport const SubMenuItem = styled<any>(ListItem)`\n  border-left: 0px solid transparent;\n  border-right: 1px solid transparent;\n  padding: 0 0 0 ${({theme}) => theme.unit * 3}px;\n  width: var(--sub-menuItem-width);\n  min-width: var(--sub-menuItem-width);\n  height: var(--sub-menuItem-height);\n\n  .MuiTypography-body1 {\n    line-height: 1.6em;\n    text-transform: capitalize;\n  }\n\n  .MuiListItemAvatar-root {\n    margin-left: ${({theme}) => theme.unit * 0.75}px;\n    svg {\n      width: var(--header-menu-icon-size);\n      height: var(--header-menu-icon-size);\n    }\n\n    //:hover {\n    //  svg {\n    //    color: var(--color-primary); \n    //  }\n    //\n    //  color: var(--color-primary);\n    //}\n  }\n\n  &:hover{\n    background-color: var(--color-primary);\n  }\n  &.Mui-selected, &.Mui-selected.Mui-focusVisible {\n    background-color: var(--color-primary);\n    &:hover{\n      background-color: var(--color-primary);\n    }\n    //border-color:var(--primary);\n\n  }\n` as (props:ListItemProps<any>)=>JSX.Element;\nexport const SubMenuList = <I extends any>({\n                                               t,\n                                               selected,\n                                               subMenu,\n\n                                           }: SubMenuListProps<I> & WithTranslation<'layout'>) => {\n    return <>{Object.keys(subMenu).map((list: any, index) => {\n        const subList = subMenu[ list ].map((item: any) => {\n            return <SubMenuItem button selected={new RegExp(item.label.id, 'ig').test(selected)}\n                                alignItems={item.label.description ? 'flex-start' : 'center'}\n                                key={item.label.id}\n                                {...{\n                                    component: RouterLink,\n                                    to: item.router ? item.router.path : '',\n                                    style: {textDecoration: \"none\"},\n                                    // ...props\n                                }}\n            >\n                <ListItemAvatar>\n                    <item.icon></item.icon>\n                </ListItemAvatar>\n                {item.label.description ? <ListItemText\n                    primary={<Typography sx={{display: 'block'}} component=\"span\" variant=\"body1\"\n                                        >{t(item.label.i18nKey)}</Typography>}\n                    secondary={<Typography sx={{display: 'inline'}} component=\"span\" variant=\"body2\"\n                                          >{t(item.label.description)}</Typography>}\n                /> : <ListItemText\n                    primary={<Typography sx={{display: 'block'}} component=\"span\" variant=\"body1\"\n                                        >{t(item.label.i18nKey)}</Typography>}\n                />}\n            </SubMenuItem>\n\n        });\n        return <div key={`group-${list}`}>{subList} {index + 1 !== Object.keys(subMenu).length ?\n          <Box marginX={3}>\n            <Divider />\n          </Box>\n          : ''}</div>\n    })}</>\n};\n\n","import { MenuItem as MuiMenuItem, Select, SelectProps } from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport { MuiMenuItemProps } from './Interface';\nimport React from 'react';\n\n//backgroundColor: ${theme.colorBase.primaryLight};\n// background-color: ${theme.colorBase.background().hover};\nexport const MenuItem = styled(MuiMenuItem)<MuiMenuItemProps>`\n  ${({withNoCheckIcon}) => {\n    return withNoCheckIcon === 'true' ? `        \n        &.Mui-selected, &.Mui-selected.Mui-focusVisible {\n            color: var(--color-text-primary);\n            &:after{\n             display:none;\n            }\n        }\n     ` : ''\n  }}\n\n` as React.ComponentType<MuiMenuItemProps>;\n\nexport const OutlineSelect = styled(Select)`\n  //padding: 0;\n  \n  //background-color: transparent;\n  color: var(--color-text-secondary);\n  padding: .3rem 1.2rem .3rem .8rem;\n  //&.MuiInputBase-root {\n  //  min-width: auto;\n  //  width: auto;\n  //}\n\n  svg {\n    //right: .4rem;\n    top: ${({theme}) => theme.unit -3}px;\n    position: absolute;\n    //pointer-events: none;\n    //transition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n    //color: var(--color-text-secondary)\n  }\n\n  //.MuiSelect-iconOpen {\n  //  transform: rotate(180deg)\n  //}\n  border: transparent;\n  .MuiSelect-select, &.Mui-selected.Mui-focusVisible {\n    border: transparent;\n    &:focus {\n      background-color: transparent;\n    }\n\n    &:before {\n      content: '';\n      display: none;\n    }\n  }\n\n  &:hover {\n    color: var(--color-text-primary);\n    border: transparent;\n    //border-left-color: transparent;\n  }\n\n  input {\n    padding-right: 0;\n  }\n\n  &:hover:not(.Mui-disabled):before,\n  &:after, &:before {\n    margin: 0 auto;\n    width: 60%;\n    border: 0;\n  }\n` as React.ComponentType<SelectProps>;\n\n\nexport const OutlineSelectItem = styled(MenuItem)<any>`   \n  &.MuiSelect-root{\n    padding: ${({theme}) => `0 ${theme.unit * 1} $0 ${theme.unit * 1} `};\n    padding-right: ${({theme}) => `${theme.unit * 2}`};\n    &:hover {\n      color: var(--color-text-primary);\n      border-left-color: transparent;\n    }\n  }\n \n\n  &.Mui-selected, &.Mui-selected.Mui-focusVisible {\n    padding: ${({theme}) => `${theme.unit * 1} ${theme.unit * 1} 0 ${theme.unit * 1} `};\n    padding-right: ${({theme}) => `${theme.unit * 2}`};\n\n    &:after {\n      content: '';\n    }\n  }\n\n  \n` as typeof MenuItem;\n\nexport * from './HeadMenuItem'\nexport * from './Interface'\nexport * from './CoinList'\nexport * from './HeadToolbar'\nexport * from './SubMenuList'\nexport * from './Notification';\n\n\n// export * from './SimpleSelectItem'\n\n\n\n","import { WithTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { NotificationItem } from './Interface';\nimport styled from '@emotion/styled';\n\n// h5 {\n//   color: var(--color-primary)\n// }\nconst ListItemStyled = styled(ListItem)`\n  font-size: ${({theme}) => theme.fontDefault.h5};\n\n  width: 100%;\n  padding: ${({theme}) => theme.unit}px ${({theme}) => theme.unit * 2}px;\n  height: auto;\n  min-height: 1.2em;\n\n  &:not(:last-child) {\n    :after {\n      content: '';\n      display: inline-block;\n      width: 100%;\n      height: 1px;\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      padding: 0 ${({theme}) => theme.unit / 2}px\n    }\n  }\n\n  &:hover {\n    border-left-color: transparent;\n    background: var(--color-box-hover);\n  }\n\n  .MuiListItemText-root {\n    height: 100%;\n\n    margin: 0;\n    overflow: hidden;\n\n  }\n\n  .MuiListItemIcon-root {\n    min-width: auto;\n    margin-top: 0;\n    padding-right: ${({theme}) => theme.unit}px;\n  }\n\n  &.error {\n    .MuiListItemIcon-root {\n      color: var(--color-error);\n    }\n  }\n\n  &.pending {\n    .MuiListItemIcon-root {\n      color: var(--color-secoundary);\n    }\n  }\n\n  &.success {\n    .MuiListItemIcon-root {\n      color: var(--color-success);\n    }\n  }\n\n`\n// export const MenuStyled  = styled.div`\n//    width: 280px;\n//    height: 100px;\n//    display: flex;\n//    flex-direction: column;\n//    overflow-y: scroll;\n//    justify-content: space-around;\n//    align-items: stretch ;\n//    align-content: center;\n//   .wallet-alert{\n//     height: auto;\n//     text-overflow: ellipsis;\n//     line-height: 1em;\n//     .MuiListItemIcon-root{\n//       min-width: auto;\n//     }\n//     .MuiListItemText{\n//       height: 2.4em;\n//     }\n//\n//   }\n// `\nexport const WalletNotificationListItem = ({t, label, startIcon, handleClick}: NotificationItem & WithTranslation) => {\n    return <ListItemStyled button alignItems=\"flex-start\" onClick={handleClick ? handleClick : undefined}\n                           className={`wallet-alert wallet-${startIcon.className}`}>\n        <ListItemIcon>{startIcon.iconItem}</ListItemIcon>\n        <ListItemText primary={t(label.i18nKey)}/>\n    </ListItemStyled>\n}\n","import { WithTranslation } from \"react-i18next\";\nimport SwipeableViews, { SwipeableViewsProps } from 'react-swipeable-views';\n\nimport React, { RefAttributes } from 'react';\nimport { useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { Grid, Toolbar } from \"@material-ui/core\";\nimport { boxLiner, toolBarPanel } from '../../styled';\n\n\nexport type PanelContent<T extends string> = {\n    key: T,\n    element: React.ElementType<any> | JSX.Element,\n    toolBarItem:  React.ElementType<any> | JSX.Element | undefined,\n}\nexport type SwitchPanelProps<T extends string> = {\n    // swipedBy: T,\n    index: number,\n    // defaultIndex: number,\n    panelList: Array<PanelContent<T>>,\n    size?: string,\n    // onChangeIndex?: (index: number,data:any) => void,\n    // onTransitionEnd?: () => void,\n    _height?: number | string;\n    _width?: number | string;\n\n}\n\n// height: ${_height ? typeof _height === 'number' ?\n//           `calc(${_height + 'px'}  - 2 * var(--toolbar-row-padding) )`\n//           : `calc(${_height}  - 2 * var(--toolbar-row-padding) )` : 'auto'};\nexport const SwipeableViewsStyled = styled(SwipeableViews)<SwipeableViewsProps & { _height?: number | string, _width?: number | string; }>`\n  position: relative;\n  ${({_height, _width}) => `       \n    width: ${typeof _width === 'string' ? _width : typeof _width === 'number' ? _width + 'px' : `var(--swap-box-width)`};   \n    height: ${typeof _height === 'string' ? _height : typeof _height === 'number' ? _height + 'px' : `var(--swap-box-height)`};         \n  `}\n  ${({theme}) => toolBarPanel({theme})}\n  border-radius: ${({theme}) => theme.unit}px;\n  .react-swipeable-view-container {\n    height: 100%;\n    & > div {\n      .container{\n        flex:1;\n      }\n      ${({theme}) => boxLiner({theme})}\n      display: flex;\n      flex-direction: column;\n      flex-wrap: wrap;\n      align-content: stretch;\n      align-items: stretch;\n      .MuiToolbar-root{\n        align-items: flex-end;\n      }\n    }\n \n  }\n` as React.ElementType<SwipeableViewsProps & { _height?: number | string, _width?: number | string; }>;\n\nfunction _SwitchPanel<T extends string>({\n                                            index,\n                                            panelList,\n                                            _height,\n                                            _width,\n                                            size\n                                            // ...rest\n                                        }: SwitchPanelProps<T> & WithTranslation, _ref: React.ForwardedRef<any>) {\n    const theme = useTheme();\n    return <SwipeableViewsStyled className={'trade-panel'} axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                                 index={index}  {...{_height,_width}}>\n        {panelList.map((panel: PanelContent<T>) => {\n            return <Grid container key={panel.key} className={'container'} direction={'column'}\n                         justifyContent={\"space-between\"} flexWrap={'nowrap'}\n                         paddingTop={'var(--toolbar-row-padding)'}\n                         paddingBottom={3}>\n                {panel.toolBarItem ? <Toolbar className={size} variant={'dense'}>\n                    {panel.toolBarItem}\n                </Toolbar>:<></>}\n                <Grid item flex={1}>{panel.element}</Grid>\n            </Grid>;\n        })}\n    </SwipeableViewsStyled>;\n}\nexport const SwitchPanel = React.memo(React.forwardRef(_SwitchPanel)) as <T extends string>(props: SwitchPanelProps<T> & WithTranslation & RefAttributes<any>) => JSX.Element;\n","import styled from \"@emotion/styled\";\nimport { List, ListProps } from \"@material-ui/core\";\n\nexport const SubMenu = styled(List)<ListProps>`\n  width: 100%;\n  flex: 1;\n  padding: ${({theme}) => theme.unit / 2 * 5}px 0;\n  background-color: var(--color-box);\n  border-radius: ${({theme}) => theme.unit}px;\n` as typeof List;\n\n","import { withTranslation, WithTranslation } from \"react-i18next\";\nimport styled from \"@emotion/styled\";\nimport React from 'react';\nimport { EmptyIcon } from '@loopring-web/common-resources';\nimport { Box, Typography } from '@material-ui/core/';\nimport { BoxProps } from '@material-ui/core';\n\n\nexport type EmptyProps = {\n    height?: number | string,\n    defaultPic?: string | React.ReactElement, //PATH or element\n    message: () => React.ElementType<any> | JSX.Element,\n}\nconst EmptyIconStyle = styled(EmptyIcon)`\n  && {\n    height: var(--empty-size);\n    width: var(--empty-size);\n  }\n\n  opacity: .3;\n  font-size: ${({theme}) => theme.fontDefault.h1};\n  color: var(--color-text-disable);\n` as typeof EmptyIcon\nconst WrapStyled = styled(Box)<{ height: number | undefined | string }>`\n  display: flex;\n  flex-direction: column;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n  height: ${props => (props.height ? typeof props.height == 'number' ? props.height + 'px' : props.height : `${350 - 35}px`)};\n\n` as typeof Box;\nexport const EmptyDefault = withTranslation(['layout', 'common'])(({\n                                                                       t,\n                                                                       i18n,\n                                                                       tReady,\n                                                                       defaultPic = <EmptyIconStyle\n                                                                           fontSize={'large'}/>,\n                                                                       height,\n                                                                       message,\n                                                                       ...rest\n                                                                   }: EmptyProps & BoxProps & WithTranslation) => {\n    const renderPic = !defaultPic || typeof defaultPic === 'string' ?\n        <img src={defaultPic as string} alt={t('Empty')}/> : defaultPic\n    return <WrapStyled height={height} {...rest}>\n        {renderPic}\n        <Typography component={'span'} color={'textSecondary'} fontSize={'h6'} marginTop={1}>\n            {message()}\n        </Typography>\n    </WrapStyled>\n}) as (props: EmptyProps & BoxProps) => JSX.Element;\n\n\n\n\n\n","import type { Column as RdgColumn } from 'react-data-grid';\nimport DataGrid, { SortColumn } from 'react-data-grid';\nimport styled from \"@emotion/styled\";\nimport { Trans, WithTranslation } from 'react-i18next';\n\nimport { WithT } from \"i18next\";\nimport React from \"react\";\nimport { Column, DataGridProps, SortableHeaderCell, SortableHeaderCellProps, TableProps } from './';\nimport { EmptyDefault } from '../empty';\n// import loadingSvg from '@loopring-web/common-resources/assets/svg/loading.svg'\nimport { LoadingIcon } from '@loopring-web/common-resources'\nimport { Box } from '@material-ui/core';\n\nconst TableWrapperStyled = styled(Box)`\n  display: flex;\n  position: relative;\n  flex: 1;\n\n  // &::after {\n  //   position: absolute;\n  //   z-index: 20;\n  //   top: 0;\n  //   right: 0;\n  //   bottom: 0;\n  //   left: 0;\n  //   width: 100%;\n  //   height: 100%;\n  //   opacity: 0.1;\n  //   transition: all 0.3s;\n  //   content: '';\n  //   pointer-events: auto;\n  // }\n`\n\nexport const DataGridStyled = styled(DataGrid)`\n  width: 100%;\n  height: 100%;\n\n  &.rdg {\n    min-height: 350px;\n    color: var(--color-text-primary);\n    //color: inherit;\n    box-sizing: border-box;\n    border: rgba(0, 0, 0, 0) 0px solid;\n    //background-color: inherit;\n    font-family: Roboto;\n\n    .rdg-header-row {\n      color: var(--color-text-secondary);\n      width: 100%;\n      background-color: inherit;\n      font-weight: normal;\n    }\n\n    &.scrollable .rdg-header-row {\n      background: var(--color-box);\n    }\n\n    .rdg-header-sort-name {\n      flex-grow: initial;\n    }\n\n    .rdg-header-sort-cell {\n      .rdg-header-sort-name + span {\n        display: none;\n      }\n\n      .rdg-header-sort-name {\n        .sort-icon svg {\n          display: inline-block;\n          transform-origin: center;\n        }\n\n        .DESC svg {\n          transform: rotate(0deg) translateX(-3px) scale(1.2);\n        }\n\n        .ASC svg {\n          transform: rotate(180deg) translateX(-3px) scale(1.2);\n        }\n\n        .NONE svg {\n          transform: rotate(90deg) translateX(-3px) scale(1.2);\n        }\n\n      }\n    }\n\n    .rdg-cell-selected {\n      box-shadow: inherit;\n    }\n\n    .rdg-row {\n      box-sizing: border-box;\n      background-color: inherit;\n      width: 100%;\n\n      &:hover {\n        background: var(--color-box-hover);\n\n        .rdg-cell:first-of-type {\n            // border-left: ${({theme}) => theme.border.borderConfig({d_W: 2, c_key: 'selected'})}\n        }\n      }\n    }\n\n    .rdg-cell {\n      color: inherit;\n      border-left: rgba(0, 0, 0, 0) 2px solid;\n      border-right: rgba(0, 0, 0, 0) 2px solid;\n      border-bottom: rgba(0, 0, 0, 0) 2px solid;\n      box-sizing: border-box;\n      height: 100%;\n    }\n\n    .rdg-cell[aria-selected=true] {\n      box-shadow: none;\n    }\n\n    .rdg-cell.success {\n      color: var(--color-success);\n    }\n\n    .rdg-cell.error {\n      color: var(--color-error);\n    }\n  }\n\n` as typeof DataGrid;\n\nconst LoadingStyled = styled(LoadingIcon)`\n  position: absolute;\n  z-index: 21;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\n// interface Action {\n//     type: 'toggleSubRow' | 'deleteSubRow' | 'refresh' | 'sort';\n//     id: string;\n//     uniqueKey: string;\n// }\n// function reducer<R extends { children: R[], [ key: string ]: any }, SR>(rows: R[], {type, id, uniqueKey}: Action): R[] {\n//     switch (type) {\n//         case 'toggleSubRow':\n//             return toggleSubRow(rows, id, uniqueKey);\n//         case 'deleteSubRow':\n//             return deleteSubRow(rows, id);\n//         default:\n//             return rows;\n//     }\n// }\n\n\nexport const generateColumns = <Row, SR>({\n                                             columnsRaw,\n                                             t\n                                         }: { columnsRaw: readonly Column<Row, SR>[], [ key: string ]: any } & WithT): RdgColumn<Row, SR>[] => {\n    const columns: Column<Row, SR>[] = columnsRaw.reduce((prev: RdgColumn<Row, SR>[], column: Column<Row, SR>) => {\n        const {name, isHidden} = column;\n        if (typeof name === 'string' && !isHidden) {\n            column.name = t(name);\n            prev.push(column);\n        }\n        return prev;\n    }, [])\n    return columns as Column<Row, SR>[];\n}\nexport const generateRows = <Row, SR>(rawData: [][], rest: TableProps<Row, SR>): Row[] => {\n    const {columnMode} = rest;\n    return rawData.map(row => row.reduce((prev: { [ key: string ]: any }, cell, index) => {\n        if (columnMode[ index ]) {\n            prev[ columnMode[ index ].key ] = cell;\n        }\n        return prev;\n    }, {_rawData: row}) as Row)\n};\n\nexport type ExtraTableProps = {\n    showLoading?: boolean\n}\n\n//TODO:\n// {isLoading && <div className={loadMoreRowsClassname}>Loading more rows...</div>\nexport const Table = <R, SR>(props: DataGridProps<R, SR> & WithTranslation & ExtraTableProps) => {\n    const {\n        EmptyRowsRenderer,\n        generateRows,\n        generateColumns,\n        sortInitDirection,\n        sortDefaultKey,\n        sortMethod,\n        rawData,\n        style,\n        frozeSort,\n        rowRenderer,\n        rowClassFn,\n        rowKeyGetter,\n        columnMode,\n        onScroll,\n        onRowClick,\n        rowHeight,\n        showLoading,\n        t,\n        ...rest\n    } = props;\n\n    const columns = generateColumns({columnsRaw: columnMode, t});\n    const [rows, setRows] = React.useState(generateRows(rawData, props));\n\n    React.useEffect(() => {\n        setRows(generateRows(rawData, props));\n    }, [rawData])\n    /*** sort handle start ***/\n    const [sortColumns, setSortColumns] = React.useState<readonly Readonly<SortColumn>[]>([{\n        columnKey: sortDefaultKey as any,\n        direction: sortInitDirection ? sortInitDirection : undefined as any\n    }]);\n\n    // const [[sortColumn, sortDirection], setSort] = React.useState<[string | undefined, SortDirection]>([sortDefaultKey, sortInitDirection ? sortInitDirection : undefined]);\n\n    const sortedRows: readonly R[] = React.useMemo(() => {\n        if (sortColumns.length === 0) return rows;\n        const {columnKey, direction} = sortColumns[ 0 ];\n        let sortedRows: R[] = [...rows];\n        sortedRows = sortMethod ? sortMethod(sortedRows, columnKey, direction) : rows;\n        return direction === 'DESC' ? sortedRows.reverse() : sortedRows;\n\n    }, [rows, sortColumns, sortMethod]);\n    // const [sortColumns, setSortColumns] = React.useState<readonly Readonly<SortColumn>[]>([]);\n    const onSortColumnsChange = React.useCallback((sortColumns: SortColumn[]) => {\n        setSortColumns(sortColumns.slice(-1));\n    }, []);\n\n    const loopringColumns = React.useMemo(() => {\n        return columns.map(c => {\n            if (c.headerRenderer) {\n                return {...c} as Column<R, unknown>;\n            } else {\n                return {\n                    ...c, headerRenderer: (props: SortableHeaderCellProps<R>) => <SortableHeaderCell {...props} />\n                } as Column<R, unknown>;\n            }\n        }) as Column<R, unknown>[];\n    }, [columns]);\n    const RenderEmptyMsg = styled.span`\n      display: flex;\n\n      .link {\n        margin: 0 5px;\n      }\n    `\n\n    /*** sort handle end ***/\n    return <TableWrapperStyled>\n        <DataGridStyled\n            {...rest}\n            onScroll={onScroll}\n            columns={loopringColumns as any}\n            style={style}\n            rows={(sortDefaultKey && sortedRows) ? sortedRows : rows}\n            rowKeyGetter={rowKeyGetter}\n            rowClass={row => rowClassFn ? rowClassFn(row, props) : ''}\n            rowHeight={rowHeight ? rowHeight : 44}\n            onRowsChange={setRows}\n            onSortColumnsChange={onSortColumnsChange}\n            // sortDirection={sortDirection}\n            rowRenderer={rowRenderer as any}\n            sortColumns={sortColumns}\n            onRowClick={onRowClick}\n            emptyRowsRenderer={!showLoading ? (() => EmptyRowsRenderer ? EmptyRowsRenderer :\n                <EmptyDefault height={`calc(100% - var(--header-row-height))`} message={() => {\n                    return <RenderEmptyMsg>\n                        <Trans i18nKey=\"labelEmptyDefault\">\n                            Content is Empty\n                        </Trans>\n                    </RenderEmptyMsg>\n                }}/>) : null}\n        />\n        {showLoading && (\n            <LoadingStyled/>\n        )}\n    </TableWrapperStyled>\n        ;\n    //  <EmptyDefault height={\"calc(100% - 35px)\"} url={'/path'} message={()=>{\n    //  return <>Go to <Link to={'./path'}> link or event</Link> at here</>} } />   }\n}\n","import clsx from 'clsx';\nimport styled from \"@emotion/styled\";\nimport { CalculatedColumn, Cell, RowRendererProps } from \"react-data-grid\";\nimport React from \"react\";\n// import type { Column } from 'react-data-grid';\n\nconst RowDepthStyled = styled.div`\n  contain: strict;\n  contain: size layout style paint;\n  display: grid;\n  grid-template-rows: var(--row-height);\n  grid-template-columns: var(--template-columns);\n  position: absolute;\n  left: 0;\n  width: var(--row-width);\n  height: var(--row-height);\n  line-height: var(--row-height);\n  background-color: var(--background-color);\n\n  .row-background-value {\n    opacity: .06;\n    height: var(--row-height);\n    width: var(--row-width);\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n\n    .rgb-depth-row {\n      float: right;\n      height: var(--row-height);\n      background: var(--color-success);\n\n      &.rgb-depth-red {\n        background: var(--color-error);\n          //background: ${({theme, style}) => theme.colorBase[ style === 'good' ? 'success' : 'error' ]};;\n      }\n    }\n  }\n}\n`;\n\n\nexport interface IDepthRendererProps<R, SR> extends RowRendererProps<R, SR> {\n    depthKey: string,\n    rowBeforeRender: (prors: { depthKey: string, row: R, column: readonly CalculatedColumn<R, SR>[], className: any, [ key: string ]: any }) => JSX.Element\n}\n\nfunction _DepthRow<R, SR = unknown>({\n                                        cellRenderer:\n                                            CellRenderer = Cell,\n                                        className,\n                                        rowIdx,\n                                        isRowSelected,\n                                        copiedCellIdx,\n                                        draggedOverCellIdx,\n                                        row, viewportColumns,\n                                        selectedCellProps,\n                                        onRowClick,\n                                        rowClass,\n                                        setDraggedOverRowIdx,\n                                        onMouseEnter,\n                                        top,\n                                        onRowChange,\n                                        selectCell,\n                                        selectRow,\n                                        rowBeforeRender,\n                                        depthKey,\n                                        'aria-rowindex': ariaRowIndex,\n                                        'aria-selected': ariaSelected,\n                                        ...props\n                                    }: IDepthRendererProps<R, SR> & { selectRow: any }, ref: React.Ref<HTMLDivElement>) {\n    function handleDragEnter(event: React.MouseEvent<HTMLDivElement>) {\n        setDraggedOverRowIdx?.(rowIdx);\n        onMouseEnter?.(event);\n    }\n\n    className = clsx(\n        `rdg-row`,\n        `rdg-row-${rowIdx % 2 === 0 ? 'even' : 'odd'}`,\n        {\n            'rdg-cell-selected': isRowSelected,\n            'rdg-group-row-selected': selectedCellProps?.idx === -1\n        },\n        rowClass?.(row),\n        className\n    );\n    return (\n        <RowDepthStyled\n            role=\"row\"\n            aria-rowindex={ariaRowIndex}\n            aria-selected={ariaSelected}\n            ref={ref}\n            className={className}\n            onMouseEnter={handleDragEnter}\n            style={{top}}\n\n            {...props}\n        >\n            <div className={'row-background-value'}>\n                {rowBeforeRender({row, depthKey, column: viewportColumns, className, ...props})}\n            </div>\n            {\n                viewportColumns.map(column => {\n                    const isCellSelected = selectedCellProps?.idx === column.idx;\n\n                    return CellRenderer && <CellRenderer\n                        {...props}\n                        colSpan={undefined}\n                        key={column.key}\n                        rowIdx={rowIdx}\n                        column={column}\n                        row={row}\n                        isCopied={copiedCellIdx === column.idx}\n                        isDraggedOver={draggedOverCellIdx === column.idx}\n                        isCellSelected={isCellSelected}\n                        // isRowSelected={isRowSelected}\n                        dragHandleProps={isCellSelected ? (selectedCellProps as any).dragHandleProps : undefined}\n                        onFocus={isCellSelected ? (selectedCellProps as any).onFocus : undefined}\n                        onKeyDown={isCellSelected ? selectedCellProps!.onKeyDown : undefined}\n                        onRowClick={onRowClick}\n                        onRowChange={onRowChange}\n                        selectCell={selectCell}\n                        // selectRow={selectRow}\n                    />\n\n                })\n            }\n\n        </RowDepthStyled>\n    );\n}\n\nexport const DepthRow = React.memo(React.forwardRef(_DepthRow)) as unknown as <R, SR = unknown>(props: IDepthRendererProps<R, SR> & React.RefAttributes<HTMLDivElement>) => JSX.Element;\n\nexport const RowBefore = <R, SR>(\n    {\n        row,\n        // isRowSelected,\n        className,\n        column,\n        depthKey,\n        width,\n        // onRowReorder,\n        ...props\n    }: { column: any, width: string } & IDepthRendererProps<R, SR>) => {\n    return <div className={`rgb-depth-row ${className}`} style={{width: width}} {...props}></div>\n}\n","import { HeaderRendererProps } from 'react-data-grid';\n// import { DropDownIcon } from '@loopring-web/common-resources';\nimport styled from '@emotion/styled'\nimport { Box, BoxProps } from '@material-ui/core'\nimport { css } from '@emotion/react';\nimport React from 'react';\n\n// export interface LoopringTBHeaderProps<R> extends HeaderRendererProps<R> {\n//     child?: React.ElementType<any> | JSX.Element,\n// }\n\n// const StyledCellContentWrapper = styled(Box)`\n//   display: flex;\n//   align-items: center;\n//   cursor: pointer;\n// `\nexport const headerSortCell = css`\n  cursor: pointer;\n  display: flex;\n`;\nexport const headerSortName = css`\n  flex-grow: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst StyledArrowSort = styled(Box)<BoxProps & { sortdirection: 'ASC' | 'DESC' | undefined }>`\n  margin-left: ${({theme}) => `${theme.unit / 2}px`};\n  .up {\n    width: 0;\n    height: 0;\n    border: ${({theme}) => `${theme.unit / 2}px`} solid transparent;\n    border-bottom-color: ${({\n                              // theme,\n                              sortdirection\n                            }) => sortdirection === 'ASC' ? `var(--color-text-primary)` : `var(--color-text-secondary)`};\n  }\n\n  .down {\n    width: 0;\n    height: 0;\n    border: ${({theme}) => `${theme.unit / 2}px`} solid transparent;\n    border-top-color: ${({\n                           // theme,\n                           sortdirection\n                         }) => sortdirection === 'DESC' ? `var(--color-text-primary)` : `var(--color-text-secondary)`};\n    margin-top: ${({theme}) => `${theme.unit / 4}px`};\n  }\n` as (props: BoxProps & { sortdirection: 'ASC' | 'DESC' | undefined }) => JSX.Element;\n\nexport const ArrowSort: React.ElementType<BoxProps\n    & { sortDirection: 'ASC' | 'DESC' | undefined }> = ({\n                                                            sortDirection,\n                                                            // children,\n                                                            ...rest\n                                                        }: BoxProps & { sortDirection: 'ASC' | 'DESC' | undefined }) => {\n\n    return <StyledArrowSort {...{...rest}} sortdirection={sortDirection}>\n        <div className=\"up\"/>\n        <div className=\"down\"/>\n    </StyledArrowSort>\n};\n\n\n// type SharedHeaderCellProps<R, SR> = Pick<\n//     HeaderRendererProps<R, SR>,\n//     'sortDirection' | 'onSort' | 'priority'\n//     >;\nexport interface SortableHeaderCellProps<R, SR = unknown> extends HeaderRendererProps<R, SR> {\n    children?: React.ReactNode;\n}\n\nexport function SortableHeaderCell<R, SR>({\n                                              column,\n                                              sortDirection,\n                                              priority,\n                                              onSort,\n                                              children\n                                          }: SortableHeaderCellProps<R, SR>) {\n    // let sortText = '';\n    // if (sortDirection === 'ASC') {\n    //     sortText = '\\u25B2';\n    // } else if (sortDirection === 'DESC') {\n    //     sortText = '\\u25BC';\n    // }\n    if (column.sortable) {\n        // const showUp = sortDirection === 'ASC'\n        // const showDown =  sortDirection === 'DESC'\n\n        return (\n            <Box component={'span'} display={'flex'} alignItems={'center'}\n                 className={`rdg-header-sort-cell ${headerSortCell}`}\n                 onClick={(e: React.MouseEvent) => onSort(e.ctrlKey)}>\n                <span className={`rdg-header-sort-name ${headerSortName}`}>{children ? children : column.name}</span>\n                <ArrowSort {...{sortDirection}}/>\n                {priority}\n            </Box>\n\n        );\n    } else {\n        return <>{children ? children : column.name}</>;\n    }\n\n\n}","import styled from \"@emotion/styled\";\n\n\nconst WrapperClassname = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst ImageCellClassname = styled.div`\n  background: #efefef;\n  background-size: 100%;\n  display: inline-block;\n  height: 28px;\n  width: 28px;\n  vertical-align: middle;\n  background-position: center;\n`;\n\ninterface Props {\n    /** image url, used as background-image */\n    value: string;\n}\n\nexport function ImageFormatter({value}: Props) {\n    return (\n        <WrapperClassname>\n            <ImageCellClassname style={{backgroundImage: `url(${value})`}}/>\n        </WrapperClassname>\n    );\n}\n","import styled from \"@emotion/styled\";\nimport { useFocusRef } from \"../../hook\";\n\nconst CellExpandClassname = styled.div`\n  float: right;\n  display: table;\n  height: 100%;\n\n  > span {\n    display: table-cell;\n    vertical-align: middle;\n    cursor: pointer;\n  }\n`;\n\ninterface CellExpanderFormatterProps {\n    isCellSelected: boolean;\n    expanded: boolean;\n    onCellExpand: () => void;\n}\n\nexport function CellExpanderFormatter({isCellSelected, expanded, onCellExpand}: CellExpanderFormatterProps) {\n    const iconRef = useFocusRef<HTMLSpanElement>(isCellSelected);\n\n    function handleClick(e: React.MouseEvent<HTMLSpanElement>) {\n        e.stopPropagation();\n        onCellExpand();\n    }\n\n    function handleKeyDown(e: React.KeyboardEvent<HTMLSpanElement>) {\n        if (e.key === ' ' || e.key === 'Enter') {\n            e.preventDefault();\n            onCellExpand();\n        }\n    }\n\n    return (\n        <CellExpandClassname>\n      <span\n          onClick={handleClick}\n          onKeyDown={handleKeyDown}\n      >\n        <span\n            ref={iconRef}\n            tabIndex={-1}\n        >\n          {expanded ? '\\u25BC' : '\\u25B6'}\n        </span>\n      </span>\n        </CellExpandClassname>\n    );\n}\n","import styled from \"@emotion/styled\";\nimport { useFocusRef } from \"../../hook\";\n\nconst ChildRowActionCrossClassname = styled.div`\n  &::before,\n  &::after {\n    content: \"\";\n    position: absolute;\n    background: grey;\n  }\n\n  &::before {\n    left: 21px;\n    width: 1px;\n    height: 100%;\n  }\n\n  &::after {\n    top: 50%;\n    left: 20px;\n    height: 1px;\n    width: 15px;\n  }\n\n  &:hover {\n    background: red;\n  }\n`;\n\nconst ChildRowButtonClassname = styled.div`\n  cursor: pointer;\n  position: absolute;\n  left: 21px;\n  transform: translateX(-50%);\n  filter: grayscale(1);\n`;\n\ninterface ChildRowDeleteButtonProps {\n    isCellSelected: boolean;\n    isDeleteSubRowEnabled: boolean;\n    onDeleteSubRow: () => void;\n}\n\nexport function ChildRowDeleteButton({\n                                         isCellSelected,\n                                         onDeleteSubRow,\n                                         isDeleteSubRowEnabled\n                                     }: ChildRowDeleteButtonProps) {\n    const iconRef = useFocusRef<HTMLSpanElement>(isCellSelected);\n\n    function handleKeyDown(e: React.KeyboardEvent<HTMLSpanElement>) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            onDeleteSubRow();\n        }\n    }\n\n    return (\n        <>\n            <ChildRowActionCrossClassname/>\n            {isDeleteSubRowEnabled && (\n                <ChildRowButtonClassname onClick={onDeleteSubRow}>\n          <span\n              ref={iconRef}\n              tabIndex={-1}\n              onKeyDown={handleKeyDown}\n          >\n            ❌\n          </span>\n                </ChildRowButtonClassname>\n            )}\n        </>\n    );\n}\n","import { PopoverOrigin } from '@material-ui/core';\nimport { OneOf } from '@loopring-web/common-resources';\n\nimport * as React from 'react';\nimport { PopupState as InjectedProps } from 'material-ui-popup-state/core';\n\n\nexport enum PopoverType {\n    hover = 'hover',\n    click = 'click'\n}\n\ntype HorizonLeft = {\n    left: number\n}\n\ntype HorizonRight = {\n    right: number\n}\n\n\n// export type PopoverProps = MuiPopoverProps & {\n//     arrowHorizon?: OneOf<[HorizonLeft, HorizonRight]>;\n// }\nexport type PopoverWrapProps = {\n    type: keyof typeof PopoverType;\n    // children: React.ReactNode;\n    className: string;\n    popupId: string;\n    children: JSX.Element | undefined | React.ReactElement;\n    popoverContent: React.ReactNode;\n    // popoverStyle?: React.CSSProperties;\n    anchorOrigin?: PopoverOrigin;\n    transformOrigin?: PopoverOrigin;\n    // popoverTop?: number;\n    handleStateChange?: (state: boolean) => void;\n    // variant: Variant\n    parentPopupState?: InjectedProps | null | undefined\n    disableAutoFocus?: boolean | null\n    arrowHorizon?: OneOf<[HorizonLeft, HorizonRight]>;\n}","import clsx from 'clsx';\nimport styled from \"@emotion/styled\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { CellRendererProps } from \"react-data-grid\";\n\nconst StyleDepth = styled.div`\n  position: absolute;\n  right: 0;\n  height: 100%;\n  z-index: -1;\n  opacity: .06;\n\n  .rgb-depth-cell {\n    width: 100%;\n    background: var(--color-success);\n\n    &.rgb-depth-red {\n      background: var(--color-error);\n        //background: ${({theme, style}) => theme.colorBase[ style === 'good' ? 'success' : 'error' ]};;\n    }\n  }\n\n\n`;\n\n\ninterface IDepthRendererProps<R, SR> extends CellRendererProps<R, SR> {\n    depthKey: string\n}\n\nexport const CellDepthFormatter = <R, SR>({\n                                              t,\n                                              row,\n                                              column,\n                                              className,\n                                              depthKey,\n                                              ...props\n                                          }: WithTranslation & IDepthRendererProps<R, SR>) => {\n    className = clsx(className, {'rgb-depth-cell': true});\n    const style = {width: `${Number((row as any)[ depthKey ]) * 100}%`}\n    return <StyleDepth {...props}>\n        <div className={className} style={style}></div>\n    </StyleDepth>\n}\nexport default withTranslation()(CellDepthFormatter);\n","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport { Popover as MuiPopover, PopoverOrigin, PopoverProps } from '@material-ui/core'\nimport { PopoverWrapProps } from './Interface';\nimport { bindHover, bindMenu, bindPopover, bindTrigger, usePopupState } from 'material-ui-popup-state/hooks';\nimport HoverMenu from 'material-ui-popup-state/HoverMenu';\nimport HoverPopover from 'material-ui-popup-state/HoverPopover';\n\nconst DEFAULT_ANCHOR_ORIGIN: PopoverOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left',\n}\n\nconst DEFAULT_TRANSFORM_ORIGIN: PopoverOrigin = {\n    vertical: 'top',\n    horizontal: 'left',\n}\nconst POPOVER_TOP = 8;\n\nexport const Popover: React.FC<PopoverWrapProps> = ({\n                                                        type,\n                                                        popupId,\n                                                        className,\n                                                        children,\n                                                        popoverContent,\n                                                        // popoverStyle,\n                                                        anchorOrigin = DEFAULT_ANCHOR_ORIGIN,\n                                                        transformOrigin = DEFAULT_TRANSFORM_ORIGIN,\n                                                        // popoverTop = POPOVER_TOP,\n                                                        arrowHorizon = {\n                                                            left: 10,\n                                                        },\n                                                        handleStateChange\n                                                    }) => {\n    const arrowLeft = arrowHorizon?.left\n    const arrowRight = arrowHorizon?.right\n    const popupState = usePopupState({variant: 'popover', popupId})\n    const {isOpen} = popupState\n\n    React.useEffect(() => {\n        if (handleStateChange) {\n            handleStateChange(isOpen)\n        }\n    }, [handleStateChange, isOpen])\n\n    const isHover = type === 'hover'\n    const bindAction = isHover ? bindHover(popupState) : bindTrigger(popupState)\n    const bindContent = isHover ? bindMenu(popupState) : bindPopover(popupState)\n    const CustomPopover = isHover ? HoverMenu : MuiPopover\n\n    const PopoverStyled = styled(CustomPopover)<PopoverProps>`\n      &.MuiModal-root {\n        .MuiBackdrop-root {\n          background-color: inherit;\n        }\n        &.arrow-center,\n        &.arrow-right,\n        &.arrow-left,\n        &.arrow-left,\n        &.arrow-top-center {\n          .MuiPopover-paper {\n            background: var(--color-pop-bg);\n            margin-top: ${({theme}) => theme.unit * 1.5}px;\n            margin-left: ${({theme}) => theme.unit}px;\n            overflow: visible;\n            box-shadow: var(--shadow);\n            border-radius: ${({theme}) => theme.unit * 0.5}px;\n            &:before {\n              position: absolute;\n              top: ${({theme}) => theme.unit * -2}px;\n              content: '';\n              display: block;\n              width: 0;\n              height: 0;\n              border: ${({theme}) => theme.unit}px solid transparent;\n              border-bottom: ${({theme}) => theme.unit}px solid var(--color-pop-bg);\n            }\n          }\n        }\n\n        &.arrow-center .MuiPopover-paper {\n          &:before {\n            left: 50%;\n            transform: translateX(-50%);\n          }\n        }\n\n        &.arrow-right .MuiPopover-paper {\n          &:before {\n            right: ${({theme}) => theme.unit}px;\n          }\n        }\n\n        &.arrow-left .MuiPopover-paper {\n          &:before {\n            left: ${({theme}) => theme.unit}px;\n          }\n        }\n        &.arrow-top-center .MuiPopover-paper {\n          &:before {\n            left: 50%;\n            transform: translateX(-50%) rotate(-180deg);\n            bottom: ${({theme}) => theme.unit * -2}px;\n            top:initial;\n          }\n        }\n      \n    }` as React.ElementType<PopoverProps>\n\n    const getRenderChild = React.useCallback((popoverChildren: React.ReactNode) => {\n        if (React.isValidElement(popoverChildren)) {\n            return React.Children.map(popoverChildren, (child) => React.cloneElement(child, {\n                    ...bindAction,\n                })\n            )\n        }\n        throw new Error('Invalid popover element!')\n    }, [bindAction])\n\n    return <>\n        {getRenderChild(children)}\n        <PopoverStyled\n            {...bindContent}\n            anchorReference='anchorEl'\n            anchorOrigin={anchorOrigin}\n            transformOrigin={transformOrigin}\n            className={className}\n        >\n            {/* <RenderPopover> */}\n                {/* <div className=\"arrowPopover\"/> */}\n                {popoverContent}\n            {/* </RenderPopover> */}\n        </PopoverStyled>\n    </>\n}\n\n// export interface PopoverOrigin {\n//     vertical: 'top' | 'center' | 'bottom' | number;\n//     horizontal: 'left' | 'center' | 'right' | number;\n// }\n\n// background-color: ${({theme}) => theme.colorBase.background().secondary};\n\nexport const PopoverPure = styled(HoverPopover)<PopoverProps>`\n  &.MuiModal-root {\n    .MuiBackdrop-root {\n      background-color: inherit;\n    }\n    &.arrow-center,\n    &.arrow-right,\n    &.arrow-left,\n    &.arrow-left,\n    &.arrow-top-center {\n      .MuiPopover-paper {\n        background:var(--color-pop-bg);\n        overflow: visible;\n        box-shadow: var(--shadow);\n        border-radius: ${({theme}) => theme.unit * 0.5}px;\n        &:before {\n          position: absolute;\n          top: ${({theme}) => theme.unit * -2}px;\n          content: '';\n          display: block;\n          width: 0;\n          height: 0;\n          border: ${({theme}) => theme.unit}px solid transparent;\n          border-bottom: ${({theme}) => theme.unit}px solid var(--color-pop-bg);\n        }\n      }\n    }\n\n    &.arrow-center .MuiPopover-paper {\n      &:before {\n        left: 50%;\n        transform: translateX(-50%);\n      }\n    }\n\n    &.arrow-right .MuiPopover-paper {\n      &:before {\n        right: ${({theme}) => theme.unit}px;\n      }\n    }\n\n    &.arrow-left .MuiPopover-paper {\n      &:before {\n        left: ${({theme}) => theme.unit}px;\n      }\n    }\n    &.arrow-top-center .MuiPopover-paper {\n      &:before {\n        left: 50%;\n        transform: translateX(-50%) rotate(-180deg);\n        bottom: ${({theme}) => theme.unit * -2}px;\n        top:initial;\n      }\n    }\n  \n}\n\n\n` as React.ElementType<PopoverProps>\n\n// export const PopoverPure = ({anchorOrigin,className,children,...rest}:PopoverProps)=>{\n//     return  <PopoverStyled {...{...rest}} className={clsx(className,` arrow-${anchorOrigin?.horizontal}`)} >{children}</PopoverStyled>\n// }","import React from \"react\";\n\nexport const useImage = (src: string) => {\n    const [hasLoaded, setHasLoaded] = React.useState(false);\n    const [hasError, setHasError] = React.useState(false);\n    const [hasStartedInitialFetch, setHasStartedInitialFetch] = React.useState(false);\n\n\n    React.useEffect(() => {\n        setHasStartedInitialFetch(true);\n        setHasLoaded(false);\n        setHasError(false);\n\n        // Here's where the magic happens.\n        const image = new Image();\n        image.src = src;\n        const handleError = () => {\n            setHasError(true);\n        }\n\n        const handleLoad = () => {\n            setHasLoaded(true);\n            setHasError(false);\n        }\n\n        image.addEventListener(\"error\", handleError)\n        image.addEventListener(\"load\", handleLoad);\n\n\n        return () => {\n            image.removeEventListener(\"error\", handleError);\n            image.removeEventListener(\"load\", handleLoad);\n        };\n    }, [src]);\n\n    return {hasLoaded, hasError, hasStartedInitialFetch};\n};","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Grid, MenuItem } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { DatePicker, TextField } from '../../../'\nimport { Button } from '../../../basic-lib/btns'\nimport { DropDownIcon } from '@loopring-web/common-resources'\n\nexport interface FilterProps {\n    handleFilterChange: ({filterType, filterDate, filterToken}: any) => void\n}\n\nexport enum FilterTradeTypes {\n    allTypes = 'All Types',\n    buy = 'Buy',\n    sell = 'Sell'\n}\n\nconst StyledTextFiled = styled(TextField)`\n    &.MuiTextField-root {\n        max-width: initial;\n    }\n    .MuiInputBase-root {\n        width: initial;\n        max-width: initial;\n    }\n`\n\nconst StyledDatePicker = styled(DatePicker)`\n\n`\n\nconst StyledBtnBox = styled(Box)`\n    display: flex;\n    margin-left: 40%;\n\n    button:first-of-type {\n        margin-right: 8px;\n    }\n`\n\nexport const Filter = withTranslation('tables', {withRef: true})(({\n                                                                      t,\n                                                                      handleFilterChange\n                                                                  }: FilterProps & WithTranslation) => {\n    const FilterTradeTypeList = [\n        {\n            label: t('labelOrderFilterAllTypes'),\n            value: 'All Types'\n        },\n        {\n            label: t('labelOrderFilterBuy'),\n            value: 'Buy'\n        },\n        {\n            label: t('labelOrderFilterSell'),\n            value: 'Sell'\n        },\n    ]\n    const [filterType, setFilterType] = React.useState<FilterTradeTypes>(FilterTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = React.useState<Date | any>(null);\n\n    const handleReset = React.useCallback(() => {\n        setFilterType(FilterTradeTypes.allTypes)\n        setFilterDate(null)\n        handleFilterChange({\n            filterType: FilterTradeTypes.allTypes,\n            filterDate: null,\n        })\n    }, [handleFilterChange])\n\n    const handleSearch = React.useCallback(() => {\n        handleFilterChange({\n            filterType,\n            filterDate,\n        })\n    }, [handleFilterChange, filterDate, filterType])\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-order-filter-types\"\n                    select\n                    fullWidth\n                    value={filterType}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                        setFilterType(event.target.value as FilterTradeTypes);\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                    // > {Object.values(FilterTradeTypes).map(type => <MenuItem key={type} value={type}>{t(type)}</MenuItem>)}\n                > {FilterTradeTypeList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <StyledDatePicker value={filterDate} onChange={(newValue: any) => setFilterDate(newValue)}/>\n            </Grid>\n            <Grid item>\n                <StyledBtnBox>\n                    <Button variant={'outlined'} size={'medium'} color={'primary'}\n                            onClick={handleReset}>{t('labelFilterReset')}</Button>\n                    <Button variant={'contained'} size={'small'} color={'primary'}\n                            onClick={handleSearch}>{t('labelFilterSearch')}</Button>\n                </StyledBtnBox>\n            </Grid>\n        </Grid>\n    )\n})\n","import React from 'react'\nimport { Box, Pagination } from '@material-ui/core'\nimport styled from '@emotion/styled'\n\nconst StyledPaginationWrapper = styled(Box)`\n    height: 36px;\n    position: relative;\n`\n\nconst StyledPagination = styled(Pagination)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport type PaginationProps = {\n    page: number;\n    pageSize: number;\n    total: number;\n    onPageChange: (page: number) => void;\n}\n\nexport const TablePagination = ({onPageChange, page, pageSize, total}: PaginationProps) => {\n    const getCount = React.useCallback(() => {\n        if (!total) return 0\n        return total % pageSize > 0\n            ? parseInt(String(total / pageSize)) + 1\n            : parseInt(String(total / pageSize))\n    }, [pageSize, total])\n\n    const handleChange = React.useCallback((_, value: number) => {\n        onPageChange(value)\n    }, [onPageChange]);\n\n    return (\n        <StyledPaginationWrapper>\n            <StyledPagination color={'primary'} count={getCount()} page={page} onChange={handleChange}/>\n        </StyledPaginationWrapper>\n    );\n}\n","import { SvgIcon } from '@material-ui/core';\n\nexport const NewTagIcon = () => <SvgIcon className={'tag'} width=\"25\" height=\"12\" viewBox=\"0 0 25 12\" fill=\"none\"\n                                         xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M0 6C0 2.68629 2.68629 0 6 0H19C22.3137 0 25 2.68629 25 6C25 9.31371 22.3137 12 19 12H6C2.68629 12 0 9.31371 0 6Z\"\n        fill=\"#F46253\"/>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n          d=\"M9.53831 2.54004H8.38131V6.88422L5.38532 2.54004H4.46631V9.16004H5.62331V4.80767L8.6192 9.16004H9.53831V2.54004Z\"\n          fill=\"white\"/>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n          d=\"M12.8229 8.21904C12.4264 8.21904 12.1019 8.11638 11.84 7.91884C11.6327 7.75888 11.4848 7.54497 11.3988 7.27004H15.1027L15.1231 7.13377C15.1423 7.00642 15.1519 6.88147 15.1519 6.75904C15.1519 6.0677 14.9287 5.47103 14.4811 4.97824C14.0349 4.4743 13.4535 4.22304 12.7509 4.22304C12.0169 4.22304 11.4068 4.46199 10.9353 4.94644C10.4657 5.42883 10.2329 6.03401 10.2329 6.75004C10.2329 7.4723 10.4689 8.08088 10.945 8.56342L10.9465 8.56493C11.4305 9.04239 12.0548 9.27704 12.8049 9.27704C13.7352 9.27704 14.4487 8.9153 14.9193 8.18686L15.0113 8.04453L14.0637 7.50672L13.9827 7.63808C13.7468 8.0208 13.3715 8.21904 12.8229 8.21904ZM14.7849 8.10009C14.7849 8.10007 14.7849 8.10011 14.7849 8.10009ZM11.393 6.26604C11.4701 5.99196 11.61 5.773 11.8104 5.60308L11.8119 5.60178C12.0545 5.39082 12.3634 5.28104 12.7509 5.28104C13.0751 5.28104 13.3539 5.37992 13.5943 5.57763C13.7894 5.73807 13.9285 5.96388 14.0047 6.26604H11.393ZM14.1999 6.42604C14.1914 6.371 14.1812 6.31767 14.1692 6.26604C14.1014 5.9724 13.9785 5.73383 13.8005 5.55032C14.0098 5.76611 14.1429 6.05791 14.1999 6.42604L11.1941 6.4262C11.1941 6.42625 11.1941 6.42614 11.1941 6.4262L14.1999 6.42604Z\"\n          fill=\"white\"/>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n          d=\"M22.0533 4.34004H20.8969L20.0218 7.37085L19.0832 4.34004H18.0914L17.1526 7.3632L16.2775 4.34004H15.1211L16.6153 9.16004H17.6514L18.5872 6.20072L19.523 9.16004H20.5591L22.0533 4.34004Z\"\n          fill=\"white\"/>\n</SvgIcon>\n\n","import styled from '@emotion/styled'\nimport { Box, Button } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from 'react-i18next'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport {\n    EmptyValueTag,\n    FloatTag,\n    getThousandFormattedNumbers,\n    StarHollowIcon,\n    StarSolidIcon\n} from '@loopring-web/common-resources'\nimport { Column, Table } from '../../basic-lib/tables/index'\nimport { TablePaddingX } from '../../styled'\nimport { IconButton, Typography } from '@material-ui/core/';\nimport { useSettings } from '@loopring-web/component-lib/src/stores'\nimport { useDispatch } from 'react-redux'\n\nconst TableWrapperStyled = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n`\n\nconst TableStyled = styled(Table)`\n    &.rdg{\n        height: ${(props: any) => props.currentHeight}px;\n        // height: 100%;\n        --template-columns: 240px auto auto auto auto auto 92px !important;\n        .rdg-cell.action{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n    }\n    .textAlignRight{\n        text-align: right;\n    }\n`\n\n// export type QuoteTableRawDataItem = (string | number | string[] | number[])[]\nexport type QuoteTableRawDataItem = {\n    pair: {\n        coinA: string;\n        coinB: string;\n    }\n    close: number;\n    change: number;\n    high: number;\n    low: number;\n    floatTag: keyof typeof FloatTag\n    volume: number;\n}\n\nconst QuoteTableChangedCell: any = styled.span`\n\tcolor: ${(props: any) => {\n    const {theme: {colorBase}, upColor} = props\n    const isUpColorGreen = upColor === 'green'\n    return props.value > 0\n        ? isUpColorGreen\n            ? colorBase.success\n            : colorBase.error\n        : props.value < 0\n            ? isUpColorGreen\n                ? colorBase.error\n                : colorBase.success\n            : colorBase.textSecondary\n}\n}\n`\n\n// const StarIconWrapperStyled = styled(Box)`\n//     color: var(--color-star);\n//     margin: ${({theme}) => theme.unit}px ${({theme}) => theme.unit}px 0 0;\n// ` as typeof Box\n\ntype IGetColumnModePros = {\n    t: any,\n    history: any,\n    upColor: 'green' | 'red',\n    handleStartClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>, isFavourite: boolean, pair: string) => void,\n    favoriteMarket: string[]\n}\n\n// const getColumnModelQuoteTable = (t: TFunction, history: any): Column<Row, unknown>[] => [\nconst getColumnMode = (props: IGetColumnModePros): Column<QuoteTableRawDataItem, unknown>[] => {\n    const {t: {t}, history, upColor, handleStartClick, favoriteMarket} = props\n    return (\n        [\n            {\n                key: 'pair',\n                name: t('labelQuotaPair'),\n                // sortable: true,\n                // resizable: true,\n                sortable: true,\n                formatter: ({row}) => {\n                    const {coinA, coinB} = row[ 'pair' ]\n                    const pair = `${coinA}-${coinB}`\n                    const isFavourite = favoriteMarket?.includes(pair)\n                    return (\n                        <Box className=\"rdg-cell-value\"\n                            display={'flex'}\n                            alignItems={'center'}\n                            >\n                            <Typography  marginRight={1}>\n                                <IconButton style={{color:'var(--color-star)'}} size={'medium'} onClick={(e:any) => handleStartClick(e, isFavourite, pair)}>\n                                    {isFavourite ? (\n                                        <StarSolidIcon  cursor={'pointer'}/>\n                                    ) : (\n                                        <StarHollowIcon cursor={'pointer'}/>\n                                    )}\n                                </IconButton>\n                            </Typography>\n                            <Typography component={'span'}>\n                                {coinA}\n                                <Typography\n                                    component={'span'}\n                                    color={'textSecondary'}\n                                >\n                                    / {coinB}\n                                </Typography>\n                            </Typography>\n                        </Box>\n                    )\n                },\n            },\n            {\n                key: 'close',\n                name: t('labelQuotaLastPrice'),\n                sortable: true,\n                // resizable: true,\n                formatter: ({row}) => {\n                    const value = row[ 'close' ]\n                    // const [valueFirst, valueLast] = value\n                    // const getRenderValue = (value: number) => {\n                    //     return Number.isFinite(value) ? value.toFixed(2) : EmptyValueTag;\n                    // }\n                    // const RenderValue = styled.span`\n                    // \tcolor: var(--color-text-secondary)\n                    // `\n                    return (\n                        <div className=\"rdg-cell-value\">\n                            <span>{typeof value !== 'undefined' ? getThousandFormattedNumbers(value) : EmptyValueTag}</span>\n                        </div>\n                    )\n                },\n            },\n            {\n                key: 'change',\n                name: t('labelQuota24hChange'),\n                // resizable: true,\n                sortable: true,\n                formatter: ({row}) => {\n                    const value = row.change\n\n                    // const hasValue = Number.isFinite(value)\n                    // const isPositive = value > 0\n                    // const sign = isPositive ? '+' : ''\n                    // const renderValue = hasValue ? `${sign}${value.toFixed(2)}%` : 'N/A%'\n                    return (\n                        <div className=\"rdg-cell-value\">\n                            <QuoteTableChangedCell value={value} upColor={upColor}>\n                                {typeof value !== 'undefined' ? (\n                                    (row.floatTag === FloatTag.increase ? '+' : '') + Number(getThousandFormattedNumbers(value)).toFixed(2) + '%') : EmptyValueTag}\n                            </QuoteTableChangedCell>\n                        </div>\n                    )\n                },\n            },\n            {\n                key: 'high',\n                name: t('labelQuota24hHigh'),\n                // resizable: true,\n                sortable: true,\n                formatter: ({row, column}) => {\n                    const value = row[ column.key ]\n                    // const hasValue = Number.isFinite(value)\n                    // const renderValue = hasValue ? value.toFixed(2) : EmptyValueTag\n                    return (\n                        <div className=\"rdg-cell-value\">\n                            <span>{typeof value !== 'undefined' ? getThousandFormattedNumbers(value) : EmptyValueTag}</span>\n                        </div>\n                    )\n                },\n            },\n            {\n                key: 'low',\n                name: t('labelQuota24hLow'),\n                // resizable: true,\n                sortable: true,\n                formatter: ({row, column}) => {\n                    const value = row[ column.key ]\n                    // const hasValue = Number.isFinite(value)\n                    // const renderValue = hasValue ? value.toFixed(2) : EmptyValueTag\n                    return (\n                        <div className=\"rdg-cell-value\">\n                            <span>{typeof value !== 'undefined' ? getThousandFormattedNumbers(value) : EmptyValueTag}</span>\n                        </div>\n                    )\n                },\n            },\n            {\n                key: 'volume',\n                name: t('labelQuota24Volume'),\n                // resizable: true,\n                sortable: true,\n                formatter: ({row}) => {\n                    const value = row[ 'volume' ]\n                    return (\n                        <div className=\"rdg-cell-value\">\n                            <span>{typeof value !== 'undefined' ? getThousandFormattedNumbers(value) : EmptyValueTag}</span>\n                        </div>\n                    )\n                },\n            },\n            {\n                key: 'actions',\n                // resizable: true,\n                headerCellClass: 'textAlignRight',\n                name: t('labelQuoteAction'),\n                formatter: ({row}) => {\n                    const {coinA, coinB} = row[ 'pair' ]\n                    const tradePair = `${coinA}-${coinB}`\n                    return (\n                        <div className=\"rdg-cell-value\">\n                            <Button variant=\"outlined\" onClick={() => history.push({\n                                pathname: `/trading/lite/${tradePair}`\n                            })}>Trade</Button>\n                        </div>\n                    )\n                }\n            }\n        ]\n    )\n}\n\nexport interface QuoteTableProps {\n    rawData: QuoteTableRawDataItem[];\n    rowHeight?: number;\n    onVisibleRowsChange?: (startIndex: number) => void;\n    onRowClick?: (rowIdx: number, row: QuoteTableRawDataItem, column: any) => void;\n    favoriteMarket: string[];\n    addFavoriteMarket: (pair: string) => void;\n    removeFavoriteMarket: (pair: string) => void;\n    currentHeight?: number;\n    // generateColumns: ({\n    //                       columnsRaw,\n    //                       t,\n    //                       ...rest\n    //                   }: { columnsRaw: readonly Column<R,unknown>[], [ key: string ]: any } & WithT) => Array<RdgColumns<R>>;\n}\n\nexport type VisibleDataItem = {\n    coinA: string;\n    coinB: string;\n}\n\nexport const QuoteTable = withTranslation('tables')(withRouter(({\n                                                                    t,\n                                                                    currentHeight = 350,\n                                                                    rowHeight = 44,\n                                                                    onVisibleRowsChange,\n                                                                    rawData,\n                                                                    history,\n                                                                    onRowClick,\n                                                                    favoriteMarket,\n                                                                    addFavoriteMarket,\n                                                                    removeFavoriteMarket,\n                                                                    ...rest\n                                                                }: QuoteTableProps & WithTranslation & RouteComponentProps) => {\n    //const formattedRawData = rawData && Array.isArray(rawData) ? rawData : []\n\n    // const getScrollIndex = useCallback((e) => {\n    //     const startIndex = parseInt(String(e.target.scrollTop / rowHeight))\n    //     // const data = rawData && Array.isArray(rawData) ? rawData : []\n    //     // const viewportRows = data.slice(startIndex, startIndex + 10).map(o => ({\n    //     //     coinA: o.pair.coinA,\n    //     //     coinB: o.pair.coinB\n    //     // }))\n    //     if (onVisibleRowsChange) {\n    //         onVisibleRowsChange(startIndex)\n    //     }\n    // }, [onVisibleRowsChange, rawData])\n\n    let userSettings = useSettings()\n    const upColor = userSettings?.upColor\n\n    const dispatch = useDispatch()\n\n    const handleStartClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, isFavourite: boolean, pair: string) => {\n        // console.log(isFavoourite, pair)\n        event.stopPropagation()\n        if (isFavourite) {\n            dispatch(removeFavoriteMarket(pair))\n            return\n        }\n        dispatch(addFavoriteMarket(pair))\n    }\n\n    // const finalData = formattedRawData.map(o => Object.values(o))\n    const defaultArgs: any = {\n        rawData: [],\n        columnMode: getColumnMode({\n            t: {t},\n            history,\n            upColor,\n            handleStartClick,\n            favoriteMarket,\n        }),//getColumnModelQuoteTable(t, history),\n        generateRows: (rawData: any) => rawData,\n        onRowClick: onRowClick,\n        generateColumns: ({columnsRaw}: any) => columnsRaw as Column<QuoteTableRawDataItem, unknown>[],\n        sortMethod: (sortedRows: QuoteTableRawDataItem[], sortColumn: string) => {\n            switch (sortColumn) {\n                case 'pair':\n                    sortedRows = sortedRows.sort((a, b) => {\n                        const valueA = a.pair.coinA\n                        const valueB = b.pair.coinA\n                        return valueA.localeCompare(valueB)\n                    })\n                    break;\n                case 'close':\n                    sortedRows = sortedRows.sort((a, b) => {\n                        const valueA = a[ 'close' ]\n                        const valueB = b[ 'close' ]\n                        if (valueA && valueB) {\n                            return valueB - valueA\n                        }\n                        if (valueA && !valueB) {\n                            return -1\n                        }\n                        if (!valueA && valueB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    break;\n                case 'change':\n                    sortedRows = sortedRows.sort((a, b) => {\n                        const valueA = a[ 'change' ]\n                        const valueB = b[ 'change' ]\n                        if (valueA && valueB) {\n                            return valueB - valueA\n                        }\n                        if (valueA && !valueB) {\n                            return -1\n                        }\n                        if (!valueA && valueB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    break;\n                case 'high':\n                    sortedRows = sortedRows.sort((a, b) => {\n                        const valueA = a[ 'high' ]\n                        const valueB = b[ 'high' ]\n                        if (valueA && valueB) {\n                            return valueB - valueA\n                        }\n                        if (valueA && !valueB) {\n                            return -1\n                        }\n                        if (!valueA && valueB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    break;\n                case 'low':\n                    sortedRows = sortedRows.sort((a, b) => {\n                        const valueA = a[ 'low' ]\n                        const valueB = b[ 'low' ]\n                        if (valueA && valueB) {\n                            return valueB - valueA\n                        }\n                        if (valueA && !valueB) {\n                            return -1\n                        }\n                        if (!valueA && valueB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    break;\n                case 'volume':\n                    sortedRows = sortedRows.sort((a, b) => {\n                        const valueA = a[ 'volume' ]\n                        const valueB = b[ 'volume' ]\n                        if (valueA && valueB) {\n                            return valueB - valueA\n                        }\n                        if (valueA && !valueB) {\n                            return -1\n                        }\n                        if (!valueA && valueB) {\n                            return 1\n                        }\n                        return 0\n                    })\n                    break;\n                default:\n                    return sortedRows\n            }\n            return sortedRows;\n        },\n        sortDefaultKey: 'change'\n    }\n\n    return (\n        <TableWrapperStyled>\n            <TableStyled currentHeight={currentHeight} className={'scrollable'} {...{\n                ...defaultArgs, ...rest,\n                onVisibleRowsChange,\n                rawData,\n                rowHeight\n            }}\n                /* onScroll={getScrollIndex} */ />\n        </TableWrapperStyled>\n    )\n}))\n","import { Column, generateColumns, generateRows, Table, } from '../../basic-lib'\nimport { OrderHistoryTableDetailItem, OrderPair } from './OrderHistoryTable'\nimport { TFunction, withTranslation, WithTranslation } from 'react-i18next';\nimport { EmptyValueTag } from '@loopring-web/common-resources';\n\ninterface Row {\n    amount: OrderPair\n    tradingPrice: number\n    filledPrice: number\n    time: number\n    total: {\n        key: string;\n        value: number;\n    }\n    sortColumn: string\n    filterColumn: string\n    actionsStatus: object\n}\n\nconst getColumnModeSingleHistory = (t: TFunction): Column<Row, unknown>[] => {\n    return [\n        {\n            key: 'amount',\n            name: t('labelOrderAmount'),\n            formatter: ({row, column}) => {\n                const {from, to} = row[ column.key ]\n                const {key: keyFrom, value: valueFrom} = from\n                const {key: keyTo, value: valueTo} = to\n                const renderValue = `${valueFrom} ${keyFrom}->${valueTo} ${keyTo}`\n                return <div className=\"rdg-cell-value\">{renderValue}</div>\n            },\n        },\n        {\n            key: 'tradingPrice',\n            name: t('labelOrderTradingPrice'),\n            formatter: ({row, column}) => {\n                const value = row[ column.key ]\n                const hasValue = Number.isFinite(value)\n                const renderValue = hasValue ? value.toFixed(5) : EmptyValueTag\n                return <div className=\"rdg-cell-value\">{renderValue}</div>\n            },\n        },\n        {\n            key: 'filledPrice',\n            name: t('labelOrderFilledPrice'),\n            formatter: ({row, column}) => {\n                const value = row[ column.key ]\n                const hasValue = Number.isFinite(value)\n                const renderValue = hasValue ? value.toFixed(5) : EmptyValueTag\n                return <div className=\"rdg-cell-value\">{renderValue}</div>\n            },\n        },\n        {\n            key: 'time',\n            name: t('labelOrderTime'),\n            formatter: ({row, column}) => {\n                const value = row[ column.key ]\n                const renderValue = Number.isFinite(value)\n                    ? `${value} Days`\n                    : EmptyValueTag\n                return (\n                    <div className=\"rdg-cell-value\">\n                        <span>{renderValue}</span>\n                    </div>\n                )\n            },\n        },\n        {\n            key: 'total',\n            name: t('labelOrderTotal'),\n            formatter: ({row, column}) => {\n                const {key, value} = row[ column.key ]\n                const hasValue = Number.isFinite(value)\n                const renderValue = hasValue ? `${value.toFixed(4)} ${key}` : EmptyValueTag\n                return (\n                    <div className=\"rdg-cell-value\">\n                        <span>{renderValue}</span>\n                    </div>\n                )\n            },\n        },\n    ];\n}\n\nexport interface SingleOrderHistoryTableProps {\n    rawData: OrderHistoryTableDetailItem[]\n}\n\nexport const SingleOrderHistoryTable = withTranslation()((props: SingleOrderHistoryTableProps & WithTranslation) => {\n    const defaultArgs: any = {\n        rawData: [],\n        columnMode: getColumnModeSingleHistory(props.t),\n        generateRows,\n        generateColumns,\n    }\n    const formattedRawData = props.rawData.map(o => Object.values(o))\n    return <Table {...{...defaultArgs, ...props, rawData: formattedRawData}} />\n})\n","export enum TransactionTradeTypes {\n    allTypes = 'All Types',\n    deposit = 'Deposit',\n    withdraw = 'Withdraw',\n    transfer = 'Transfer'\n}\n\n// export type TransactionSide = {\n//     address: string;\n//     env: string;\n// }\n\nexport enum TransactionStatus {\n    processing = \"processing\",\n    processed = \"processed\",\n    received = \"received\",\n    failed = \"failed\"\n}\n\nexport type RawDataTransactionItem = {\n    side: TransactionTradeTypes,\n    // token?: string,\n    // tradeType: TransactionTradeTypes,\n    // from: string;\n    // to: string;\n    amount: {\n        unit: string;\n        value: number;\n    }\n    fee: {\n        unit: string;\n        value: number;\n    };\n    memo?: string;\n    time: number;\n    txnHash: string;\n    status: TransactionStatus;\n    path?: string;\n}","import { useCallback, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Box } from '@material-ui/core'\nimport { TFunction, WithTranslation, withTranslation } from 'react-i18next';\nimport moment from 'moment'\nimport { DropDownIcon, EmptyValueTag, TableType, TradeStatus, TradeTypes } from '@loopring-web/common-resources'\nimport { Column, generateColumns, generateRows, Popover, PopoverType, Table, TablePagination } from '../../basic-lib'\nimport { SingleOrderHistoryTable } from './SingleOrderHistoryTable'\nimport { Filter, FilterTradeTypes } from './components/Filter'\nimport { TableFilterStyled, TablePaddingX } from '../../styled'\n\n// export enum OrderSide {\n//     sell = 'Sell',\n//     buy = 'Buy'\n// }\n\n\n// enum ActionType {\n//     filter = 'filter',\n//     page = 'page'\n// }\n\nexport type OrderPair = {\n    from: {\n        key: string;\n        value: number;\n    };\n    to: {\n        key: string;\n        value: number;\n    }\n}\n\nexport interface OrderHistoryRow {\n    side: keyof typeof TradeTypes\n    amount: OrderPair\n    average: number\n    filledAmount: OrderPair\n    filledPrice: number\n    time: number\n    status: keyof typeof TradeStatus;\n    sortColumn: string\n    filterColumn: string\n    actionsStatus: object\n}\n\nexport type OrderHistoryTableDetailItem = {\n    amount: OrderPair;\n    tradingPrice: number;\n    filledPrice: number;\n    time: number;\n    total: {\n        key: string;\n        value: number;\n    }\n}\n\nexport type OrderHistoryRawDataItem = {\n    side: TradeTypes;\n    amount: OrderPair;\n    average: number;\n    filledAmount: OrderPair;\n    filledPrice: {\n        key: string;\n        value: number;\n    }\n    time: number;\n    status: TradeStatus;\n    detailTable: OrderHistoryTableDetailItem[]\n}\n\nconst LastDayPriceChangedCell: any = styled(Box)`\n  color: ${(props: any) => {\n    const {\n      value,\n      theme: {colorBase},\n    } = props\n    return value === TradeTypes.Buy ? colorBase.success : colorBase.error\n  }};\n`\n\nconst TableStyled = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .rdg {\n    --template-columns: 80px 150px auto 150px auto auto 130px !important;\n\n    .rdg-cell.action {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n  ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as typeof Box\n\nexport interface OrderHistoryTableProps {\n    rawData: OrderHistoryRawDataItem[];\n    pagination?: {\n        pageSize: number;\n    }\n    showFilter?: boolean\n}\n\nconst getColumnModeOrderHistory = (t: TFunction): Column<OrderHistoryRow, unknown>[] => [\n    {\n        key: 'side',\n        name: t('labelOrderSide'),\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            return (\n                <div className=\"rdg-cell-value\">\n                    <LastDayPriceChangedCell value={value}>\n                        {value}\n                    </LastDayPriceChangedCell>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'amount',\n        name: t('labelOrderAmount'),\n        formatter: ({row, column}) => {\n            const {from, to} = row[ column.key ]\n            const {key: keyFrom, value: valueFrom} = from\n            const {key: keyTo, value: valueTo} = to\n            const renderValue = `${valueFrom} ${keyFrom}->${valueTo} ${keyTo}`\n            return <div className=\"rdg-cell-value\">{renderValue}</div>\n        },\n    },\n    {\n        key: 'average',\n        name: t('labelOrderAverage'),\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            const hasValue = Number.isFinite(value)\n            const renderValue = hasValue ? value.toFixed(6) : EmptyValueTag\n            return <div className=\"rdg-cell-value\">{renderValue}</div>\n        },\n    },\n    {\n        key: 'filledAmount',\n        name: t('labelOrderFilledAmount'),\n        formatter: ({row, column}) => {\n            const {from, to} = row[ column.key ]\n            const {key: keyFrom, value: valueFrom} = from\n            const {key: keyTo, value: valueTo} = to\n            const renderValue = `${valueFrom} ${keyFrom}->${valueTo} ${keyTo}`\n            return <div className=\"rdg-cell-value\">{renderValue}</div>\n        },\n    },\n    {\n        key: 'filledPrice',\n        name: t('labelOrderFilledPrice'),\n        formatter: ({row, column}) => {\n            const {value, key} = row[ column.key ]\n            // const unit = (row as any).amount[ 0 ].key;\n            const hasValue = Number.isFinite(value)\n            const renderValue = hasValue ? `${value.toFixed(6)} ${key}` : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{renderValue}</span>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'time',\n        name: t('labelOrderTime'),\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            const renderValue = Number.isFinite(value)\n                ? moment(new Date(row[ 'time' ]), \"YYYYMMDDHHMM\").fromNow()\n                : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{renderValue}</span>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'status',\n        name: t('labelOrderStatus'),\n        formatter: ({row, column, rowIdx}) => <>\n            <CellStatus {...{row, column, rowIdx}} />\n        </>\n    }, {\n        key: 'detail',\n        name: '',\n        hidden: true\n    }\n]\n\nconst CellStatus = ({row, column, rowIdx}: any) => {\n    const value = row[ column.key ]\n    const popupId = `${column.key}-${rowIdx}`\n    const [isOpen, setIsOpen] = useState(false)\n    const RenderValue: any = styled.span`\n      position: relative;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      color: ${({theme}) => {\n        const {colorBase} = theme\n        return value === TradeStatus.Processed\n                ? colorBase.success\n                : value === TradeStatus.Expired ? colorBase.textSecondary\n                        : colorBase.textPrimary\n      }};\n      width: 110px;\n      padding-right: 10px;\n\n      & svg {\n        font-size: 14px;\n        transition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n        transform: ${() => isOpen ? 'rotate(180deg)' : ''};\n      }\n    `\n    const popupContent = [\n        {\n            amount: {\n                from: {\n                    key: 'ETH',\n                    value: 1.05\n                },\n                to: {\n                    key: 'LRC',\n                    value: 2454.33\n                }\n            },\n            tradingPrice: 2934.07,\n            filledPrice: 2935.00,\n            time: 1,\n            total: {\n                key: 'LRC',\n                value: 850\n            }\n        },\n        {\n            amount: {\n                from: {\n                    key: 'ETH',\n                    value: 1.05\n                },\n                to: {\n                    key: 'LRC',\n                    value: 2454.33\n                }\n            },\n            tradingPrice: 2934.07,\n            filledPrice: 2935.00,\n            time: 1,\n            total: {\n                key: 'LRC',\n                value: 850\n            }\n        },\n        {\n            amount: {\n                from: {\n                    key: 'ETH',\n                    value: 1.05\n                },\n                to: {\n                    key: 'LRC',\n                    value: 2454.33\n                }\n            },\n            tradingPrice: 2934.07,\n            filledPrice: 2935.00,\n            time: 1,\n            total: {\n                key: 'LRC',\n                value: 850\n            }\n        },\n    ]\n\n    const RenderPopover = styled.div`\n      width: 700px;\n      margin: 12px;\n      max-height: 250px;\n\n      .contentWrapper {\n        max-height: 250px;\n        overflow: scroll;\n      }\n    `\n    let actualValue = ''\n    switch (value) {\n        case TradeStatus.Processing:\n            actualValue = 'Processing';\n            break;\n        case TradeStatus.Processed:\n            actualValue = 'Processed';\n            break;\n        case TradeStatus.Cancelling:\n            actualValue = 'Cancelling';\n            break;\n        case TradeStatus.Cancelled:\n            actualValue = 'Cancelled';\n            break;\n        case TradeStatus.Expired:\n            actualValue = 'Expired'\n            break;\n        case TradeStatus.Waiting:\n            actualValue = 'Waiting'\n            break;\n        default:\n            actualValue = ''\n    }\n    const triggerContent =\n        <div style={{width: 110}}>\n            <RenderValue>\n                {actualValue}\n                <DropDownIcon/>\n            </RenderValue>\n        </div>\n\n    const popoverContent =\n        <RenderPopover>\n            <div className=\"arrowPopover\"/>\n            <div className=\"contentWrapper\">\n                <SingleOrderHistoryTable rawData={popupContent}/>\n            </div>\n        </RenderPopover>\n\n    return <div className=\"rdg-cell-value\">\n        <Popover\n            type={PopoverType.click}\n            popupId={popupId}\n            className={'arrow-right'}\n            // children={triggerContent}\n            popoverContent={popoverContent}\n            handleStateChange={setIsOpen}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n        >\n            {triggerContent}\n        </Popover>\n    </div>\n}\n\nexport const OrderHistoryTable = withTranslation('tables')((props: OrderHistoryTableProps & WithTranslation) => {\n    const {t, rawData, pagination, showFilter} = props\n    const actionColumns = ['status']\n    const defaultArgs: any = {\n        rawData: [],\n        columnMode: getColumnModeOrderHistory(t).filter(o => !o.hidden),\n        generateRows,\n        generateColumns,\n        actionColumns,\n        style: {\n            backgroundColor: ({colorBase}: any) => `${colorBase.box}`\n        }\n    }\n\n    const formattedRawData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n    const [filterType, setFilterType] = useState(FilterTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = useState(null)\n    const [page, setPage] = useState(1)\n    const [totalData, setTotalData] = useState(formattedRawData)\n\n    useEffect(() => {\n        setTotalData(rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : [])\n    }, [rawData])\n\n    const pageSize = pagination ? pagination.pageSize : 10\n\n    const getRenderData = useCallback(() => pagination\n        ? totalData.slice((page - 1) * pageSize, page * pageSize)\n        : totalData\n        , [page, pageSize, pagination, totalData])\n\n    const updateData = useCallback(({\n                                        actionType,\n                                        currFilterType = filterType,\n                                        currFilterDate = filterDate,\n                                    }) => {\n        // let resultData = cloneDeep(formattedRawData)\n        let resultData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n        // o[0]: tradeType\n        if (currFilterType !== FilterTradeTypes.allTypes) {\n            resultData = resultData.filter(o => o[ 0 ] === currFilterType)\n        }\n        if (currFilterDate) {\n            const diff = moment(moment()).diff(currFilterDate, 'days')\n            // o[5]: date\n            resultData = resultData.filter(o => o[ 5 ] === diff)\n        }\n        if (actionType === 'filter') {\n            setPage(1)\n        }\n        setTotalData(resultData)\n    }, [rawData, filterDate, filterType])\n\n    const handleFilterChange = useCallback(({filterType, filterDate}) => {\n        setFilterType(filterType)\n        setFilterDate(filterDate)\n        updateData({actionType: TableType.filter, currFilterType: filterType, currFilterDate: filterDate})\n    }, [updateData])\n\n    const handlePageChange = useCallback((page: number) => {\n        setPage(page)\n        updateData({actionType: TableType.page, currPage: page})\n    }, [updateData])\n\n    return <TableStyled>\n        {showFilter && (\n            <TableFilterStyled>\n                <Filter handleFilterChange={handleFilterChange}/>\n            </TableFilterStyled>\n        )}\n        <Table {...{...defaultArgs, ...props, rawData: getRenderData()}} />\n        {\n            pagination && (\n                <TablePagination page={page} pageSize={pageSize} total={totalData.length}\n                                 onPageChange={handlePageChange}/>\n            )\n        }\n    </TableStyled>\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Grid, MenuItem } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { TextField, DateRangePicker } from '../../../basic-lib/form'\nimport { Button } from '../../../basic-lib/btns'\nimport { DropDownIcon } from '@loopring-web/common-resources'\nimport { TransactionTradeTypes, RawDataTransactionItem } from '../Interface'\nimport { DateRange } from '@material-ui/lab'\n\nexport interface FilterProps {\n    originalData: RawDataTransactionItem[];\n    filterDate: DateRange<Date | string>;\n    filterType: TransactionTradeTypes;\n    filterToken: string;\n    handleFilterChange: ({ type, date }: any) => void\n    handleReset: () => void;\n}\n\nconst StyledTextFiled = styled(TextField)`\n    &.MuiTextField-root {\n        max-width: initial;\n    }\n    .MuiInputBase-root {\n        width: initial;\n        max-width: initial;\n    }\n`\n\nconst StyledBtnBox = styled(Box)`\n    display: flex;\n    margin-left: 40%;\n\n    button:first-of-type {\n        margin-right: 8px;\n    }\n`\n\nexport const Filter = withTranslation('tables', {withRef: true})(({\n    t,\n    originalData,\n    filterDate,\n    filterType,\n    filterToken,\n    handleFilterChange,\n    handleReset,\n    }: FilterProps & WithTranslation) => {\n    const transactionTypeList = [\n        {\n            label: t('labelTxFilterAllTypes'),\n            value: 'All Types',\n        },\n        {\n            label: t('labelTxFilterDeposit'),\n            value: 'Deposit',\n        },\n        {\n            label: t('labelTxFilterWithdraw'),\n            value: 'Withdraw',\n        },\n        {\n            label: t('labelTxFilterTransfer'),\n            value: 'Transfer',\n        },\n    ]\n\n    // tokenPairList.map(o => <MenuItem key={o.key} value={o.value}>{o.value}</MenuItem>)\n    // const [filterType, setFilterType] = React.useState<TransactionTradeTypes>(TransactionTradeTypes.allTypes)\n    // const [filterDate, setFilterDate] = React.useState<Date | any>(null);\n    // const [filterToken, setFilterToken] = React.useState('All Tokens')\n\n    // const [timeRange, setTimeRange] = React.useState<DateRange<Date | string>>(['', '']);\n\n    // de-duplicate\n    const tokenTypeList = [{\n        label: t('labelTxFilterAllTokens'),\n        value: 'All Tokens'\n    }, ...Array.from(new Set(originalData.map(o => o.amount.unit))).map(token => ({\n        label: token,\n        value: token\n    }))]\n\n    // const handleReset = React.useCallback(() => {\n    //     setFilterType(TransactionTradeTypes.allTypes)\n    //     setTimeRange([null, null])\n    //     // setFilterToken('All Tokens')\n    //     handleFilterChange({\n    //         filterType: TransactionTradeTypes.allTypes,\n    //         filterDate: ['', ''],\n    //         filterToken: 'All Tokens'\n    //     })\n    // }, [handleFilterChange])\n\n    // const handleSearch = React.useCallback(() => {\n    //     handleFilterChange({\n    //         filterType,\n    //         filterDate: filterDate,\n    //         // filterToken\n    //     })\n    // }, [handleFilterChange, filterType, filterDate])\n\n    return (\n        <Grid container spacing={2} alignItems={'center'}>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-transaction-trade-types\"\n                    select\n                    fullWidth\n                    value={filterType}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                        handleFilterChange({type: event.target.value})\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {transactionTypeList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <DateRangePicker value={filterDate} onChange={(date: any) => {\n                    handleFilterChange({date: date})\n                }} />\n            </Grid>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-transaction-token-types\"\n                    select\n                    fullWidth\n                    value={filterToken}\n                    onChange={(event: React.ChangeEvent<{ value: string }>) => {\n                        handleFilterChange({token: event.target.value});\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {tokenTypeList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <StyledBtnBox>\n                    <Button variant={'outlined'} size={'medium'} color={'primary'}\n                            onClick={handleReset}>{t('labelFilterReset')}</Button>\n                    {/* <Button variant={'contained'} size={'small'} color={'primary'}\n                            onClick={handleSearch}>{t('Search')}</Button> */}\n                </StyledBtnBox>\n            </Grid>\n        </Grid>\n    )\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Link } from '@material-ui/core'\nimport { TFunction, WithTranslation, withTranslation } from 'react-i18next';\nimport moment from 'moment'\nimport { useDeepCompareEffect } from 'react-use'\nimport { Column, Table, TablePagination } from '../../basic-lib'\nimport {\n    AlertIcon,\n    CheckIcon,\n    EmptyValueTag,\n    getFormattedHash,\n    // PendingIcon,\n    TableType,\n    AssetsIcon, // temporayily replacement\n} from '@loopring-web/common-resources'\nimport { Filter } from './components/Filter'\nimport { TableFilterStyled, TablePaddingX } from '../../styled';\nimport { RawDataTransactionItem, TransactionStatus, TransactionTradeTypes } from './Interface'\nimport { DateRange } from '@material-ui/lab'\n\ninterface Row extends RawDataTransactionItem {\n    filterColumn: string\n    cellExpend: {\n        value: string\n        children: []\n        isExpanded: boolean\n    }\n    children?: Row[]\n    isExpanded?: boolean\n    format?: any\n}\n\n/**\n *\n * @param value\n * @param minFractionDigits\n * @returns\n */\nconst getThousandFormattedNumbers = (value: number, minFractionDigits: number = 2) => {\n    if (!Number.isFinite(value)) return value\n    return value.toLocaleString('en', {\n        minimumFractionDigits: minFractionDigits\n    })\n}\n\nconst TYPE_COLOR_MAPPING = [\n    {type: TransactionStatus.processed, color: 'success'},\n    {type: TransactionStatus.processing, color: 'warning'},\n    {type: TransactionStatus.failed, color: 'error'},\n]\n\nconst CellStatus = ({row, column}: any) => {\n    const status = row[ column.key ]\n    // const popupId = `${column.key}-${rowIdx}`\n    // const popoverContent = <div style={{padding: 12}}>\n    //     Because the pool price changes dynamically, the price you see when placing an order may be inconsistent with the\n    //     final transaction price.\n    // </div>\n    const RenderValue = styled.div`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      color: ${({theme}) => theme.colorBase[ `${TYPE_COLOR_MAPPING.find(o => o.type === status)?.color}` ]};\n\n      & svg {\n        width: 20px;\n        height: 20px;\n      }\n    `\n    const svg = status === 'processed' ? <CheckIcon width={14} height={14} /> : status === 'processing' ? <AssetsIcon/> : <AlertIcon/>\n    const RenderValueWrapper =\n        <RenderValue>\n            {/* {svg}{status} */}\n            {svg}\n        </RenderValue>\n\n    return <>\n        {/* <Popover\n            type={PopoverType.hover}\n            popupId={popupId}\n            popoverContent={popoverContent}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            arrowHorizon={{\n                right: 10\n            }}\n        >\n            {RenderValueWrapper}\n        </Popover> */}\n        {RenderValueWrapper}\n    </>\n}\n\nconst getColumnModeTransaction = (t: TFunction): Column<Row, unknown>[] => [\n    // {\n    //     key: 'token',\n    //     name: t('labelTxToken'),\n    // },\n    // {\n    //     key: 'from',\n    //     name: t('labelTxFrom'),\n    //     formatter: ({row}) => {\n    //         const valueFrom = row['from']\n    //         const isMyWallet = valueFrom === 'My Loopring'\n    //         const actualValue = isMyWallet ? valueFrom : getFormattedHash(valueFrom)\n    //         const RenderValue = styled.div`\n    // \t\t\theight: 100%;\n    // \t\t\tdisplay: flex;\n    // \t\t\tflex-direction: column;\n    // \t\t\tjustify-content: center;\n    // \t\t\tcolor: ${({theme}) => valueFrom && !isMyWallet ? theme.colorBase.primaryLight : theme.colorBase.textPrimary};\n\n    // \t\t\t// & p:last-child {\n    // \t\t\t// \tcolor:var(--color-text-primary);\n    // \t\t\t// }\n\n    // \t\t\t// p {\n    // \t\t\t// \tline-height: 100%;\n    // \t\t\t// }\n\n    // \t\t`\n\n    //         return (\n    //             <>\n    //                 <RenderValue title={valueFrom}>\n    //                     {actualValue || EmptyValueTag}\n    //                 </RenderValue>\n    //             </>\n    //         )\n    //     },\n    // },\n    // {\n    //     key: 'to',\n    //     name: t('labelTxTo'),\n    //     formatter: ({row}) => {\n    //         const valueTo = row['to']\n    //         const isMyWallet = valueTo === 'My Loopring'\n    //         const actualValue = isMyWallet ? valueTo : getFormattedHash(valueTo)\n    //         const RenderValue = styled.div`\n    // \t\t\theight: 100%;\n    // \t\t\tdisplay: flex;\n    // \t\t\tflex-direction: column;\n    // \t\t\tjustify-content: center;\n    // \t\t\tcolor: ${({theme}) => valueTo && !isMyWallet ? theme.colorBase.primaryLight : theme.colorBase.textPrimary};\n\n    // \t\t\t// & p:last-child {\n    // \t\t\t// \tcolor:var(--color-text-primary);\n    // \t\t\t// }\n\n    // \t\t\t// p {\n    // \t\t\t// \tline-height: 100%;\n    // \t\t\t// }\n\n    // \t\t`\n    //         // const value = typeof to === 'string'\n    //         //     ? <p>{to}</p>\n    //         //     : <>\n    //         //         <p>{to.address}</p>\n    //         //         <p>/ {to.env}</p>\n    //         //     </>\n\n    //         return (\n    //             <>\n    //                 <RenderValue title={valueTo}>\n    //                     {actualValue || EmptyValueTag}\n    //                 </RenderValue>\n    //             </>\n    //         )\n    //     },\n    // },\n    {\n        key: 'side',\n        name: t('labelTxSide'),\n        formatter: ({row}) => {\n            const value = row[ 'side' ]\n            const renderValue = value === TransactionTradeTypes.deposit ? t('labelDeposit') : value === TransactionTradeTypes.transfer ? t('labelTransfer') : t('labelWithdraw');\n            return (\n                <div className=\"rdg-cell-value\">\n                    {renderValue}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'amount',\n        name: t('labelTxAmount'),\n        formatter: ({row}) => {\n            const {unit, value} = row[ 'amount' ]\n            const hasValue = Number.isFinite(value)\n            const renderValue = hasValue ? `${getThousandFormattedNumbers(Number(value), 5)}` : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    {renderValue} {unit || ''}\n                </div>\n            )\n        },\n    },\n    {\n        key: 'fee',\n        name: t('labelTxFee'),\n        formatter: ({row}) => {\n            const fee = row[ 'fee' ]\n            const hasValue = fee ? Number.isFinite(fee.value) : ''\n            const renderValue = hasValue && fee.value !== 0 ? `${fee.value.toFixed(6)} ${fee.unit}` : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{renderValue}</span>\n                </div>\n            )\n        },\n    },\n    // {\n    //     key: 'memo',\n    //     name: t('labelTxMemo'),\n    //     formatter: ({row, column}) => {\n    //         const value = row[ column.key ]\n    //         const renderValue = value || EmptyValueTag\n    //         const Wrapper = styled.div`\n    //             color: var(--color-text-secondary);\n    //             max-width: 90%;\n    //             overflow: hidden;\n    //             text-overflow: ellipsis;\n    //             white-space: nowrap;\n    //         `\n    //         return (\n    //             <div className=\"rdg-cell-value\">\n    //                 <Wrapper title={renderValue}>{renderValue}</Wrapper>\n    //             </div>\n    //         )\n    //     },\n    // },\n    {\n        key: 'txnHash',\n        name: t('labelTxTxnHash'),\n        formatter: ({row}) => {\n            // let path = ''\n            // if ((row as any)._rawData.length === 9) {\n            //     path = ((row as any)._rawData[ 8 ])\n            // }\n            const path = row[ 'path' ] || ''\n            const value = row[ 'txnHash' ]\n            const RenderValue = styled.div`\n              color: ${({theme}) => theme.colorBase[ value ? 'primary' : 'textSecondary' ]};\n              // overflow: hidden;\n              // text-overflow: ellipsis;\n              // white-space: nowrap;\n              // max-width: 90%;\n            `\n            return (\n                <div className=\"rdg-cell-value\">\n                    {path ? <Link href={path}>\n                            <RenderValue title={value}>{value || EmptyValueTag}</RenderValue>\n                        </Link> :\n                        <RenderValue title={value}>{value ? getFormattedHash(value) : EmptyValueTag}</RenderValue>}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'status',\n        name: t('labelTxStatus'),\n        formatter: ({row, column, rowIdx}) => (\n            <div className=\"rdg-cell-value\">\n                <CellStatus {...{row, column, rowIdx}} />\n            </div>\n        )\n    },\n    {\n        key: 'time',\n        name: t('labelTxTime'),\n        formatter: ({row}) => {\n            const value = row[ 'time' ]\n            const hasValue = Number.isFinite(value)\n            const renderValue = hasValue\n                ? moment(new Date(row[ 'time' ]), \"YYYYMMDDHHMM\").fromNow()\n                : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{renderValue}</span>\n                </div>\n            )\n        },\n    },\n]\n\nconst TableStyled = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .rdg {\n    --template-columns: 120px auto auto auto 100px 120px !important;\n\n    .rdg-cell.action {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n  .rdg-cell {\n    display: flex;\n    align-items: center;\n  }\n\n  ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as typeof Box\n\nexport interface TransactionTableProps {\n    rawData: RawDataTransactionItem[];\n    pagination?: {\n        pageSize: number;\n    }\n    showFilter?: boolean;\n}\n\n\nexport const TransactionTable = withTranslation('tables')((props: TransactionTableProps & WithTranslation) => {\n    const defaultArgs: any = {\n        // rawData: [],\n        columnMode: getColumnModeTransaction(props.t).filter(o => !o.hidden),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}: any) => columnsRaw as Column<any, unknown>[],\n    }\n    const {rawData, pagination, showFilter} = props\n    const [page, setPage] = React.useState(1)\n    const [totalData, setTotalData] = React.useState<RawDataTransactionItem[]>(rawData)\n    const [filterType, setFilterType] = React.useState(TransactionTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = React.useState<DateRange<Date | string>>(['', ''])\n    const [filterToken, setFilterToken] = React.useState<string>('All Tokens')\n\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    useDeepCompareEffect(() => {\n        setTotalData(rawData);\n    }, [rawData])\n\n    const getRenderData = React.useCallback(() => pagination\n        ? totalData.slice((page - 1) * pageSize, page * pageSize)\n        : totalData\n        , [page, pagination, pageSize, totalData])\n\n    const updateData = React.useCallback(({\n                                              TableType,\n                                              currFilterType = filterType,\n                                              currFilterDate = filterDate,\n                                              currFilterToken = filterToken,\n                                          }) => {\n        let resultData = rawData || []\n        if (currFilterType !== TransactionTradeTypes.allTypes) {\n            resultData = resultData.filter(o => o.side === currFilterType)\n        }\n        if (currFilterDate[ 0 ] && currFilterDate[ 1 ]) {\n            const startTime = Number(moment(currFilterDate[ 0 ]).format('x'))\n            const endTime = Number(moment(currFilterDate[ 1 ]).format('x'))\n            resultData = resultData.filter(o => o.time < endTime && o.time > startTime)\n        }\n        if (currFilterToken !== 'All Tokens') {\n            resultData = resultData.filter(o => o.amount.unit === currFilterToken)\n        }\n        if (TableType === 'filter') {\n            setPage(1)\n        }\n        setTotalData(resultData)\n    }, [rawData, filterDate, filterType, filterToken])\n\n    const handleFilterChange = React.useCallback(({type = filterType, date = filterDate, token = filterToken}) => {\n        setFilterType(type)\n        setFilterDate(date)\n        setFilterToken(token)\n        updateData({\n            TableType: TableType.filter,\n            currFilterType: type,\n            currFilterDate: date,\n            currFilterToken: token\n        })\n    }, [updateData, filterDate, filterType, filterToken])\n\n    const handleReset = React.useCallback(() => {\n        setFilterType(TransactionTradeTypes.allTypes)\n        setFilterDate([null, null])\n        setFilterToken('All Tokens')\n        updateData({\n            TableType: TableType.filter,\n            currFilterType: TransactionTradeTypes.allTypes,\n            currFilterDate: [null, null],\n            currFilterToken: 'All Tokens',\n        })\n    }, [updateData])\n\n    const handlePageChange = React.useCallback((page: number) => {\n        setPage(page)\n        updateData({TableType: TableType.page, currPage: page})\n    }, [updateData])\n\n    return <TableStyled>\n        {showFilter && (\n            <TableFilterStyled>\n                <Filter\n                    originalData={rawData}\n                    filterDate={filterDate}\n                    filterType={filterType}\n                    filterToken={filterToken}\n                    handleFilterChange={handleFilterChange}\n                    handleReset={handleReset}\n                />\n            </TableFilterStyled>\n        )}\n        <Table {...{...defaultArgs, ...props, rawData: getRenderData()}}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import React from 'react'\nimport { Checkbox, Grid } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { FormControlLabel } from '../../../'\nimport { CheckBoxIcon, CheckedIcon } from '@loopring-web/common-resources'\nimport { TokenType, RawDataAssetsItem } from '../AssetsTable'\n\nexport type TokenTypeCol = {\n    type: TokenType,\n    value: string\n}\n\n// export type OriginalDataItem = string | number | TokenTypeCol | TradePairItem[] | boolean | undefined\n\nexport interface FilterProps {\n    originalData: RawDataAssetsItem[];\n    handleFilterChange: ({tokenType, hideSmallBalance, hideLPToken}: any) => void;\n}\n\n// const StyledTextFiled = styled(TextField)`\n//     &.MuiTextField-root {\n//         max-width: initial;\n//     }\n//     .MuiInputBase-root {\n//         width: initial;\n//         max-width: initial;\n//     }\n// `\n\nexport enum CheckboxType {\n    smallBalance = 'smallBalance',\n    lp = 'lp'\n}\n\nexport const Filter = withTranslation('tables', {withRef: true})(({\n                                                                      t,\n                                                                    //   originalData,\n                                                                      handleFilterChange\n                                                                  }: FilterProps & WithTranslation) => {\n    // de-duplicate\n    // const tokenTypeList = [{\n    //     label: t('labelAllToken'),\n    //     value: 'All Tokens'\n    // }, ...Array.from(new Set(originalData.map(o => (o[ 0 ] as TokenTypeCol).value))).map(val => ({\n    //     label: val,\n    //     value: val\n    // }))]\n    // const [tokenType, setTokenType] = React.useState<string>('All Tokens')\n    const [hideSmallBalance, setHideSmallBalance] = React.useState(false)\n    const [hideLPToken, setHideLPToken] = React.useState(false)\n    // const refTokenType = React.useRef(tokenType)\n    const refHideSmallBalance = React.useRef(hideSmallBalance)\n    const refHideLPToken = React.useRef(hideLPToken)\n\n    const handleCheckboxChange = React.useCallback((type: CheckboxType, event: any) => {\n        if (type === CheckboxType.smallBalance) {\n            setHideSmallBalance(event.target.checked)\n        } else {\n            setHideLPToken(event.target.checked)\n        }\n    }, [])\n\n    const handleFilterData = React.useCallback(() => {\n        // const valueTokenType = refTokenType.current;\n        const valueHideSmallBalance = refHideSmallBalance.current;\n        const valueHideLPToken = refHideLPToken.current;\n        handleFilterChange({\n            // tokenType: valueTokenType,\n            currHideSmallBalance: valueHideSmallBalance,\n            currHideLPToken: valueHideLPToken\n        })\n    }, [handleFilterChange])\n\n    return (\n        <Grid container spacing={4}>\n            {/* <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-assets-trade-types\"\n                    select\n                    fullWidth\n                    value={tokenType}\n                    onChange={(event: React.ChangeEvent<{ value: string }>) => {\n                        setTokenType(event.target.value);\n                        refTokenType.current = event.target.value;\n                        handleFilterData();\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {tokenTypeList.map(token => <MenuItem key={token.value}\n                                                        value={token.value}>{token.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid> */}\n\n            <Grid item>\n                <FormControlLabel style={{marginRight: 0}}\n                                  control={<Checkbox checked={hideSmallBalance} checkedIcon={<CheckedIcon/>}\n                                                     icon={<CheckBoxIcon/>}\n                                                     color=\"default\" onChange={(event) => {\n                                      handleCheckboxChange(CheckboxType.smallBalance, event);\n                                      refHideSmallBalance.current = event.target.checked;\n                                      handleFilterData();\n                                  }}/>} label={t('labelHideSmallBalances')}/>\n            </Grid>\n\n            <Grid item>\n                <FormControlLabel\n                    control={<Checkbox checked={hideLPToken} checkedIcon={<CheckedIcon/>} icon={<CheckBoxIcon/>}\n                                       color=\"default\" onChange={(event) => {\n                        handleCheckboxChange(CheckboxType.lp, event);\n                        refHideLPToken.current = event.target.checked;\n                        handleFilterData();\n                    }}/>} label={t('labelHideLPToken')}/>\n            </Grid>\n        </Grid>\n    )\n})\n","import { useCallback, useEffect, useState } from 'react'\nimport { Box, Grid, MenuItem, ListItemText } from '@material-ui/core'\nimport { bindPopper, bindTrigger, bindHover, usePopupState } from 'material-ui-popup-state/hooks';\nimport styled from '@emotion/styled'\nimport { TFunction, withTranslation, WithTranslation } from 'react-i18next'\nimport { useHistory } from 'react-router-dom'\n// import PopupState, { bindMenu, bindTrigger } from 'material-ui-popup-state'\nimport { Button, PopoverPure, Popover, PopoverType } from '../../basic-lib'\nimport { Column, Table } from '../../basic-lib/tables'\nimport { TablePagination } from '../../basic-lib'\nimport { Filter } from './components/Filter'\nimport { TableFilterStyled, TablePaddingX } from '../../styled'\nimport { TableType, MoreIcon } from '@loopring-web/common-resources';\nimport { useSettings } from '../../../stores'\n\nconst TableStyled = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .rdg {\n    flex: 1;\n    --template-columns: auto auto auto auto 320px !important;\n\n    .rdg-cell.action {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n  ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as any\n\nconst IconWrapperStyled = styled(Box)`\n    margin-top: ${({theme}) => theme.unit * 1.1}px;\n    svg {\n        width: ${({theme}) => theme.unit * 2}px;\n        height: ${({theme}) => theme.unit * 2}px;\n    }\n`\n\nconst GridStyled = styled(Grid)`\n    .MuiGrid-item {\n        padding: 0;\n        padding-top: ${({theme}) => theme.unit / 4}px;\n    }\n`\n\ninterface Row {\n    token: {\n        type: TokenType;\n        value: string;\n    };\n    amount: string;\n    available: string;\n    locked: string;\n    filterColumn?: string\n    tradePairList?: {\n        first: string;\n        last: string;\n    }[]\n    cellExpend?: {\n        value: string\n        children: []\n        isExpanded: boolean\n    }\n    children?: Row[]\n    isExpanded?: boolean\n    format?: any\n}\n\nexport enum TokenType {\n    single = 'single',\n    lp = 'lp'\n}\n\nexport type TradePairItem = {\n    first: string;\n    last: string;\n}\n\nexport enum LpTokenAction {\n    add = 'add',\n    remove = 'remove'\n}\n\nexport type RawDataAssetsItem = {\n    token: {\n        type: TokenType,\n        value: string\n    }\n    amount: string;\n    available: string;\n    locked: string;\n    tradePairList?: TradePairItem[];\n    smallBalance: boolean;\n}\n\nexport interface AssetsTableProps {\n    rawData: RawDataAssetsItem[];\n    pagination?: {\n        pageSize: number\n    }\n    onVisibleRowsChange?: (props: any) => void\n    showFiliter?: boolean\n    onShowDeposit: (token: string) => void,\n    onShowTransfer: (token: string) => void,\n    onShowWithdraw: (token: string) => void,\n    onLpDeposit: (token: string, type: LpTokenAction ) => void,\n    onLpWithdraw: (token: string, type: LpTokenAction) => void,\n}\n\nexport const AssetsTable = withTranslation('tables')((props: WithTranslation & AssetsTableProps) => {\n    const {\n        t,\n        pagination,\n        rawData,\n        onVisibleRowsChange,\n        showFiliter,\n        onShowDeposit,\n        onShowTransfer,\n        onShowWithdraw,\n        onLpDeposit,\n        // onLpWithdraw,\n    } = props\n    // const formattedRawData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n    // const formattedRawData = rawData && Array.isArray(rawData) ? rawData : []\n    // const [filterTokenType, setFilterTokenType] = useState('All Tokens')\n    const [hideSmallBalance, setHideSmallBalance] = useState(false)\n    const [hideLPToken, setHideLPToken] = useState(false)\n    const [totalData, setTotalData] = useState<RawDataAssetsItem[]>([])\n    const [page, setPage] = useState(1)\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    const {language} = useSettings()\n    let history = useHistory()\n    const rightState = usePopupState({variant: 'popover', popupId: `action-popover`});\n\n    useEffect(() => {\n        setTotalData(rawData && Array.isArray(rawData) ? rawData : [])\n    }, [rawData])\n\n    const getPopoverPopper = useCallback(() => {\n        return (\n            <div style={{ borderRadius: 'inherit' }}>\n                <MenuItem value={1}><ListItemText>{t('test key')}</ListItemText></MenuItem>\n                <MenuItem value={1} selected={true}><ListItemText>{t('test key')}</ListItemText></MenuItem>\n            </div>\n        )\n    }, [])\n\n    // const jumpToTrade = (pair: string) => {\n    //     history.push({\n    //         pathname: `/trading/lite/${pair}`\n    //     })\n    // }\n    const getPopoverTrigger = useCallback(() => {\n        return (\n            // <div {...bindTrigger(rightState)}>\n                <MoreIcon cursor={'pointer'} />\n            // </div>\n        )\n    }, [])\n\n    const popoverTrigger= (\n        <IconWrapperStyled {...bindTrigger(rightState)}>\n            <MoreIcon cursor={'pointer'} />\n        </IconWrapperStyled>\n    )\n\n    const popoverPoper= (\n        <PopoverPure\n            className={'arrow-right'}\n            {...bindPopper(rightState)}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}>\n        {/* <Grid item style={{backgroundColor: 'var(--color-pop-bg)'}}>\n            <MenuItem value={1}><ListItemText>{t('test key')}</ListItemText></MenuItem>\n            <MenuItem value={1} selected={true}><ListItemText>{t('test key')}</ListItemText></MenuItem>\n        </Grid> */}\n        <Box height={100} width={120}>Content:XXXXXXX</Box>\n    </PopoverPure>\n    )\n\n    const getColumnModeAssets = (t: TFunction): Column<Row, unknown>[] => [\n        {\n            key: 'token',\n            name: t('labelToken'),\n            formatter: ({row, column}) => {\n                const token = row[ column.key ]\n                const StyledToken = styled(Box)`\n                  font-size: 13px;\n                `\n                return <StyledToken>{token.value}</StyledToken>\n            }\n        },\n        {\n            key: 'amount',\n            name: t('labelAmount'),\n            // minWidth: 120,\n        },\n        {\n            key: 'available',\n            name: t('labelAvailable'),\n        },\n        {\n            key: 'locked',\n            name: t('labelLocked'),\n            // minWidth: 120,\n        },\n        {\n            key: 'actions',\n            name: t('labelActions'),\n            // minWidth: 280,\n            formatter: ({row}) => {\n                const token = row[ 'token' ]\n                const isLp = token.type === TokenType.lp\n                const lpPairList = token.value.split('-')\n                lpPairList.splice(0, 1)\n                const lpPair = lpPairList.join('-')\n                const tokenValue = token.value\n\n                return (\n                    <GridStyled container spacing={1} justifyContent={'flex-start'} alignItems={'center'}>\n                            <Grid item>\n                                <Button variant={'text'} size={'medium'} color={'primary'}\n                                        onClick={() => onShowDeposit(tokenValue)}>{t('labelDeposit')}</Button>\n                            </Grid>\n                            <Grid item>\n                                <Button variant={'text'} size={'medium'} color={'primary'}\n                                        onClick={() => onShowTransfer(tokenValue)}>{t('labelTransfer')}</Button>\n                            </Grid>\n                            <Grid item>\n                                <Button variant={'text'} size={'medium'} color={'primary'}\n                                        onClick={() => onShowWithdraw(tokenValue)}>{t('labelWithdraw')}</Button>\n                            </Grid>\n                            <Grid item marginTop={1}>\n                                <Popover {...{\n                                    type: PopoverType.click,\n                                    popupId: 'testPopup',\n                                    className: 'arrow-right',\n                                    children: getPopoverTrigger(),\n                                    popoverContent: getPopoverPopper(),\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    },\n                                    transformOrigin: {\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    },\n                                }}></Popover>\n                                {/* <IconWrapperStyled>\n                                    <MoreIcon {...bindTrigger(rightState)} cursor={'pointer'} />\n                                </IconWrapperStyled> */}\n                                {/* {getPopover()} */}\n                                {/* <Button {...bindTrigger(rightState)}>test</Button> */}\n                                {/* {getPopoverContent()} */}\n                            </Grid>\n                            \n                            {/* {isLp ? (\n                                <Grid item>\n                                    <Button variant={'outlined'} size={'medium'} color={'primary'}\n                                            onClick={() => onLpDeposit(lpPair, LpTokenAction.add)}>{t('labelAMM')}</Button>\n                                </Grid>\n                            ) : (\n                                <Grid item>\n                                    <Button variant={'outlined'} size={'medium'} color={'primary'}\n                                            onClick={() => jumpToTrade(tokenValue)}>{t('labelTrade')}</Button>\n                                </Grid>\n                            )} */}\n                        {/* <Grid item>\n                            {isLp\n                                ? <Button variant={'outlined'} color={'primary'} disabled>{t('labelAMM')} </Button>\n                                : <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                                    {(popupState) => (\n                                        <>\n                                            <Button variant={'outlined'} size={'medium'}\n                                                    color=\"primary\" {...bindTrigger(popupState)}>\n                                                Trade\n                                            </Button>\n                                            <Menu {...bindMenu(popupState)}>\n                                                {tradePairs.map(({first, last}) => {\n                                                    const value = `${first}/${last}`;\n                                                    return (\n                                                        <MenuItem onClick={popupState.close} key={value}\n                                                                value={value}>{value}</MenuItem>\n                                                    )\n                                                })}\n                                            </Menu>\n                                        </>\n                                    )}\n                                </PopupState>\n                            }\n                        </Grid> */}\n                    </GridStyled>\n                )\n            }\n        },\n        // {\n        //     key: 'tradePairList',\n        //     name: 'tradePairList',\n        //     hidden: true\n        // }\n    ]\n\n    const defaultArgs: any = {\n        // rawData: [],\n        columnMode: getColumnModeAssets(t).filter(o => !o.hidden),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}: any) => columnsRaw as Column<any, unknown>[],\n    }\n\n    const getRenderData = useCallback(() => pagination\n        ? totalData.slice((page - 1) * pageSize, page * pageSize)\n        : totalData\n        , [page, pageSize, pagination, totalData])\n\n    const updateData = useCallback(({\n                                        TableType,\n                                        // currFilterTokenType = filterTokenType,\n                                        currHideSmallBalance = hideSmallBalance,\n                                        currHideLPToken = hideLPToken\n                                    }) => {\n        // let resultData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n        let resultData = (rawData && !!rawData.length) ? rawData : []\n        // if (currFilterTokenType !== 'All Tokens') {\n        //     resultData = resultData.filter(o =>\n        //         (o[ 0 ] as TokenTypeCol).value === currFilterTokenType\n        //     )\n        // }\n        if (currHideSmallBalance) {\n            resultData = resultData.filter(o => !o.smallBalance)\n        }\n        if (currHideLPToken) {\n            resultData = resultData.filter(o => o.token.type === TokenType.single)\n        }\n        if (TableType === 'filter') {\n            setPage(1)\n        }\n        setTotalData(resultData)\n    }, [rawData, /* filterTokenType,  */hideSmallBalance, hideLPToken])\n\n    const handleFilterChange = useCallback(({/* tokenType,  */currHideSmallBalance, currHideLPToken}) => {\n        // setFilterTokenType(tokenType)\n        setHideSmallBalance(currHideSmallBalance)\n        setHideLPToken(currHideLPToken)\n        updateData({TableType: TableType.filter, /* currFilterTokenType: tokenType, */ currHideSmallBalance, currHideLPToken})\n    }, [updateData])\n\n    const handlePageChange = useCallback((page: number) => {\n        setPage(page)\n        updateData({TableType: TableType.page})\n    }, [updateData])\n\n    const getScrollIndex = useCallback((e) => {\n        const startIndex = parseInt(String(e.target.scrollTop / 44))\n        const viewportRows = rawData && Array.isArray(rawData) ? rawData.slice(startIndex, startIndex + 10).map(o => o.token.value) : []\n        if (onVisibleRowsChange) {\n            onVisibleRowsChange(viewportRows)\n        }\n    }, [onVisibleRowsChange, rawData])\n\n    return <TableStyled lan={language}>\n        {showFiliter && (\n            <TableFilterStyled>\n                <Filter originalData={rawData} handleFilterChange={handleFilterChange}/>\n            </TableFilterStyled>\n        )}\n        <Table {...{...defaultArgs, ...props, rawData: getRenderData()}} onScroll={getScrollIndex}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Grid, MenuItem } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { TextField, DateRangePicker } from '../../../basic-lib/form'\nimport { Button } from '../../../basic-lib/btns'\nimport { DropDownIcon } from '@loopring-web/common-resources'\nimport { DateRange } from '@material-ui/lab'\nimport { RawDataTradeItem } from '../TradeTable'\n\nexport interface FilterProps {\n    rawData: RawDataTradeItem[];\n    filterDate: DateRange<Date | string>;\n    filterType: FilterTradeTypes;\n    filterPair: string;\n    handleReset: () => void;\n    handleFilterChange: ({type, date}: any) => void\n}\n\nconst StyledTextFiled = styled(TextField)`\n    &.MuiTextField-root {\n        max-width: initial;\n    }\n    .MuiInputBase-root {\n        width: initial;\n        max-width: initial;\n    }\n`\n\nconst StyledBtnBox = styled(Box)`\n    display: flex;\n    margin-left: 40%;\n\n    button:first-of-type {\n        margin-right: 8px;\n    }\n`\n\nexport enum FilterTradeTypes {\n    buy = 'Buy',\n    sell = 'Sell',\n    allTypes = 'All Types'\n}\n\nexport const Filter = withTranslation('tables', {withRef: true})(({\n        t,\n        rawData,\n        filterDate,\n        filterType,\n        filterPair,\n        handleReset,\n        handleFilterChange,\n    }: FilterProps & WithTranslation) => {\n    const filterTradeTypeList = [\n        {\n            label: t('labelOrderFilterAllTypes'),\n            value: 'All Types'\n        },\n        {\n            label: t('labelOrderFilterBuy'),\n            value: 'Buy'\n        },\n        {\n            label: t('labelOrderFilterSell'),\n            value: 'Sell'\n        },\n    ]\n\n    const rawPairList = rawData.map(item => `${item.amount.from.key} - ${item.amount.to.key}`)\n    const formattedRawPairList = [\n        {\n            label: t('labelFilterAllPairs'),\n            value: 'all'\n        },\n        ...Array.from(new Set(rawPairList)).map((pair: string) => ({\n            label: pair,\n            value: pair\n        }))\n    ]\n\n    return (\n        <Grid container spacing={2} alignItems={'center'}>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-trade-filter-types\"\n                    select\n                    fullWidth\n                    value={filterType}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                        // setFilterType(event.target.value as FilterTradeTypes)\n                        handleFilterChange({type: event.target.value})\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {filterTradeTypeList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <DateRangePicker value={filterDate} onChange={(date: any) => {\n                    // setFilterDate(date)\n                    handleFilterChange({date: date})\n                }} />\n            </Grid>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-trade-filter-pairs\"\n                    select\n                    fullWidth\n                    value={filterPair}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                        handleFilterChange({ pair: event.target.value })\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {formattedRawPairList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <StyledBtnBox>\n                    <Button variant={'outlined'} size={'medium'} color={'primary'}\n                            onClick={handleReset}>{t('labelFilterReset')}</Button>\n                    {/* <Button variant={'contained'} size={'small'} color={'primary'}\n                            onClick={handleSearch}>{t('Search')}</Button> */}\n                </StyledBtnBox>\n            </Grid>\n        </Grid>\n    )\n})\n","import { CoinInfo } from '@loopring-web/common-resources';\n\n\nexport enum AmmTradeType {\n    add = 'add',\n    swap = 'swap',\n    remove = 'remove'\n}\n\nenum TxStatus {\n    processing = \"processing\",\n    processed = \"processed\",\n    received = \"received\",\n    failed = \"failed\"\n}\n\nexport interface AmmRecordRow<C> {\n    totalDollar: number;\n    totalYuan: number;\n    amountA: number;\n    amountB: number;\n    time: number;\n    type: keyof typeof AmmTradeType;\n    coinA: CoinInfo<C>;\n    coinB: CoinInfo<C>;\n    status?: keyof typeof TxStatus;\n}\n\nexport type AmmRecordTableProps<T, R = AmmRecordRow<T>> = {\n    rawData: R[];\n    pagination?: {\n        pageSize: number\n    },\n    page?: number,\n    handlePageChange: (page: number) => void,\n    showFilter?: boolean,\n    wait?: number\n}\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport styled from '@emotion/styled'\nimport { TFunction, withTranslation, WithTranslation } from 'react-i18next'\nimport moment from 'moment'\nimport { Column, Table } from '../../basic-lib/tables'\nimport { TablePagination } from '../../basic-lib'\nimport { TableFilterStyled, TablePaddingX } from '../../styled';\nimport { Filter, FilterTradeTypes } from './components/Filter'\nimport { EmptyValueTag, TableType, TradeTypes, getThousandFormattedNumbers } from '@loopring-web/common-resources';\nimport { useSettings } from '../../../stores';\nimport { useDeepCompareEffect } from 'react-use';\nimport { Row } from '../poolsTable/Interface';\nimport { DateRange } from '@material-ui/lab'\n\n// interface Row {\n//     side: TradeTypes;\n//     amount: {\n//         from: {\n//             key: string;\n//             value: number;\n//         },\n//         to: {\n//             key: string;\n//             value: number\n//         }\n//     };\n//     price: number;\n//     fee: number;\n//     time: number;\n//     cellExpend?: {\n//         value: string\n//         children: []\n//         isExpanded: boolean\n//     };\n//     children?: Row[];\n//     isExpanded?: boolean;\n//     formatter?: any;\n// }\n\n\nexport type RawDataTradeItem = {\n    side: keyof typeof TradeTypes;\n    amount: {\n        from: {\n            key: string;\n            value: number | undefined;\n        },\n        to: {\n            key: string;\n            value: number | undefined;\n        }\n    };\n    price: {\n        key: string\n        value: number | undefined,\n    }\n    // priceDollar: number;\n    // priceYuan: number;\n    fee: {\n        key: string;\n        value: number | undefined;\n    };\n    time: number;\n}\n\nexport type TradeTableProps = {\n    rawData: RawDataTradeItem[];\n    pagination?: {\n        pageSize: number\n    }\n    showFilter?: boolean;\n    currentHeight?: number;\n}\n\n// enum TableType {\n//     filter = 'filter',\n//     page = 'page'\n// }\n\nconst TableStyled = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    .rdg{\n        height: ${(props: any) => props.currentheight}px;\n        --template-columns: 320px auto 200px 150px !important;\n        .rdg-cell.action{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n        .rdg-header-row {\n            // background-color: inherit !important;\n        }\n    }\n    ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as any\n\nconst StyledSideCell: any = styled(Box)`\n`\n\nconst getColumnModeAssets = (t: TFunction, _currency: 'USD' | 'CYN'): Column<RawDataTradeItem, unknown>[] => [\n    {\n        key: 'side',\n        name: t('labelTradeSide'),\n        formatter: ({row}) => {\n            // const tradeType = row[ 'side' ] === TradeTypes.Buy ? t('labelBuy') : t('labelSell')\n            const {from, to} = row[ 'amount' ]\n            const fromValue = from.value ? getThousandFormattedNumbers(Number(from.value)) : EmptyValueTag\n            const toValue = to.value ? getThousandFormattedNumbers(Number(to.value)) : EmptyValueTag\n            \n            return (\n                <div className=\"rdg-cell-value\">\n                    <StyledSideCell value={row[ 'side' ]}>\n                        {`${fromValue} ${from.key} \\u2192 ${toValue} ${to.key}`}\n                    </StyledSideCell>\n                </div>\n            )\n        }\n    },\n    // {\n    //     key: 'amount',\n    //     name: t('labelTradeAmount'),\n    //     formatter: ({row}) => {\n    //         const {from, to} = row[ 'amount' ]\n    //         const fromValue = from.value ? getThousandFormattedNumbers(Number(from.value)) : EmptyValueTag\n    //         const toValue = to.value ? getThousandFormattedNumbers(Number(to.value)) : EmptyValueTag\n    //         return (\n    //             <div className=\"rdg-cell-value\">\n    //                 {`${fromValue} ${from.key} \\u279E ${toValue} ${to.key}`}\n    //             </div>\n    //         )\n    //     }\n    // },\n    {\n        key: 'price',\n        name: t('labelTradePrice'),\n        formatter: ({row}) => {\n            const {value} = row[ 'price' ]\n            const renderValue = value ? `$ ${getThousandFormattedNumbers(value)}` : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    {renderValue}\n                    {/*{currency === Currency.dollar ?*/}\n                    {/*    PriceTag.Dollar + getThousandFormattedNumbers(priceDollar)*/}\n                    {/*    : PriceTag.Yuan + getThousandFormattedNumbers(priceYuan)}*/}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'fee',\n        name: t('labelTradeFee'),\n        formatter: ({row}) => {\n            const {key, value} = row[ 'fee' ]\n            return (\n                <div className=\"rdg-cell-value\">\n                    {`${value} ${key}`}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'time',\n        name: t('labelTradeTime'),\n        // minWidth: 400,\n        formatter: ({row}) => {\n            const time = moment(new Date(row[ 'time' ]), \"YYYYMMDDHHMM\").fromNow()\n            return (\n                <div className=\"rdg-cell-value\">\n                    {time}\n                </div>\n            )\n        }\n    },\n]\n\nexport const TradeTable = withTranslation('tables')((props: WithTranslation & TradeTableProps) => {\n    const {t, pagination, showFilter, rawData, currentHeight} = props\n    const [filterType, setFilterType] = React.useState(FilterTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = React.useState<DateRange<string | Date>>([null, null])\n    const [filterPair, setFilterPair] = React.useState('all')\n    const [page, setPage] = React.useState(1)\n    const [totalData, setTotalData] = React.useState<RawDataTradeItem[]>(rawData)\n    const {currency} = useSettings();\n    const defaultArgs: any = {\n        columnMode: getColumnModeAssets(t, currency).filter(o => !o.hidden),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}: any) => columnsRaw as Column<Row<any>, unknown>[],\n        style: {\n            backgroundColor: ({colorBase}: any) => `${colorBase.box}`\n        }\n    }\n    useDeepCompareEffect(() => {\n        setTotalData(rawData);\n    }, [rawData])\n\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    const getRenderData = React.useCallback(() => pagination\n        ? totalData.slice((page - 1) * pageSize, page * pageSize)\n        : totalData\n        , [page, pageSize, pagination, totalData])\n\n    const updateData = React.useCallback(({\n        TableType,\n        currFilterType = filterType,\n        currFilterDate = filterDate,\n        currFilterPair = filterPair\n    }) => {\n        let resultData = rawData ? rawData : []\n        if (currFilterType !== FilterTradeTypes.allTypes) {\n            resultData = resultData.filter(o => o.side === (currFilterType === TradeTypes.Buy ? TradeTypes.Buy : TradeTypes.Sell))\n        }\n        if (currFilterDate[0] && currFilterDate[1]) {\n            const startTime = Number(moment(currFilterDate[0]).format('x'))\n            const endTime = Number(moment(currFilterDate[1]).format('x'))\n            resultData = resultData.filter(o => o.time < endTime && o.time > startTime)\n        }\n        if (currFilterPair !== 'all') {\n            resultData = resultData.filter(o => {\n                const pair = `${o.amount.from.key} - ${o.amount.to.key}`\n                return pair === currFilterPair\n            })\n        }\n        if (TableType === 'filter') {\n            setPage(1)\n        }\n        setTotalData(resultData)\n    }, [rawData, filterDate, filterType, filterPair])\n\n    const handleFilterChange = React.useCallback(({type = filterType, date = filterDate, pair = filterPair}) => {\n        setFilterType(type)\n        setFilterDate(date)\n        setFilterPair(pair)\n        updateData({\n            TableType: TableType.filter,\n            currFilterType: type, \n            currFilterDate: date,\n            currFilterPair: pair\n        })\n    }, [updateData, filterDate, filterType, filterPair])\n\n    const handlePageChange = React.useCallback((page: number) => {\n        setPage(page)\n        updateData({TableType: TableType.page, currPage: page})\n    }, [updateData])\n\n    const handleReset = () => {\n        setFilterType(FilterTradeTypes.allTypes)\n        setFilterDate([null, null])\n        setFilterPair('all')\n        updateData({\n            TableType: 'filter',\n            currFilterType: FilterTradeTypes.allTypes,\n            currFilterDate: [null, null],\n            currFilterPair: 'all'\n        })\n    }\n\n    return <TableStyled currentheight={currentHeight}>\n        {showFilter && (\n            <TableFilterStyled>\n                <Filter {...{\n                    rawData,\n                    handleFilterChange,\n                    filterType,\n                    filterDate,\n                    filterPair,\n                    handleReset,\n                }} />\n            </TableFilterStyled>\n        )}\n        <Table className={'scrollable'} {...{...defaultArgs, ...props, rawData: getRenderData()}}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import React from 'react'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { debounce } from 'lodash'\nimport { Button, Column, NewTagIcon, Table, TablePagination, TableProps } from '../../basic-lib'\nimport {\n    AmmDetail, AvatarCoinStyled,\n    Currency,\n    EmptyValueTag,\n    getThousandFormattedNumbers,\n    globalSetup,\n    MiningIcon,\n    PriceTag,\n    SearchIcon,\n    TableType,\n} from '@loopring-web/common-resources';\nimport { Avatar, Box, InputAdornment, OutlinedInput, Typography } from '@material-ui/core/';\nimport { PoolTableProps, Row } from './Interface';\nimport styled from '@emotion/styled';\nimport {  TablePaddingX } from '../../styled';\nimport { useDeepCompareEffect } from 'react-use';\nimport { useHistory } from 'react-router-dom';\nimport { FormatterProps } from 'react-data-grid';\n// import store from '@loopring-web/webapp/src/stores';\nimport { useSettings } from '../../../stores';\n\n\n// export enum TradeTypes {\n//     buy = 'Buy',\n//     sell = 'Sell'\n// }\n\n// export type RawDataTradeItem = {\n//     side: TradeTypes;\n//     amount: {\n//         from: {\n//             key: string;\n//             value: number;\n//         },\n//         to: {\n//             key: string;\n//             value: number\n//         }\n//     };\n//     price: {\n//         key: string;\n//         value: number;\n//     };\n//     fee: {\n//         key: string;\n//         value: number;\n//     };\n//     time: number;\n// }\n\n\n// enum TableType {\n//     filter = 'filter',\n//     page = 'page'\n// }\n//  ${({theme}) => AvatarIconPair({theme})}\nconst BoxStyled = styled(Box)`\n\n` as typeof Box\nconst TableStyled = styled(Box)`\n  .rdg {\n    --template-columns: 240px auto auto  86px 130px !important;\n\n    .rdg-cell.action {\n      display: flex;\n      justify-content: center;                    \n      align-items: center;\n    }\n  }\n\n  ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as typeof Box\n\n\nexport const IconColumn = React.memo(<R extends AmmDetail<T>, T>({row}: { row: R }) => {\n    const {coinJson} = useSettings();\n    if(!row || !row.coinAInfo || !row.coinBInfo) {\n        return <BoxStyled />\n    }\n    const {coinAInfo, coinBInfo, isNew, isActivity} = row;\n    const coinAIcon: any = coinJson[ coinAInfo.simpleName ];\n    const coinBIcon: any = coinJson[ coinBInfo.simpleName ];\n    return <BoxStyled display={'flex'} flexDirection={'row'} justifyContent={'space-between'} alignItems={'center'}>\n\n        <Box display={'flex'} flexDirection={'row'} justifyContent={'center'} alignItems={'center'}>\n            <Box className={'logo-icon'} height={'var(--list-menu-coin-size)'}  position={'relative'}  zIndex={20}\n                 width={'var(--list-menu-coin-size)'} alignItems={'center'} justifyContent={'center'}>\n                {coinAIcon ?\n                    <AvatarCoinStyled imgx={coinAIcon.x} imgy={coinAIcon.y}\n                                      imgheight={coinAIcon.height}\n                                      imgwidth={coinAIcon.width} size={24}\n                                      variant=\"circular\" alt={coinAInfo?.simpleName as string}\n                        // src={sellData?.icon}\n                                      src={'data:image/svg+xml;utf8,' + '<svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H36V36H0V0Z\"/></svg>'}/>\n                    : <Avatar variant=\"circular\" alt={coinAInfo?.simpleName as string} style={{\n                        height: 'var(--list-menu-coin-size)',\n                        width: 'var(--list-menu-coin-size)'\n                    }}\n                        // src={sellData?.icon}\n                              src={'static/images/icon-default.png'}/>\n                }</Box>\n\n            <Box className={'logo-icon'} height={'var(--list-menu-coin-size)'}   position={'relative'}  zIndex={18}   left={-8}\n                 width={'var(--list-menu-coin-size)'} alignItems={'center'}\n                 justifyContent={'center'}>{coinBIcon ?\n                <AvatarCoinStyled imgx={coinBIcon.x} imgy={coinBIcon.y} imgheight={coinBIcon.height}\n                                  imgwidth={coinBIcon.width} size={24}\n                                  variant=\"circular\" alt={coinBInfo?.simpleName as string}\n                    // src={sellData?.icon}\n                                  src={'data:image/svg+xml;utf8,' + '<svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H36V36H0V0Z\"/></svg>'}/>\n                : <Avatar variant=\"circular\" alt={coinBInfo?.simpleName as string} style={{\n                    height: 'var(--list-menu-coin-size)',\n                    width: 'var(--list-menu-coin-size)'\n                }}\n                    // src={sellData?.icon}\n                          src={'static/images/icon-default.png'}/>} </Box>\n            <Typography variant={'inherit'} display={'flex'} flexDirection={'column'} marginLeft={1} component={'div'}\n                        paddingRight={1}>\n                <Typography component={'h3'} color={'textPrimary'} title={'sell'}>\n                    <Typography component={'span'} className={'next-coin'}>\n                        {coinAInfo?.simpleName}\n                    </Typography>\n                    <Typography component={'i'}>/</Typography>\n                    <Typography component={'span'} title={'buy'}>\n                        {coinBInfo?.simpleName}\n                    </Typography>\n                </Typography>\n                {/*<Typography variant={'body2'} component={'span'} color={'textSecondary'}>*/}\n                {/*    {t('labelLiquidity') + ' ' + currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(amountDollar)*/}\n                {/*        : PriceTag.Yuan + getThousandFormattedNumbers(amountYuan)}*/}\n                {/*</Typography>*/}\n            </Typography>\n            {isActivity ? <Typography component={'span'} paddingRight={1}><MiningIcon/> </Typography> : undefined}\n            {isNew ? <NewTagIcon/> : undefined}\n        </Box>\n    </BoxStyled>\n\n}) as <R extends AmmDetail<T>, T>(props: { row: R }) => JSX.Element;\n\nconst columnMode = <R extends Row<T>, T>({t}: WithTranslation, currency: 'USD' | 'CYN'): Column<R, unknown>[] => [\n    {\n        key: 'pools',\n        sortable: false,\n        width: 'auto',\n        minWidth: 240,\n        name: t('labelPool'),\n        formatter: ({row}: FormatterProps<R, unknown>) => {\n            return <Box flex={1} height={'100%'} alignContent={'center'} display={'flex'}>\n                <IconColumn row={row as any}/>\n            </Box>\n\n        }\n    },\n    {\n        key: 'liquidity',\n        sortable: false,\n        width: 'auto',\n        name: t('labelLiquidity'),\n        formatter: ({row}) => {\n            const {amountDollar, amountYuan = 0} = row\n            return <Typography\n                component={'span'}> {\n                typeof amountDollar === 'undefined' ? EmptyValueTag :\n                    typeof amountDollar === 'undefined' ? EmptyValueTag : currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(amountDollar) : PriceTag.Yuan + getThousandFormattedNumbers(amountYuan)}\n            </Typography>\n\n        }\n    },\n    {\n        key: 'volume24',\n        sortable: false,\n        width: 'auto',\n        minWidth: 156,\n        name: t('label24TradeVolume'),\n        formatter: ({row}) => {\n            //priceDollar, priceYuan, ,priceDollar: EmptyValueTag, priceYuan: EmptyValueTag\n            // typeof priceDollar === 'undefined' ? EmptyValueTag :\n            //     currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(Number(priceDollar)) : PriceTag.Yuan + getThousandFormattedNumbers(Number(priceYuan))}\n\n            const {volume} = row.tradeFloat && row.tradeFloat.volume ? row.tradeFloat : {volume: EmptyValueTag};\n            return <Typography\n                component={'span'}> {volume} {row.tradeFloat && row.tradeFloat.volume ? row.coinAInfo.simpleName : ''}\n            </Typography>\n        }\n    },\n    // {\n    //     key: 'reward24',\n    //     sortable: false,\n    //     minWidth: 136,\n    //     width: 'auto',\n    //     name: t('label24Reward'),\n    //     formatter: ({row}) => {\n    //         const reward: EmptyValueTag | number = (row.tradeFloat && typeof row.tradeFloat.reward !== 'undefined') ? row.tradeFloat.reward : EmptyValueTag;\n    //         return <Typography\n    //             component={'span'}> {\n    //             reward === EmptyValueTag ? reward :\n    //                 currency === Currency.dollar ?\n    //                     PriceTag.Dollar + getThousandFormattedNumbers(reward)\n    //                     : PriceTag.Yuan + getThousandFormattedNumbers(reward)}\n    //         </Typography>\n    //     }\n    // },\n    {\n        key: 'APY',\n        sortable: false,\n        name: t('labelAPY'),\n        width: 'auto',\n        maxWidth: 68,\n        formatter: ({row}) => {\n            const APY = typeof row.APY !== undefined && row.APY ? row?.APY : EmptyValueTag;\n            return <Typography\n                component={'span'}> {APY === EmptyValueTag || typeof APY === 'undefined' ? EmptyValueTag : APY + '%'}</Typography>\n        }\n    },\n    {\n        key: 'trade',\n        name: t('labelAction'),\n        // maxWidth: 120,\n        width: 'auto',\n        headerCellClass: `action`,\n        cellClass: () => `action`,\n        formatter: ({row}) => {\n            return <Button\n                href={`${window.location.href}/pools/coinPair/${row?.coinAInfo?.simpleName + '-' + row?.coinBInfo?.simpleName}`}\n                className={'btn'} variant={'outlined'} size={'small'}>\n                {t('labelTradePool')}</Button>\n        }\n    },\n]\n\n\nexport const PoolsTable = withTranslation('tables')(\n    <T extends { [ key: string ]: any }>({\n                                             t, i18n,\n                                             tReady,\n                                             handlePageChange,\n                                             pagination,\n                                             showFilter = true,\n                                             rawData,\n                                             wait = globalSetup.wait,\n                                             ...rest\n                                         }: WithTranslation & PoolTableProps<T>) => {\n        const [filterBy, setFilterBy] = React.useState<string>('');\n        const [page, setPage] = React.useState(rest?.page ? rest.page : 1);\n        const [totalData, setTotalData] = React.useState<Row<T>[]>(rawData && Array.isArray(rawData) ? rawData : []);\n        \n        const history = useHistory()\n\n        useDeepCompareEffect(() => {\n            setTotalData(rawData)\n        }, [rawData])\n\n        const defaultArgs: TableProps<any, any> = {\n            rawData,\n            columnMode: columnMode({t, i18n, tReady}, Currency.dollar),\n            generateRows: (rawData: any) => rawData,\n            generateColumns: ({columnsRaw}) => columnsRaw as Column<Row<any>, unknown>[],\n        }\n\n\n        const pageSize = pagination ? pagination.pageSize : 10;\n\n        const getRenderData = React.useCallback(() => pagination\n            ? totalData.slice((page - 1) * pageSize, page * pageSize)\n            : totalData\n            , [page, pageSize, pagination, totalData])\n\n        const updateData = React.useCallback(({TableType, filterBy}) => {\n            if (TableType === 'filter') {\n                setPage(1)\n            }\n            // @ts-ignore\n            let newData = rawData.filter((row) => {\n                if (row && row.coinAInfo) {\n                    // @ts-ignore\n                    return RegExp(filterBy, 'ig').test(row.coinAInfo.simpleName) || RegExp(filterBy, 'ig').test(row.coinBInfo.simpleName);\n                }\n            })\n            setTotalData(newData);\n        }, [rawData]);\n        const doUpdate = (filterBy: string) => {\n            updateData({TableType: TableType.filter, filterBy})\n        }\n\n        const handleFilterChange = React.useCallback(debounce(doUpdate, wait), [doUpdate]);\n\n        const _handlePageChange = React.useCallback((page: number) => {\n            setPage(page);\n            updateData({TableType: TableType.page, currPage: page})\n            handlePageChange(page);\n        }, [updateData, handlePageChange])\n\n        const onRowClick = React.useCallback((_rowIdx: any, row: any) => {\n            const pathname = `/liquidity/pools/coinPair/${row?.coinAInfo?.simpleName + '-' + row?.coinBInfo?.simpleName}`\n            \n            history && history.push({\n                pathname,\n            })\n        }, [history])\n\n        return <TableStyled flex={1} flexDirection={'column'} display={'flex'}>\n            {showFilter && <Box display={'flex'} margin={3}>\n              <OutlinedInput\n                  {...{\n                      placeholder: t('labelFilter'),\n                      value: filterBy,\n                      onChange: (event: any) => {\n                          setFilterBy(event.currentTarget?.value);\n                          handleFilterChange(event.currentTarget?.value);\n                      }\n                  }\n                  }\n                  key={'search'}\n                  className={'search'}\n                  aria-label={'search'}\n                  startAdornment={<InputAdornment position=\"start\">\n                      <SearchIcon/>\n                  </InputAdornment>}\n              />\n            </Box>}\n            <Table {...{\n                ...defaultArgs, t, i18n, tReady, ...rest,\n                rawData: getRenderData(),\n                onRowClick: (index, row) => onRowClick(index, row),\n                // sortMethod: (sortedRows: Row<T>[], sortColumn) => {\n                //     switch (sortColumn) {\n                //         case 'pools':\n                //             sortedRows = sortedRows.sort((a, b) => a?.coinAInfo?.simpleName.localeCompare(b?.coinAInfo?.simpleName))\n                //             break;\n                //         case 'liquidity':\n                //             sortedRows = sortedRows.sort((a, b) => a.amountDollar - b.amountDollar)\n                //             break;\n                //         case 'volume24':\n                //             sortedRows = sortedRows.sort((a, b) => a.tradeFloat.priceDollar - b.tradeFloat.priceDollar)\n                //             break;\n                //         case 'reward24':\n                //             sortedRows = sortedRows.sort((a, b) => a.tradeFloat.reward - b.tradeFloat.reward)\n                //             break;\n                //         case 'APY':\n                //             sortedRows = sortedRows.sort((a, b) => a.tradeFloat.APY - b.tradeFloat.APY)\n                //             break;\n                //         default:\n                //             break;\n                //     }\n                //     return sortedRows;\n                // }\n            }}/>\n            {pagination && rawData && rawData.length > 0 && (\n                <TablePagination page={page} pageSize={pageSize} total={totalData.length}\n                                 onPageChange={_handlePageChange}/>\n            )}\n        </TableStyled>\n    })\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\nimport { Trans, withTranslation, WithTranslation } from 'react-i18next';\nimport moment from 'moment'\nimport { TablePagination, TableProps } from '../../basic-lib'\nimport { Column, Table, } from '../../basic-lib/'\nimport { Currency, EmptyValueTag, getThousandFormattedNumbers, globalSetup, PriceTag } from '@loopring-web/common-resources'\nimport { AmmRecordRow as Row, AmmRecordTableProps, AmmTradeType } from './Interface'\nimport { FormatterProps } from 'react-data-grid';\nimport styled from '@emotion/styled';\nimport { TablePaddingX } from '../../styled';\nimport { useDeepCompareEffect } from 'react-use';\n\n\n// enum ActionType {\n//     // filter = 'filter',\n//     page = 'page'\n// }\n\nconst TableStyled = styled(Box)`\n    flex: 1;\n    .rdg {\n        --template-columns: 180px auto 250px auto auto !important;\n\n        .rdg-cell.action {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        }\n    }\n    .textAlignRight{\n        text-align: right;\n    }\n    ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as typeof Box\n\nconst columnMode = ({t}: WithTranslation, currency: 'USD' | 'CYN'): Column<Row<any>, unknown>[] => [\n    {\n        key: 'style',\n        sortable: false,\n        width: 'auto',\n        minWidth: 240,\n        name: t('labelPool'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            const {type, coinA, coinB} = row\n            if (type === AmmTradeType.add) {\n                return <Trans i18nKey={'valueAddTOAMM'}>\n                    Add &nbsp;\n                    <Typography component={'span'}>\n                        {coinA.simpleName}\n                    </Typography>\n                    &nbsp;  and  &nbsp;\n                    <Typography component={'span'}>\n                        {coinB.simpleName}\n                    </Typography>\n                </Trans>\n            } else if (type === AmmTradeType.swap) {\n                return <Trans i18nKey={'valueSwapForAMM'}>\n                    Swap &nbsp;\n                    <Typography component={'span'}>\n                        {coinA.simpleName}\n                    </Typography>\n                    &nbsp; for &nbsp;\n                    <Typography component={'span'}>\n                        {coinB.simpleName}\n                    </Typography>\n                </Trans>\n            } else {\n                return <Trans i18nKey={'valueRemoveTOAMM'}>\n                    Swap &nbsp;\n                    <Typography component={'span'}>\n                        {coinA.simpleName}\n                    </Typography>\n                    &nbsp; remove  &nbsp;\n                    <Typography component={'span'}>\n                        {coinB.simpleName}\n                    </Typography>\n                </Trans>\n            }\n\n        }\n    },\n    {\n        key: 'totalValue',\n        sortable: false,\n        width: 'auto',\n        name: t('labelAmmTotalValue'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            const {totalDollar, totalYuan} = row\n            return <Typography\n                component={'span'}> {\n                typeof totalDollar === 'undefined' ? EmptyValueTag :\n                    currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(totalDollar) : PriceTag.Yuan + getThousandFormattedNumbers(totalYuan)}\n            </Typography>\n\n        }\n    },\n    {\n        key: 'tokenAmount',\n        sortable: false,\n        width: 'auto',\n        name: t('labelAmmTokenAmount'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            const {amountA, amountB, coinA, coinB} = row;\n            return <Typography component={'span'}>\n                {typeof amountA === 'undefined' ? EmptyValueTag : amountA} {coinA.simpleName} + {typeof amountB === 'undefined' ? EmptyValueTag : amountA} {coinB.simpleName}\n            </Typography>\n        }\n    },\n    {\n        key: 'status',\n        sortable: false,\n        width: 'auto',\n        name: t('labelStatus'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            // const {amountA, amountB, coinA, coinB} = row;\n            return <Typography component={'span'}>\n                {row.status}\n                {/*{ typeof amountA === 'undefined'? EmptyValueTag : amountA } {coinA.simpleName} + { typeof amountB === 'undefined'? EmptyValueTag : amountA } {coinB.simpleName}*/}\n            </Typography>\n        }\n    },\n    {\n        key: 'time',\n        sortable: false,\n        width: 'auto',\n        headerCellClass: 'textAlignRight',\n        cellClass: 'textAlignRight',\n        name: t('labelAmmTime'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            const {time} = row;\n            let timeString;\n            if (typeof time === 'undefined') {\n                timeString = EmptyValueTag\n            } else {\n                timeString = moment(new Date(time), \"YYYYMMDDHHMM\").fromNow();\n            }\n            return <Typography component={'span'} textAlign={'right'}>\n                {timeString}\n            </Typography>\n            // 10 年前\n\n        }\n    },\n]\n\n\nexport const AmmRecordTable = withTranslation('tables')(<T extends { [ key: string ]: any }>({\n                                                                                                 t, i18n,\n                                                                                                 tReady,\n                                                                                                 handlePageChange,\n                                                                                                 pagination,\n                                                                                                 showFilter = true,\n                                                                                                 rawData,\n                                                                                                 wait = globalSetup.wait,\n                                                                                                 ...rest\n                                                                                             }: AmmRecordTableProps<T> & WithTranslation) => {\n    const [page, setPage] = React.useState(rest?.page ? rest.page : 1);\n    const [totalData, setTotalData] = React.useState<Row<T>[]>(rawData && Array.isArray(rawData) ? rawData : []);\n    useDeepCompareEffect(() => {\n        setTotalData(rawData)\n    }, [rawData])\n\n    const defaultArgs: TableProps<any, any> = {\n        rawData,\n        columnMode: columnMode({t, i18n, tReady}, Currency.dollar),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}) => columnsRaw as Column<Row<any>, unknown>[],\n    }\n\n\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    const getRenderData = React.useCallback(() => pagination\n        ? totalData.slice((page - 1) * pageSize, page * pageSize)\n        : totalData\n        , [page, pageSize, pagination, totalData])\n\n    const _handlePageChange = React.useCallback((page: number) => {\n        setPage(page);\n        // updateData({actionType: ActionType.page, currPage: page})\n        handlePageChange(page);\n    }, [handlePageChange])\n\n    return <TableStyled>\n        <Table className={'scrollable'}  {...{\n            ...defaultArgs, t, i18n, tReady, ...rest,\n            rawData: getRenderData()\n        }}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={_handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import { Meta, Story } from '@storybook/react/types-6-0';\nimport { CellDepthFormatter } from './components/Formatters';\nimport { Column, DataGridProps, generateColumns, generateRows, Table } from './index';\n\nimport styled from \"@emotion/styled\";\nimport { RowRendererProps } from 'react-data-grid';\n\nimport { DepthRow, RowBefore } from \"./components/RowRenders\";\nimport { useTranslation } from 'react-i18next';\n\nconst Style = styled.div`\n  background: var(--color-global-bg);\n`\n\ninterface Row {\n    price: string;\n    size: string;\n    volume: string;\n    number: string;\n    sortColumn: string;\n    filterColumn: string;\n    cellExpend: {\n        value: string;\n        children: [];\n        isExpanded: boolean;\n    }\n    children?: Row[];\n    isExpanded?: boolean;\n    format?: any;\n}\n\nconst rawData: Array<Array<any>> = [\n    ['1.2', 'big', '0.12', '123', 'abc', 'start_a'],\n    ['1.3', 'big', '0.99', '1293', 'abc', 'start_a'],\n    ['1.5', 'small', '0.42', '23', 'abc', 'start_a'],\n    ['1.2', 'big', '0.32', '123', 'abc', 'end_a'],\n    ['1.6', 'big', '0.52', '123', 'abc', 'start_a'],\n    ['1.3', 'middle', '0.852', '5', 'abc', 'before_a'],\n    ['1.2', 'big', '0.12', '123', 'abc', 'start_a']\n]\nconst columnModeDefault: Column<Row, unknown>[] = [\n    {key: 'price', name: 'price'},\n    {key: 'size', name: 'size'},\n    {key: 'volume', name: 'volume'},\n    {key: 'number', name: 'size'},\n    {key: 'string', name: 'volume'},\n    {key: 'filter', name: 'number'}\n];\n\n/**\n * Table StoryBook\n */\nexport default {\n    component: Table,\n    title: 'basic-lib/Table',\n    argTypes: {},\n} as Meta;\n\nconst Template: Story<DataGridProps<Row, unknown>> = (args: DataGridProps<Row, unknown> & any) => {\n    let rest = useTranslation()\n    return <Style><Table {...{...args, ...rest}}  /></Style>\n}\nexport const Default = Template.bind({});\nexport const Empty = Template.bind({});\nexport const FormatCell = Template.bind({});\nexport const FormatRow = Template.bind({});\nexport const SortColumn = Template.bind({});\nexport const ExpendRowDemo = Template.bind({});\nDefault.args = {\n    rawData: rawData,\n    columnMode: columnModeDefault,\n    generateRows: generateRows,\n    generateColumns: generateColumns,\n};\nEmpty.args = {\n    ...Default.args,\n    rawData: [],\n    columnMode: columnModeDefault,\n};\nconst columnModeCellDepth: Column<Row, unknown>[] = [\n    {key: 'price', name: 'price', cellClass: (row: Row) => Number(row.volume) > 0.4 ? 'success' : 'error'},\n    {\n        key: 'size', name: 'size', formatter: ({row, column, ...props}: any) => {\n            return (<>\n                <CellDepthFormatter  {...props} row={row} column={column}\n                                     className={row.price > .4 ? 'rgb-depth-success' : 'rgb-depth-error'}\n                                     depthKey={'price'}/>\n                <div className=\"rdg-cell-value\">\n                    <div>{row[ column.key ]}</div>\n                </div>\n            </>);\n        }\n    },\n    {key: 'volume', name: 'volume', sortable: true},\n];\nFormatCell.args = {\n    ...Default.args,\n    ...{\n        columnMode: columnModeCellDepth\n    }\n};\nFormatRow.args = {\n    ...Default.args,\n    ...{\n        columnMode: columnModeDefault,\n        rowRenderer: (p: RowRendererProps<Row, any>) => {\n            const {row} = p;\n            return <DepthRow depthKey={'volume'} rowBeforeRender={(p: any) => {\n                const width = `${Number(row.volume) * 100}%`;\n                return <RowBefore {...p} width={width} className={Number(row.volume) > .4 ? 'rgb-depth-red' : ''}/>\n            }} {...p}/>\n        }\n    }\n};\n\nconst columnModeSort: Column<Row, unknown>[] = [\n    {key: 'price', name: 'price', cellClass: (row: Row) => Number(row.price) > 100 ? 'upper' : 'row'},\n    {key: 'size', name: 'size', sortable: true,},\n    {key: 'volume', name: 'volume', sortable: true},\n    {key: 'sortColumn', name: 'value', sortable: true}\n];\nSortColumn.args = {\n    ...Default.args,\n    columnMode: columnModeSort,\n    sortDefaultKey: 'sortColumn',\n    frozeSort: false,\n    sortMethod: (sortedRows: Row[], sortColumn) => {\n        switch (sortColumn) {\n            case 'size':\n                sortedRows = sortedRows.sort((a, b) => a[ sortColumn ].localeCompare(b[ sortColumn ]));\n                break;\n            case 'sortColumn':\n            case 'volume':\n                sortedRows = sortedRows.sort((a: Row, b: Row) => Number(a[ sortColumn ]) - Number(b[ sortColumn ]));\n                break;\n            default:\n        }\n        return sortedRows;\n    }\n};\n","import React, { Dispatch } from 'react';\nimport { ArrowSort, headerSortCell, SortableHeaderCellProps } from '../../../basic-lib';\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport { Box } from '@material-ui/core';\n\n// type SharedHeaderCellProps<R, SR> = Pick<\n//     HeaderRendererProps<R, SR>,\n//     'sortDirection' | 'onSort' | 'priority'\n//     >;\nexport type HeaderCellProps<R, SR> = SortableHeaderCellProps<R, SR> & {\n    filterBy: string,\n    setFilterBy: Dispatch<any>,\n}\n\nexport const HeaderCell = withTranslation('tables')(<R extends any, SR>({\n                                                                            t,\n                                                                            column,\n                                                                            sortDirection,\n                                                                            priority,\n                                                                            onSort,\n                                                                            children,\n                                                                            setFilterBy\n                                                                        }: HeaderCellProps<R, SR> & WithTranslation) => {\n    if (column.sortable) {\n\n        return (<Box component={'span'} display={'flex'} alignItems={'center'}\n                     className={`rdg-header-sort-cell ${headerSortCell}`}>\n                <Box component={'a'} display={'flex'} alignItems={'center'} onClick={(e: React.MouseEvent) => {\n                    onSort(e.ctrlKey);\n                    setFilterBy('tradePair');\n                }}>\n                    {t('labelTradePair')}\n                    <ArrowSort {...{sortDirection}}/>\n                </Box>\n                <Box component={'a'} display={'flex'} alignItems={'center'} onClick={(e: React.MouseEvent) => {\n                    onSort(e.ctrlKey);\n                    setFilterBy('Volume');\n                }}>\n                    {t('labelVolume')}\n                    <ArrowSort {...{sortDirection}}/>\n                </Box>\n                {priority}\n            </Box>\n        );\n    } else {\n        return <>{children ? children : column.name}</>;\n    }\n\n\n});\n\n\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { Button, TablePagination, TableProps } from '../../basic-lib'\nimport { Column, Table, } from '../../basic-lib/'\nimport { Currency, EmptyValueTag, getThousandFormattedNumbers, globalSetup, PriceTag } from '@loopring-web/common-resources'\nimport { Method, MyPoolRow as Row, MyPoolTableProps } from './Interface'\nimport { FormatterProps } from 'react-data-grid';\nimport styled from '@emotion/styled';\nimport { TablePaddingX } from '../../styled';\nimport { useDeepCompareEffect } from 'react-use';\nimport { IconColumn } from '../poolsTable';\n\nexport enum PoolTradeType {\n    add = 'add',\n    swap = 'swap',\n    remove = 'remove'\n}\n\n// enum ActionType {\n//     // filter = 'filter',\n//     page = 'page'\n// }\nconst rowHeight = 86;\n\nconst TableStyled = styled(Box)`\n    .rdg {\n    --template-columns: 200px auto 300px 250px !important;\n    height: calc(86px * 5 + var(--header-row-height));\n    .rdg-cell.action {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    }\n    .textAlignRight{\n        text-align: right;\n    }\n\n  ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as typeof Box\nconst TypogStyle = styled(Typography)`\n    font-size: ${({theme}) => theme.fontDefault.body1};\n` as typeof Typography;\n\nconst PoolStyle = styled(Box)`\n    height: calc(${rowHeight}px);\n    &.MuiTypography-body1 {\n        font-size: ${({theme}) => theme.fontDefault.body1};\n    }\n    .MuiButton-root:not(:first-of-type){\n        margin-left:  ${({theme}) => theme.unit}px;\n    }\n` as typeof Box;\n\nconst columnMode = ({\n                        t,\n                        handleWithdraw,\n                        handleDeposit\n                    }: WithTranslation & Method<Row<any>>, currency: 'USD' | 'CYN'): Column<Row<any>, unknown>[] => [\n    {\n        key: 'pools',\n        sortable: false,\n        width: 'auto',\n        minWidth: 240,\n        name: t('labelPool'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            return <PoolStyle display={'flex'} flexDirection={'column'} alignContent={'flex-start'}\n                            justifyContent={'center'}>\n                <IconColumn row={row.ammDetail as any}/>\n            </PoolStyle>\n\n        }\n    },\n\n    {\n        key: 'liquidity',\n        sortable: false,\n        width: 'auto',\n        headerCellClass: 'textAlignRight',\n        name: t('labelLiquidity'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            if (!row) {\n                return <Box display={'flex'} justifyContent={'flex-end'} alignItems={'center'}></Box>\n            }\n            const {balanceA, balanceB, balanceYuan, balanceDollar} = row;\n            const formattedYuan = (balanceYuan && Number.isNaN(balanceYuan)) ? balanceYuan : 0\n            const formattedDollar = (balanceDollar && Number.isNaN(balanceYuan)) ? balanceDollar : 0\n            return <Box height={'100%'} display={'flex'} justifyContent={'flex-end'} alignItems={'center'}>\n                <TypogStyle variant={'body1'} component={'span'} color={'textPrimary'} fontFamily={'Roboto'}>\n                    {balanceDollar === undefined ? EmptyValueTag : currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(formattedDollar)\n                        : PriceTag.Yuan + getThousandFormattedNumbers(formattedYuan)}\n                </TypogStyle>\n                {/* <Typography variant={'body2'} component={'p'} color={'textSecondary'} marginTop={1 / 2}>\n\n                    <Typography component={'span'}\n                                color={'textSecondary'}>{getThousandFormattedNumbers(balanceA)}</Typography>\n                    <Typography component={'span'} marginLeft={1 / 2}\n                                color={'textSecondary'}>{` ${coinAInfo?.simpleName as string}`}</Typography>\n                </Typography>\n                <Typography variant={'body2'} component={'p'} color={'textSecondary'} marginTop={0}>\n                    <Typography component={'span'}\n                                color={'textSecondary'}>{getThousandFormattedNumbers(balanceB)}</Typography>\n                    <Typography component={'span'} marginLeft={1 / 2}\n                                color={'textSecondary'}>{` ${coinBInfo?.simpleName as string}` }</Typography>\n\n                </Typography> */}\n            </Box>\n\n        }\n    },\n    {\n        key: 'feesEarned',\n        sortable: false,\n        width: 'auto',\n        name: t('labelFeeEarned'),\n        headerCellClass: 'textAlignRight',\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            if (!row.ammDetail || !row.ammDetail.coinAInfo) {\n                return <Box display={'flex'} justifyContent={'flex-end'} alignItems={'center'}></Box>\n            }\n            const {ammDetail: {coinAInfo, coinBInfo}, feeA, feeB, feeYuan, feeDollar} = row;\n            return <Box width={'100%'} height={'100%'} display={'flex'} justifyContent={'flex-end'} alignItems={'center'}>\n                {/* <TypogStyle variant={'body1'} component={'span'} color={'textPrimary'}>\n                    {feeDollar === undefined ? EmptyValueTag : currency === Currency.dollar ? 'US' + PriceTag.Dollar + getThousandFormattedNumbers(feeDollar)\n                        : 'CNY' + PriceTag.Yuan + getThousandFormattedNumbers(feeYuan as number)}\n                </TypogStyle> */}\n                <Typography variant={'body2'} component={'p'} color={'textPrimary'} fontFamily={'Roboto'}>\n\n                    <Typography component={'span'}\n                                >{getThousandFormattedNumbers(feeA)}</Typography>\n                    <Typography component={'span'}\n                                >{` ${coinAInfo?.simpleName as string}`}</Typography>\n                </Typography>\n                <Typography variant={'body2'} component={'p'} color={'textPrimary'} marginX={1 / 2}>+</Typography>\n                <Typography variant={'body2'} component={'p'} color={'textPrimary'} fontFamily={'Roboto'}>\n                    <Typography component={'span'}\n                                >{getThousandFormattedNumbers(feeB)}</Typography>\n                    <Typography component={'span'}\n                                >{` ${coinBInfo?.simpleName as string}` }</Typography>\n\n                </Typography>\n            </Box>\n\n        }\n    },\n    {\n        key: 'action',\n        name: t('labelActions'),\n        headerCellClass: 'textAlignRight',\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            return <PoolStyle display={'flex'} flexDirection={'column'} alignItems={'flex-end'}\n                            justifyContent={'center'}>\n                <Box display={'flex'} marginRight={-1}>\n                    <Button variant={'text'} size={'small'}\n                            onClick={() => {\n                                handleDeposit(row)\n                            }}>{t('labelPoolTableAddLiqudity')}</Button>\n                    <Button variant={'text'} size={'small'}\n                            onClick={() => {\n                                handleWithdraw(row)\n                            }}>{t('labelPoolTableRemoveLiqudity')}</Button>\n                </Box>\n            </PoolStyle>\n        }\n    }\n]\n\n\nexport const MyPoolTable = withTranslation('tables')(<T extends { [ key: string ]: any }>({\n                                                                                              t, i18n,\n                                                                                              tReady,\n                                                                                              handlePageChange,\n                                                                                              pagination,\n                                                                                              showFilter = true,\n                                                                                              rawData,\n                                                                                              handleWithdraw,\n                                                                                              handleDeposit,\n                                                                                              wait = globalSetup.wait,\n                                                                                              ...rest\n                                                                                          }: MyPoolTableProps<T> & WithTranslation) => {\n    const [page, setPage] = React.useState(rest?.page ? rest.page : 1);\n    const [totalData, setTotalData] = React.useState<Row<T>[]>(rawData && Array.isArray(rawData) ? rawData : []);\n    useDeepCompareEffect(() => {\n        setTotalData(rawData)\n    }, [rawData])\n\n    const defaultArgs: TableProps<any, any> = {\n        rawData,\n        columnMode: columnMode({t, i18n, tReady, handleWithdraw, handleDeposit}, Currency.dollar),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}) => columnsRaw as Column<Row<any>, unknown>[],\n    }\n\n\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    const getRenderData = React.useCallback(() => pagination\n        ? totalData.slice((page - 1) * pageSize, page * pageSize)\n        : totalData\n        , [page, pageSize, pagination, totalData])\n\n    const _handlePageChange = React.useCallback((page: number) => {\n        setPage(page);\n        // updateData({actionType: ActionType.page, currPage: page})\n        handlePageChange(page);\n    }, [handlePageChange])\n\n    return <TableStyled>\n        <Table\n            rowHeight={rowHeight}\n            headerRowHeight={44}\n            {...{\n                ...defaultArgs, t, i18n, tReady, ...rest,\n                rawData: getRenderData()\n            }}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={_handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import { WithTranslation, withTranslation } from 'react-i18next'\nimport { Button, Column, generateColumns, Table, TableProps, } from '../../basic-lib/'\nimport { Default } from '../../basic-lib/tables/table.stories';\nimport { FormatterProps } from 'react-data-grid';\nimport { Typography } from '@material-ui/core/';\nimport { Currency, FloatTag, PriceTag } from '@loopring-web/common-resources';\nimport { HeaderCell } from './componnents/HeaderCell';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\ninterface Row {\n    sellData: string,\n    buyData: string,\n    volume: number,\n    price: number,\n    priceYuan: number,\n    priceDollar: number,\n    change24: string,\n    showTag: 'USD' | 'CYN',\n    floatTag: keyof typeof FloatTag,\n}\n\nconst Styled = styled.div`\n  ${({theme}) => `\n  & .rdg{\n    .rdg-cell.float-decrease {\n      .btn-change24 {\n        background-color: ${theme.colorBase.error};\n      }\n      .color-price {\n        color: ${theme.colorBase.error};\n      }\n    }\n    .rdg-cell.float-increase{\n      .btn-change24{\n        background-color: ${theme.colorBase.success};\n      }\n      .color-price {\n        color: ${theme.colorBase.success};\n      }\n\n    }\n  }`\n}\n`\n\n\nconst generateRows = <Row, SR = unknown>(rawData: Row[], _rest: TableProps<Row, SR>): Row[] => {\n    return rawData && Array.isArray(rawData) ? rawData : [];\n}\nexport type TradeFilterTableProps<R> = {\n    rawData: R,\n} & Partial<TableProps<R, unknown>>\n\n\nexport const TradeFilterTable = withTranslation('tables')(({\n                                                               t,\n                                                               rawData,\n                                                               ...rest\n                                                           }: WithTranslation & TradeFilterTableProps<Row>) => {\n    // const formattedRawData = props.rawData.map(o => Object.values(o))\n    // const [filterType, setFilterType] = React.useState(FilterTradeTypes.allTypes)\n    // const [filterDate, setFilterDate] = React.useState(null)\n    // const [page, setPage] = React.useState(1)\n    // const [totalData, setTotalData] = React.useState(formattedRawData)\n    // {\n    //     key: 'county',\n    //     name: 'County',\n    //     width: 200,\n    //     formatter({ row }) {\n    //         if (row.id === 'id_0') {\n    //             const actions = [\n    //                 {\n    //                     icon: '🗑️',\n    //                     callback() {\n    //                         alert('Deleting');\n    //                     }\n    //                 },\n    //                 {\n    //                     icon: '🔗',\n    //                     actions: [\n    //                         {\n    //                             text: '✍️ Edit Cell',\n    //                             callback() {\n    //                                 alert('Edit Cell');\n    //                             }\n    //                         },\n    //                         {\n    //                             text: '📋 Copy Cell',\n    //                             callback() {\n    //                                 alert('Copied');\n    //                             }\n    //                         }\n    //                     ]\n    //                 }\n    //             ];\n    //\n    //             return (\n    //                 <>\n    //                     <CellActionsFormatter actions={actions} />\n    //                     <div>{row.county}</div>\n    //                 </>\n    //             );\n    //         }\n    //\n    //         return <>{row.county}</>;\n    //     }\n    // },\n    const [filterBy, setFilterBy] = React.useState('');\n    const columnMode: readonly Column<Row, unknown>[] = [\n        {\n            key: 'tradePair', name: 'tradePair', sortable: true,\n            cellClass: (row: Row) => `${row.floatTag}`,\n            headerRenderer: (props: any) => <HeaderCell {...props} filterBy={filterBy} setFilterBy={setFilterBy}/>,\n            formatter: ({row}: FormatterProps<Row, unknown>) => <>\n                <Typography component={'p'} paddingTop={1 / 2}>\n                    <Typography component={'span'} title={'sell'} className={'next-coin'}>\n                        {row.sellData}\n                    </Typography>\n                    <Typography component={'i'}>/</Typography>\n                    <Typography component={'span'} title={'buy'} variant={'body2'} color={'textSecondary'}>\n                        {row.buyData}\n                    </Typography>\n                </Typography>\n                <Typography component={'p'} variant={'body2'}>{t('labelVolume')} {row.volume}</Typography>\n            </>\n        },\n        {\n            key: 'price', name: 'labelTradePrice', sortable: true,\n            cellClass: (row: Row) => `float-${row.floatTag}`,\n            formatter: ({row}: FormatterProps<Row, unknown>) => <>\n                <Typography component={'p'} className={'color-price'} paddingTop={1 / 2}>\n                    {row.price}\n                </Typography>\n                <Typography component={'p'}\n                            variant={'body2'}>{row.showTag === Currency.dollar ? PriceTag.Dollar + row.priceDollar : PriceTag.Yuan + row.priceYuan}</Typography>\n            </>\n        },\n        {\n            key: 'change24', name: 'labelQuota24hChange', sortable: true,\n            cellClass: (row: Row) => `float-${row.floatTag}`,\n            formatter: ({row}: FormatterProps<Row, unknown>) => {\n                return <Button className={'btn-change24'} variant={'contained'} size={'small'} color={'primary'}>\n                    {row.change24}</Button>\n            }\n        },\n    ]\n    const defaultArgs = {\n        ...Default.args,\n        generateRows,\n        generateColumns,\n        columnMode,\n        sortDefaultKey: 'sortColumn',\n        frozeSort: false,\n        sortMethod: (sortedRows: Row[], sortColumn: any) => {\n            switch (sortColumn) {\n                case 'tokenInfo':\n                    sortedRows = sortedRows.sort((a, b) => a[ sortColumn ].localeCompare(b[ sortColumn ]));\n                    break;\n                case 'price':\n                case 'change24':\n                    sortedRows = sortedRows.sort((a: any, b: any) => Number(a[ sortColumn ]) - Number(b[ sortColumn ]));\n                    break;\n                default:\n            }\n            return sortedRows;\n        }\n    };\n    return <Styled>\n        <Table<any, unknown> {...{t, ...rest, ...defaultArgs, rawData}}/>\n    </Styled>\n\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Grid, MenuItem } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { DatePicker, TextField } from '../../../basic-lib/form'\nimport { Button } from '../../../basic-lib/btns'\nimport { DropDownIcon } from '@loopring-web/common-resources'\nimport { RawDataAmmItem } from '../AmmTable'\n\nexport interface FilterProps {\n    rawData: RawDataAmmItem[];\n    filterType: string;\n    filterDate: Date | null;\n    filterPair: string;\n    handleFilterChange: ({filterType, filterDate, filterToken}: any) => void;\n    handleReset: () => void;\n}\n\nconst StyledTextFiled = styled(TextField)`\n  &.MuiTextField-root {\n    max-width: initial;\n  }\n\n  .MuiInputBase-root {\n    width: initial;\n    max-width: initial;\n  }\n`\n\nconst StyledBtnBox = styled(Box)`\n  display: flex;\n  margin-left: 40%;\n\n  button:first-of-type {\n    margin-right: 8px;\n  }\n`\n\nexport enum FilterTradeTypes {\n    join = 'Join',\n    exit = 'Exit',\n    allTypes = 'All Types'\n}\n\nexport const Filter = withTranslation('tables', {withRef: true})(({\n        t,\n        rawData,\n        filterType,\n        filterDate,\n        filterPair,\n        handleReset,\n        handleFilterChange,\n    }: FilterProps & WithTranslation) => {\n    const FilterTradeTypeList = [\n        {\n            label: t('labelAmmFilterTypes'),\n            value: 'All Types'\n        },\n        {\n            label: t('labelAmmFilterJoin'),\n            value: 'Join'\n        },\n        {\n            label: t('labelAmmFilterExit'),\n            value: 'Exit'\n        },\n    ]\n\n    const rawPairList = rawData.map(item => `${item.amount.from.key} - ${item.amount.to.key}`)\n    const formattedRawPairList = [\n        {\n            label: t('labelFilterAllPairs'),\n            value: 'all'\n        },\n        ...Array.from(new Set(rawPairList)).map((pair: string) => ({\n            label: pair,\n            value: pair\n        }))\n    ]\n\n    return (\n        <Grid container spacing={2} alignItems={'center'}>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-amm-filter-types\"\n                    select\n                    fullWidth\n                    value={filterType}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                        handleFilterChange({type: event.target.value})\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {FilterTradeTypeList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <DatePicker value={filterDate} onChange={(newValue: any) => handleFilterChange({date: newValue})}/>\n            </Grid>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-trade-filter-pairs\"\n                    select\n                    fullWidth\n                    value={filterPair}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                        handleFilterChange({ pair: event.target.value })\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {formattedRawPairList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <StyledBtnBox>\n                    <Button variant={'outlined'} size={'medium'} color={'primary'}\n                            onClick={handleReset}>{t('labelFilterReset')}</Button>\n                    {/* <Button variant={'contained'} size={'small'} color={'primary'}\n                            onClick={handleSearch}>{t('Search')}</Button> */}\n                </StyledBtnBox>\n            </Grid>\n        </Grid>\n    )\n})\n","export enum AmmSideTypes {\n    Exit = 'Exit',\n    Join = 'Join'\n}\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport styled from '@emotion/styled'\nimport { TFunction, withTranslation, WithTranslation } from 'react-i18next'\nimport moment from 'moment'\nimport { Column, Table } from '../../basic-lib/tables'\nimport { TablePagination } from '../../basic-lib'\nimport { TableFilterStyled, TablePaddingX } from '../../styled';\nimport { Filter, FilterTradeTypes } from './components/Filter'\nimport { getThousandFormattedNumbers, TableType } from '@loopring-web/common-resources';\nimport { useSettings } from '../../../stores';\nimport { useDeepCompareEffect } from 'react-use';\nimport { Row } from '../poolsTable/Interface';\nimport { AmmSideTypes } from './interface'\n\n// interface Row {\n//     side: TradeTypes;\n//     amount: {\n//         from: {\n//             key: string;\n//             value: number;\n//         },\n//         to: {\n//             key: string;\n//             value: number\n//         }\n//     };\n//     price: number;\n//     fee: number;\n//     time: number;\n//     cellExpend?: {\n//         value: string\n//         children: []\n//         isExpanded: boolean\n//     };\n//     children?: Row[];\n//     isExpanded?: boolean;\n//     formatter?: any;\n// }\n\nexport type RawDataAmmItem = {\n    side: AmmSideTypes;\n    amount: {\n        from: {\n            key: string;\n            value?: string;\n        },\n        to: {\n            key: string;\n            value?: string;\n        }\n    };\n    lpTokenAmount?: string;\n    fee: {\n        key: string;\n        value?: string;\n    };\n    time: number;\n}\n\nexport type AmmTableProps = {\n    rawData: RawDataAmmItem[];\n    pagination?: {\n        pageSize: number\n    }\n    showFilter?: boolean\n}\n\n// enum TableType {\n//     filter = 'filter',\n//     page = 'page'\n// }\n\nconst TableStyled = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .rdg {\n    --template-columns: 130px 250px auto auto auto !important;\n    .rdg-cell.action {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n  ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as typeof Box\n\nconst StyledSideCell: any = styled(Box)`\n  color: ${(props: any) => {\n    const {\n      value,\n      theme: {colorBase},\n    } = props\n    return value === AmmSideTypes.Join ? colorBase.success : colorBase.error\n  }}\n`\n\nconst getColumnModeAssets = (t: TFunction, _currency: 'USD' | 'CYN'): Column<RawDataAmmItem, unknown>[] => [\n    {\n        key: 'side',\n        name: t('labelAmmSide'),\n        formatter: ({row}) => {\n            const tradeType = row[ 'side' ] === AmmSideTypes.Exit ? t('labelAmmExit') : t('labelAmmJoin')\n            return (\n                <div className=\"rdg-cell-value\">\n                    <StyledSideCell value={row[ 'side' ]}>\n                        {tradeType}\n                    </StyledSideCell>\n                </div>\n            )\n        }\n    },\n    {\n        key: 'amount',\n        name: t('labelAmmAmount'),\n        formatter: ({row}) => {\n            const {from, to} = row[ 'amount' ]\n            return (\n                <div className=\"rdg-cell-value\">\n                    {`${from.value} ${from.key} + ${to.value} ${to.key}`}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'lpTokenAmount',\n        name: t('labelAmmLpTokenAmount'),\n        formatter: ({row}) => {\n            const amount = row[ 'lpTokenAmount' ]\n            const renderValue = row[ 'side' ] === AmmSideTypes.Join\n                ? `+${getThousandFormattedNumbers(Number(amount))}`\n                : `-${getThousandFormattedNumbers(Number(amount))}`\n            return (\n                <div className=\"rdg-cell-value\">\n                    {renderValue}\n                    {/*{currency === Currency.dollar ?*/}\n                    {/*    PriceTag.Dollar + getThousandFormattedNumbers(priceDollar)*/}\n                    {/*    : PriceTag.Yuan + getThousandFormattedNumbers(priceYuan)}*/}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'fee',\n        name: t('labelAmmFee'),\n        formatter: ({row}) => {\n            const {key, value} = row[ 'fee' ]\n            return (\n                <div className=\"rdg-cell-value\">\n                    {`${value} ${key}`}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'time',\n        name: t('labelAmmRecordTime'),\n        // minWidth: 400,\n        formatter: ({row}) => {\n            const time = moment(new Date(row[ 'time' ]), \"YYYYMMDDHHMM\").fromNow()\n            return (\n                <div className=\"rdg-cell-value\">\n                    {time}\n                </div>\n            )\n        }\n    },\n]\n\nexport const AmmTable = withTranslation('tables')((props: WithTranslation & AmmTableProps) => {\n    const {t, pagination, showFilter, rawData} = props\n    const [filterType, setFilterType] = React.useState(FilterTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = React.useState<Date | null>(null)\n    const [page, setPage] = React.useState(1)\n    const [totalData, setTotalData] = React.useState<RawDataAmmItem[]>(rawData)\n    const [filterPair, setFilterPair] = React.useState('all')\n\n    const {currency} = useSettings();\n    const defaultArgs: any = {\n        columnMode: getColumnModeAssets(t, currency).filter(o => !o.hidden),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}: any) => columnsRaw as Column<Row<any>, unknown>[],\n        style: {\n            backgroundColor: ({colorBase}: any) => `${colorBase.box}`\n        }\n    }\n\n    useDeepCompareEffect(() => {\n        setTotalData(rawData);\n    }, [rawData])\n\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    const getRenderData = React.useCallback(() => pagination\n        ? totalData.slice((page - 1) * pageSize, page * pageSize)\n        : totalData\n        , [page, pageSize, pagination, totalData])\n\n    const updateData = React.useCallback(({\n        TableType,\n        currFilterType = filterType,\n        currFilterDate = filterDate,\n        currFilterPair = filterPair,\n    }) => {\n        let resultData = rawData ? rawData : []\n        if (currFilterType !== FilterTradeTypes.allTypes) {\n            resultData = resultData.filter(o => o.side === currFilterType)\n        }\n        if (currFilterDate) {\n            resultData = resultData.filter(o => {\n                const chosenDate = Number(moment(currFilterDate).format('x'))\n                return chosenDate < o.time\n            })\n        }\n        if (currFilterPair !== 'all') {\n            resultData = resultData.filter(o => {\n                const pair = `${o.amount.from.key} - ${o.amount.to.key}`\n                return pair === currFilterPair\n            })\n        }\n        if (TableType === 'filter') {\n            setPage(1)\n        }\n        setTotalData(resultData)\n    }, [rawData, filterDate, filterType, filterPair])\n\n    const setFilterItems = React.useCallback(({type, date, pair}) => {\n        setFilterType(type)\n        setFilterDate(date)\n        setFilterPair(pair)\n    }, [])\n\n    const handleFilterChange = React.useCallback(({type = filterType, date = filterDate, pair = filterPair}) => {\n        setFilterItems({type, date, pair})\n        updateData({TableType: TableType.filter, currFilterType: type, currFilterDate: date})\n    }, [updateData, setFilterItems, filterType, filterDate, filterPair])\n\n    const handlePageChange = React.useCallback((page: number) => {\n        setPage(page)\n        updateData({TableType: TableType.page, currPage: page})\n    }, [updateData])\n\n    const handleReset = React.useCallback(() => {\n        handleFilterChange({\n            type: FilterTradeTypes.allTypes,\n            date: null,\n            pair: 'all'\n        })\n    }, [handleFilterChange])\n\n    return <TableStyled>\n        {showFilter && (\n            <TableFilterStyled>\n                <Filter\n                    rawData={rawData}\n                    handleFilterChange={handleFilterChange}\n                    filterType={filterType}\n                    filterDate={filterDate}\n                    filterPair={filterPair}\n                    handleReset={handleReset}\n                />\n            </TableFilterStyled>\n        )}\n        <Table {...{...defaultArgs, ...props, rawData: getRenderData()}}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import { GatewayItem } from '@loopring-web/common-resources';\n\n/**\n * @param handleSelect default hanldeSelect, if item have no private handleSelect function\n */\nexport interface ProviderMenuProps {\n    gatewayList: GatewayItem[]\n    handleSelect?: (event: React.MouseEvent, key: string) => void,\n    providerName?: string\n}\n\nexport type  ModalWalletConnectProps = {\n    open: boolean,\n    onClose: { bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void; }['bivarianceHack'];\n    onBack?: ()=>void;\n    step: number,\n    noClose?:boolean,\n    style?: any, //{w,h}\n    onQRClick ?: ()=>void;\n    panelList: Array<{view:JSX.Element,onBack?: undefined|(()=>void) }>\n}\nexport type ModalAccountProps = ModalWalletConnectProps;\n\nexport enum WalletConnectStep {\n    Provider,\n    MetaMaskProcessing,\n    WalletConnectProcessing,\n    WalletConnectQRCode,\n    SuccessConnect,\n    FailedConnect,\n}","export default __webpack_public_path__ + \"static/media/logo.3f0a262d.svg\";","import styled from '@emotion/styled';\nimport Switch from '@material-ui/core/Switch';\nimport { Box, Divider, FormControlLabel, Grid, Radio, RadioGroup, Typography } from '@material-ui/core';\nimport React from 'react';\nimport {\n    Currency,\n    DropDownIcon,\n    i18n,\n    LanguageType,\n    ThemeType,\n    UpColor\n} from '@loopring-web/common-resources';\nimport { OutlineSelect, OutlineSelectItem } from '../basic-lib';\nimport { Trans, WithTranslation, withTranslation } from 'react-i18next';\nimport { useSettings } from '../../stores';\n\n// const StyledSwitchColor = styled(Switch)(({theme}) => ({\n//\n//     \"& .Mui-checked\": {\n//         color: theme.colorBase.textPrimary,\n//         '& + .MuiSwitch-track.MuiSwitch-track': {\n//             border: `solid ${theme.colorBase.success}`,\n//         },\n//         '& .MuiSwitch-thumb': {\n//             backgroundColor: theme.colorBase.success,\n//         }\n//     },\n//     '& .MuiSwitch-track': {\n//         border: `solid ${theme.colorBase.error}`,\n//         opacity: 1\n//     },\n//     '& .MuiSwitch-thumb': {\n//         backgroundColor: theme.colorBase.error,\n//     }\n// }));\nconst StyledSwitch = styled(Switch)`\n  margin:0;  \n`;\n\nconst BoxStyle = styled(Box)(() => ({\n    \" .MuiInput-root\":{\n        background: 'var(--opacity)',\n    },\n})) as typeof Box\n\n\nexport const BtnCurrency = ({t, currency, label, handleChange}: any) => {\n    const [state, setState] = React.useState<string>(currency ? currency : Currency.dollar);\n    const _handleChange = React.useCallback((event: React.ChangeEvent<any>) => {\n        setState(event.target.value);\n        if (handleChange) {\n\n            handleChange(event.target.value)\n        }\n    }, [handleChange])\n    return <OutlineSelect aria-label={t(label)} IconComponent={DropDownIcon}\n                          labelId=\"language-selected\"\n                          id=\"language-selected\"\n                          value={state} autoWidth\n                          onChange={_handleChange}>\n        <OutlineSelectItem value={Currency.dollar}>$ {t('labelUSDollar')}</OutlineSelectItem>\n        <OutlineSelectItem value={Currency.yen}>¥ {t('labelCNYYuan')}</OutlineSelectItem>\n    </OutlineSelect>\n}\n\nconst StyledDivider = styled(Divider)`\n  margin: 0;\n`\nconst RadioGroupStyle = styled(RadioGroup)`\n  margin: 0;\n  .MuiFormControlLabel-root {\n        margin-right: 0;\n  }\n`\n\n\nexport const BtnLanguage = ({t, label, handleChange}: any) => {\n    const _handleChange = React.useCallback((event: React.ChangeEvent<any>) => {\n        if (handleChange) {\n            handleChange(event.target.value);\n        }\n    }, [handleChange]);\n    return <OutlineSelect aria-label={t(label)} IconComponent={DropDownIcon}\n                          labelId=\"language-selected\"\n                          id=\"language-selected\"\n                          value={i18n.language} style={{minWidth: 60}}\n                          onChange={_handleChange}>\n        <OutlineSelectItem value={LanguageType.en_US}>EN</OutlineSelectItem>\n        <OutlineSelectItem value={LanguageType.zh_CN}>中文</OutlineSelectItem>\n    </OutlineSelect>\n}\n\n\nexport const SettingPanel = withTranslation(['common', 'layout'])(({t, ...rest}: & WithTranslation) => {\n    // const theme = useTheme();\n    const {setUpColor, setCurrency, setLanguage, currency, upColor, setTheme, themeMode} = useSettings()\n\n    const handleOnLanguageChange =React.useCallback( (value: any) => {\n\n        setLanguage(value)\n    } ,[setLanguage])\n    const handleOnCurrencyChange =React.useCallback( (value: any) => {\n        setCurrency(value);\n    } ,[setCurrency])\n    const handleColorChange = React.useCallback((_e: any,value) => {\n        setUpColor(value);\n    } ,[setUpColor])\n    //const [mode, setMode] = React.useState(themeMode)\n    const handleThemeClick = React.useCallback((e:any) => {\n\n        if (e.target.checked) {\n            setTheme(ThemeType.dark);\n        } else {\n            setTheme(ThemeType.light);\n        }\n    }, [themeMode])\n\n    return         <BoxStyle component={'section'} display={'flex'} flexDirection={'column'} width={'var(--swap-box-width)'}>\n        {/*<Typography variant={'h6'} component={'h4'} paddingX={2}>{t('labelTitleLayout')}</Typography>*/}\n        <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n              alignItems={'center'} paddingX={2} marginY={2}>\n            <Grid item xs={4} display={'flex'} flexDirection={'column'}>\n                <Typography variant={'body1'} component={'p'}>{t('labelLanguage')}</Typography>\n            </Grid>\n            <Grid item xs={8} display={'flex'} flexDirection={'column'} justifyContent={'space-evenly'}\n                  alignItems={'flex-end'} alignSelf={'stretch'}>\n                <Grid item>\n                    <BtnLanguage {...{\n                        t,\n                        ...rest,\n                        handleChange: handleOnLanguageChange\n                    }}></BtnLanguage>\n                </Grid>\n            </Grid>\n        </Grid>\n        <StyledDivider/>\n\n        <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n              alignItems={'center'} paddingX={2} marginY={2}>\n            <Grid item xs={4} display={'flex'} flexDirection={'column'}>\n                <Typography variant={'body1'} component={'p'}>{t('labelCurrency')}</Typography>\n            </Grid>\n            <Grid item xs={8} display={'flex'} flexDirection={'column'} justifyContent={'space-evenly'}\n                  alignItems={'flex-end'} alignSelf={'stretch'}>\n                <Grid item>\n                    <BtnCurrency {...{\n                        t, ...rest,\n                        currency,\n                        label: 'currencySetting',\n                        handleChange: handleOnCurrencyChange\n                    }}></BtnCurrency>\n\n                </Grid>\n            </Grid>\n        </Grid>\n        <StyledDivider/>\n        <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n              alignItems={'center'} paddingX={2} marginY={1}>\n            <Grid item xs={4} display={'flex'} flexDirection={'column'}>\n                <Typography variant={'body1'} component={'p'}>{t('labelColors')}</Typography>\n            </Grid>\n            <Grid item xs={8} display={'flex'} flexDirection={'column'} justifyContent={'center'}\n                  alignItems={'flex-end'} alignSelf={'stretch'}>\n                {/*<Typography variant={'body2'} component={'span'} paddingX={2} >*/}\n                {/*    */}\n                {/*</Typography>*/}\n                {/*<Typography >*/}\n                    <RadioGroupStyle row={false}  aria-label=\"withdraw\" name=\"withdraw\" value={upColor}\n                                onChange={handleColorChange}>\n                        {Object.keys(UpColor).map((key) => {\n                            return <FormControlLabel key={key} value={key} control={<Radio/>}\n                                                     label={<Trans i18nKey=\"whichColorIsUp\">\n                                <Typography component={'span'} variant={'body2'} style={{\n                                    textTransform: 'capitalize',\n                                    // color: key === UpColor.green ? theme.colorBase.success : theme.colorBase.error\n                                }}>{{up: key === UpColor.green ? t('labelgreen') : t('labelred')}} up</Typography>\n                                                         and <Typography component={'span'} variant={'body2'} style={{\n                                                         textTransform: 'capitalize',\n                                                         // color: key === UpColor.green ? theme.colorBase.error : theme.colorBase.success\n                                                     }}>{{down: key === UpColor.green ? t('labelred') : t('labelgreen')}} down</Typography>\n                                                     </Trans>}></FormControlLabel>\n                        })}\n                    </RadioGroupStyle>\n                    {/*<ToggleButtonGroup exclusive {...{*/}\n                    {/*    ...rest,*/}\n                    {/*    t,*/}\n                    {/*    tgItemJSXs: [*/}\n                    {/*        {value: UpColor.green, JSX:<>UP</>,tlabel: 'green up'},*/}\n                    {/*        {value: UpColor.red, JSX:<>Down</>,tlabel: 'red up'}],*/}\n                    {/*    value: upColor,*/}\n                    {/*    handleChange:handleColorChange,*/}\n                    {/*    size: 'small'*/}\n                    {/*}}/>*/}\n                {/*</Typography>*/}\n\n                {/*<StyledSwitchColor checked={upColor === UpColor.green} color=\"default\"*/}\n                {/*                   onChange={handleColorChange}/>*/}\n            </Grid>\n\n        </Grid>\n        <StyledDivider/>\n        <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n              alignItems={'center'} paddingX={2} marginY={2}>\n            <Grid item xs={4} display={'flex'} flexDirection={'column'}>\n                <Typography variant={'body1'} component={'p'}>{t('labelTheme')}</Typography>\n            </Grid>\n            <Grid item xs={8} display={'flex'} flexDirection={'column'} justifyContent={'center'}\n                  alignItems={'flex-end'} alignSelf={'stretch'} >\n                <StyledSwitch checked={themeMode === ThemeType.dark } aria-label={t('change theme')}  onClick={handleThemeClick}></StyledSwitch>\n            </Grid>\n        </Grid>\n    </BoxStyle>\n\n})\n\n\n\n\n\n\n","import { WithTranslation, withTranslation } from 'react-i18next';\nimport QRCode from 'qrcode.react';\nimport styled from '@emotion/styled';\nimport { Box, Modal, Typography } from '@material-ui/core';\nimport { ModalQRCodeProps, QRCodeProps } from './Interface';\nimport { ModalCloseButton } from '../../basic-lib';\n\nconst ModalContentStyled = styled(Box)`\n  & > div {\n    background: var(--color-pop-bg);\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: var(--modal-width);\n  }\n         //.modalClose {\n         //    width: 100%;\n         //    display: flex;\n         //    justify-content: flex-end;\n         //    margin: -16px 32px 16px 0;\n         // }\n \n`\n\n// export interface ModalQRCodeProps {\n//     // open: boolean;\n//     // onClose: { bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void; }['bivarianceHack'] | any;\n//     address: string;\n//     url: string;\n//     btnAction?: (props?: any) => void;\n// }\n\nexport const QRCodePanel = ((\n    {\n        // open,\n        // onClose,\n        // t,\n        title,\n        description,\n        url = 'https://exchange.loopring.io/',\n        // handleClick\n    }: QRCodeProps) => {\n    if (url === undefined) {\n        url = ''\n    }\n    return <Box display={'flex'} justifyContent={'space-between'} alignItems={'center'} flexDirection={'column'}>\n        {title && (\n            <Typography variant={'h4'} component='h3' className=\"modalTitle\" marginBottom={3}>{title}</Typography>)}\n        <QRCode value={url} size={160} style={{padding: 5, backgroundColor: '#fff'}} aria-label={`link:${url}`}/>\n        {description && (<Typography variant={'body1'} marginBottom={3} marginTop={1}>{description}</Typography>)}\n\n    </Box>\n    {/* </div> */\n    }\n});\n\nexport const ModalQRCode = withTranslation('common')(({\n                                                          onClose,\n                                                          open,\n                                                          t,\n                                                          ...rest\n                                                      }: ModalQRCodeProps & WithTranslation) => {\n\n\n    return <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n    >\n        <ModalContentStyled display={'flex'} alignItems={'center'} justifyContent={'center'}>\n            <Box paddingTop={3} paddingBottom={3} display={'flex'} flexDirection={'column'}>\n                <ModalCloseButton onClose={onClose} {...{...rest, t}} />\n                <QRCodePanel {...{...rest, t}} />\n            </Box>\n\n        </ModalContentStyled>\n    </Modal>\n})\n\n","import { WithTranslation, withTranslation } from 'react-i18next';\nimport { Modal } from '@material-ui/core';\nimport {\n    ModalBackButton,\n    ModalCloseButton,\n    ModalWalletConnectProps,\n    SwipeableViewsStyled,\n    SwitchPanelStyled\n} from '../../../index';\nimport { useTheme } from '@emotion/react';\nimport { Box } from '@material-ui/core/';\n\nexport const ModalWalletConnect = withTranslation('common', {withRef: true})((\n    {\n        // t,\n        open,\n        onClose,\n        step,\n        onBack,\n        panelList,\n        style,\n        ...rest\n    }: ModalWalletConnectProps & WithTranslation) => {\n    const theme = useTheme();\n    const {w, h} = style ? style : {w: undefined, h: undefined};\n\n\n    return <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n    >\n        <SwitchPanelStyled style={{boxShadow: '24'}} {...{\n            _height: h ? h : 'var(--modal-height)',\n            _width: w ? w : 'var(--modal-width)'\n        }}>\n            <Box display={'flex'} width={\"100%\"} flexDirection={'column'}>\n                <ModalCloseButton onClose={onClose} {...rest} />\n                {/*{panelList.map((panel) => {*/}\n                {/*    return panel.onBack ? <ModalBackButton  onBack={panel.onBack}  {...rest}/> : <></>*/}\n                {/*})}*/}\n                {onBack ? <ModalBackButton onBack={onBack}  {...rest}/> :<></>}\n            </Box>\n            <SwipeableViewsStyled animateTransitions={false} axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                                  index={step}\n                                  {...{_height: h ? h : 'var(--modal-height)', _width: w ? w : 'var(--modal-width)'}}>\n                {panelList.map((panel, index) => {\n                    return <Box flexDirection={'column'} flex={1} display={'flex'} key={index} justifyContent={'center'} alignItems={'stretch'}>\n                        {panel.view}\n                    </Box>\n                })}\n            </SwipeableViewsStyled>\n        </SwitchPanelStyled>\n    </Modal>;\n})\n","import QRCode from 'qrcode.react';\nimport { Box, Typography } from '@material-ui/core';\nimport { WithTranslation } from 'react-i18next';\nimport { Link } from '@material-ui/core/';\n\nexport const WalletConnectQRCode = ({url,onCopy, t}: { url: string,onCopy:()=>void } & WithTranslation)=>{\n    return   <Box flex={1} display={'flex'} alignItems={'center'} justifyContent={'space-between'} flexDirection={'column'}>\n\n        <Typography component={'h3'} variant={'h3'} marginBottom={3}>\n            <img style={{verticalAlign:'middle'}}  src={'static/svg/wallet-connect.svg'} alt={'walletConnect'} height={18}/> WalletConnect\n        </Typography>\n        <QRCode value={url} size={240} style={{padding: 5, backgroundColor: '#fff'}} aria-label={`link:${url}`}/>\n\n        <Box display={'flex'} alignItems={'center'} justifyContent={'center'} flexDirection={'column'}>\n            <Typography variant={'body2'} color={'textSecondary'} marginTop={2}>\n                {t('labelWalletConnectQRCode')}\n            </Typography>\n            <Typography variant={'body2'} component={'p'} marginTop={2} >\n                <Link onClick={onCopy}>{t('labelCopyClipBoard')}</Link>\n            </Typography>\n        </Box>\n\n    </Box>\n}","import { ButtonProps } from '../../basic-lib';\nimport { Account } from '@loopring-web/common-resources';\n\nexport type AccountBaseProps = {\n\n    // addressShort: string\n    // address: string,\n    level?: string,\n    mainBtn?: JSX.Element | React.ElementType<ButtonProps>,\n    etherscanUrl: string\n    // connectBy: string,\n    onDisconnect?: any,\n    onSwitch?: any,\n    // onLock?: any,\n    onCopy?: any,\n    onViewQRCode?: any,\n} & Account\n\n\nexport enum AccountStep {\n    NoAccount,\n    QRCode,\n    Deposit,\n    DepositInProcess,\n    Depositing,\n    DepositFailed,\n    UpdateAccount,\n    ProcessUnlock,\n    SuccessUnlock,\n    FailedUnlock,\n    HadAccount,\n    TokenApproveInProcess,\n    DepositApproveProcess,\n    TokenApproveFailed,\n    UpdateAccountInProcess,\n    UpdateAccountFailed,\n}\n","import { Box, Typography } from '@material-ui/core';\nimport { Trans, WithTranslation } from 'react-i18next';\nimport { ConnectProviders, LoadingIcon, CheckedIcon, EmbarIcon, } from '@loopring-web/common-resources';\nimport React from 'react';\nimport { useTheme } from '@emotion/react';\nimport { Button } from '../basic-lib';\n\nexport const InProgressBasic = ({\n                                 label,\n                                 providerName,\n                                 describe\n                             }: { describe: JSX.Element, label: string, providerName: string } & WithTranslation) => {\n    const providerDescribe = React.useMemo(() => {\n        switch (providerName) {\n            case  ConnectProviders.MetaMask:\n                return <Trans i18nKey={'labelMetaMaskProcessDescribe'}>\n                    {/*Please adding MetaMask to your browser,*/}\n                    Please click approve button on MetaMask popup window.\n                    When MetaMask dialog is dismiss,\n                    please manually click <img alt=\"MetaMask\" style={{verticalAlign: 'text-bottom'}}\n                                               src={'static/images/MetaMaskPlugIn.png'}/> on your browser toolbar.\n                </Trans>\n            case  ConnectProviders.WalletConnect:\n                return <Trans i18nKey={'labelWalletConnectProcessDescribe2'}>\n                    Please click approve on your device.</Trans>\n        }\n\n    }, [providerName])\n    return <Box flex={1} display={'flex'} alignItems={'center'} justifyContent={'space-between'}\n                flexDirection={'column'}>\n        <Typography component={'h3'} variant={'h3'} marginBottom={3}>{label}</Typography>\n        <Typography component={'p'} display={'flex'} alignItems={'center'} flexDirection={'column'} marginBottom={2}>\n            <LoadingIcon color={'primary'} style={{width: 60, height: 60}}/>\n        </Typography>\n        {describe}\n        <Typography variant={'body2'} color={'textSecondary'} component={'p'} marginTop={3} alignSelf={'flex-start'}\n                    paddingX={5}>\n            {providerDescribe}\n        </Typography>\n    </Box>\n}\n\nexport const CompletedBasic = ({ t, label, describe, onClose, }: WithTranslation & {label:string,describe:JSX.Element, onClose:(event:any)=>void }) => {\n    const theme = useTheme();\n    return   <Box flex={1} display={'flex'} alignItems={'center'}  justifyContent={'space-between'} flexDirection={'column'}>\n        <Typography component={'h3'} variant={'h3'} marginBottom={3}>{label}</Typography>\n        <Typography component={'p'} display={'flex'} alignItems={'center'} flexDirection={'column'} marginBottom={2}>\n            <CheckedIcon style={{width: 60, height: 60, color: theme.colorBase.success}}/>\n        </Typography>\n        {describe}\n        <Box marginTop={2} alignSelf={'stretch'} paddingX={5}>\n            <Button variant={'contained'} fullWidth size={'medium'}  onClick={onClose}>{t('labelClose')} </Button>\n        </Box>\n    </Box>\n}\n\nexport const FailedBasic= ({onRetry,describe,label,t}: {describe:JSX.Element, onRetry:(event:any)=>void,label:string } & WithTranslation)=>{\n    return    <Box flex={1} display={'flex'} alignItems={'center'}  justifyContent={'space-between'} flexDirection={'column'}>\n        <Typography component={'h3'} variant={'h3'} marginBottom={3}>{t(label)}</Typography>\n        <Typography component={'p'} display={'flex'} alignItems={'center'} flexDirection={'column'} marginBottom={2}>\n            <EmbarIcon color={'error'} style={{width:60,height:60}}></EmbarIcon>\n        </Typography>\n        {describe}\n        <Box marginTop={2} alignSelf={'stretch'} paddingX={5}>\n            <Button variant={'contained'} fullWidth size={'medium'}  onClick={onRetry}>{t('labelRetry')} </Button>\n        </Box>\n    </Box>\n\n}\n","import { Typography } from '@material-ui/core';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { InProgressBasic } from '../ModalPanelBase';\nimport {  ConnectProviders } from '@loopring-web/common-resources';\n\n\n\nexport const WalletConnectProcess = ({t,...rest}:WithTranslation)=>{\n\n\n\n    const describe = React.useMemo(()=>{\n        return <>\n            <Typography component={'span'} variant={'body1'} paddingY={1}>{t('labelProcessing')}</Typography>\n            {/*<Typography variant={'body2'} color={'textSecondary'} component={'p'} marginTop={3} alignSelf={'flex-start'} paddingX={6} >*/}\n            {/*    <Trans i18nKey={'labelWalletConnectProcessDescribe'}>*/}\n            {/*        Please wait WalletConnect Provider working processing*/}\n            {/*    </Trans>*/}\n            {/*</Typography>*/}\n        </>\n\n    },[])\n    return <InProgressBasic providerName={ConnectProviders.WalletConnect} describe={describe} label={t('labelWalletConnectProcessing')} {...{...rest,t}}/>\n}\n\nexport const MetaMaskProcess =  ({t,...rest}:WithTranslation)=>{\n    const describe = React.useMemo(()=>{\n        return    <>\n            <Typography component={'span'} paddingY={1}>{t('labelProcessing')}</Typography>\n            {/*<Typography variant={'body2'} color={'textSecondary'} component={'p'} marginTop={3} alignSelf={'flex-start'} paddingX={6} >*/}\n            {/*    <Trans i18nKey={'labelMetaMaskProcessDescribe'}>*/}\n            {/*        /!*Please adding MetaMask to your browser,*!/*/}\n            {/*        Please click approve button on MetaMask popup window.*/}\n            {/*        When MetaMask dialog is dismiss,*/}\n            {/*        please manually click <img style={{verticalAlign:'middle'}} src={'static/images/MetaMaskPlugIn.png'}/> on your browser toolbar.*/}\n            {/*    </Trans>*/}\n\n            {/*</Typography>*/}\n        </>\n\n    },[])\n    return <InProgressBasic providerName={ConnectProviders.MetaMask} describe={describe} label={t('labelMetaMaskProcessing')} {...{...rest,t}}/>\n}","import { Box, Checkbox, FormControlLabel as MuiFormControlLabel } from '@material-ui/core';\nimport { Trans, WithTranslation } from 'react-i18next';\nimport styled from '@emotion/styled';\nimport { ProviderMenuProps } from './Interface';\nimport { Link, Typography } from '@material-ui/core/';\nimport { Button } from '../../basic-lib';\nimport { CheckBoxIcon, CheckedIcon, ConnectProviders, GatewayItem } from '@loopring-web/common-resources';\nimport React from 'react';\n\n\nconst ProviderBtnStyled = styled(Button)`\n  background: var(--provider-btn);\n\n  &:hover {\n    background: var(--provider-hover);\n  }\n\n  // width: var(--gateway-icon-size);\n  // height: var(--gateway-icon-size);\n  // border-radius: 50%;\n  .MuiButton-label {\n    display: flex;\n    text-indent: 1em;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  padding: 0 ${({theme}) => theme.unit * 5 / 3}px;\n\n  &.selected {\n    position: relative;\n\n    &:after {\n      position: absolute;\n      content: \"\\u25CF\";\n      color: var(--color-success);\n      //width: 100%;\n      display: flex;\n      left: 0;\n      padding-left: ${({theme}) => theme.unit * 2}px;\n      //justify-content: ;\n      align-items: center;\n      font-size: ${({theme}) => theme.fontDefault.h5};\n    }\n\n  }\n` as typeof Button;\n//${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1 / 2, d_W:1})};\n//padding: 0 ${({theme}) => theme.unit * 5 / 3}px;\nconst BoxStyle = styled(Box)`\n  ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1 / 2, d_W: 0})};\n  background: var(--provider-hover);\n\n \n\n  .MuiFormControlLabel-root {\n    font-size: ${({theme}) => theme.fontDefault.h6};\n    align-items: flex-start;\n\n    .MuiTypography-root {\n      padding: ${({theme}) => theme.unit}px 0;\n    }\n  }\n\n` as typeof Box;\n// const WalletConnectPanelStyled = styled(Box)`\n//   height: 100%;\n//   //width: var(--transfer-modal-width);\n// ` as typeof Box;\n\nexport const ProviderMenu = ({\n                                 t,\n                                 gatewayList,\n                                 handleSelect,\n                                 providerName = ConnectProviders.unknown,\n                             }: ProviderMenuProps & WithTranslation) => {\n    // const  !==  ConnectProviders.unknown\n    return <Box flex={1} display={'flex'} alignItems={'center'} justifyContent={'space-between'}\n                flexDirection={'column'}>\n        <Typography component={'h3'} variant={'h3'} marginBottom={3}>{t('labelConnectWallet')}</Typography>\n        <Box display={'flex'} flexDirection={'column'} justifyContent={'center'}\n             flex={1} alignItems={'stretch'} alignSelf={'stretch'}\n             className=\"modalContent\" paddingX={10}>\n            <BoxStyle paddingX={5 / 3} display={'flex'} flexDirection={'row'}\n                      justifyContent={'stretch'} alignItems={'flex-start'}>\n                <MuiFormControlLabel\n                    control={<Checkbox defaultChecked checkedIcon={<CheckedIcon/>} icon={<CheckBoxIcon/>}\n                                       color=\"default\"/>}\n                    label={<Trans i18nKey=\"labelProviderAgree\">I have read, understand, and agree to the <Link component={'a'}\n                                                                                                       href={'./'}\n                                                                                                       target={'_parent'}>Terms\n                        of Service</Link>.</Trans>}/>\n            </BoxStyle>\n        </Box>\n        <Box display={'flex'} flexDirection={'column'} justifyContent={'center'}\n             flex={1} alignItems={'stretch'} alignSelf={'stretch'}\n             className=\"modalContent\" marginTop={3} paddingX={10}>\n\n            <>   {gatewayList.map((item: GatewayItem) => (\n                <Box key={item.key} marginTop={1.5}>\n                    <ProviderBtnStyled variant={'contained'} size={'large'} className={\n                        providerName === item.key ? 'selected' : ''\n                    } fullWidth\n                                       endIcon={<img src={item.imgSrc} alt={item.key} height={18}/>}\n                                       onClick={item.handleSelect ? item.handleSelect : (event: React.MouseEvent) => {\n                                           if (handleSelect) {\n                                               handleSelect(event, item.key);\n                                           }\n                                       }}>\n                        {t(item.key)}\n                    </ProviderBtnStyled>\n                </Box>\n            ))}\n            </>\n\n        </Box>\n    </Box>\n    {/*</WalletConnectPanelStyled>*/\n    }\n}\n\n// export const ModalWalletConnect = withTranslation('swap', {withRef: true})((\n//     {\n//         t,\n//         open,\n//         onClose,\n//         ...rest\n//     }: ModalWalletConnectProps & WithTranslation) => {\n//\n//     return <Modal\n//         open={open}\n//         onClose={onClose}\n//         aria-labelledby=\"modal-modal-title\"\n//         aria-describedby=\"modal-modal-description\"\n//     >\n//         <ModalContentStyled style={{boxShadow: '24'}}>\n//             <WalletConnectPanel {...{...rest, t}} />\n//         </ModalContentStyled>\n//     </Modal>\n// })\n","import { Typography } from '@material-ui/core';\nimport { Trans, WithTranslation } from 'react-i18next';\n// import { CheckedIcon } from '@loopring-web/common-resources';\n// import { useTheme } from '@emotion/react';\n// import { Button } from '../../basic-lib';\nimport { CompletedBasic } from '../ModalPanelBase';\nimport React from 'react';\n\nexport const SuccessConnect = ({t, providerName,onClose, ...rest  }: WithTranslation & {onClose:(e:any)=>void, providerName: string }) => {\n    // const theme = useTheme();\n\n    const describe = React.useMemo(()=>{\n        return    <>\n            <Typography component={'p'} marginTop={2}>\n                <Trans i18nKey={'labelSuccessConnectDescribe'}>\n                    Congratulation, Success Connected!\n                </Trans>\n            </Typography>\n        </>\n\n    },[])\n    return   <CompletedBasic {...{...rest,t}} label={t('labelSuccessConnect', {providerName})} describe={describe} onClose={onClose}  />\n\n\n\n\n}\n","import { Typography } from '@material-ui/core';\nimport { Trans, WithTranslation } from 'react-i18next';\nimport { Link } from '@material-ui/core/';\nimport { FailedBasic } from '../ModalPanelBase';\nimport React from 'react';\n\nexport const FailedConnect = ({onRetry,...rest}: { onRetry:(event:any)=>void } & WithTranslation)=>{\n    const describe = React.useMemo(()=>{\n        return <Typography component={'p'} marginTop={2} >\n            <Trans i18nKey={'labelRejectOrError'}>\n                Rejected, Please<Link onClick={onRetry}>retry</Link>\n            </Trans>\n        </Typography>\n    },[])\n    return  <FailedBasic label={'labelFailedConnect'} onRetry={onRetry} describe={describe} {...rest}/>\n}\n","import { Box, Button, Typography } from '@material-ui/core/';\nimport { CopyIcon, getShortAddr, LinkIcon, ReverseIcon, } from '@loopring-web/common-resources';\nimport { Trans, WithTranslation } from 'react-i18next';\nimport styled from '@emotion/styled';\nimport { AccountBaseProps } from './Interface';\nimport {\n    // PopoverPure,\n    VipStyled } from '../../../';\n// import { bindHover, bindPopover } from 'material-ui-popup-state/es';\n// import { usePopupState } from 'material-ui-popup-state/hooks';\n// import QRCode from 'qrcode.react';\n// ${({theme})=>boxLiner({theme})}\n// const PopStyle = styled(Box)`\n//   border-radius: ${({theme}) => theme.unit / 2}px\n// `\nconst BoxStyled = styled(Box)`\n  // .MuiLink-root {\n  //   height: 2rem;\n  //   line-height: 2rem;\n  //   color: var(--color-text-secondary);\n  //\n  //  \n  // }                                                               \n  & .MuiButton-root {\n    color: var(--color-text-secondary);\n\n    &:hover {\n      color: var(--color-text-primary);\n    }\n\n    // width: var(--account-button-fixed-width);\n    // height: var(--account-button-fixed-height);\n    // text-overflow: ellipsis;\n    // align-items: flex-end;\n    // position: relative;\n    // svg{\n    //   position: absolute;\n      //     top: ${({theme}) => theme.unit}px;\n    //   left: 50%;\n    //   margin-left: calc(var(--svg-size-large) / -2) ;\n    // }\n  }\n\n  & .active {\n\n  }\n\n  & .unlock {\n    svg {\n      color: var(--color-error);;\n    }\n  }\n\n  & .lock {\n    svg {\n      color: var(--color-success);;\n    }\n  }\n` as typeof Box\n\nexport const AccountBase = ({\n                                onDisconnect,\n                                accAddress,\n                                level,\n                                connectName,\n                                etherscanUrl,\n                                onCopy,\n                                // onViewQRCode,\n                                t,\n                            }: AccountBaseProps & WithTranslation) => {\n    const addressShort = getShortAddr(accAddress)\n    const etherscanLink = etherscanUrl + accAddress;\n    const connectBy = connectName === 'unknown' ? t('labelWrongNetwork') : connectName;\n    // const popupState = usePopupState({\n    //     variant: 'popover',\n    //     popupId: 'myAddress',\n    // })\n    return <Box display={'flex'} flexDirection={'column'} justifyContent={'flex-start'} alignItems={'center'}>\n        <Typography variant={'body2'} color={'textSecondary'} marginTop={3}>\n            <Trans i18nKey=\"labelConnectBy\" tOptions={{connectBy}}>\n                Connected with <Typography variant={'body2'} component={'span'}>{connectName}</Typography>.\n            </Trans>\n        </Typography>\n        <Typography marginTop={1} display={'flex'} alignItems={'center'}\n                     justifyContent={'flex-start'}>\n            <Typography component={'span'} variant={'h1'}>{addressShort}</Typography>\n            {level ? <VipStyled component={'span'} variant={'body2'}\n            >{level}</VipStyled> : undefined}\n        </Typography>\n\n\n\n        <BoxStyled component={'div'} display={'flex'} alignItems={'center'} justifyContent={'space-between'}\n                   marginTop={1} alignSelf={'stretch'}>\n            <Button formTarget={'_blank'} href={etherscanLink} startIcon={<LinkIcon fontSize={'small'}/>}>\n                <Typography variant={'body2'} marginTop={1 / 2}> {'Etherscan'} </Typography>\n            </Button>\n            <Button startIcon={<CopyIcon fontSize={'small'}/>} onClick={() => {\n                if (onCopy) onCopy()\n            }}>\n                <Typography variant={'body2'} marginTop={1 / 2}> {t('labelCopyClipBoard')} </Typography>\n            </Button>\n\n            {/* <Button startIcon={<ReverseIcon fontSize={'small'}/>} onClick={() => {\n                if (onSwitch) onSwitch()\n            }}>   labelCopyAddress\n                <Typography variant={'body2'} marginTop={1 / 2}>  {t('labelSwitchAccount')} </Typography>\n            </Button> */}\n            <Button startIcon={<ReverseIcon fontSize={'small'}/>} onClick={() => {\n                if (onDisconnect) onDisconnect()\n            }}>\n                <Typography variant={'body2'} marginTop={1 / 2}>  {t('labelDisconnect')} </Typography>\n            </Button>\n        </BoxStyled>\n\n\n    </Box>\n\n\n}","import React from 'react';\nimport { AccountFull } from '@loopring-web/common-resources';\n\nexport enum WalletNotificationStatus {\n    none = 'none',\n    error = 'error',\n    pending = 'pending',\n    success = 'success',\n}\n\nexport type  WalletNotificationInterface = {\n    // status: keyof typeof WalletNotificationStatus\n    message: string,\n    handleClick?: (event: React.MouseEvent) => void,\n}\n\n\nexport type WalletConnectBtnProps = {\n    handleClick: (_e: React.MouseEvent) => void,\n    accountState?:AccountFull,\n}","import { AccountBaseProps } from './Interface';\nimport { AccountBase } from './AccountBase';\nimport { Box } from '@material-ui/core';\nimport { WithTranslation, withTranslation } from 'react-i18next';\n\nexport const HadAccount = withTranslation('common')(({mainBtn, t, ...props }: WithTranslation & AccountBaseProps) => {\n    return <Box flex={1} display={'flex'} flexDirection={'column'} justifyContent={'space-between'} alignItems={'center'}>\n        <AccountBase {...props} t={t}/>\n        {/*<Box display={'flex'}  flexDirection={'column'} alignItems={'center'}>*/}\n        {/*    <Typography variant={'body2'} marginBottom={1} >*/}\n        {/*        {t('labelActivatedAccountDeposit')}*/}\n        {/*    </Typography>*/}\n        {/*</Box>*/}\n        <Box marginTop={2} alignSelf={'stretch'} paddingX={5}>\n            {mainBtn}\n        </Box>\n\n    </Box>\n})","import { AccountBase } from './AccountBase';\nimport { AccountBaseProps } from './Interface';\nimport { Box, Typography } from '@material-ui/core/';\nimport { Button, AnimationArrow } from '../../../index';\nimport { WithTranslation, withTranslation } from 'react-i18next';\n\nexport const NoAccount =  withTranslation('common')(({goDeposit,t,...props}:WithTranslation & AccountBaseProps & { goDeposit:()=>void }) => {\n    return <Box flex={1} display={'flex'} flexDirection={'column'} justifyContent={'space-between'} alignItems={'center'}>\n        <AccountBase {...props} t={t}/>\n        {/*<Box display={'flex'} marginTop={3} flexDirection={'column'} alignItems={'center'}>*/}\n        {/*    */}\n        {/*</Box>*/}\n        <Box marginTop={2} alignSelf={'stretch'} paddingX={5} display={'flex'} flexDirection={'column'} alignItems={'center'}>\n            <Typography variant={'body2'}>\n                {t('labelActivatedAccountDeposit')}\n            </Typography>\n            <AnimationArrow className={'arrowCta'}/>\n            <Button variant={'contained'} fullWidth size={'medium'}  onClick={() => {\n                goDeposit()\n            }}>{t('depositLabelBtn')} </Button>\n        </Box>\n\n    </Box>\n\n})\n\n","import { Box, Typography } from '@material-ui/core/';\nimport { WithTranslation } from 'react-i18next';\nimport { AccountBaseProps, AnimationArrow, Button } from '../../../index';\nimport { AccountBase } from './AccountBase';\n\nexport const ApproveAccount = ({\n                                   t,\n                                   goUpdateAccount,\n                                   ...props\n                               }: WithTranslation & AccountBaseProps & { goUpdateAccount?: () => void }) => {\n    // const theme = useTheme();\n    return <Box flex={1} display={'flex'} flexDirection={'column'} justifyContent={'space-between'}\n                alignItems={'center'}>\n        <AccountBase {...props} t={t}/>\n        {/*<Box display={'flex'} marginTop={3} flexDirection={'column'} alignItems={'center'}>*/}\n        {/*   */}\n        {/*</Box>*/}\n        <Box marginTop={2} alignSelf={'stretch'} paddingX={5}>\n            <Typography variant={'body2'} >\n                {t('labelActivatedAccountDeposit')}\n            </Typography>\n            <AnimationArrow className={'arrowCta'}/>\n            <Button variant={'contained'} fullWidth size={'medium'} onClick={() => {\n                if (goUpdateAccount) {\n                    goUpdateAccount()\n                }\n            }}>{t('labelActivateAccount')} </Button>\n        </Box>\n    </Box>\n    // <Box flex={1} display={'flex'} alignItems={'center'} justifyContent={'space-evenly'}\n    //             flexDirection={'column'}>\n    //     <Typography component={'h3'} variant={'h3'} marginBottom={3}>{t('labelDepositApproveProcess')}</Typography>\n    //     <Typography color={theme.colorBase.success} component={'p'} display={'flex'} alignItems={'center'} flexDirection={'column'}>\n    //         {t('labelDepositApproveSuccess')}\n    //         <Link target='_blank'  href={etherscanLink} display={'inline-block'}  marginTop={1 / 2}>\n    //             <Typography variant={'body2'} >  <LinkIcon fontSize={'small'}  style={{verticalAlign:'middle'}} /> {'Etherscan'} </Typography>\n    //         </Link>\n    //     </Typography>\n    //     <Box width={120} marginTop={2}>\n    //         <Button variant={'contained'} fullWidth size={'medium'}  onClick={() => {\n    //             goActiveAccount();\n    //         }}>{t('depositLabelBtn')} </Button>\n    //     </Box>\n    //\n    // </Box>\n}\n","import {  Typography } from '@material-ui/core';\nimport { LinkIcon } from '@loopring-web/common-resources';\nimport { WithTranslation } from 'react-i18next';\nimport { Link } from '@material-ui/core/';\nimport React from 'react';\nimport { CompletedBasic } from '../ModalPanelBase';\n\nexport const Depositing = ({\n                               t,\n                               label,\n                               etherscanLink,\n                               count = 30,\n                               onClose,\n                               ...rest\n                           }: WithTranslation & {\n    onClose: (e: any) => void,\n    label?: string,\n    etherscanLink: string, count?: number\n}) => {\n    const describe = React.useMemo(() => {\n        return <>\n            <Typography color={'textSecondary'} component={'span'}\n                        paddingY={1}>{t('labelDepositingProcessing', {count})}</Typography>\n            <Link target='_blank' href={etherscanLink} display={'inline-block'} marginTop={1 / 2}>\n                <Typography variant={'body2'}> <LinkIcon fontSize={'small'}\n                                                         style={{verticalAlign: 'middle'}}/> {'Etherscan'} </Typography>\n            </Link>\n        </>\n    }, [])\n    return <CompletedBasic {...{...rest, label:label as any, onClose, describe, t}}/>\n}\n","import { Trans, WithTranslation } from 'react-i18next';\nimport { Link, Typography } from '@material-ui/core';\nimport { CoinInfo, LinkIcon } from '@loopring-web/common-resources';\nimport React from 'react';\nimport { FailedBasic } from '../ModalPanelBase';\n\nexport const FailedDeposit = ({\n                                  onRetry,\n                                  label = \"FailedDeposit\",\n                                  etherscanLink,\n                                  t,\n                                  ...rest\n                              }: { label?: string, onRetry: (event: any) => void, etherscanLink: string } & WithTranslation) => {\n    const describe = React.useMemo(() => {\n        return <>\n            <Typography variant={'body2'} color={'textSecondary'} marginTop={1}>{t('labelFailedDeposit')}</Typography>\n            <Link target='_blank' href={etherscanLink} display={'inline-block'} marginTop={1 / 2}>\n                <Typography variant={'body2'}> <LinkIcon fontSize={'small'}\n                                                         style={{verticalAlign: 'middle'}}/> {'Etherscan'} </Typography>\n            </Link>\n        </>\n    }, [])\n    return <FailedBasic label={label} onRetry={() => { onRetry(undefined) }} describe={describe} {...{...rest, t}}/>\n\n}\nexport const FailedTokenAccess = ({\n                                      onRetry,\n                                      t,\n                                      label = '',\n                                      coinInfo,\n                                      ...rest\n                                  }: { coinInfo?: CoinInfo<any> | undefined, label?: string, onRetry: () => void, } & WithTranslation) => {\n    const describe = React.useMemo(() => {\n        return <Typography variant={'body2'} color={'textSecondary'} marginTop={1}>\n            {t('labelFailedTokenAccess', {symbol: coinInfo?.simpleName})}\n        </Typography>\n    }, [])\n    return <FailedBasic label={label} onRetry={() => { if (onRetry) onRetry() }} describe={describe} {...{...rest, t}}/>\n}\n\nexport const FailedUnlock = ({onRetry, t, label, ...rest}: { onRetry: () => void, label?: string } & WithTranslation) => {\n    const describe = React.useMemo(() => {\n        return   <>\n            <Typography variant={'body2'} color={'textSecondary'} marginTop={1}>{t('labelFailedUnlock')}</Typography>\n            <Typography component={'p'} marginTop={2}>\n                <Trans i18nKey={'labelRejectOrError'}>\n                    Rejected, Please<Link onClick={() => { if (onRetry) onRetry() }}>retry</Link>\n                </Trans>\n            </Typography>\n        </>\n    }, [])\n    return <FailedBasic label={t('labelUnLockLayer2')} onRetry={() => { if (onRetry) onRetry() }} describe={describe} {...{...rest, t}}/>\n\n}\n\nexport const FailedUpdateAcc = ({onRetry, t,...rest}: { onRetry: () => void } & WithTranslation) => {\n    const describe = React.useMemo(() => {\n        return   <>\n            <Typography variant={'body2'} color={'textSecondary'} marginTop={1}>{t('labelFailedUpdateAcc')}</Typography>\n            <Typography component={'p'} marginTop={2}>\n                <Trans i18nKey={'labelRejectOrError'}>\n                    Rejected, Please<Link onClick={() => { if (onRetry) onRetry() }}>retry</Link>\n                </Trans>\n            </Typography>\n        </>\n    }, [])\n    return <FailedBasic label={'labelActiveLayer2'} onRetry={() => { if (onRetry) onRetry() }} describe={describe} {...{...rest, t}}/>\n\n}\n","import { WithTranslation, withTranslation } from 'react-i18next';\nimport { Modal } from '@material-ui/core';\n// import SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@emotion/react';\nimport { Box } from '@material-ui/core/';\nimport {\n    ModalAccountProps,\n    ModalBackButton,\n    ModalCloseButton,\n    QRButtonStyle,\n    SwipeableViewsStyled,\n    SwitchPanelStyled\n} from '../../../index';\n\n// const BoxStyle = styled(Box)`\n//   height: 100%;\n//   & > div {\n//     width: 100%;\n//     max-height: initial;\n//     flex: 1;\n//     height: 100%;\n//   }\n//\n// ` as typeof Box;\nexport const ModalAccount = withTranslation('common', {withRef: true})((\n    {\n        open,\n        onClose,\n        step,\n        onBack,\n        style,\n        noClose,\n        onQRClick,\n        panelList,\n        ...rest\n    }: ModalAccountProps & WithTranslation) => {\n    const theme = useTheme();\n    const {w, h} = style ? style : {w: undefined, h: undefined};\n\n    return <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n    >\n        <SwitchPanelStyled style={{boxShadow: '24'}} {...{\n            _height: h ? h : 'var(--modal-height)',\n            _width: w ? w : 'var(--modal-width)'\n        }}>\n            <Box display={'flex'} width={\"100%\"} flexDirection={'column'}>\n                {noClose ? <></> : < ModalCloseButton onClose={onClose} {...rest} />}\n                {onBack ? <ModalBackButton onBack={onBack}  {...rest}/> : <></>}\n                {onQRClick ? <QRButtonStyle onQRClick={onQRClick}  {...rest}/> : <></>}\n            </Box>\n\n            <SwipeableViewsStyled animateTransitions={false} axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                                  index={step}\n                                  {...{_height: h ? h : 'var(--modal-height)', _width: w ? w : 'var(--modal-width)'}}>\n                {panelList.map((panel, index) => {\n                    return <Box flex={1} display={'flex'} alignItems={'stretch'} key={index}>\n                        {panel.view}\n                    </Box>\n                })}\n            </SwipeableViewsStyled>\n        </SwitchPanelStyled>\n    </Modal>\n})","import { Typography } from '@material-ui/core';\nimport { Box } from '@material-ui/core/';\nimport { CheckedIcon } from '@loopring-web/common-resources';\nimport { Trans, WithTranslation } from 'react-i18next';\nimport { useTheme } from '@emotion/react';\n\nexport const SuccessUnlock = ({t, providerName}: WithTranslation & { providerName: string }) => {\n    const theme = useTheme();\n    return <Box flex={1} display={'flex'} alignItems={'center'} justifyContent={'space-evenly'}\n                flexDirection={'column'}>\n        <Typography component={'h3'} variant={'h3'} marginBottom={3}>\n            {t('labelUnLockLayer2', {providerName})}\n            {/*<Trans i18nKey={'labelSuccessConnect'}>*/}\n            {/*    */}\n            {/*</Trans>*/}\n        </Typography>\n        <Typography component={'p'} display={'flex'} alignItems={'center'} flexDirection={'column'}>\n            <CheckedIcon style={{width: 60, height: 60, color: theme.colorBase.success}}/>\n        </Typography>\n        <Typography component={'p'} marginTop={2}>\n            <Trans i18nKey={'labelSuccessConnectDescribe'}>\n                Congratulation, Success Connected!\n            </Trans>\n        </Typography>\n\n    </Box>\n}\n","import {  Typography } from '@material-ui/core';\nimport {  WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { CoinInfo, LinkIcon } from '@loopring-web/common-resources';\nimport { InProgressBasic } from '../ModalPanelBase';\nimport { Link } from '@material-ui/core/';\n\nexport const ActiveAccountProcess = ({t, ...rest}: WithTranslation & { providerName: string }) => {\n    const describe = React.useMemo(() => {\n        return <>\n            <Typography variant={'body1'}>\n                {t('labelProcessing')}\n            </Typography>\n        </>\n    }, [])\n    return <InProgressBasic label={t('labelActivateAccount')} describe={ describe} {...{...rest, t}}/>\n}\n\nexport const DepositingProcess = ({\n                                          t,\n                                          label = \"DepositingProcess\",\n                                          // providerName,\n                                          etherscanLink,\n                                          ...rest\n                                      }: WithTranslation & { label?: string, providerName: string, etherscanLink: string }) => {\n    const describe = React.useMemo(() => {\n        return <>\n            <Typography variant={'body1'}>\n                {t('waiting for user action')}\n            </Typography>\n            <Link target='_blank' href={etherscanLink} display={'inline-block'} marginTop={1 / 2}>\n                <Typography variant={'body2'}> <LinkIcon fontSize={'small'}\n                                                         style={{verticalAlign: 'middle'}}/> {'Etherscan'} </Typography>\n            </Link></>\n\n    }, [])\n    return <InProgressBasic label={label} describe={describe} {...{...rest, t}}/>\n\n}\n\nexport const DepositApproveProcess = ({\n                                          t,\n                                          label = \"DepositApproveProcess\",\n                                          // providerName,\n                                          etherscanLink,\n                                          ...rest\n                                      }: WithTranslation & { label?: string, providerName: string, etherscanLink: string }) => {\n    const describe = React.useMemo(() => {\n        return <>\n            <Typography variant={'body1'}>\n                {label}\n            </Typography>\n            <Link target='_blank' href={etherscanLink} display={'inline-block'} marginTop={1 / 2}>\n                <Typography variant={'body2'}> <LinkIcon fontSize={'small'}\n                                                         style={{verticalAlign: 'middle'}}/> {'Etherscan'} </Typography>\n            </Link></>\n\n    }, [])\n    return <InProgressBasic label={label} describe={describe} {...{...rest, t}}/>\n\n}\n\nexport const TokenAccessProcess = ({\n                                       t,\n                                       label = '',\n                                       coinInfo,\n                                       ...rest\n                                   }: WithTranslation & { coinInfo?: CoinInfo<any>, label?: string, providerName: string }) => {\n    const describe = React.useMemo(() => {\n        return <>\n            <Typography variant={'body1'}>\n                {t('labelTokenAccess', {symbol: coinInfo?.simpleName})}\n            </Typography>\n        </>\n    }, [])\n    return <InProgressBasic label={label} describe={describe} {...{...rest, t}}/>\n\n}\n\nexport const ProcessUnlock = ({t, ...rest}: WithTranslation & { providerName: string }) => {\n    const describe = React.useMemo(() => {\n        return <>\n            <Typography variant={'body1'}>\n                {t('labelProcessing')}\n            </Typography>\n        </>\n    }, [])\n    return <InProgressBasic label={t('labelUnLockLayer2')} describe={describe} {...{...rest, t}}/>\n}\n","import QRCode from 'qrcode.react';\nimport { Typography } from '@material-ui/core';\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport { Box } from '@material-ui/core/';\nimport { Account } from '@loopring-web/common-resources';\n\n\nexport const QRAddressPanel = withTranslation('common')(({\n                                                   accAddress,\n                                                   etherscanUrl,\n                                               }: WithTranslation & { etherscanUrl: string} & Account) => {\n    const etherscanLink = etherscanUrl + accAddress;\n    return <Box flex={1} paddingY={2} paddingX={2}  display={'flex'} flexDirection={'column'}\n                alignItems={'center'} justifyContent={'center'} >\n        <QRCode value={etherscanLink} size={200} style={{backgroundColor: '#fff'}}\n                aria-label={`link:${etherscanLink}`}/>\n        <Typography marginTop={3} variant={'body2'} color={'textSecondary'}\n                    style={{wordBreak: 'break-all'}}>{accAddress}</Typography>\n    </Box>\n})","import { WalletConnectBtnProps } from './Interface';\nimport { useTranslation } from 'react-i18next';\nimport React, { useEffect } from 'react';\nimport { AccountStatus, getShortAddr, LoadingIcon, LockIcon, UnConnectIcon, } from '@loopring-web/common-resources';\n// import { debounce } from 'lodash';\nimport { Typography } from '@material-ui/core';\n\n// import loadingSvg from '@loopring-web/common-resources/assets/svg/loading.svg';\nimport styled from '@emotion/styled';\nimport { Button } from '../../basic-lib';\nimport { bindHover, usePopupState } from 'material-ui-popup-state/hooks';\n// import { getShortAddr } from '@loopring-web/webapp/src/utils/web3_tools';\n// import Popover from 'material-ui-popup-state/HoverPopover';\nconst WalletConnectBtnStyled = styled(Button)`\n  text-transform: none;\n  min-width: 120px;\n\n  &.wallet-btn {\n    //width:;\n    width: var(--walletconnect-width);\n  }\n\n  i {\n    padding-right: ${({theme}) => theme.unit}px;\n    display: flex;\n    justify-content: center;\n    align-content: space-between;\n\n    svg {\n      height: auto;\n      font-size: ${({theme}) => theme.fontDefault.h5};\n    }\n  }\n\n  &.no-account {\n    &:after {\n      position: absolute;\n      content: \"\\u25CF\";\n      color: var(--color-error);\n      display: flex;\n      left: 0;\n      padding-left: ${({theme}) => theme.unit * 2}px;\n      align-items: center;\n      font-size: ${({theme}) => theme.fontDefault.h5};\n    }\n  }\n\n  &.unlocked {\n    &:after {\n      position: absolute;\n      content: \"\\u25CF\";\n      color: var(--color-success);\n      display: flex;\n      left: 0;\n      padding-left: ${({theme}) => theme.unit * 2}px;\n      align-items: center;\n      font-size: ${({theme}) => theme.fontDefault.h5};\n    }\n  }\n\n  &.wrong-network {\n    background: var(--color-error);\n    color: var(--color-text-primary);\n  }\n\n  // .icon-build{\n  //   color: var(--color-secoundary);\n  // }\n  // .icon-no-network {\n  //   color: var(--color-error);\n  // }\n  //\n  // .icon-pending, .icon-progressing {\n  //   color: var(--color-secoundary);\n  // }\n  //\n  // .icon-error, .icon-no-account {\n  //   color: var(--color-error);\n  // }\n  //\n  //\n  // .icon-success {\n  //   color: var(--color-success);\n  // }\n\n`\nconst TestNetworkStyle = styled(Typography)`\n  // display: inline-flex;\n  position: relative;\n    // padding-right: ${({theme}) => theme.unit}px;\n  // cursor: initial;\n  height: 3rem;\n\n  &:after {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--network-bg);\n    ${({theme}) => theme.border.defaultFrame({d_W: 0, d_R: 1 / 2, c_key: 'var(--opacity)'})};\n  }\n\n  ${({theme}) => theme.border.defaultFrame({d_W: 0, d_R: 1 / 2, c_key: 'var(--opacity)'})};\n\n` as typeof Typography\n// const ListStyled = styled(List)`\n//   margin: 0;\n//   width: 240px;\n// `\n\nexport const WalletConnectBtn = ({\n                                     accountState,\n                                     handleClick,\n                                 }: WalletConnectBtnProps) => {\n    const {t, i18n} = useTranslation(['layout', 'common']);\n    const [label, setLabel] = React.useState<string>(t('labelConnectWallet'))\n    const [networkLabel, setNetworkLabel] = React.useState<string | undefined>(undefined)\n    const [btnClassname, setBtnClassname] = React.useState<string | undefined>('');\n    const [icon, setIcon] = React.useState<JSX.Element | undefined>();\n\n    useEffect(() => {\n        if (accountState) {// && accountState.status === 'UNSET'){\n            const {account} = accountState;\n            const addressShort = account.accAddress ? getShortAddr(account?.accAddress) : undefined;\n            if (addressShort) {\n                setLabel(addressShort);\n            }\n            setIcon(undefined)\n            switch (account.readyState) {\n                case AccountStatus.UN_CONNECT:\n                    setBtnClassname('un-connect')\n                    setLabel('labelConnectWallet');\n                    break\n                case AccountStatus.LOCKED:\n                    setBtnClassname('locked')\n                    setIcon(<LockIcon/>)\n                    break\n                case AccountStatus.ACTIVATED:\n                    setBtnClassname('unlocked')\n                    // setIcon(undefined)\n                    break\n                case AccountStatus.NO_ACCOUNT:\n                    setBtnClassname('no-account')\n                    // setIcon(<EmbarIcon color={'secondary'} style={{transform: 'rotate(58deg)'}}/>)\n                    break\n                case AccountStatus.DEPOSITING:\n                    setBtnClassname('depositing')\n                    setIcon(<LoadingIcon color={'primary'}/>)\n                    break\n                case AccountStatus.ERROR_NETWORK:\n                    setBtnClassname('wrong-network')\n                    setLabel('labelWrongNetwork')\n                    setIcon(<UnConnectIcon/>)\n                    break\n                default:\n            }\n            if (account && account._chainId === 5) {\n                setNetworkLabel('Görli')\n            } else {\n                setNetworkLabel('')\n            }\n        } else {\n            setLabel('labelConnectWallet')\n        }\n\n    }, [accountState, i18n])\n\n\n    const _handleClick = (event: React.MouseEvent) => {\n        // debounceCount(event)\n        handleClick(event)\n    }\n\n    const popupState = usePopupState({variant: 'popover', popupId: `popupId: 'wallet-connect-notification'`});\n    return <>\n        {networkLabel ?\n            <TestNetworkStyle display={'inline-flex'} alignItems={'center'} justifyContent={'center'} paddingX={1}\n                              component={'span'} color={'var(--vip-text)'}\n                              marginRight={1}>{networkLabel}</TestNetworkStyle> : <></>}\n        <WalletConnectBtnStyled\n            variant={['un-connect', 'wrong-network'].findIndex(ele => btnClassname === ele) !== -1 ? 'contained' : 'outlined'}\n            size={['un-connect', 'wrong-network'].findIndex(ele => btnClassname === ele) !== -1 ? 'small' : 'medium'}\n            color={'primary'}\n            className={`wallet-btn ${btnClassname}`}\n            onClick={_handleClick} {...bindHover(popupState)} >\n            {icon ? <Typography component={'i'} paddingRight={1}>{icon}</Typography> : <></>}\n            <Typography component={'span'}> {t(label)}  </Typography>\n        </WalletConnectBtnStyled>\n    </>\n\n}","export enum ChartType {\n    Kline = 'Kline',\n    Depth = 'Depth',\n    Trend = 'Trend'\n}\n\nexport enum timeUnit {\n    W1 = '1W',\n    H1 = '1H',\n    D1 = '1D',\n}\n","import { Box, IconButton, Link, } from '@material-ui/core';\nimport {\n    DownloadIcon,\n    // DropDownIcon,\n    // i18n,\n    // LanguageType,\n    NotificationIcon, SettingIcon,\n    // ThemeDarkIcon,\n    // ThemeLightIcon,\n    // ThemeType,\n} from '@loopring-web/common-resources';\n// import React from 'react';\nimport { WithTranslation } from 'react-i18next';\nimport { bindHover, usePopupState } from 'material-ui-popup-state/hooks';\nimport { bindPopper } from 'material-ui-popup-state/es';\nimport {\n    // OutlineSelect,\n    // OutlineSelectItem,\n    PopoverPure } from '../../basic-lib';\nimport { SettingPanel } from '../../block/SettingPanel';\nimport { QRCodePanel } from '../../modal';\n// import { useSettings } from '../../../stores';\n\nexport const BtnDownload = ({\n                                t,\n                                url,\n                                i18nTitle,\n                                i18nDescription,\n                                ...rest\n                            }: & { i18nTitle: string, i18nDescription: string, url: string } & WithTranslation) => {\n    const popupState = usePopupState({variant: 'popover', popupId: 'download-QRcode'});\n    const Description = () => <Link\n        href='https://apps.apple.com/us/app/loopring-smart-wallet/id1550921126'>{t(i18nDescription)}</Link>\n    return <Box>\n        <IconButton aria-label={t('labeldownloadApp')} {...bindHover(popupState)}><DownloadIcon/></IconButton>\n        <PopoverPure\n            // type={PopoverType.hover}\n            {...bindPopper(popupState)}\n            //popupId=\"wallet-connect-notification\"\n            // popoverContent={}\n            //arrowHorizon={{right: 98}}\n            className={'arrow-center'}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <Box margin={3}><QRCodePanel {...{\n                ...rest, title: t(i18nTitle), description: <Description/>,\n                url, t\n            }} /></Box>\n        </PopoverPure>\n    </Box>\n}\n\n\nexport const BtnNotification = ({t}: any) => <IconButton\n    aria-label={t('alert message')}><NotificationIcon/></IconButton>\n\n\nexport const BtnSetting = ({t, label}: any) => {\n    const popupState = usePopupState({variant: 'popover', popupId: 'settingPop'});\n    return <Box>\n        <IconButton aria-label={t(label)} {...bindHover(popupState)}><SettingIcon/></IconButton>\n        <PopoverPure\n            // type={PopoverType.hover}\n            {...bindPopper(popupState)}\n            //popupId=\"wallet-connect-notification\"\n            // popoverContent={}\n            //arrowHorizon={{right: 98}}\n            // className={'arrow-center'}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <Box margin={2}>\n                <SettingPanel/>\n            </Box>\n        </PopoverPure>\n    </Box>\n}\n\n\nexport * from './Interface';\nexport * from './WalletConnect';","import styled from '@emotion/styled';\nimport { AppBar, Box, Container, IconButton, Slide, Toolbar } from '@material-ui/core';\nimport { Typography } from '@material-ui/core/';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport logoSVG from '@loopring-web/common-resources/assets/svg/logo.svg'\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport { HeaderMenuSub, HeadMenuItem, Layer2Item, MenuTab, TabItemPlus } from '../basic-lib';\nimport { HeaderProps, HeaderToolBarInterface } from './Interface';\nimport {\n    ButtonComponentsMap,\n    HeaderMenuItemInterface,\n    HeaderMenuTabStatus,\n    ToolBarAvailableItem\n} from '@loopring-web/common-resources';\nimport { BtnDownload, BtnNotification, BtnSetting, WalletConnectBtn } from './toolbar';\nimport React from 'react';\n// import { useSettings } from '../../stores';\n\nconst ToolBarStyled = styled(Toolbar)`\n  && {\n    display: flex;\n    justify-content: space-between;\n    align-items: stretch;\n    padding: 0;\n  }\n`\nconst StyledDiv = styled.div`\n  &.item-scrolled .MuiAppBar-root.MuiAppBar-positionFixed {\n    //background: var(--color-global-bg);\n    box-shadow: var(--shadow);\n  }\n`\nconst HeaderStyled = styled(AppBar)`\n  && {\n    z-index: 400;\n    .wrap {\n      height: var(--header-height);\n      margin: 0 auto;\n      //min-width: 800px;\n    }\n\n    background-color: var(--color-box);\n    backdrop-filter: blur(4px);\n    box-sizing: border-box;\n      // border-bottom: ${({theme}) => theme.border.borderConfig({d_W: 1, c_key: 'blur'})};\n    border-radius: 0;\n    box-shadow: none;\n\n    &.item-scrolled.MuiAppBar-root.MuiAppBar-positionFixed {\n      //background-color: var(--color-box);\n      box-shadow: var(--shadow);\n    }\n  }\n`\n\nconst LogoStyle = styled(Typography)`\n  a.MuiButtonBase-root {\n    height: auto;\n    width: auto;\n    min-width: auto;\n    border-radius: 0;\n\n    &:hover {\n      background-color: inherit;\n\n      span.MuiIconButton-label {\n        background: var(--color-primary);\n      }\n    }\n\n    span.MuiIconButton-label {\n      background: var(--color-text-primary);\n      mask: url(${logoSVG}) space;\n      mask-size: contain;\n      mask-position: center;\n      mask-size: contain;\n      width: 105px;\n      height: 40px;\n      margin-top: -6px;\n      color: transparent;\n    }\n  }\n` as typeof Typography\n\nexport const LoopringLogo = (<LogoStyle variant=\"h6\" component=\"h1\">\n        <IconButton edge=\"start\" aria-label=\"menu\" component={RouterLink} to=\"/#\" color={\"inherit\"}>\n            Loopring 路印\n            {/*/!*<SvgIcon>*!/*/}\n            {/*    <img src={logoSVG} alt=\"\" width=\"104\" height=\"40\" />*/}\n            {/*</SvgIcon>*/}\n        </IconButton>\n    </LogoStyle>\n);\n\nconst ToolBarItem = ({buttonComponent, ...props}: any) => {\n\n    const render = React.useMemo(() => {\n        switch (buttonComponent) {\n            case  ButtonComponentsMap.Download:\n                return <BtnDownload {...props} />;\n            case  ButtonComponentsMap.Notification:\n                return <BtnNotification {...props} />;\n            case  ButtonComponentsMap.Setting:\n                return <BtnSetting {...props} />;\n            // case  ButtonComponentsMap.Theme:\n            //     return <BtnTheme {...{...props, themeMode}} />;\n            // case  ButtonComponentsMap.Language:\n            //     return <BtnLanguage {...{...props, language}} />;\n            case  ButtonComponentsMap.WalletConnect:\n                return <WalletConnectBtn {...props} />;\n            default:\n                return undefined;\n        }\n    }, [props, buttonComponent])\n    return <TabItemPlus>{render}</TabItemPlus>;\n}\n\nexport const HideOnScroll = React.forwardRef(({children, ...rest}: any, ref) => {\n    const [className, setClassName] = React.useState('');\n    const handleScroll = React.useCallback(() => {\n        const position = window.pageYOffset;\n        if (position > 20) {\n            setClassName('item-scrolled');\n        } else {\n            setClassName('');\n        }\n    }, [setClassName]);\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', handleScroll, {passive: true});\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, [handleScroll]);\n    //className = {_className}\n    return <Slide  {...rest} appear={false} adirection=\"down\" forwardedRef={ref} in={!ref}>\n        <StyledDiv className={className}>{children}</StyledDiv>\n    </Slide>\n})\n\nexport const Header = withTranslation(['layout', 'common'], {withRef: true})(React.forwardRef(({\n                                                                                                   headerMenuData,\n                                                                                                   headerToolBarData,\n                                                                                                   selected,\n                                                                                                   i18n,\n                                                                                                   ...rest\n                                                                                               }: HeaderProps & WithTranslation, ref: React.ForwardedRef<any>) => {\n\n    const displayDesktop = () => {\n        return (\n            <ToolBarStyled>\n                <Box display=\"flex\" alignContent=\"center\" justifyContent={\"flex-start\"}\n                     alignItems={\"stretch\"}>\n                    {LoopringLogo}\n                    {getDrawerChoices({menuList: headerMenuData, i18n, ...rest})}\n                </Box>\n                <Box component={'ul'} display=\"flex\" alignItems=\"center\" justifyContent={\"flex-end\"}\n                     color={'textColorSecondary'}>\n                    {getMenuButtons({toolbarList: headerToolBarData, i18n, ...rest})}\n                </Box>\n            </ToolBarStyled>\n        );\n    };\n\n    const getMenuButtons = ({\n                                toolbarList,\n                                ...rest\n                            }: { toolbarList: HeaderToolBarInterface[] } & WithTranslation) => {\n        return ToolBarAvailableItem.map((index: number) => {\n            return <ToolBarItem {...{...toolbarList[ index ], ...rest}} key={index}/>\n        })\n        // toolbarList.map((item, index) =>);\n    };\n\n    const getDrawerChoices = ({\n                                  menuList,\n                                  layer = 0,\n                                  ...rest\n                              }: { menuList: HeaderMenuItemInterface[], layer?: number, handleListKeyDown?: any } & WithTranslation) => {\n        const nodeMenuItem = ({label, router, layer, child, ...rest}: HeaderMenuItemInterface & any) => {\n            const selectedFlag = new RegExp(label.id, 'ig').test(selected.split('/')[ 1 ] ? selected.split('/')[ 1 ] : selected)\n            return <>{layer >= 1 ? <Layer2Item {...{...rest, label, router, child, layer}} /> : //key={label.id+ '-layer2Item'}/> :\n                // label.id === 'Layer2' ? <Box display={'flex'} justifyContent={'space-around'} alignItems={'center'}>\n                //     <MenuTab component='div' label={rest.t(label.i18nKey)} key={label.id}\n                //              className={ selectedFlag ? 'Mui-selected' : ''}/>\n                //     {rest.extender ? rest.extender : undefined}\n                // </Box> :\n                <MenuTab component='div' label={rest.t(label.i18nKey)} key={label.id}\n                        className={selectedFlag ? 'Mui-selected' : ''}/>\n            }\n            </>\n        }\n\n        const Memoized = ({label, router, child, layer, ref, ...rest}: any) => (<HeaderMenuSub {...{\n            ...rest,\n            label,\n            router,\n            child,\n            layer,\n            className: new RegExp(label.id, 'ig').test(selected.split('/')[ 1 ] ? selected.split('/')[ 1 ] : selected) ? 'Mui-selected' : '',\n            renderList: ({handleListKeyDown}: { handleListKeyDown: ({...rest}) => any }) => {\n                return getDrawerChoices({menuList: child, layer: layer + 1, handleListKeyDown, ...rest})\n            },\n        }} />);\n\n        return menuList.map((props: HeaderMenuItemInterface) => {\n            // @ts-ignore\n            const {label, child, router, status} = props;\n            if (status === HeaderMenuTabStatus.hidden) {\n                // return <React.Fragment key={label.id + '-' + layer}></React.Fragment>\n                return <React.Fragment key={label.id + '-' + layer}></React.Fragment>\n            } else {\n                if (child) {\n                    return <Memoized {...{...props, layer, ...rest}} key={label.id + '-' + layer}/>\n                } else {\n                    return <HeadMenuItem  {...{\n                        ...props,\n                        layer,\n                        children: nodeMenuItem({...props, layer, child, ...rest}),\n                        style: {textDecoration: \"none\"},\n                        key: label.id + '-' + layer,\n                    }} onClick={rest?.handleListKeyDown ? rest.handleListKeyDown : undefined}/>\n                }\n            }\n        });\n    };\n\n    return (\n        <HeaderStyled ref={ref} className={rest?.className}>\n            <Container className={'wrap'} maxWidth='lg'>\n                {displayDesktop()}\n            </Container>\n        </HeaderStyled>\n\n    );\n}));","import { WithTranslation } from 'react-i18next';\nimport {\n    AvatarCoinStyled,\n    CoinInfo,\n    Currency,\n    FloatTag,\n    getThousandFormattedNumbers,\n    PriceTag,\n    TradeFloat\n} from '@loopring-web/common-resources';\nimport { Box, Grid } from '@material-ui/core';\nimport { Avatar, Typography } from '@material-ui/core/';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { baseTitleCss, useSettings } from '../../index';\nimport { NewTagIcon } from '../basic-lib/Tags';\n\ntype StyledProps = {\n    custom: any\n}\nconst TradeTitleStyled = styled(Box)<StyledProps>`\n  ${({theme, custom}) => baseTitleCss({theme, custom})}\n` as React.ElementType<StyledProps>;\n\nexport const TradeTitle = <I extends object>({\n                                                 coinAInfo, coinBInfo,\n                                                 // t,\n                                                 tradeFloat = {\n                                                     volume: 0,\n                                                     change: 0,\n                                                     timeUnit: '24h',\n                                                     priceYuan: 0,\n                                                     priceDollar: 0,\n                                                     floatTag: FloatTag.none\n                                                 }\n                                                 , isNew\n                                             }: WithTranslation & { coinAInfo: CoinInfo<I>, coinBInfo: CoinInfo<I>, tradeFloat: TradeFloat, isNew: boolean }) => {\n    // const {} = tradeCalcData;\n    // coinSell: keyof T, //namecoinBuy: keyof T\n    // const coinBInfo = tradeCalcData.buyCoinInfoMap[ coinBuy ];\n    // const coinAInfo = tradeCalcData.sellCoinInfoMap[ coinSell ];\n    // const sellIconHasLoaded = useImage(coinAInfo?.icon ? coinAInfo?.icon : '').hasLoaded;\n    // const buyIconHasLoaded = useImage(coinBInfo?.icon ? coinBInfo?.icon : '').hasLoaded;\n    const {coinJson} = useSettings();\n\n    const sellCoinIcon: any = coinJson[ coinAInfo?.simpleName ];\n    const buyCoinIcon: any = coinJson[ coinBInfo?.simpleName ];\n\n    const tradeFloatType = tradeFloat?.changeDollar === 0 ? FloatTag.none : tradeFloat && tradeFloat.changeDollar && tradeFloat.changeDollar < 0 ? FloatTag.decrease : FloatTag.increase;\n    const {currency,upColor} = useSettings();\n    const change = (tradeFloat?.change && tradeFloat?.change !== Number.NaN) ? (tradeFloat.change * 100).toFixed(2) + '%' : '0.00%'\n    return <TradeTitleStyled custom={{chg: upColor}}>{coinBInfo && coinAInfo ?\n        <Grid container height={72}>\n            <Grid item xs={12} height={28}>\n                <Box display={'flex'} flexDirection={'row'} justifyContent={'flex-start'} alignItems={'center'}>\n                    <Box className={'logo-icon'} height={'var(--chart-title-coin-size)'} position={'relative'}\n                         zIndex={20}\n                         width={'var(--chart-title-coin-size)'} alignItems={'center'} justifyContent={'center'}>\n                        {sellCoinIcon ?\n                            <AvatarCoinStyled imgx={sellCoinIcon.x} imgy={sellCoinIcon.y}\n                                              imgheight={sellCoinIcon.height}\n                                              imgwidth={sellCoinIcon.width} size={28}\n                                              variant=\"circular\" alt={coinAInfo?.simpleName as string}\n                                // src={sellData?.icon}\n                                              src={'data:image/svg+xml;utf8,' + '<svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H36V36H0V0Z\"/></svg>'}/>\n                            : <Avatar variant=\"circular\" alt={coinAInfo?.simpleName as string} style={{\n                                height: 'var(--chart-title-coin-size)',\n                                width: 'var(--chart-title-coin-size)'\n                            }}\n                                // src={sellData?.icon}\n                                      src={'static/images/icon-default.png'}/>\n                        }</Box>\n\n                    <Box className={'logo-icon'} height={'var(--chart-title-coin-size)'} position={'relative'}\n                         zIndex={18} left={-8}\n                         width={'var(--chart-title-coin-size)'} alignItems={'center'}\n                         justifyContent={'center'}>{buyCoinIcon ?\n                        <AvatarCoinStyled imgx={buyCoinIcon.x} imgy={buyCoinIcon.y} imgheight={buyCoinIcon.height}\n                                          imgwidth={buyCoinIcon.width} size={28}\n                                          variant=\"circular\" alt={coinBInfo?.simpleName as string}\n                            // src={sellData?.icon}\n                                          src={'data:image/svg+xml;utf8,' + '<svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H36V36H0V0Z\"/></svg>'}/>\n                        : <Avatar variant=\"circular\" alt={coinBInfo?.simpleName as string} style={{\n                            height: 'var(--chart-title-coin-size)',\n                            width: 'var(--chart-title-coin-size)'\n                        }}\n                            // src={sellData?.icon}\n                                  src={'static/images/icon-default.png'}/>} </Box>\n                    <Typography variant={'h4'} component={'h3'} paddingRight={1}>\n                        <Typography component={'span'} title={'sell'} className={'next-coin'}>\n                            {coinAInfo?.simpleName}\n                        </Typography>\n                        <Typography component={'i'}>/</Typography>\n                        <Typography component={'span'} title={'buy'}>\n                            {coinBInfo.simpleName}\n                        </Typography>\n                    </Typography>\n                    {isNew ? <NewTagIcon/> : undefined}\n                </Box>\n            </Grid>\n            <Grid item xs={12} height={36} display={'flex'} flexDirection={'row'} justifyContent={'flex-start'}\n                  alignItems={'center'} className={'float-group'} marginTop={1}>\n\n                <Typography variant={'h1'}>   {tradeFloat.close ?? 0} {coinBInfo.simpleName}    </Typography>\n                <Box display={'flex'} flexDirection={'column'} alignItems={'flex-start'} justifyContent={'center'}\n                     className={'float-chart'}>\n                    <Typography variant={'body2'} component={'span'}\n                                className={'chart-change'}>\n                        {' '}\n                        {/*{t('labelChange24h', {timeUnit: tradeFloat.timeUnit})}*/}\n                    </Typography>\n                    <Typography variant={'h5'} component={'span'} display={'flex'} alignItems={'flex-end'}>\n                        <Typography variant={'h5'} component={'span'}>\n                            {/* {`${(tradeFloat.floatTag === 'decrease' ? '-' : '+') + tradeFloat.priceDollar} (${change})`}</Typography> */}\n                            {/*{ tradeFloatType === FloatTag.increase ? '+' : '' }*/}\n                            {currency === Currency.dollar ? '\\u2248 ' + PriceTag.Dollar\n                                + getThousandFormattedNumbers(tradeFloat && tradeFloat.closeDollar ? tradeFloat.closeDollar as number : 0, 2)\n                                : '\\u2248 ' + PriceTag.Yuan\n                                + getThousandFormattedNumbers(tradeFloat && tradeFloat.closeYuan ? tradeFloat.closeYuan as number : 0, 2)}\n                        </Typography>\n                        <Typography variant={'h5'} component={'span'} className={`float-tag float-${tradeFloatType}`}>\n                            （{ tradeFloatType === FloatTag.increase ? '+' : '' }{change}）\n                        </Typography>\n                    </Typography>\n                </Box>\n            </Grid>\n        </Grid> : <></>\n    } </TradeTitleStyled>\n}","import { Box, Grid, IconButton, Typography } from '@material-ui/core/';\nimport { getThousandFormattedNumbers, HideIcon, ViewIcon } from '@loopring-web/common-resources';\nimport React from 'react';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { AssetTitleProps } from './Interface';\nimport styled from '@emotion/styled';\nimport { TradeBtnStatus } from '../panel';\nimport { Button, ButtonListRightStyled } from './../';\n\nconst BoxStyled = styled(Box)`\n  color: var(--color-text-secondary);\n\n  .MuiButtonBase-root {\n    color: var(--color-text-secondary);\n  }\n` as typeof Box\n\nexport const AssetTitle = withTranslation('common')(({\n                                                         t,\n                                                         assetInfo,\n                                                         onShowWithdraw,\n                                                         onShowTransfer,\n                                                         onShowDeposit,\n                                                         btnShowDepositStatus,\n                                                         btnShowTransferStatus,\n                                                         btnShowWithdrawStatus,\n                                                     }: AssetTitleProps & WithTranslation) => {\n\n    const [isShow, setIsShow] = React.useState<boolean>(assetInfo.isShow ? assetInfo.isShow : true);\n    return <Grid container spacing={2} justifyContent={'space-between'} alignItems={'flex-start'}>\n        <Grid item xs={7} display={'flex'} flexDirection={'column'}>\n            <BoxStyled component={'p'} display={'flex'} alignItems={'center'} justifyContent={'flex-start'}\n                       marginTop={1} marginBottom={'16px'}>\n                <Typography component={'span'} variant={'body1'} paddingRight={3} color={'textSecondary'}>\n                    {t('labelAssetTitle')}\n                    {' '}\n                    <IconButton\n                        size={'small'}\n                        // color={'secondary'}\n                        onClick={() => setIsShow(!isShow)}\n                        aria-label={t('labelShowAccountInfo')}>\n                        {isShow ? <HideIcon/> : <ViewIcon/>}\n                    </IconButton>\n                </Typography>\n\n            </BoxStyled>\n\n            <Typography component={'p'} display={'flex'} alignItems={'center'} justifyContent={'flex-start'}\n                        marginTop={1}>\n                <Typography component={'span'} paddingRight={1} variant={'h1'}> {assetInfo.priceTag} </Typography>\n                {isShow ? <Typography component={'span'}\n                                      variant={'h1'}>{assetInfo.totalAsset ? getThousandFormattedNumbers(Number(assetInfo.totalAsset.toFixed(2))) : 0.00}</Typography> :\n                    <Typography component={'span'}\n                                variant={'h1'}>&#10033;&#10033;&#10033;&#10033;.&#10033;&#10033;&#10033;</Typography>}\n            </Typography>\n        </Grid>\n        <ButtonListRightStyled item xs={5} display={'flex'} flexDirection={'row'} justifyContent={'flex-end'}>\n            <Button variant={'contained'} size={'small'} color={'primary'}\n                    loading={btnShowDepositStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={btnShowDepositStatus === TradeBtnStatus.DISABLED ? true : false}\n                    onClick={onShowDeposit}>{t('labelBtnDeposit')}</Button>\n            <Button variant={'outlined'} size={'medium'} color={'primary'}\n                    loading={btnShowTransferStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={btnShowTransferStatus === TradeBtnStatus.DISABLED ? true : false}\n                    onClick={onShowTransfer}>{t('labelBtnTransfer')}</Button>\n            <Button variant={'outlined'} size={'medium'} color={'secondary'}\n                    loading={btnShowWithdrawStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={btnShowWithdrawStatus === TradeBtnStatus.DISABLED ? true : false}\n                    onClick={onShowWithdraw}>{t('labelBtnWithdraw')}</Button>\n        </ButtonListRightStyled>\n    </Grid>\n})\n\n","import { ChartType } from '../';\n\nexport interface IOrigDataItem {\n    timeStamp: number\n    low: number\n    high: number\n    open: number\n    close: number\n    volume: number\n}\n\n\nexport interface IDataItem {\n    timeStamp: number\n    low: number\n    high: number\n    open: number\n    close: number\n    volume: number\n    sign: 1 | -1\n}\n\nexport interface GetSignParams {\n    type: keyof typeof ChartType\n    data: any\n    dataIndex: number\n    open: number\n    close: number\n    closeDimIdx: number\n}\n\n// judge trend\nconst getSign = ({\n                     // type,\n                     data,\n                     dataIndex,\n                     open,\n                     close,\n                     closeDimIdx,\n                 }: GetSignParams): IDataItem['sign'] => {\n    // if (type === ChartType.Trend) {\n    //     // compare with last day's close\n    //     return close >= data[ data.length - 1 ].close ? 1 : -1\n    // }\n    let sign\n    if (open > close) {\n        sign = -1\n    } else if (open < close) {\n        sign = 1\n    } else {\n        sign =\n            dataIndex > 0\n                ? // If close === open, compare with close of last record\n                data[ dataIndex - 1 ][ closeDimIdx ] <= close\n                    ? 1\n                    : -1\n                : // No record of previous, set to be positive\n                1\n    }\n\n    return sign as IDataItem['sign']\n}\n\nexport const getRenderData = (\n    type: keyof typeof ChartType,\n    data?: IOrigDataItem[]\n): IDataItem[] => {\n    if (!data || !Array.isArray(data)) return []\n    // default index of close price\n    const closeDimIdx = 3\n\n    return data.map((o, index) => ({\n        ...o,\n        sign: getSign({\n            type,\n            data: data,\n            dataIndex: index,\n            open: o.open,\n            close: o.close,\n            closeDimIdx,\n        }),\n    }))\n}\n\nexport interface IGetDepthDataParams {\n    bidsPrices: number[]\n    bidsAmtTotals: number[]\n    asksPrices: number[]\n    asksAmtTotals: number[]\n}\n\nexport const getDepthData = (data?: IGetDepthDataParams | any) => {\n    if (!data || Array.isArray(data)) return undefined\n    const {bidsPrices, asksPrices, bidsAmtTotals, asksAmtTotals} = data\n    const formattedBidsPrices = bidsPrices.map((price: number) => ({\n        type: 'bids',\n        price\n    }))\n    const formattedAsksPrices = asksPrices.map((price: number) => ({\n        type: 'asks',\n        price,\n    }))\n    const jointPrices = formattedBidsPrices.concat(formattedAsksPrices)\n    const jointAmtTotals = bidsAmtTotals.concat(asksAmtTotals)\n\n    return jointAmtTotals.map((amount: number, index: number) =>\n        jointPrices[ index ].type === 'bids'\n            ? {\n                price: jointPrices[ index ].price,\n                bids: amount,\n            }\n            : {\n                price: jointPrices[ index ].price,\n                asks: amount,\n            }\n    )\n}\n","import { useCallback, useState } from 'react'\nimport { useDeepCompareEffect } from 'react-use';\nimport { Area, ComposedChart, Line, ResponsiveContainer, Tooltip, XAxis, YAxis, } from '@loopring-web/recharts'\nimport moment from 'moment'\nimport { ScaleAreaChartProps } from '../ScaleAreaChart'\nimport { getRenderData } from '../data'\nimport { Box, Typography } from '@material-ui/core'\nimport styled from '@emotion/styled'\nimport { useSettings } from '@loopring-web/component-lib/src/stores'\n\nconst DEFAULT_YAXIS_DOMAIN = 0.05\nconst UP_COLOR = '#00BBA8'\nconst DOWN_COLOR = '#fb3838'\n\nconst TooltipStyled = styled(Box)`\n  background: var(--color-pop-bg);\n  border: 1px solid var(--color-border);\n  border-radius: ${({theme}) => theme.unit * 0.25}px;\n  padding: ${({theme}) => theme.unit * 2}px ${({theme}) => theme.unit * 2}px;\n\n  > div:last-of-type {\n    color: var(--color-text-secondary)\n  }\n`\n// const CustomCursor = (props:any) => {\n//     return <Cross {...props} />;\n// };\nconst TrendChart = ({\n                        type,\n                        data,\n                        yAxisDomainPercent = DEFAULT_YAXIS_DOMAIN,\n                        handleMove,\n                        // riseColor = 'green',\n                        showTooltip = true,\n                        showArea = true,\n                        extraInfo,\n                        showXAxis = false,\n                    }: ScaleAreaChartProps) => {\n    const userSettings = useSettings()\n    const upColor = userSettings ? userSettings.upColor : 'green'\n    const renderData = getRenderData(type, data)\n    const [priceTrend, setPriceTrend] = useState<'up' | 'down'>(renderData[ renderData.length - 1 ]?.sign === 1 ? 'up' : 'down')\n    // current chart xAxis index\n    const [currentIndex, setCurrentIndex] = useState(-1)\n\n    const trendColor =\n        upColor === 'green'\n            ? priceTrend === 'up'\n            ? UP_COLOR\n            : DOWN_COLOR\n            : priceTrend === 'up'\n            ? DOWN_COLOR\n            : UP_COLOR\n    const hasData = data && Array.isArray(data) && !!data.length\n\n    const handleMousemove = useCallback(\n        (props: any) => {\n            if (!hasData) return\n            const {activeTooltipIndex} = props\n\n            // avoid duplicated event\n            const isUpdate = activeTooltipIndex !== currentIndex\n            if (Number.isFinite(activeTooltipIndex) && isUpdate) {\n                setCurrentIndex(activeTooltipIndex)\n                if (\n                    renderData[ activeTooltipIndex ] &&\n                    renderData[ activeTooltipIndex ].sign\n                ) {\n                    setPriceTrend(\n                        renderData[ activeTooltipIndex ].sign === 1\n                            ? 'up'\n                            : 'down'\n                    )\n                }\n                if (handleMove) {\n                    handleMove(renderData[ activeTooltipIndex ])\n                }\n            }\n        },\n        [renderData, handleMove, currentIndex, hasData]\n    )\n\n    const renderTooltipContent = useCallback((props: any) => {\n        if (!hasData) return\n        if (\n            !props.payload ||\n            !props.payload.length ||\n            !props.payload[ 0 ].payload.timeStamp\n        )\n            return <span></span>\n        const {timeStamp, close} = props.payload[ 0 ].payload\n        return (\n            <TooltipStyled>\n                {extraInfo && (\n                    <Typography component={'div'} fontSize={16}>{`${close} ${extraInfo}`}</Typography>\n                )}\n                <Typography component={'div'} fontSize={12}>\n                    {moment(timeStamp).format('HH:mm MMM DD [UTC]Z')}\n                </Typography>\n            </TooltipStyled>\n        )\n    }, [hasData, extraInfo])\n\n    const handleMouseLeave = useCallback(() => {\n        setPriceTrend(renderData[ renderData.length - 1 ]?.sign === 1 ? 'up' : 'down')\n    }, [renderData])\n\n    useDeepCompareEffect(() => {\n        if (renderData && !!renderData.length) {\n            setPriceTrend(renderData[ renderData.length - 1 ].sign === 1\n                ? 'up'\n                : 'down')\n        }\n    }, [renderData])\n\n    const customTick = ({x, y, payload}: any) => {\n        if (!renderData || !renderData.length) {\n            return <span></span>\n        }\n        return (\n            <g transform={`translate(${x}, ${y})`}>\n                <text x={0} y={0} dy={16} fontSize={12} textAnchor=\"start\" fill=\"#A1A7BB\">\n                    {payload.value}\n                </text>\n            </g>\n        )\n    }\n\n    return (\n        <ResponsiveContainer debounce={1} width={'99%'}>\n            <ComposedChart data={renderData} onMouseMove={showTooltip && handleMousemove}\n                           onMouseLeave={handleMouseLeave}>\n                <defs>\n                    <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        {/* <stop offset=\"5%\" stopColor=\"rgba(1, 187, 168, 0.4)\" stopOpacity={0.8}/> */}\n                        <stop\n                            offset=\"5%\"\n                            stopColor={trendColor}\n                            stopOpacity={0.3}\n                        />\n                        <stop\n                            offset=\"90%\"\n                            stopColor={trendColor}\n                            stopOpacity={0}\n                        />\n                    </linearGradient>\n                </defs>\n                <XAxis\n                    hide={!showXAxis}\n                    dataKey=\"date\" /* tickFormatter={convertDate} */\n                    interval={8}\n                    axisLine={false}\n                    tickLine={false}\n                    tick={customTick}\n                />\n                <YAxis\n                    hide={true}\n                    domain={[\n                        (dataMin: number) => dataMin * (1 - yAxisDomainPercent),\n                        (dataMax: number) => dataMax * (1 + yAxisDomainPercent),\n                    ]} /* tickFormatter={convertValue} */\n                />\n                {hasData && showTooltip && (\n                    <Tooltip\n                        cursor={{stroke: '#808080', strokeDasharray: '5 5'}}\n                        //  cursor={<CustomCursor/>}\n                        position={{y: 50}}\n                        content={(props) => renderTooltipContent(props)}\n                    />\n                )}\n                <Line\n                    type=\"monotone\"\n                    strokeLinecap=\"round\"\n                    strokeWidth={2}\n                    dataKey=\"close\"\n                    stroke={trendColor}\n                    dot={false}\n                    legendType=\"none\"\n                    isAnimationActive={false}\n                />\n                {showArea && (\n                    <Area\n                        type=\"monotone\"\n                        dataKey=\"close\"\n                        stroke=\"false\"\n                        strokeWidth={2}\n                        fillOpacity={1}\n                        fill=\"url(#colorUv)\"\n                        isAnimationActive={false}\n                    />\n                )}\n            </ComposedChart>\n        </ResponsiveContainer>\n    )\n}\n\nexport default TrendChart\n","import { useCallback, useState } from 'react'\n// import { ScaleAreaChartProps } from '../ScaleAreaChart'\nimport { getDepthData } from '../data'\nimport { Area, ComposedChart, Line, ResponsiveContainer, Tooltip, XAxis, YAxis, } from '@loopring-web/recharts'\n\nconst ASKS_COLOR = '#fb3838'\nconst BIDS_COLOR = '#00BBA8'\nconst YAXIS_DOMAIN = 0.1\n\nexport interface DepthData {\n    // timeStamp: number\n    bidsPrices: any[]\n    bidsAmtTotals: any[]\n    asksPrices: any[]\n    asksAmtTotals: any[]\n}\n\nexport interface DepthProps {\n    data?: DepthData\n    handleMove?: (props: {\n        type: 'asks' | 'bids'\n        price: number\n        amount: number\n    }) => void\n    yAxisDomainPercent?: number\n    riseColor?: 'green' | 'red'\n}\n\nconst DepthChart = ({\n                        data,\n                        handleMove,\n                        yAxisDomainPercent = YAXIS_DOMAIN,\n                        riseColor = 'green',\n                    }: DepthProps) => {\n    const [currentIndex, setCurrentIndex] = useState(-1)\n\n    const asksColor = riseColor === 'green' ? ASKS_COLOR : BIDS_COLOR\n    const bidsColor = riseColor === 'green' ? BIDS_COLOR : ASKS_COLOR\n\n    const hasData = data && Array.isArray(data) && !!data.length\n\n    const renderTooltipContent = useCallback((props) => {\n        // no data\n        if (!hasData) return ''\n        if (props.payload && !!props.payload.length && props.payload[ 0 ].payload) {\n            const {payload} = props.payload[ 0 ]\n            const {price} = payload\n            if (payload.bids) {\n                return (\n                    <>\n                        <div>price: {price}</div>\n                        <div>amount: {payload.bids}</div>\n                    </>\n                )\n            }\n            if (payload.asks) {\n                return (\n                    <>\n                        <div>price: {price}</div>\n                        <div>amount: {payload.asks}</div>\n                    </>\n                )\n            }\n        }\n        return <span></span>\n    }, [hasData])\n\n    const handleMousemove = useCallback(\n        (props: any) => {\n            // no data\n            if (!hasData) return\n            const {activeTooltipIndex} = props\n            // avoid duplicated event\n            const isUpdate = activeTooltipIndex !== currentIndex\n            if (Number.isFinite(activeTooltipIndex) && isUpdate) {\n                setCurrentIndex(activeTooltipIndex)\n                const {payload, name} = props.activePayload[ 0 ]\n                if (handleMove) {\n                    handleMove({\n                        price: payload.price,\n                        type: name,\n                        amount: payload.bids || payload.asks,\n                    })\n                }\n            }\n        },\n        [handleMove, currentIndex, hasData]\n    )\n\n    const formattedData = getDepthData(data)\n\n    return (\n        <ResponsiveContainer width={'99%'}>\n            <ComposedChart data={formattedData} onMouseMove={handleMousemove}>\n                <defs>\n                    <linearGradient id=\"colorAsks\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop\n                            offset=\"5%\"\n                            stopColor={asksColor}\n                            stopOpacity={0.3}\n                        />\n                        <stop\n                            offset=\"90%\"\n                            stopColor={asksColor}\n                            stopOpacity={0}\n                        />\n                    </linearGradient>\n                    <linearGradient id=\"colorBids\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop\n                            offset=\"5%\"\n                            stopColor={bidsColor}\n                            stopOpacity={0.3}\n                        />\n                        <stop\n                            offset=\"90%\"\n                            stopColor={bidsColor}\n                            stopOpacity={0}\n                        />\n                    </linearGradient>\n                </defs>\n                <XAxis\n                    dataKey=\"price\"\n                    hide={true}\n                    type=\"category\"\n                    allowDuplicatedCategory\n                />\n                <YAxis\n                    hide={true}\n                    domain={[\n                        (dataMin: number) => dataMin * (1 - yAxisDomainPercent),\n                        (dataMax: number) => dataMax * (1 + yAxisDomainPercent),\n                    ]}\n                />\n                {hasData && (\n                    <Tooltip\n                        position={{y: 50}}\n                        content={(props) => renderTooltipContent(props)}\n                    />\n                )}\n                <Line\n                    type=\"step\"\n                    dataKey=\"asks\"\n                    stroke={asksColor}\n                    dot={false}\n                    animationDuration={500}\n                    isAnimationActive={false}\n                />\n                <Line\n                    type=\"step\"\n                    dataKey=\"bids\"\n                    stroke={bidsColor}\n                    dot={false}\n                    animationDuration={500}\n                    isAnimationActive={false}\n                />\n                <Area\n                    type=\"step\"\n                    dataKey=\"asks\"\n                    stroke=\"false\"\n                    fill=\"url(#colorAsks)\"\n                    animationDuration={500}\n                    isAnimationActive={false}\n                />\n                <Area\n                    type=\"step\"\n                    dataKey=\"bids\"\n                    stroke=\"false\"\n                    fill=\"url(#colorBids)\"\n                    animationDuration={500}\n                    isAnimationActive={false}\n                />\n            </ComposedChart>\n        </ResponsiveContainer>\n    )\n}\n\nexport default DepthChart\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer, Sector, Tooltip } from '@loopring-web/recharts';\n\nconst colors = [\n    \"#00BBA8\",\n    \"#ED9526\",\n    \"#1C60FF\",\n    \"#FFCA28\",\n    \"#63992D\",\n    \"#FF5677\",\n];\n\nconst StyledLegendItem = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 170px;\n    margin-bottom: 8px;\n    color: ${({theme}) => `${theme.colorBase.textPrimary}`};\n    font-size: 14px;\n\n    &>span:first-of-type {\n        display: flex;\n\n        &>div:first-of-type {\n            margin-right: 4px;\n        }\n    }\n`\n\nconst renderActiveShape = ({\n                               cx,\n                               cy,\n                               innerRadius,\n                               outerRadius,\n                               startAngle,\n                               endAngle,\n                               fill\n                           }: any) => (\n    <g>\n        <Sector\n            cx={cx}\n            cy={cy}\n            innerRadius={innerRadius}\n            outerRadius={outerRadius + 5}\n            startAngle={startAngle}\n            endAngle={endAngle}\n            fill={fill}\n            // cornerRadius={2}\n        />\n    </g>\n);\n\nexport interface DoughnutChartProps {\n    data?: {\n        name: string;\n        value: number;\n    }[]\n}\n\nconst renderLegend = ({payload}: any) => (\n    <ul style={{marginRight: 26}}>\n        {payload.map((entry: any, index: number) => {\n            const {color, value, payload: {value: amount}} = entry\n            const StyledColoredRect = styled.div`\n                width: 12px;\n                height: 12px;\n                background-color: ${color}\n            `\n            return (\n                <li key={`item-${index}`}>\n                    <StyledLegendItem>\n                        <span><StyledColoredRect/>{value}</span>\n                        <span>${amount.toFixed(2)}</span>\n                    </StyledLegendItem>\n                </li>\n            )\n        })}\n    </ul>\n);\n\nexport const DoughnutChart = ({data}: DoughnutChartProps) => {\n    const [activeIndex, setActiveIndex] = React.useState(undefined)\n\n    const onPieEnter = React.useCallback((_, index) => {\n        setActiveIndex(index)\n    }, [])\n\n    const onPieLeave = React.useCallback(() => {\n        setActiveIndex(undefined)\n    }, [])\n\n    const getFormattedData = React.useCallback(() => {\n        if (!data || !data.length) return []\n        if (data.length < 7) return data\n        data.sort((a, b) => b.value - a.value)\n        const others = data.slice(5, data.length).reduce((a, b) => ({\n            name: 'Others',\n            value: a.value + b.value\n        }))\n        const result = data.slice(0, 5).concat([others])\n        console.log(result)\n        return result\n    }, [data])\n\n    return (\n        <ResponsiveContainer debounce={1} width={'99%'}>\n            <PieChart>\n                <Pie\n                    dataKey={'value'}\n                    activeIndex={activeIndex}\n                    activeShape={renderActiveShape}\n                    data={getFormattedData()}\n                    cx={'30%'}\n                    // cy={200}\n                    innerRadius={45}\n                    outerRadius={55}\n                    fill=\"#8884d8\"\n                    stroke=\"none\"\n                    radius={5}\n                    paddingAngle={5}\n                    minAngle={2}\n                    animationEasing={'ease-in-out'}\n                    animationDuration={1000}\n                    onMouseEnter={onPieEnter}\n                    onMouseLeave={onPieLeave}\n                >\n                    {getFormattedData().map((entry, index) => (\n                        <Cell key={entry.name} fill={colors[ index ]}/>\n                    ))}\n                </Pie>\n                <Tooltip\n                    formatter={(value: any, name: any) => ([`$${value}`, `${name}`])}\n                    contentStyle={{\n                        backgroundColor: 'var(--color-pop-bg)',\n                        border: 'none'\n                    }}\n                    itemStyle={{\n                        color: '#FFFFFF'\n                    }}\n                />\n                <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" content={renderLegend}/>\n            </PieChart>\n        </ResponsiveContainer>\n    );\n}\n","import { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport * as React from \"react\";\nimport {\n    bollingerBand,\n    BollingerBandTooltip,\n    BollingerSeries,\n    CandlestickSeries,\n    Chart,\n    ChartCanvas,\n    CrossHairCursor,\n    CurrentCoordinate,\n    discontinuousTimeScaleProviderBuilder,\n    EdgeIndicator,\n    ema,\n    lastVisibleItemBasedZoomAnchor,\n    LineSeries,\n    MACDSeries,\n    MACDTooltip,\n    MouseCoordinateX,\n    MouseCoordinateY,\n    MovingAverageTooltip,\n    OHLCTooltip,\n    sma,\n    withDeviceRatio,\n    withSize,\n    XAxis,\n    YAxis,\n} from \"react-financial-charts\";\nimport { macd } from \"@react-financial-charts/indicators\";\n\nenum CandleStickFill {\n    up = '#00BBA8',\n    down = '#fb3838'\n}\n\nexport interface IOHLCData {\n    close: number;\n    date: Date;\n    high: number;\n    low: number;\n    open: number;\n    volume: number;\n}\n\nexport interface StockChartProps {\n    readonly data: IOHLCData[];\n    readonly height: number;\n    readonly dateTimeFormat?: string;\n    readonly width: number;\n    readonly ratio: number;\n}\n\nclass StockChart extends React.Component<StockChartProps> {\n    private readonly margin = {left: 0, right: 48, top: 0, bottom: 24};\n    private readonly pricesDisplayFormat = format(\".2f\");\n    private readonly xScaleProvider = discontinuousTimeScaleProviderBuilder().inputDateAccessor(\n        (d: IOHLCData) => d.date,\n    );\n\n    private readonly macdAppearance = {\n        fillStyle: {\n            divergence: \"#4682B4\",\n        },\n        strokeStyle: {\n            macd: \"#FF0000\",\n            signal: \"#00F300\",\n            zero: \"yellow\",\n        },\n    };\n\n    // private readonly macdCalculator = macd()\n    //     .id(6)\n    //     .options({\n    //         fast: 12,\n    //         signal: 9,\n    //         slow: 26,\n    //     })\n    //     .merge((d: any, c: any) => {\n    //         d.macd = c;\n    //     })\n    //     .accessor((d: any) => d.macd);\n\n    public render() {\n        const {data: initialData, dateTimeFormat = \"%d %b\", height, ratio, width} = this.props;\n        // simple moving average\n        const macdCalculator = macd()\n            // .id(6)\n            .options({\n                fast: 12,\n                signal: 9,\n                slow: 26,\n            })\n            .merge((d: any, c: any) => {\n                d.macd = c;\n            })\n            .accessor((d: any) => d.macd);\n\n        const sma5 = sma()\n            .id(1)\n            .options({windowSize: 5})\n            .merge((d: any, c: any) => {\n                d.sma5 = c;\n            })\n            .accessor((d: any) => d.sma5);\n\n        const sma10 = sma()\n            .id(2)\n            .options({windowSize: 10})\n            .merge((d: any, c: any) => {\n                d.sma10 = c;\n            })\n            .accessor((d: any) => d.sma10);\n\n        const sma30 = sma()\n            .id(3)\n            .options({windowSize: 30})\n            .merge((d: any, c: any) => {\n                d.sma30 = c;\n            })\n            .accessor((d: any) => d.sma30);\n\n        const sma60 = sma()\n            .id(4)\n            .options({windowSize: 60})\n            .merge((d: any, c: any) => {\n                d.sma60 = c;\n            })\n            .accessor((d: any) => d.sma60);\n\n        const bollinger = bollingerBand()\n            .id(5)\n            .merge((d: any, c: any) => {\n                d.bb = c;\n            })\n            .accessor((d: any) => d.bb);\n\n        // const elder = elderRay();\n\n        const ema26 = ema()\n            .id(6)\n            .options({windowSize: 26})\n            .merge((d: any, c: any) => {\n                d.ema26 = c;\n            })\n            .accessor((d: any) => d.ema26);\n\n        const ema12 = ema()\n            .id(7)\n            .options({windowSize: 12})\n            .merge((d: any, c: any) => {\n                d.ema12 = c;\n            })\n            .accessor((d: any) => d.ema12);\n\n        const macdYAccessor = macdCalculator.accessor();\n        const macdOptions = macdCalculator.options();\n\n        // const calculatedData = macdCalculator(ema12(ema26(sma60(sma30(sma10(sma5(bollinger(initialData))))))));\n        const calculatedData = macdCalculator(ema12(ema26(initialData)));\n\n\n        const {margin, xScaleProvider} = this;\n\n        const {data, xScale, xAccessor, displayXAccessor} = xScaleProvider(calculatedData);\n\n        const max = xAccessor(data[ data.length - 1 ]);\n        const min = xAccessor(data[ Math.max(0, data.length - 100) ]);\n        const xExtents = [min, max + 5];\n\n        const gridHeight = height - margin.top - margin.bottom;\n\n        // const elderRayHeight = 100;\n        // const elderRayOrigin = (_: number, h: number) => [0, h - elderRayHeight];\n        // const barChartHeight = gridHeight / 4;\n        // const barChartOrigin = (_: number, h: number) => [0, h - barChartHeight - elderRayHeight];\n        // const chartHeight = gridHeight - elderRayHeight;\n        const volumeHeight = 100;\n        const MACDHeight = 100;\n        const chartHeight = gridHeight - volumeHeight - MACDHeight;\n\n        const timeDisplayFormat = timeFormat(dateTimeFormat);\n\n        const bbStroke = {\n            top: \"#FF01FF\",\n            middle: \"#CC0165\",\n            bottom: \"#01CCCB\",\n        };\n\n        return (\n            <ChartCanvas\n                height={height}\n                ratio={ratio}\n                width={width}\n                margin={margin}\n                data={data}\n                displayXAccessor={displayXAccessor}\n                seriesName=\"Data\"\n                xScale={xScale}\n                xAccessor={xAccessor}\n                xExtents={xExtents}\n                zoomAnchor={lastVisibleItemBasedZoomAnchor}\n            >\n                <Chart id={1} height={chartHeight} yExtents={this.candleChartExtents} padding={{top: 10, bottom: 20}}>\n                    <XAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} showTicks={false}\n                           showTickLabel={false} tickLabelFill={'rgba(255, 255, 255, 0.4)'}\n                           strokeStyle={'rgba(255, 255, 255, 0.3)'}/>\n                    <YAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'}\n                           tickFormat={this.pricesDisplayFormat} tickLabelFill={'rgba(255, 255, 255, 0.4)'}\n                           strokeStyle={'rgba(255, 255, 255, 0.3)'}/>\n                    <CandlestickSeries fill={this.candleStickColor}/>\n                    <LineSeries yAccessor={sma5.accessor()} strokeStyle={sma5.stroke()}/>\n                    <CurrentCoordinate yAccessor={sma5.accessor()} fillStyle={sma5.stroke()}/>\n                    <LineSeries yAccessor={sma10.accessor()} strokeStyle={sma10.stroke()}/>\n                    <CurrentCoordinate yAccessor={sma10.accessor()} fillStyle={sma10.stroke()}/>\n                    <LineSeries yAccessor={sma30.accessor()} strokeStyle={sma30.stroke()}/>\n                    <CurrentCoordinate yAccessor={sma30.accessor()} fillStyle={sma30.stroke()}/>\n                    <LineSeries yAccessor={sma60.accessor()} strokeStyle={sma60.stroke()}/>\n                    <CurrentCoordinate yAccessor={sma60.accessor()} fillStyle={sma60.stroke()}/>\n                    <MouseCoordinateY rectWidth={margin.right} displayFormat={this.pricesDisplayFormat}/>\n                    <EdgeIndicator\n                        itemType=\"last\"\n                        rectWidth={margin.right}\n                        fill={this.openCloseColor}\n                        lineStroke={this.openCloseColor}\n                        displayFormat={this.pricesDisplayFormat}\n                        yAccessor={this.yEdgeIndicator}\n                    />\n                    <MovingAverageTooltip\n                        origin={[8, 24]}\n                        textFill={'#FFF'}\n                        options={[\n                            {\n                                yAccessor: sma5.accessor(),\n                                type: \"MA\",\n                                stroke: sma5.stroke(),\n                                windowSize: sma5.options().windowSize,\n                            },\n                            {\n                                yAccessor: sma10.accessor(),\n                                type: \"MA\",\n                                stroke: sma10.stroke(),\n                                windowSize: sma10.options().windowSize,\n                            },\n                            {\n                                yAccessor: sma30.accessor(),\n                                type: \"MA\",\n                                stroke: sma30.stroke(),\n                                windowSize: sma30.options().windowSize,\n                            },\n                            {\n                                yAccessor: sma60.accessor(),\n                                type: \"MA\",\n                                stroke: sma60.stroke(),\n                                windowSize: sma60.options().windowSize,\n                            },\n                        ]}\n                    />\n                    {/* <ZoomButtons /> */}\n                    <OHLCTooltip origin={[8, 16]} textFill={'#FFF'}/>\n                    <BollingerSeries\n                        strokeStyle={bbStroke}\n                    />\n                    <BollingerBandTooltip\n                        origin={[8, 64]}\n                        yAccessor={d => d.bb}\n                        options={bollinger.options()}\n                        textFill={'#fff'}\n                    />\n                </Chart>\n                {/* <Chart id={2} origin={(w, h) => [0, h - 200]} height={100} yExtents={d => d.volume}>\n\t\t\t\t\t<XAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} axisAt=\"bottom\" orient=\"bottom\" tickLabelFill={'rgba(255, 255, 255, 0.4)'} strokeStyle={'rgba(255, 255, 255, 0.3)'} />\n\t\t\t\t\t<YAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} axisAt=\"right\" orient=\"right\" ticks={5} tickFormat={format(\".2s\")} tickLabelFill={'rgba(255, 255, 255, 0.4)'} strokeStyle={'rgba(255, 255, 255, 0.3)'} />\n\t\t\t\t\t<MouseCoordinateX displayFormat={timeDisplayFormat} />\n                    <MouseCoordinateY rectWidth={margin.right} displayFormat={this.pricesDisplayFormat} />\n                    <BarSeries yAccessor={this.volumeSeries} fillStyle={this.volumeColor} />\n                    <SingleValueTooltip\n                        yAccessor={d => d.volume}\n                        yLabel={\"VOL\"}\n                        valueFill={'rgba(255, 255, 255, 0.8)'}\n                        yDisplayFormat={(d: any) => this.pricesDisplayFormat(d)}\n                        origin={[8, 16]}\n                    />\n\t\t\t\t</Chart> */}\n                <Chart id={8} origin={(_w, _h) => [0, _h - 100]} height={100} yExtents={macdYAccessor}>\n                    <XAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} axisAt=\"bottom\"\n                           orient=\"bottom\" tickLabelFill={'rgba(255, 255, 255, 0.4)'}\n                           strokeStyle={'rgba(255, 255, 255, 0.3)'}/>\n                    <YAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} axisAt=\"right\" orient=\"right\"\n                           ticks={5} tickFormat={format(\".2s\")} tickLabelFill={'rgba(255, 255, 255, 0.4)'}\n                           strokeStyle={'rgba(255, 255, 255, 0.3)'}/>\n                    <MouseCoordinateX displayFormat={timeDisplayFormat}/>\n                    <MouseCoordinateY rectWidth={margin.right} displayFormat={this.pricesDisplayFormat}/>\n                    <MACDSeries yAccessor={macdYAccessor} {...this.macdAppearance} />\n                    <MACDTooltip\n                        origin={[8, 16]}\n                        appearance={this.macdAppearance}\n                        options={macdOptions}\n                        yAccessor={macdYAccessor}\n                    />\n                </Chart>\n                <CrossHairCursor strokeStyle={'#fff'}/>\n            </ChartCanvas>\n        );\n    }\n\n    // @ts-ignore\n    private readonly barChartExtents = (data: IOHLCData) => {\n        return data.volume;\n    };\n\n    private readonly candleChartExtents = (data: any) => {\n        return [data.high, data.low];\n    };\n\n    private readonly yEdgeIndicator = (data: IOHLCData) => {\n        return data.close;\n    };\n\n    private readonly candleStickColor = (data: IOHLCData) => data.close > data.open ? CandleStickFill.up : CandleStickFill.down\n    // @ts-ignore\n    private readonly volumeColor = (data: IOHLCData) => {\n        return data.close > data.open ? \"rgba(38, 166, 154, 0.3)\" : \"rgba(239, 83, 80, 0.3)\";\n    };\n    // @ts-ignore\n    private readonly volumeSeries = (data: IOHLCData) => {\n        return data.volume;\n    };\n\n    private readonly openCloseColor = (data: IOHLCData) => {\n        return data.close > data.open ? \"#26a69a\" : \"#ef5350\";\n    };\n}\n\nexport const DayilyStockChart = withSize({style: {minHeight: 600}})(withDeviceRatio()(StockChart));\n","import {\n    Account,\n    AccountStatus,\n    AmmInData,\n    CoinInfo,\n    CoinMap, ConnectProviders,\n    HeaderMenuItemInterface,\n    TradeCalcData,\n    WalletCoin,\n    WalletMap\n} from '@loopring-web/common-resources';\nimport { List } from 'immutable';\nexport const account:Account = {\n    accAddress: 'xxxxxxxxxxxxxxxxxxx',\n    readyState: AccountStatus.UN_CONNECT,\n    accountId: -1,\n    apiKey: '',\n    eddsaKey: '',\n    publicKey: {},\n    level: '',\n    nonce: undefined,\n    keyNonce: undefined,\n    connectName: ConnectProviders.unknown,\n}\nexport const coinMap: CoinMap<CoinType, CoinInfo<CoinType>> = {\n    ETH: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'ETH',\n        simpleName: 'ETH',\n        description: '',\n        company: 'ETH'\n    },\n    LRC: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'LRC',\n        simpleName: 'LRC',\n        description: '',\n        company: 'LRC'\n    },\n    USDT: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'USDT',\n        simpleName: 'USDT',\n        description: '',\n        company: 'USDT'\n    },\n    USDC: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'USDC',\n        simpleName: 'USDC',\n        description: '',\n        company: 'USDC'\n    },\n    LRCA: {\n        icon: 'red',\n        name: 'LRCA',\n        simpleName: 'LRCA',\n        description: '',\n        company: 'LRC'\n    },\n    LRCB: {\n        icon: 'red',\n        name: 'LRCA',\n        simpleName: 'LRCB',\n        description: '',\n        company: 'LRC'\n    },\n    DPR: {\n        icon: 'blue',\n        name: 'DPR',\n        simpleName: 'DPR',\n        description: '',\n        company: 'DPR'\n    },\n    CCB: {\n        icon: 'blue',\n        name: 'CCB',\n        simpleName: 'CCB',\n        description: '',\n        company: 'ETH'\n    },\n    OKB: {\n        icon: 'blue',\n        name: 'OKB',\n        simpleName: 'OKB',\n        description: '',\n        company: 'ETH'\n    },\n    CRV: {\n        icon: 'blue',\n        name: 'CRV',\n        simpleName: 'CRV',\n        description: '',\n        company: 'CRV'\n    },\n    TEST: {\n        icon: 'blue',\n        name: 'TEST',\n        simpleName: 'TEST',\n        description: '',\n        company: 'TEST'\n    },\n    TEST2: {\n        icon: 'blue',\n        name: 'TEST3',\n        simpleName: 'TEST2',\n        description: '',\n        company: 'CRV'\n    },\n    TEST3: {\n        icon: 'blue',\n        name: 'TEST3',\n        simpleName: 'TEST3',\n        description: '',\n        company: 'TEST3'\n    },\n\n}\nexport const walletMap = {\n    ETH: {\n        belong: 'ETH',\n        count: 11,\n    },\n    LRC: {\n        belong: 'LRC',\n        count: 11111111111111,\n    },\n}\n\nexport enum ButtonComponentsMap {\n    Download,\n    Notification,\n    Theme,\n    Language\n}\n\nexport const inputProps = {\n    label: 'Enter Payment Token',\n    subLabel: 'Max',\n    emptyText: 'Select Token',\n    placeholderText: '0.00',\n    coinMap: coinMap,\n}\n\nexport const coinType = {\n    ETH: 'ETH',\n    USDT: 'USDT',\n    USDC: 'USDC',\n    LRC: 'LRC',\n    CRV: 'CRV',\n    DPR: 'DPR',\n    CCB: 'CCB',\n    OKB: 'OKB',\n    LRCA: 'LRCA',\n    LRCB: 'LRCB',\n    TEST: 'TEST',\n    TEST2: 'TEST2',\n    TEST3: 'TEST3',\n}\n\nexport const tradeCalcData: TradeCalcData<CoinType> = {\n    coinSell: 'ETH', //name\n    coinBuy: 'LRC',\n    BtoS: 0,\n    StoB: 0,\n    sellCoinInfoMap: coinMap,\n    buyCoinInfoMap: coinMap,\n    walletMap: walletMap as WalletMap<CoinType, WalletCoin<CoinType>>,\n    slippage: 0.5,\n    priceImpact: '12',\n    minimumReceived: '1%',\n    fee: '1%'\n}\nexport const ammCalcData: AmmInData<CoinType> = {\n    myCoinA: {belong: 'ETH', balance: 1000, tradeValue: 0},\n    myCoinB: {belong: 'LRC', balance: 1000, tradeValue: 0},\n    lpCoinA: {belong: 'ETH', balance: 1000, tradeValue: 0},\n    lpCoinB: {belong: 'ETH', balance: 1000, tradeValue: 0},\n    lpCoin: {belong: 'ETH', balance: 1000, tradeValue: 0},\n    AtoB: 50,\n    coinInfoMap: coinMap,\n    slippage: 0.5,\n    feeJoin: '1%',\n    feeExit: '1%',\n}\n\n\nexport const layer2ItemData = List<HeaderMenuItemInterface>([{\n    label: {\n        id: 'classic',\n        i18nKey: 'labelClassic',\n        description: 'Simple and easy-to-user interface',\n    },\n    router: {path: ''},\n}, {\n    label: {\n        id: 'advanced',\n        i18nKey: 'labelAdvanced',\n        description: 'Full access to all trading tools',\n    },\n    router: {path: ''},\n},\n])\n\nexport type CoinType = typeof coinType;","// import {WithTranslation, withTranslation} from \"react-i18next\";\n// import styled from \"@emotion/styled\";\n// import { IOrigDataItem, IGetDepthDataParams } from './data'\nimport TrendChart from './TrendChart'\nimport DepthChart from './DepthChart'\nimport { ChartType } from '../';\n\nimport { DayilyStockChart } from './KlineChart'\n\nexport interface ScaleAreaChartProps {\n    type: ChartType\n    data: any\n    handleMove?: (props: any) => void\n    yAxisDomainPercent?: number // defualt 0.1\n    riseColor?: 'green' | 'red'\n    showTooltip?: boolean\n    showArea?: boolean\n    extraInfo?: string\n    showXAxis?: boolean\n}\n\nexport const ScaleAreaChart = (props: ScaleAreaChartProps) => {\n    switch (props.type) {\n        case ChartType.Trend:\n            return <TrendChart {...props} />\n        case ChartType.Depth:\n            return <DepthChart {...props} />\n        case ChartType.Kline:\n            return <DayilyStockChart data={props.data}/>\n        default:\n            return <span>prop \"type\" is not avaible for current chart</span>\n    }\n}\n","import { WithTranslation } from 'react-i18next';\nimport { CoinKey, EmptyValueTag, getThousandFormattedNumbers, abbreviateNumber } from '@loopring-web/common-resources';\nimport { Box, BoxProps, Grid } from '@material-ui/core';\nimport { Typography } from '@material-ui/core/';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { floatTag, MarketBlockProps, useSettings } from './../../index';\nimport { ScaleAreaChart } from '../charts/scaleAreaChart'\nimport { ChartType } from '../charts'\n\ntype StyledProps = {\n    custom: any\n}\n//${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\nconst MarketBlockStyled = styled(Box)<StyledProps>`\n\n  & {\n    background: var(--color-box);\n\n    border-radius: ${({theme}) => theme.unit}px;\n\n  }\n\n  // &:not(:last-of-type){\n    //   margin-right: ${({theme}) => theme.unit * 3}px;\n  //   background-color: chocolate;\n  // }\n  ${({theme, custom}) => floatTag({theme, custom})};\n\n  .left-block {\n    min-width: 76px;\n    max-width: 84px;\n  }\n\n  .float-group span {\n    display: flex;\n    align-items: flex-end;\n  }\n\n` as React.ElementType<StyledProps & BoxProps>;\n\nexport const MarketBlock = <C extends CoinKey<I>, I>({\n                                                         coinAInfo,\n                                                         t,\n                                                         coinBInfo,\n                                                         tradeFloat,\n                                                         chartData = []\n                                                     }: & WithTranslation & MarketBlockProps<C>) => {\n    const {upColor} = useSettings();\n    return <MarketBlockStyled custom={{chg: upColor}} padding={0.5 * 5} display={'flex'}\n                              justifyContent={'stretch'}>\n        {coinAInfo && coinBInfo ?\n            <Grid container justifyContent={'space-around'} position={'relative'}>\n                <Grid item xs={12} display={'flex'} flexDirection={'row'} justifyContent={'flex-start'}\n                      alignItems={'center'} height={24}>\n                    <Typography variant={'h4'} component={'h3'}>\n                        <Typography component={'span'} title={'sell'} color={'textPrimary'}>\n                            {coinAInfo?.simpleName}\n                        </Typography>\n                        <Typography component={'i'}>/</Typography>\n                        <Typography component={'span'} title={'buy'} color={'textPrimary'}>\n                            {coinBInfo.simpleName}\n                        </Typography>\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} display={'flex'} flexDirection={'row'} justifyContent={'flex-start'}\n                      alignItems={'stretch'} className={'float-group'} marginTop={1}>\n                    <Box display={'flex'} flexDirection={'column'} alignItems={'flex-start'} justifyContent={'flex-end'}\n                         className={'left-block'}>\n                        <Typography variant={'h5'} height={24} component={'span'}\n                                    className={`float-tag float-${tradeFloat.floatTag}`}>${\n                            getThousandFormattedNumbers(tradeFloat.priceDollar, 2, {isAbbreviate: true})\n                        } </Typography>\n                        <Typography variant={'body2'} component={'span'} marginTop={1 / 2}\n                                    className={`float-tag float-${tradeFloat.floatTag}`}>{\n                            tradeFloat.change\n                              ? `${tradeFloat.change > 0 ? '+' : ''}${getThousandFormattedNumbers(tradeFloat.change, 2)}%`\n                              : EmptyValueTag\n                        }</Typography>\n                    </Box>\n                    <Box display={'flex'} flexDirection={'column'} alignItems={'flex-start'}\n                         justifyContent={'flex-end'}>\n                        <Typography variant={'body2'} component={'span'} textOverflow={'ellipsis'}\n                                    height={24}> ￥{\n                                      tradeFloat.priceYuan ? abbreviateNumber(tradeFloat.priceYuan) : '--'\n                        } </Typography>\n                        <Typography variant={'body2'} component={'div'} textOverflow={'ellipsis'} overflow={'hidden'} whiteSpace={'nowrap'}\n                                    marginTop={1 / 2}>{t('labelVolume')} : {(tradeFloat.volume ? getThousandFormattedNumbers(tradeFloat.volume, 3) : '--')}</Typography>\n                    </Box>\n\n                </Grid>\n                <Grid item position={'absolute'} top={0} right={0} width={120} height={42}>\n                    <ScaleAreaChart showTooltip={false} showArea={false} type={ChartType.Trend} data={chartData}/>\n                </Grid>\n            </Grid> : <></>\n        } </MarketBlockStyled>\n}","import { Avatar, Box, Card, CardActions, CardContent, Divider } from '@material-ui/core';\nimport { Typography } from '@material-ui/core/';\nimport {  Button } from '../';\nimport React from 'react';\nimport moment from 'moment';\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport {\n    AmmCardProps,\n    AvatarCoinStyled,\n    Currency,\n    EmptyValueTag,\n    getThousandFormattedNumbers,\n    PriceTag\n} from '@loopring-web/common-resources';\nimport { useSettings } from '../../stores';\nimport styled from '@emotion/styled';\n\n// const BoxStyled = styled(Card)`\n//\n// `\n\nconst BoxStyled = styled(Box)`\n` as typeof Box\n// const BoxBg = styled(Box)`\n//   ${({theme}) => boxLiner({theme})}\n//   ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1 / 2})};\n// ` as typeof Box\n\nconst DetailWrapperStyled = styled(Box)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: ${({theme}) => theme.unit}px;\n`\n\nconst DividerWrapperStyled = styled(Box)``\n\nexport const AmmCard = withTranslation('common', {withRef: true})(\n    React.memo(React.forwardRef(<T extends { [ key: string ]: any }>(\n        {\n            t,\n            coinAInfo,\n            coinBInfo,\n            amountDollar,\n            amountYuan,\n            // isNew,\n            APY,\n            activity: {duration, myRewards, rewardToken, isPass},\n            handleClick,\n            ...rest\n        }: AmmCardProps<T> & WithTranslation, ref: React.ForwardedRef<any>) => {\n        const { rewardValue, rewardValue2 } = rest\n        // const coinAIconHasLoaded = useImage(coinAInfo?.icon ? coinAInfo?.icon : '').hasLoaded;\n        // const coinBIconHasLoaded = useImage(coinBInfo?.icon ? coinBInfo?.icon : '').hasLoaded;\n        const {coinJson} = useSettings();\n        const coinAIcon: any = coinJson[ coinAInfo.simpleName ];\n        const coinBIcon: any = coinJson[ coinBInfo.simpleName ];\n        const pair = `${coinAInfo.simpleName} / ${coinBInfo.simpleName}`\n        const {currency} = useSettings();\n\n        return <Card ref={ref}>\n            <CardContent>\n                <BoxStyled display={'flex'} flexDirection={'row'} justifyContent={'space-between'}\n                           alignItems={'center'}>\n                    <Typography variant={'h3'} component={'span'} color={'textPrimary'} fontFamily={'Roboto'}>\n                        {pair}\n                    </Typography>\n                    <Box display={'flex'} flexDirection={'row'} justifyContent={'flex-start'} alignItems={'center'} marginRight={-1}>\n                        <Box className={'logo-icon'} height={'var(--chart-title-coin-size)'} position={'relative'}\n                             zIndex={20}\n                             width={'var(--chart-title-coin-size)'} alignItems={'center'} justifyContent={'center'}>\n                            {coinAIcon ?\n                                <AvatarCoinStyled imgx={coinAIcon.x} imgy={coinAIcon.y}\n                                                  imgheight={coinAIcon.height}\n                                                  imgwidth={coinAIcon.width} size={28}\n                                                  variant=\"circular\" alt={coinAInfo?.simpleName as string}\n                                    // src={sellData?.icon}\n                                                  src={'data:image/svg+xml;utf8,' + '<svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H36V36H0V0Z\"/></svg>'}/>\n                                : <Avatar variant=\"circular\" alt={coinAInfo?.simpleName as string} style={{\n                                    height: 'var(--chart-title-coin-size)',\n                                    width: 'var(--chart-title-coin-size)'\n                                }}\n                                    // src={sellData?.icon}\n                                          src={'static/images/icon-default.png'}/>\n                            }</Box>\n\n                        <Box className={'logo-icon'} height={'var(--chart-title-coin-size)'} position={'relative'}\n                             zIndex={18} left={-8}\n                             width={'var(--chart-title-coin-size)'} alignItems={'center'}\n                             justifyContent={'center'}>{coinBIcon ?\n                            <AvatarCoinStyled imgx={coinBIcon.x} imgy={coinBIcon.y} imgheight={coinBIcon.height}\n                                              imgwidth={coinBIcon.width} size={28}\n                                              variant=\"circular\" alt={coinBInfo?.simpleName as string}\n                                // src={sellData?.icon}\n                                              src={'data:image/svg+xml;utf8,' + '<svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H36V36H0V0Z\"/></svg>'}/>\n                            : <Avatar variant=\"circular\" alt={coinBInfo?.simpleName as string} style={{\n                                height: 'var(--chart-title-coin-size)',\n                                width: 'var(--chart-title-coin-size)'\n                            }}\n                                // src={sellData?.icon}\n                                      src={'static/images/icon-default.png'}/>} </Box>\n                        {/* <Typography display={'flex'} flexDirection={'column'} marginLeft={1} component={'div'}>\n                            <Typography variant={'body1'} component={'h3'} color={'textPrimary'} title={'sell'}>\n                                <Typography component={'span'} className={'next-coin'}>\n                                    {coinAInfo?.simpleName}\n                                </Typography>\n                                <Typography component={'i'}>/</Typography>\n                                <Typography component={'span'} title={'buy'}>\n                                    {coinBInfo?.simpleName}\n                                </Typography>\n                            </Typography>\n                            <Typography variant={'body2'} component={'span'} color={'textSecondary'}>\n                                {t('labelLiquidity') + ' ' +\n                                amountDollar === undefined ? EmptyValueTag : currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(amountDollar as number)\n                                    : PriceTag.Yuan + getThousandFormattedNumbers(amountYuan as number)}\n                            </Typography>\n                        </Typography> */}\n                        {/*{isNew ? <NewTagIcon/> : undefined}*/}\n                    </Box>\n                </BoxStyled>\n                <Typography display={'flex'} flexDirection={'column'} component={'span'} justifyContent={'center'} alignItems={'center'} marginTop={7}>\n                    <Typography component={'span'} variant={'h1'} fontFamily={'Roboto'}> {APY}%\n                    </Typography>\n                    <Typography component={'span'} color={'textPrimary'} variant={'h6'} marginTop={1}\n                                style={{textTransform: 'uppercase'}}>{t('labelAPY')}</Typography>\n                </Typography>\n\n                <DividerWrapperStyled marginTop={3} marginBottom={2}>\n                    <Divider />\n                </DividerWrapperStyled>\n\n                <DetailWrapperStyled>\n                    <Typography component={'span'} color={'textSecondary'} variant={'h6'}>\n                        {t('labelMiningActiveDate')}\n                    </Typography>\n                    <Typography component={'span'} color={'textPrimary'} variant={'h6'}>\n                        {' ' + moment(duration.from).format('YYYY/MM/DD')} - {moment(duration.to).format('MM/DD')}\n                    </Typography>\n                </DetailWrapperStyled>\n\n\n                <DetailWrapperStyled>\n                    <Typography component={'span'} color={'textSecondary'} variant={'h6'}>\n                        {t('labelMiningLiquidity')}\n                    </Typography>\n                    <Typography component={'span'} color={'textPrimary'} variant={'h6'}>\n                        {t('labelLiquidity') + ' ' +\n                                amountDollar === undefined ? EmptyValueTag : currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(amountDollar as number)\n                                    : PriceTag.Yuan + getThousandFormattedNumbers(amountYuan as number)}\n                    </Typography>\n                </DetailWrapperStyled>\n\n\n                <DetailWrapperStyled>\n                    <Typography component={'span'} color={'textSecondary'} variant={'h6'}>\n                        {t('labelMiningActivityReward')}\n                    </Typography>\n                    <Typography component={'span'} color={'textPrimary'} variant={'h6'}>\n                        ${getThousandFormattedNumbers((rewardValue && Number.isFinite(rewardValue) ? rewardValue : 0) + (rewardValue2 && Number.isFinite(rewardValue2) ? rewardValue2 : 0))}\n                    </Typography>\n                </DetailWrapperStyled>\n\n\n                <DetailWrapperStyled>\n                    <Typography component={'span'} color={'textSecondary'} variant={'h6'}>\n                        {t('labelMiningMyShare')}\n                    </Typography>\n                    <Typography component={'span'} color={'textPrimary'} variant={'h6'}>\n                        $300\n                    </Typography>\n                </DetailWrapperStyled>\n\n\n                <DetailWrapperStyled>\n                    <Typography component={'span'} color={'textSecondary'} variant={'h6'}>\n                        {t('labelMiningMyReward')}\n                    </Typography>\n                    <Typography component={'span'} color={'textPrimary'} variant={'h6'}>\n                        {myRewards === 0\n                            ? EmptyValueTag\n                            : getThousandFormattedNumbers(myRewards, 6)}\n                        {' ' + rewardToken?.simpleName}\n                    </Typography>\n                </DetailWrapperStyled>\n\n\n                {/* <BoxBg display={'flex'} flexDirection={'column'} alignItems={'stretch'} marginTop={2} padding={1}>\n                    <Box display={'flex'} flexDirection={'row'} justifyContent={'space-between'}>\n                        <Typography display={'flex'} flexDirection={'column'} component={'div'}>\n                            <Typography variant={'body2'} component={'h5'} color={'textSecondary'}>\n                                {t('labelReward')}\n                            </Typography>\n                            <Typography variant={'body1'} component={'span'} color={'textPrimary'}>\n                                {getThousandFormattedNumbers(totalRewards, 2)}\n                                {' ' + rewardToken?.simpleName}\n                            </Typography>\n                        </Typography>\n                        <Typography display={'flex'} flexDirection={'column'} alignItems={'flex-end'} component={'div'}>\n                            <Typography variant={'body2'} component={'h5'} color={'textSecondary'}>\n                                {t('labelMyReward')}\n                            </Typography>\n                            <Typography variant={'body1'} component={'span'} color={'textPrimary'}>\n                                {myRewards==0?EmptyValueTag:getThousandFormattedNumbers(myRewards, 6)}\n                                {' ' + rewardToken?.simpleName}\n                            </Typography>\n                        </Typography>\n                    </Box>\n                    <Typography alignSelf={'flex-start'} variant={'body2'} color={'textSecondary'} component=\"span\"\n                                marginTop={1}>\n                        {t('labelDate')}:\n                        {' ' + moment(duration.from).format('L')} - {moment(duration.to).format('L')}\n                    </Typography>\n                </BoxBg> */}\n            </CardContent>\n            <CardActions>\n                <Button fullWidth variant={'contained'} size={'medium'} disabled={!!isPass}\n                        color={'primary'}\n                        onClick={handleClick}>{t(isPass ? 'labelEndLiquidityBtn' : 'labelAddLiquidityBtn')}</Button>\n            </CardActions>\n        </Card>\n    }))) as <T>(props: AmmCardProps<T> & React.RefAttributes<any>) => JSX.Element;\n","import { Snackbar, Alert, } from '@material-ui/core'\nimport { useCallback } from 'react'\n\nexport interface ToastProps {\n    open: boolean\n    severity?: 'success' | 'error' | 'warning' | 'info'\n    alertText: string\n    autoHideDuration?: number\n    setOpen: (open: boolean) => void\n}\n\nexport const Toast = ({ open, setOpen, severity, alertText, autoHideDuration }: ToastProps) => {\n    \n    if (severity === undefined) {\n        severity = 'success'\n    }\n\n    if (autoHideDuration === undefined) {\n        autoHideDuration = 2000\n    }\n\n    const onClose = useCallback(() => {\n        setOpen(false)\n    }, [setOpen])\n\n    return (\n        <Snackbar open={open} autoHideDuration={autoHideDuration} onClose={onClose}>\n            <Alert onClose={onClose} severity={severity}>\n                {alertText}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import { Box, Typography } from '@material-ui/core';\nimport { Button, ModalCloseButton } from '@loopring-web/component-lib';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst StyledBox= styled(Box)`\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  background: var(--color-pop-bg);\n  //text-align: center;\n  .close-button{\n    right: ${({theme}) => theme.unit * 3}px;\n    top:50%;\n    transform: translateY(-50%);\n    margin-top:0;\n  }\n` as typeof Box;\nexport interface PopperProps {\n  isShow: boolean\n  title?: string\n  content: string\n  btnTxt: string\n  clickToConfirm? : () => void\n}\nexport const BottomRule = ({ isShow, title, content, btnTxt, clickToConfirm }: PopperProps) => {\n  const [_isShow,setIsShow] = React.useState(isShow)\n  const trans = useTranslation();\n  return _isShow ? <StyledBox height={80} width={'100%'} flex={1} display={'flex'} alignItems={'center'} justifyContent={'center'} flexDirection={'row'} position={'fixed'}>\n    {title ? <Typography className={'title'}>{title}</Typography> : <></>}\n    <Typography className={'content'} color={'textSecondary'} variant={'body1'} paddingX={3}>{content}</Typography>\n    <Button variant={'contained'} size={'small'} onClick={() => {\n      if (clickToConfirm) {\n        clickToConfirm()\n        setIsShow(false)\n      }\n    }}> {btnTxt} </Button>\n    <ModalCloseButton  onClose={()=>setIsShow(false)} tReady={true}  {...trans}/>\n  </StyledBox> : <></>;\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport enUS from './en_US'\nimport zhCN from './zh_CN'\n// import { localStore } from '../storage';\n// the translations\n// (tip move them in a JSON file and import them)\nexport enum LanguageType {\n    en_US = 'en_US',\n    zh_CN = 'zh_CN',\n}\n\nexport type LanguageKeys = keyof typeof LanguageType\n\nexport const resources = {\n    en_US: {...enUS},\n    zh_CN: {...zhCN},\n};\n\ni18n.use(initReactI18next).init({\n    resources,\n    ns: ['common', 'layout', 'tables', 'error'],\n    defaultNS: 'common',\n    lng: LanguageType.en_US,\n    load: 'currentOnly',\n    fallbackLng: LanguageType.en_US,\n    supportedLngs: [LanguageType.en_US, LanguageType.zh_CN],\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n        escapeValue: false // react already safes from xss\n    },\n    // debug:true,\n    react: {\n        bindI18n: 'languageChanged',\n        // bindI18nStore: '',\n        transEmptyNodeValue: '',\n        transSupportBasicHtmlNodes: true,\n        transKeepBasicHtmlNodesFor: ['br', 'strong', 'i'],\n        useSuspense: true,\n    }\n});\n// i18n.languages = [LanguageType.en_US,LanguageType.zh_CN];\nexport default i18n;","import common from './common';\nimport layout from './layout';\nimport tables from './tables';\nimport error from './error';\n\nexport default {\n    common,\n    layout,\n    tables,\n    error,\n}","export default {\n    labelError:'Error',\n    tokenEnter: 'Enter Token',\n    tokenEnterPaymentToken: 'Sell Token',\n    tokenMax: 'Max',\n    tokenHave: 'My wallet',\n    tokenEnterReceiveToken: 'Buy Token',\n    tokenSelectToken: 'Select Token',\n    tokenExchange: 'exchange',\n    tokenNotEnough: 'Not enough {{belong}} perform a deposit',\n    tokenSearchCoin: 'Search Coin',\n    swapTolerance: 'Slippage Tolerance',\n    swapPriceImpact: 'Price Impact',\n    swapMinReceive: 'Minimum Received',\n    swapFee: 'Fee',\n    swapBtn: 'swap',\n    goBack: 'go back',\n    resetTitle: 'Reset Layer-2 Keypair',\n    restLabelEnterToken: 'Select Reset cause token',\n    resetDescription: 'Create a new signing key for layer-2 authentication (no backup needed). This will <1>cancel all your pending orders</1>.',\n    resetFee: 'Fee {{count}} GAS ≈ ${{price}}',\n    resetLabelBtn: 'Reset',\n    depositTitle: 'Deposit',\n    depositTitleAndActive: 'Deposit & Activate Layer2',\n    depositLabelEnterToken: 'Enter Deposit token',\n    depositDescription: 'Once your deposit is <1>confirmed on Ethereum</1>, it will be added to your balance within <3>2 minutes</3>.',\n    depositAndActiveDescription: 'Make a deposit to activate your Loopring layer-2 account. Once your deposit is <1>confirmed on Ethereum</1>, it will be added to your balance within <3>2 minutes</3>.',\n    depositLabelBtn: 'Deposit',\n    depositLabelLinkRecent: 'Recent deposits history',\n    depositLabelRefer:'Please provide referral address, account id or ENS. (Option)',\n    depositLabelPlaceholder:'address, account id or ENS',\n    withdrawTitle: 'Withdraw',\n    withdrawLabelEnterToken: 'Enter withdraw token',\n    withdrawDescription: 'Your withdrawal will be processed in the next batch, which usually takes <1>30 minutes to 2 hours</1>. (There will be <3>a large delay</3> if the Ethereum gas price <5>exceeds 500 GWei</5>.）',\n    withdrawLabelBtn: 'Withdraw',\n    withdrawLabelAddress: 'Withdraw address',\n    withdrawLabelAddressInput: 'Please input the address',\n    withdrawLabelFee: 'Select payment token',\n    withdrawTypeLabelFast: 'Fast',\n    withdrawTypeLabelStandard: 'Standard',\n    withdrawLabelLinkRecent: 'Recent withdraws history',\n    transferTitle: 'Transfer',\n    transferLabelEnterToken: 'Enter transfer token',\n    transferDescription: 'Transfer to any valid Ethereum addresses instantly. Please <1>make sure</1> the recipient address <3>accepts Loopring layer-2 </3> payments before you proceed.',\n    transferLabelBtn: 'Transfer',\n    transferLabelAddress: 'Transfer address',\n    transferLabelAddressInput: 'Please input the address',\n    transferLabelFee: 'Select payment token',\n    transferLabelLinkRecent: 'Recent transfers history',\n    labelConnectWallet: 'Connect wallet',\n    labelCustomer: 'Custom',\n    labelChange24h: '{{timeUnit}} Change',\n    labelDepth: 'Depth',\n    labelTrend: 'Price',\n    label1W: 'W1',\n    label1H: 'H1',\n    label1D: 'D1',\n    labelCopyAddress: 'Copy',\n    labelDisconnect: 'Disconnect',\n    labelLockLayer2: 'Lock',\n    labelUnLockLayer2: 'Unlock',\n    labelActiveLayer2: 'Active l2',\n    labelSwitchAccount: 'Switch',\n    labelViewEth: 'View on Etherscan',\n    labelQRCode: 'View QR Code',\n    labelShowAccountInfo: 'Show account information',\n    labelAssetTitle: 'Total Assets ( Layer 2 Account)',\n    labelShowAccount: 'Show or Hide Assets',\n    labelBtnDeposit: 'Deposit',\n    labelBtnTransfer: 'Transfer',\n    labelBtnWithdraw: 'Withdraw',\n    labelLevel: 'Level',\n    labelOrderbook: 'Order Book',\n    labelDeposit: 'Deposit',\n    labelWithdraw: 'WidthDraw',\n    labelSetPublicKey: 'Set EdDSA Public Key',\n    labelTitleSecurity: 'Security',\n    labelTitleResetL2Keypair: 'Reset Layer-2 Keypair',\n    labelBtnReset: 'Reset',\n    labelHadChangPassword: 'You changed your password {{passDay}} ago',\n    labelTitleForceWithdraw: 'Force Withdraw',\n    descriptionForceWithdraw: 'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnForceWithdraw: 'Force Withdraw',\n    labelTitleExportAccount: 'Export Account',\n    descriptionExportAccount: 'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnExportAccount: 'Export Account',\n    labelTitlePreferences: 'Preferences',\n    labelTitleLayout: 'Custom Setting',\n    whichColorIsUp: '<0>{{up}} up</0> and <2>{{down}} down</2> ',\n    labelTradeFeeLevel: 'Your Trading Fee Level:',\n    labelLanguage: 'Language',\n    labelCurrency: 'Currency',\n    currencySetting: 'Currency setting',\n    labelColors: 'Colors',\n    labelTheme: 'Dark Modal',\n    labelthemeLight: 'light',\n    labelthemeDark: 'dark',\n    labelgreen: 'green',\n    labelred: 'red',\n    langZH: 'Chinese',\n    langEN: 'English',\n    labelUSDollar: 'US Dollar',\n    labelCNYYuan: 'CNY Yuan',\n    labelMaker: 'Maker',\n    labelTaker: 'Taker',\n    labelAssetsTitle: 'Assets',\n    labelVolume: 'volume',\n    labelLiquidityDeposit: 'Add',\n    labelLiquidityWithdraw: 'Remove',\n    labelAvailable: 'Available',\n    labelTokenAmount: 'Amount',\n    labelRemoveLiquidityBtn: 'Remove Liquidity',\n    labelAddLiquidityBtn: 'Add Liquidity',\n    labelEndLiquidityBtn: 'Ended',\n    labelTradePanelHideOtherPairs: 'Hide other pairs',\n    labelLPTokens: 'LP Tokens',\n    labelTrade: 'Trade',\n    labelAmmList: 'Amm List',\n    labelMyPoolShare: 'My Pool Share',\n    labelFee: 'Fee',\n    labelLPTotal: 'Total ',\n    labelLiquidity: 'Liquidity',\n    labelReward: 'Reward',\n    labelMyReward: 'My Reward',\n    labelDate: 'Date',\n    labelBack: 'Back',\n    labelAPY: 'APY',\n    label24Volume: 'Volume 24h',\n    labelTVL: 'TVL',\n    labelAmmTotalToken: 'Tokens in AMM',\n    labelNoActiveEvent: 'No event',\n    labelNew: 'New',\n    labelAccount: 'Account',\n    labelAll: 'All',\n    labelMe: 'Me',\n    labelMyTrade: 'My Trades',\n    labelRecent: 'Recent',\n    labelMyAmm: 'My AMM Liquidity',\n    labelMyAmmRecord: 'My AMM Record',\n    labelCurrentActivities: 'Current Activities',\n    labelPastActivities: 'Past Activities',\n    labelTotalPositionValue: 'Total Position Value',\n    labelFeeRewards: 'Fee Rewards',\n    labelMiningRewards: 'Mining Rewards',\n    labelLiquidityValue: 'Liquidity Value',\n    labelCopyAddClip: ' Address Copied to Clipboard!',\n    labelPleaseInputWalletAddress: 'Please Input Address',\n    labelEmptyDefault: 'Empty content',\n    labelUnlockAccount:'Unlock Account',\n    labelAssetsDistribution: 'Assets Distribution',\n    labelTotalAssets: 'Total Assets',\n    labelTxnPageTitle: 'Transactions',\n    labelTradePageTitle: 'Trades',\n    labelAmmPageTitle: 'AMM Records',\n    labelSwapSuccess: 'Swap sucessfully!',\n    labelSwapFailed: 'Swap failed!',\n    labelJoinAmmSuccess: 'Join AmmPool sucessfully!',\n    labelJoinAmmFailed: 'Join AmmPool failed!',\n    labelExitAmmSuccess: 'Exit AmmPool sucessfully!',\n    labelExitAmmFailed: 'Exit AmmPool failed!',\n    labelConnectBy: 'Connected with <1>{{connectBy}}</1>',\n    labelWrongNetwork: 'Wrong network',\n    labelActivatedAccountDeposit:'Apply Layer2 wallet, Please deposit to Activated account',\n    labelProcessing:'In processing',\n    labelMetaMaskProcessing:'Connect Wallet by MetaMask',\n    labelMetaMaskProcessDescribe:'Please click approve button on MetaMask popup window. When MetaMask dialog is dismiss, please manually click <1></1> on your browser toolbar.',\n    labelWalletConnectProcessing:'Connect Wallet by WalletConnect',\n    labelWalletConnectProcessDescribe:'Please wait WalletConnect provider confirm processing',\n    labelWalletConnectQRCode:'Please scan the QR code with a WalletConnect compatible application',\n    labelSuccessConnect:'Success Connect by {{providerName}}',\n    labelSuccessConnectDescribe:'Congratulation, Success Connected!',\n    labelCopyClipBoard:'Copy to clipboard',\n    labelRejectOrError:'User reject or error catch, please retry ',\n    labelWalletConnectProcessDescribe2:'Please click approve on your device.',\n    labelUnlockProcessing:\"Unlocking Layer2\",\n    labelDepositing:'Depositing',\n    labelDepositingProcessing:'Depositing, about {{count}} minutes remaining',\n    labelFailedConnect:'Connect Failed',\n    labelFailedDeposit:'Deposit Failed',\n    labelDepositApproveProcess:'Waiting approve Deposit required',\n    labelTokenAccess:'Waiting approve {{symbol}} trade access',\n    labelFailedTokenAccess:'Failed approve {{symbol}} trade access',\n    labelSuccessUnlock:'Success Unlock',\n    labelDepositApproveSuccess:'Congratulation deposit done, please click button to active your account.',\n    labelActivateAccount:'Activate Account',\n    labelClose: 'Close',\n    labelRetry:'Retry',\n    labelQuotePageFavourite: 'Favourite',\n    labelQuotePageAll: 'All',\n    labelQuotePageTradeRanking: 'Trade Ranking',\n    labelFailedUnlock: 'Unlock Failed',\n    labelFailedUpdateAcc: 'Update Account Failed',\n    labelCreateLayer2Title: 'Create Layer2 Account',\n    labelCancel:'Cancel',\n    describeTitleNoAccount:'Make a deposit, then start to use your loopring account.',\n    describeTitleOpenAccounting:'Your deposit have been on the etherscan. Please wait...',\n    describeTitleOnErrorNetwork:'You current on a network not support by Loopring. Please change network via {{connectName}}.',\n    describeTitleConnectToWallet:'Connect wallet to start',\n    describeTitleLocked:'Unlock your account to check your asset.',\n    labelLiquidityPageTitle: 'AMM Pools',\n    labelFilter: 'Search',\n    labelMiningPageTitle: 'AMM Mining',\n    labelMiningActiveDate: 'Active Date',\n    labelMiningLiquidity: 'Liquidity',\n    labelMiningActivityReward: 'Activity Reward',\n    labelMiningMyShare: 'My Share',\n    labelMiningMyReward: 'My Reward',\n    labelCookiesAgree: 'Agree',\n    labelLimitMin:'Minimum is {{arg}}',\n    labelAgreeLoopringTxt: 'Allow Loopring to use Cookies.',\n    labelLayer2HistoryTransactions: 'Transactions',\n    labelLayer2HistoryTrades: 'Trades',\n    labelLayer2HistoryAmmRecords: 'AMM Records',\n}\n","export default {\n    labelMarkets: 'markets',\n    labelTrade: 'trade',\n    labelLiquidity: 'liquidity',\n    labelMining: 'mining',\n    labelLayer2: 'layer2',\n    loopringDomain: 'Exchange Loopring',\n    labelClassic: 'classic',\n    labelClassicDescription: 'The easiest to trade',\n    labelAdvanced: 'advanced',\n    labelAdvancedDescription: 'Full access to all trading tools',\n    labelDownloadApp: 'Download Loopring Wallet Mobile Application',\n    labelDownloadAppTitle: 'Download Loopring Wallet',\n    labelDownloadBtn: 'Go to app store',\n    labelNotification: 'Notification Information',\n    themeSetting: 'theme setting',\n    languageSetting: 'Language setting',\n    labelConnectWallet: 'Connect Wallet',\n    notificationApprove: 'approving',\n    notificationPending: 'pending',\n    labelMyTrades: 'my trades',\n    labelRecentTrades: 'Recent Trades',\n    // layer2 submenu\n    labelAssets: 'assets',\n    labelTransactions: 'transactions',\n    labelTrades: 'trades',\n    labelHistory: 'History',\n    labelOrder: 'Order',\n    labelAmmRecords: 'Amm records',\n    labelAmmRecordsDes: '(Join & Exits)',\n    rewards: 'rewards',\n    labelOrders: 'orders',\n    selectLanguage: 'select language',\n    labelPools: 'Pools',\n    labelAmmMining: 'AMM Mining',\n    labelMyLiquidity: 'My Liquidity',\n    labelOrderBookMining: 'Orderbook Mining ',\n    labelMakerRebates: 'Maker Rebates',\n    labelSetting: 'Setting',\n    titleLoopring:'Loopring',\n    labelLoopringDescribe:'zkRollup Exchange and Payment Protocol',\n    labelWrongNetwork: 'Wrong network',\n}","export default {\n    labelStatus: 'Status',\n    labelAMM: 'AMM',\n    labelTransfer: 'Transfer',\n    labelWithdraw: 'Withdraw',\n    labelDeposit: 'Deposit',\n    labelTrade: 'Trade',\n    labelToken: 'Token',\n    labelAmount: 'Amount',\n    labelAvailable: 'Available',\n    labelLocked: 'Locked',\n    labelActions: 'Actions',\n    labelAllToken: 'All Tokens',\n    labelHideSmallBalances: 'Hide Small Balances',\n    labelHideLPToken: 'Hide LP Token',\n    labelOrderFilterAllTypes: 'All Types',\n    labelOrderFilterBuy: 'Buy',\n    labelOrderFilterSell: 'Sell',\n    labelFilterReset: 'Reset',\n    labelFilterSearch: 'Search',\n    labelOrderSide: 'Order',\n    labelOrderAmount: 'Amount',\n    labelOrderAverage: 'Average',\n    labelOrderFilledAmount: 'Filled Amount',\n    labelOrderFilledPrice: 'Filled Price',\n    labelOrderTime: 'Time',\n    labelOrderStatus: 'Status',\n    labelOrderTradingPrice: 'Trading Price',\n    labelOrderTotal: 'Total',\n    labelQuotaPair: 'Pair',\n    labelQuotaLastPrice: 'Last Price',\n    labelQuota24hChange: '24h Change',\n    labelQuota24hHigh: '24h High',\n    labelQuota24hLow: '24h Low',\n    labelQuota24Volume: '24h Volume',\n    labelQuoteAction: 'Action',\n    labelTradeFilterAllTypes: 'All Types',\n    labelTradeFilterBuy: 'Buy',\n    labelTradeFilterSell: 'Sell',\n    labelTradeSide: 'Side',\n    labelTradeAmount: 'Amount',\n    labelTradePrice: 'Price',\n    labelTradeFee: 'Fee',\n    labelTradeTime: 'Time',\n    labelTxFilterAllTypes: 'All Types',\n    labelTxFilterDeposit: 'Deposit',\n    labelTxFilterWithdraw: 'Withdraw',\n    labelTxFilterTransfer: 'Transfer',\n    labelTxFilterAllTokens: 'All Tokens',\n    labelTxSide: 'Order',\n    labelTxToken: 'Token',\n    labelTxFrom: 'From',\n    labelTxTo: 'To',\n    labelTxAmount: 'Amount',\n    labelTxFee: 'Fee',\n    labelTxMemo: 'Memo',\n    labelTxTime: 'Time',\n    labelTxTxnHash: 'Txn Hash',\n    labelTxStatus: 'Status',\n    labelVolume: 'volume',\n    labelTradePair: 'Trade Pair',\n    labelPool: 'Pool',\n    labelLiquidity: 'Liquidity',\n    label24TradeVolume: '24h Trade Volume',\n    label24Reward: '24h Reward',\n    labelAPY: 'APY',\n    labelTradePool: 'Add Liqudity',\n    labelAction: 'Action',\n    labelFilter: 'Filter',\n    labelFilterAllPairs: 'All pairs',\n    valueAddTOAMM: `Add <1></1> and <3></3>`,\n    valueSwapForAMM: `Swap <1></1> for <3></3>`,\n    valueRemoveTOAMM: `Remove <1></1> and <3></3>`,\n    labelAmmTotalValue: 'Total Value',\n    labelAmmTokenAmount: 'Token Amount',\n    labelAmmTime: 'Time',\n    labelFeeEarned: 'Fees Earned',\n    labelBuy: 'Buy',\n    labelSell: 'Sell',\n    labelAmmSide: 'Order',\n    labelAmmAmount: 'Amount',\n    labelAmmLpTokenAmount: 'LP Token Amount',\n    labelAmmFee: 'Fee',\n    labelAmmRecordTime: 'Time',\n    labelAmmExit: 'Exit',\n    labelAmmJoin: 'Join',\n    labelAmmFilterTypes: 'All Types',\n    labelAmmFilterJoin: 'Join',\n    labelAmmFilterExit: 'Exit',\n    labelPoolTableAddLiqudity: 'Add',\n    labelPoolTableRemoveLiqudity: 'Remove',\n    labelEmptyDefault: 'Content is empty',\n}\n","export default {\n    labelConnectUs: 'If you believe this is indeed a bug, please <1>contact us</1> <2/> We would appreciate your feedback',\n    errorBase: 'Oops! Something went wrong.',\n    errorLoading: 'Loading! Please wait for a while.',\n    error404: '404! page can\\'t be reached',\n}","import common from './common';\nimport layout from './layout';\nimport tables from './tables';\nimport error from './error';\n\nexport default {\n    common,\n    layout,\n    tables,\n    error,\n}","export default {\n    labelError:'错误',\n    tokenEnter: '输入币种',\n    tokenEnterPaymentToken: '交易支付币种',\n    tokenMax: '最大',\n    tokenHave: '拥有',\n    tokenEnterReceiveToken: '交易获取币种',\n    tokenSelectToken: '选择币种',\n    tokenExchange: '转换',\n    tokenNotEnough: '{{belong}}余额不足无法交易',\n    tokenSearchCoin: '搜索交易币种',\n    swapTolerance: '划点范围',\n    swapPriceImpact: '价格区间',\n    swapMinReceive: '最小获得数量',\n    swapFee: '手续费用',\n    swapBtn: '兑换',\n    goBack: '返回',\n    resetTitle: '重置二层秘钥',\n    restLabelEnterToken: '请选择消耗代币',\n    resetDescription: '创建一个新的二层身份验证签名密钥（无需备份），该操作将会<1>取消您的所有待定指令</1>。',\n    resetFee: '{{count}} GAS ≈ ${{price}} 费用',\n    resetLabelBtn: '重置',\n    depositTitle: '充值',\n    depositTitleAndActive: '充值并激活二层账号',\n    depositLabelEnterToken: '选择充值代币',\n    depositDescription: '您的充值将会在以太坊<1>确认</1>后<3>两分钟</3>内到账。',\n    depositAndActiveDescription: '完成一次充值来激活您的路印二层账号。您的充值将会在以太坊<1>确认</1>后<3>两分钟</3>内到账。',\n    depositLabelBtn: '充值',\n    depositLabelLinkRecent: '最近充值记入',\n    depositLabelRefer:'请输入推荐您的ENS，地址，或者账号ID。(选填)',\n    depositLabelPlaceholder:'以太坊地址， 账号ID或ENS',\n    withdrawTitle: '提现',\n    withdrawLabelEnterToken: '选择提现代币',\n    withdrawDescription: '提现操作会被提交到以太坊的下一个区块，一般会在<1>30分钟到2小时</1>内到账。（如果以太坊的GAS价格<5>超过500GWei</5>的话，可能会存在<3>长时间的延迟</3>）',\n    withdrawLabelBtn: '提现',\n    withdrawLabelAddress: '提现到该账号地址',\n    withdrawLabelAddressInput: '输入地址',\n    withdrawLabelFee: '请选付费代币',\n    withdrawTypeLabelFast: '快速',\n    withdrawTypeLabelStandard: '普通',\n    withdrawLabelLinkRecent: '最近提现记入',\n    transferTitle: '转账',\n    transferLabelEnterToken: '选择转账代币',\n    transferDescription: '迅速转账到任何有效的以太坊地址。转账前请务必<1>确认</1>该地址可以<3>接受路印的二层<3>转账。',\n    transferLabelBtn: '转账',\n    transferLabelAddress: '转账到该账号地址',\n    transferLabelAddressInput: '输入地址',\n    transferLabelFee: '请选付费代币',\n    transferLabelLinkRecent: '最近转账记入',\n    labelConnectWallet: '连接钱包',\n    labelCustomer: '自定义',\n    labelChange24h: '{{timeUnit}} 涨幅',\n    labelDepth: '深度',\n    labelTrend: '价格',\n    label1W: '1周',\n    label1H: '1小时',\n    label1D: '1日',\n    labelCopyAddress: '复制地址',\n    labelDisconnect: '断开钱包',\n    labelLockLayer2: '锁定钱包',\n    labelUnLockLayer2: '解锁钱包',\n    labelActiveLayer2: '激活二层',\n    labelSwitchAccount: '切换钱包',\n    labelViewEth: '跳转至以太网查看',\n    labelQRCode: '查看二维码',\n    labelShowAccountInfo: '查看,设置账号信息',\n    labelAssetTitle: '资产总量 ( 路印二层 )',\n    labelShowAccount: '显示或隐藏资产总量',\n    labelBtnDeposit: '充值',\n    labelBtnTransfer: '转账',\n    labelBtnWithdraw: '提现',\n    labelLevel: 'VIP等级',\n    labelOrderbook: '订单本',\n    labelDeposit: '充值',\n    labelWithdraw: '提现',\n    labelSetPublicKey: '设置 EdDSA 公钥',\n    labelTitleSecurity: '安全设置',\n    labelTitleResetL2Keypair: '重置 二层密钥',\n    labelBtnReset: '重置',\n    labelHadChangPassword: '您在{{passDay}}修改了密码',\n    labelTitleForceWithdraw: '强制提现',\n    descriptionForceWithdraw: 'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnForceWithdraw: '强制提现',\n    labelTitleExportAccount: '导出账号',\n    descriptionExportAccount: 'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnExportAccount: '导出账号',\n    labelTitlePreferences: '设置选项',\n    labelTitleLayout: '个性化设置',\n    whichColorIsUp: '<0>{{up}} 上涨</0> -- <2>{{down}} 下跌</2>',\n    labelTradeFeeLevel: '您的交易等级评定:',\n    labelLanguage: '显示语言',\n    labelCurrency: '结算货币',\n    currencySetting: '货币设置',\n    labelColors: '选择颜色',\n    labelTheme: '暗黑模式',\n    labelthemeLight: '明亮模式',\n    labelthemeDark: '暗黑模式',\n    labelgreen: '绿色',\n    labelred: '红色',\n    langZH: '中文',\n    langEN: '英语',\n    labelUSDollar: '美金结算',\n    labelCNYYuan: '人民币结算',\n    labelMaker: '做市商返佣',\n    labelTaker: '吃单费率',\n    labelAssetsTitle: '资产清单',\n    labelVolume: '总量',\n    labelLiquidityDeposit: '放入',\n    labelLiquidityWithdraw: '移出',\n    labelAvailable: '可用额度',\n    labelTokenAmount: '数量',\n    labelRemoveLiquidityBtn: '立刻移出',\n    labelAddLiquidityBtn: '立刻放入',\n    labelEndLiquidityBtn: '活动已结束',\n    labelTradePanelHideOtherPairs: '隐藏其他交易对',\n    labelLPTokens: '权益代币',\n    labelTrade: '兑换',\n    labelAmmList: 'Amm 列表',\n    labelMyPoolShare: '我的份额',\n    labelFee: '费用',\n    labelLPTotal: '资金池中',\n    labelLiquidity: '流动性矿池',\n    labelReward: '奖励池',\n    labelMyReward: '我的奖励',\n    labelDate: '日期',\n    labelBack: '返回',\n    labelAPY: 'APY',\n    label24Volume: '24h 交易量',\n    labelTVL: 'TVL',\n    labelAmmTotalToken: '池子中的代币',\n    labelNoActiveEvent: '暂时没有活动',\n    labelNew: '新的',\n    labelAccount: '账户信息',\n    labelAll: '所有',\n    labelMe: '我的',\n    labelMyTrade: '我的交易',\n    labelRecent: '最近交易',\n    labelMyAmm: '我的Amm',\n    labelMyAmmRecord: '我的Amm记录',\n    labelCurrentActivities: '当前活动',\n    labelPastActivities: '往期活动',\n    labelTotalPositionValue: '我的流动性总价值',\n    labelFeeRewards: '获得费用',\n    labelMiningRewards: '活动奖励',\n    labelLiquidityValue: '流动性价值',\n    labelCopyAddClip: '复制黏贴到剪切板！',\n    labelPleaseInputWalletAddress: '请输入地址',\n    labelEmptyDefault: '内容空空的～',\n    labelUnlockAccount:'解锁账号',\n    labelAssetsDistribution: '资产分布',\n    labelTotalAssets: '总资产',\n    labelTxnPageTitle: '充值提现',\n    labelTradePageTitle: '交易记录',\n    labelAmmPageTitle: 'AMM 出入金记录',\n    labelSwapSuccess: '兑换成功！',\n    labelSwapFailed: '兑换失败！',\n    labelJoinAmmSuccess: '加入流动性池成功！',\n    labelJoinAmmFailed: '加入流动性池失败！',\n    labelExitAmmSuccess: '退出流动性池成功！',\n    labelExitAmmFailed: '退出流动性池失败！',\n    labelConnectBy: '当前连接 <1>{{connectBy}}</1>',\n    labelWrongNetwork: '未识别网络',\n    labelActivatedAccountDeposit:'首次开通二层钱包需充值并激活',\n    labelProcessing:'请等待片刻',\n    labelMetaMaskProcessing:'MetaMask正在连接路印钱包',\n    labelMetaMaskProcessDescribe:'请在MetaMask的弹出窗口内点击确定按钮。 如果MetaMask插件没有主动弹出窗口, 请在浏览器工具栏中点击 <1></1> 图标。',\n    labelWalletConnectProcessing:'WalletConnect正在连接路印钱包',\n    labelWalletConnectProcessDescribe:'正在等待WalletConnect确认相关信息，请耐心等待片刻。',\n    labelWalletConnectQRCode:'请用移动端路印钱包（或支持WalletConnect的应用）扫描二维码',\n    labelSuccessConnect:'使用{{providerName}}连接成功',\n    labelSuccessConnectDescribe:'恭喜，连接成功',\n    labelCopyClipBoard:'复制到剪切板',\n    labelRejectOrError:'用户拒绝或错误发生, 请<1>点击重试</1>。',\n    labelWalletConnectProcessDescribe2:'请在你的移动应用上点击确认按钮。',\n    labelUnlockProcessing:\"正在解锁二层账号\",\n    labelDepositing:'正在充值',\n    labelDepositingProcessing:'正在充值，预计等待{{count}}分钟',\n    labelFailedConnect:'连接失败',\n    labelFailedDeposit: '充值失败',\n    labelFailedUnLocK: '解锁二层失败',\n    labelDepositApproveProcess:'等待用户确认充值',\n    labelTokenAccess:'等待钱包确认{{symbol}}授权',\n    labelFailedTokenAccess:'{{symbol}}授权失败',\n    labelSuccessUnlock:'解锁成功',\n    labelDepositApproveSuccess:'恭喜充值成功, 最后一步点击开通账户！',\n    labelActivateAccount:'激活账户',\n    labelClose: '关闭',\n    labelRetry:'重试',\n    labelQuotePageFavourite: '自选',\n    labelQuotePageAll: '全部',\n    labelQuotePageTradeRanking: '交易竞赛',\n    labelFailedUnlock: '解锁失败',\n    labelFailedUpdateAcc: '更新账号失败',\n    labelCreateLayer2Title: '创建二层账号',\n    labelCancel:'取消',\n    describeTitleNoAccount:'该账户还未开通路印二层，点击充值开通钱包。',\n    describeTitleOpenAccounting:'您的充值已提交以太坊，等待以太坊确认。。。',\n    describeTitleOnErrorNetwork:'您登入的网络，路印暂不支持，请在{{connectName}}切换网络',\n    describeTitleConnectToWallet:'点击按钮，连接路印钱包，开始二层之旅',\n    describeTitleLocked:'已连接您的钱包，点击解锁后查看账户信息',\n    labelLiquidityPageTitle: 'AMM 资金池',\n    labelFilter: '搜索',\n    labelMiningPageTitle: 'AMM 流动性挖矿',\n    labelMiningActiveDate: '奖励时间',\n    labelMiningLiquidity: '流动性',\n    labelMiningActivityReward: '活动奖励',\n    labelMiningMyShare: '我的占比资金',\n    labelMiningMyReward: '我的奖励',\n    labelCookiesAgree: '同意',\n    labelLimitMin:'最小下单量{{arg}}',\n    labelAgreeLoopringTxt: '允许路印使用Cookies。',\n    labelLayer2HistoryTransactions: '充值提现',\n    labelLayer2HistoryTrades: '交易记录',\n    labelLayer2HistoryAmmRecords: 'AMM 记录',\n}\n","export default {\n    labelMarkets: '市场',\n    labelTrade: '交易',\n    labelLiquidity: '流动矿池',\n    labelMining: '流动性挖矿',\n    labelLayer2: '二层账号',\n    loopringDomain: '路印交易所',\n    labelClassic: '简洁版',\n    labelClassicDescription: '快捷交易平台',\n    labelAdvanced: '专业版',\n    labelAdvancedDescription: '提供更丰富的交易模式',\n    labelDownloadApp: '下载手机客户端',\n    labelDownloadAppTitle: '下载钱包',\n    labelDownloadBtn: '转去 APP 商店',\n    labelNotification: '消息提醒',\n    themeSetting: '主题模版',\n    languageSetting: '语言设置',\n    labelConnectWallet: '连接钱包',\n    notificationApprove: '验证中',\n    notificationPending: '进行中',\n    labelMyTrades: '交易历史',\n    labelRecentTrades: '最近交易',\n    // layer2 submenu\n    labelAssets: '资产信息',\n    labelTransactions: '充值提现',\n    labelTrades: '交易记录',\n    labelHistory: '交易历史',\n    labelOrder: '挂单记录',\n    labelAmmRecords: 'Amm记录',\n    labelAmmRecordsDes: '(出金和入金)',\n    rewards: '推荐奖励',\n    labelOrders: '挂单记录',\n    selectLanguage: '语言设置',\n    labelPools: '流动性挖矿池',\n    labelAmmMining: '交易大赛',\n    labelMyLiquidity: '我的流动性',\n    labelOrderBookMining: '订单本挖矿排名',\n    labelMakerRebates: '做市收益',\n    labelSetting: '高级设置',\n    titleLoopring:'路印协议',\n    labelLoopringDescribe:'零知卷叠交易与支付协议',\n    labelWrongNetwork: '未识别网络',\n}\n\n","export default {\n    labelStatus: '状态',\n    labelAMM: 'AMM',\n    labelTransfer: '转账',\n    labelWithdraw: '提现',\n    labelDeposit: '充值',\n    labelTrade: '交易',\n    labelToken: '币种',\n    labelAmount: '总量',\n    labelAvailable: '可用额度',\n    labelLocked: '冻结',\n    labelActions: '操作',\n    labelAllToken: '所有币种',\n    labelHideSmallBalances: '隐藏小额资产',\n    labelHideLPToken: '隐藏流动性凭证',\n    labelOrderFilterAllTypes: '所有类型',\n    labelOrderFilterBuy: '买入',\n    labelOrderFilterSell: '卖出',\n    labelFilterReset: '重置',\n    labelFilterSearch: '搜索',\n    labelOrderSide: '卖/买',\n    labelOrderAmount: '订单总量',\n    labelOrderAverage: '均值',\n    labelOrderFilledAmount: '成交部分',\n    labelOrderFilledPrice: '成交价格',\n    labelOrderTime: '成交时间',\n    labelOrderStatus: '状态',\n    labelOrderTradingPrice: '交易价格',\n    labelOrderTotal: '全部数量',\n    labelQuotaPair: '交易对',\n    labelQuotaLastPrice: '最新价',\n    labelQuota24hChange: '24h 涨跌',\n    labelQuota24hHigh: '24h 最高',\n    labelQuota24hLow: '24h 最低',\n    labelQuoteAction: '操作',\n    labelQuota24Volume: '24h 交易量',\n    labelTradeFilterAllTypes: '所有类型',\n    labelTradeFilterBuy: '买入',\n    labelTradeFilterSell: '卖出',\n    labelTradeSide: '兑换',\n    labelTradeAmount: '交易总额',\n    labelTradePrice: '价格',\n    labelTradeFee: '费用',\n    labelTradeTime: '交易时间',\n    labelTxFilterAllTypes: '所有类型',\n    labelTxFilterDeposit: '充值',\n    labelTxFilterWithdraw: '提现',\n    labelTxFilterTransfer: '转账',\n    labelTxFilterAllTokens: '所有代币',\n    labelTxSide: '交易类型',\n    labelTxToken: '币种',\n    labelTxFrom: '起始',\n    labelTxTo: '完结',\n    labelTxAmount: '总额',\n    labelTxFee: '费用',\n    labelTxMemo: '备注',\n    labelTxTime: '时间',\n    labelTxTxnHash: '交易哈希',\n    labelTxStatus: '状态',\n    labelVolume: '交易量',\n    labelTradePair: '交易对',\n    labelPool: '资金池',\n    labelLiquidity: '流动性',\n    label24TradeVolume: '24h 交易量',\n    label24Reward: '24h 奖励',\n    labelAPY: 'APY',\n    labelTradePool: '放入池子',\n    labelAction: '操作',\n    labelFilter: '搜索',\n    labelFilterAllPairs: '所有交易对',\n    valueAddTOAMM: `添加 <1></1> 和 <3></3>`,\n    valueSwapForAMM: `<1></1> 和 <3></3> 兑换`,\n    valueRemoveTOAMM: `移出 <1></1> 和 <3></3>`,\n    labelAmmTotalValue: '价值总和',\n    labelAmmTokenAmount: '代币数量',\n    labelAmmTime: '时间',\n    labelFeeEarned: '赚取费用',\n    labelBuy: '买',\n    labelSell: '卖',\n    labelAmmSide: '入金/出金',\n    labelAmmAmount: '交易总额',\n    labelAmmLpTokenAmount: '流动性资产价格',\n    labelAmmFee: '费用',\n    labelAmmRecordTime: '交易时间',\n    labelAmmExit: '出金',\n    labelAmmJoin: '入金',\n    labelAmmFilterTypes: '所有类型',\n    labelAmmFilterJoin: '入金',\n    labelAmmFilterExit: '出金',\n    labelPoolTableAddLiqudity: '放入',\n    labelPoolTableRemoveLiqudity: '移出',\n    labelEmptyDefault: '记录是空的',\n\n}\n","export default {\n    labelConnectUs: '这有可能时候一个错误,<2/> 如需帮助请<1>联系我们</1>~',\n    errorBase: '奥哦! 遇到了一些问题',\n    errorLoading: '不要着急, 不要着急马上就好',\n    error404: '四〇四! 这是页面不存在呢.'\n\n}","import { AvatarProps, Theme } from '@material-ui/core';\nimport { ColorBaseInterface } from './css/color-lib';\n\nexport enum ThemeType {\n    dark = 'dark',\n    light = 'light',\n}\n\nexport type ThemeKeys = keyof typeof ThemeType;\nexport type LoopringTheme = Theme & {\n    colorBase: ColorBaseInterface\n    fontDefault: { h1: string, h2: string, h3: string, h4: string, h5: string, h6: string, body1: string },\n    unit: number,\n    mode: ThemeKeys,\n    border: {\n        defaultBorder: string,\n        defaultRadius: string,\n        defaultFrame: (props: { d_W?: number, d_R?: number, c_key?: 'primary' | 'selected' | 'blur' | 'focus' | string }) => string,\n        borderConfig: (props: { d_W?: number, c_key?: 'primary' | 'selected' | 'blur' | 'focus' | string }) => string,\n    }\n}\nexport type AvatarCoinProps = AvatarProps & {\n    imgx:number\n    imgy:number\n    imgh?: number\n    imgw?: number\n    imgheight: number\n    imgwidth: number\n    size?:number\n}\n\ndeclare module '@emotion/react' {\n    export interface Theme extends LoopringTheme {\n    }\n}\n\n\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\nexport const AssetsIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C21.9939 17.5203 17.5203 21.9939 12 22ZM11 4.062C7.72604 4.47603 5.04227 6.85789 4.24231 10.0595C3.44234 13.2611 4.69036 16.6254 7.38479 18.5307C10.0792 20.436 13.6671 20.4913 16.419 18.67L16.319 18.741L16.413 18.676L16.472 18.635L16.536 18.59L16.552 18.579L16.561 18.572L11.433 13.442C11.1544 13.1585 10.9988 12.7765 11 12.379L11 4.062ZM13.829 13L18.056 17.227L18.063 17.219L18.068 17.213L18.058 17.224C19.0896 16.0335 19.744 14.5633 19.938 13L13.829 13ZM13 4.062L13 11L19.938 11C19.4815 7.37411 16.6259 4.51851 13 4.062Z\"/></SvgIcon>\n}\nexport const L2MyLiquidityIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path d=\"M5.5 8.49962L7 8.49962L7 10.4996L5.5 10.4996C4.67157 10.4996 4 11.1712 4 11.9996C4 12.8281 4.67157 13.4996 5.5 13.4996L12 13.4996L12 15.4996L5.5 15.4996C3.567 15.4996 2 13.9326 2 11.9996C2 10.0666 3.567 8.49962 5.5 8.49962Z\" />\n        <path d=\"M17 15.4996L18.5 15.4996C20.433 15.4996 22 13.9326 22 11.9996C22 10.0666 20.433 8.49962 18.5 8.49962L12 8.49962L12 10.4996L18.5 10.4996C19.3284 10.4996 20 11.1712 20 11.9996C20 12.8281 19.3284 13.4996 18.5 13.4996L17 13.4996L17 15.4996Z\" />\n        <path d=\"M8.5 18.4995L8.5 16.9995L10.5 16.9995L10.5 18.4995C10.5 19.3279 11.1716 19.9995 12 19.9995C12.8284 19.9995 13.5 19.3279 13.5 18.4995L13.5 11.9995L15.5 11.9995L15.5 18.4995C15.5 20.4325 13.933 21.9995 12 21.9995C10.067 21.9995 8.5 20.4325 8.5 18.4995Z\" />\n        <path d=\"M15.5 6.99951L15.5 5.49951C15.5 3.56651 13.933 1.99951 12 1.99951C10.067 1.99951 8.5 3.56652 8.5 5.49951L8.5 11.9995L10.5 11.9995L10.5 5.49951C10.5 4.67109 11.1716 3.99951 12 3.99951C12.8284 3.99951 13.5 4.67109 13.5 5.49951L13.5 6.99951L15.5 6.99951Z\" />\n    </SvgIcon>\n}\nexport const L2HistoryIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path\n            d=\"M18.999 22L4.99902 22C3.89445 22 2.99902 21.1046 2.99902 20L2.99902 6C2.99902 4.89543 3.89445 4 4.99902 4L6.99902 4L6.99902 2L8.99902 2L8.99902 4L14.999 4L14.999 2L16.999 2L16.999 4L18.999 4C20.1036 4 20.999 4.89543 20.999 6L20.999 20C20.999 21.1046 20.1036 22 18.999 22ZM4.99902 10L4.99902 20L18.999 20L18.999 10L4.99902 10ZM4.99902 6L4.99902 8L18.999 8L18.999 6L4.99902 6Z\"/>\n        <path d=\"M8.8521 14.0837L10.2663 15.4979L8.00357 17.7607L6.58936 16.3464L8.8521 14.0837Z\"/>\n        <path d=\"M13.9432 16.3464L12.529 17.7606L10.2663 15.4979L11.6805 14.0837L13.9432 16.3464Z\"/>\n        <path d=\"M12.529 14.9322L11.1148 16.3464L8.8521 14.0837L10.2663 12.6695L12.529 14.9322Z\"/>\n        <path d=\"M13.9432 16.3464L12.529 14.9322L14.7918 12.6695L16.206 14.0837L13.9432 16.3464Z\"/>\n        <path d=\"M16.7374 12.1382L12.2681 12.4085L16.4671 16.6075L16.7374 12.1382Z\"/>\n    </SvgIcon>\n}\nexport const RewardIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    ><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.0817 1.86863C11.4288 1.06267 12.5715 1.06267 12.9186 1.86863L14.4691 5.46905C14.6139 5.80523 14.9308 6.03545 15.2952 6.06925L19.1985 6.43127C20.0723 6.51231 20.4254 7.59912 19.7662 8.17828L16.8211 10.7655C16.5461 11.0071 16.4251 11.3796 16.5056 11.7366L17.3675 15.5608C17.381 15.6208 17.389 15.6799 17.392 15.7378C17.4128 15.7365 17.4337 15.7359 17.4548 15.7359H20.7034C21.842 15.7359 22.5654 16.9546 22.0202 17.9542L21.4008 19.0899L21.9798 19.7269C22.8558 20.6904 22.1721 22.2359 20.8699 22.2359H18.23C18.0571 22.5348 17.7339 22.7359 17.3638 22.7359H6.63652C6.26637 22.7359 5.9432 22.5348 5.7703 22.2359H3.13039C1.82818 22.2359 1.14452 20.6904 2.02048 19.7269L2.59957 19.0899L1.98009 17.9542C1.43488 16.9546 2.15834 15.7359 3.29693 15.7359H6.54557C6.56664 15.7359 6.58756 15.7365 6.60831 15.7378C6.61129 15.6799 6.61933 15.6208 6.63286 15.5608L7.49475 11.7366C7.57523 11.3796 7.45419 11.0071 7.17921 10.7655L4.23414 8.17828C3.57487 7.59912 3.928 6.51231 4.80177 6.43127L8.7051 6.06925C9.06956 6.03545 9.38643 5.80523 9.53121 5.46905L11.0817 1.86863ZM11.3681 6.2601L12.0002 4.79243L12.6322 6.2601C13.0665 7.26863 14.0171 7.95929 15.1105 8.0607L16.7017 8.20828L15.5011 9.26293C14.6762 9.98764 14.3131 11.1052 14.5545 12.1764L14.9059 13.7352L13.5318 12.9194C12.5877 12.3587 11.4126 12.3587 10.4685 12.9194L9.09447 13.7352L9.44581 12.1764C9.68724 11.1052 9.32414 9.98764 8.49918 9.26293L7.29865 8.20828L8.88981 8.0607C9.98318 7.95929 10.9338 7.26863 11.3681 6.2601ZM7.90909 16.7359H16.0912C16.0205 16.7129 15.9502 16.6814 15.8814 16.6405L12.5107 14.6391C12.196 14.4522 11.8043 14.4522 11.4896 14.6391L8.11895 16.6405C8.05008 16.6814 7.97981 16.7129 7.90909 16.7359ZM7.63651 20.7359V18.7359H16.3638V20.7359H7.63651ZM18.4548 17.7359V20.2359H19.7397L19.6815 20.1719C19.2516 19.699 19.1685 19.0057 19.4745 18.4446L19.8611 17.7359H18.4548ZM5.54557 20.2359V17.7359H4.13921L4.52578 18.4446C4.83181 19.0057 4.74874 19.699 4.31885 20.1719L4.26067 20.2359H5.54557Z\" /></SvgIcon>\n}\nexport const RedPockIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4 3C4 2.44772 4.44772 2 5 2H19C19.5523 2 20 2.44772 20 3V21C20 21.5523 19.5523 22 19 22H5C4.44772 22 4 21.5523 4 21V3ZM7.56283 4L8.94744 7H15.0524L16.437 4H7.56283ZM18 5.38612L16.6538 8.30287C16.4577 8.72785 16.0323 9 15.5643 9H8.43557C7.96751 9 7.54217 8.72785 7.34602 8.30287L6 5.38649V20H18V5.38612Z\" />\n        <path d=\"M12.8217 9.75H11.4901V10.6955C10.9551 10.7761 10.5044 10.9603 10.1533 11.2613C9.7473 11.6094 9.54106 12.0617 9.54106 12.5994C9.54106 12.9958 9.6589 13.3519 9.89651 13.6572C10.1312 13.9588 10.4727 14.1982 10.902 14.3847C11.1593 14.4977 11.5108 14.6176 11.9514 14.7449L11.9528 14.7453C12.3796 14.8659 12.6499 14.9945 12.7956 15.1168L12.7973 15.1183C12.928 15.2259 12.987 15.352 12.987 15.5142C12.987 15.6889 12.9216 15.8196 12.7762 15.9275L12.7746 15.9287C12.6314 16.0367 12.3944 16.1096 12.026 16.1096C11.6628 16.1096 11.4174 16.0225 11.2555 15.8817C11.1024 15.7456 11.013 15.547 11.013 15.2492V14.9992H9.25V15.2492C9.25 15.8656 9.45685 16.3815 9.88206 16.7711L9.88292 16.7719C10.2611 17.1151 10.7693 17.3207 11.3862 17.407V18.25H12.7126V17.4043C13.2822 17.3282 13.7567 17.1494 14.118 16.8515C14.5375 16.5086 14.75 16.0529 14.75 15.5058C14.75 15.2225 14.6974 14.9628 14.5835 14.734C14.4734 14.513 14.3174 14.3206 14.1196 14.1571C13.925 13.9935 13.691 13.8531 13.4215 13.7336C13.1544 13.6152 12.7946 13.4897 12.3467 13.3566C11.9119 13.2274 11.6344 13.0997 11.485 12.984C11.3634 12.8849 11.3041 12.7615 11.3041 12.591C11.3041 12.3832 11.3715 12.2525 11.4884 12.1614C11.6169 12.0613 11.8154 11.9955 12.1143 11.9955C12.3961 11.9955 12.5902 12.0792 12.7281 12.2246L12.7309 12.2274C12.8719 12.3715 12.9558 12.5802 12.9558 12.8854V13.1354H14.7136V12.8854C14.7136 12.2823 14.5312 11.7708 14.1504 11.3749C13.8153 11.024 13.366 10.807 12.8217 10.7095V9.75Z\" />\n    </SvgIcon>\n}\nexport const SecurityIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >    <path d=\"M20.784 4.86011L20.7837 4.8527C20.7692 4.50346 20.561 4.19153 20.244 4.04411C20.064 3.96011 15.744 2.01611 11.652 2.01611C7.56003 2.01611 3.24003 3.96011 3.04803 4.04411C2.73109 4.19153 2.52289 4.50346 2.50834 4.8527L2.50803 4.86011C2.50803 5.02811 2.36403 9.00011 3.12003 12.6601L4.72803 11.1121C4.35603 8.42411 4.34403 6.70811 4.35603 5.50811C5.59203 5.01611 8.74803 3.86411 11.652 3.86411C14.556 3.86411 17.712 5.01611 18.948 5.50811C18.96 6.88811 18.888 10.4641 18.12 13.3201C17.052 17.1121 12.852 19.2121 11.652 19.7521C10.644 19.3081 7.57203 17.7841 5.95203 15.0961L8.58003 12.2401L11.172 14.4001L15.36 9.81611L15.432 11.3761L17.112 11.2921L16.884 6.67211L12.432 6.88811L12.516 8.56811L14.052 8.49611L11.004 11.8441L8.42403 9.68411L3.72003 14.7841L4.00803 15.3601C6.12003 19.6201 11.124 21.5281 11.34 21.6121C11.5491 21.6895 11.779 21.6895 11.988 21.6121C12.252 21.5161 18.408 19.1521 19.908 13.8121C20.94 9.93611 20.796 5.06411 20.784 4.86011Z\" />\n    </SvgIcon>\n}\nexport const VipIcon =  (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    ><path d=\"M12 21L11.949 21C11.8 20.9888 11.6583 20.9311 11.544 20.835C11.5126 20.8084 11.4839 20.7789 11.458 20.747L2.16797 9.673C2.09553 9.59022 2.04438 9.49102 2.01897 9.384C2.01897 9.371 2.01297 9.358 2.00997 9.345C1.98164 9.17748 2.01733 9.00543 2.10997 8.863L2.12897 8.835L5.75897 3.7C5.77197 3.68 5.78497 3.662 5.79997 3.646C5.90615 3.51982 6.05348 3.43518 6.21597 3.407C6.24378 3.40276 6.27184 3.40042 6.29997 3.4L11.95 3L12 3L12.049 3L17.7 3.4C17.7312 3.40177 17.7623 3.40578 17.793 3.412C17.9713 3.44519 18.1297 3.54629 18.235 3.694L21.872 8.838C21.8795 8.84797 21.8865 8.85831 21.893 8.869C21.9762 8.99649 22.0139 9.14838 22 9.3C21.9957 9.33886 21.9884 9.37732 21.978 9.415C21.9506 9.51087 21.9021 9.59938 21.836 9.674L12.543 20.746C12.5275 20.7654 12.5108 20.7838 12.493 20.801C12.4346 20.8577 12.3669 20.9041 12.293 20.938C12.2323 20.9654 12.1679 20.9839 12.102 20.993C12.0682 20.9977 12.0341 21 12 21ZM7.94597 9.911L12 18.663L16.054 9.911L7.94597 9.911ZM17.586 9.911L14.824 15.874L19.824 9.911L17.586 9.911ZM4.17297 9.911L9.17297 15.874L6.41397 9.911L4.17297 9.911ZM18.168 5.994L17.908 8.545L19.97 8.545L18.168 5.994ZM12 4.869L8.87197 8.545L15.128 8.545L12 4.869ZM5.83197 5.994L4.02997 8.545L6.09197 8.545L5.83197 5.994ZM13.477 4.471L16.551 8.084L16.9 4.711L13.477 4.471ZM10.521 4.471L7.09997 4.711L7.44497 8.084L10.521 4.471Z\" />\n    </SvgIcon>\n}\n\nexport const L2OrderIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path\n            d=\"M18 2L6 2C4.89543 2 4 2.89543 4 4L4 20C4 21.1046 4.89543 22 6 22L13 22C13.0109 21.9995 13.0217 21.9975 13.032 21.994C13.0418 21.991 13.0518 21.989 13.062 21.988C13.1502 21.9823 13.2373 21.9652 13.321 21.937L13.349 21.928C13.3717 21.9203 13.3937 21.911 13.415 21.9C13.5239 21.8516 13.6232 21.7838 13.708 21.7L19.708 15.7C19.7918 15.6152 19.8596 15.5159 19.908 15.407C19.918 15.385 19.925 15.362 19.933 15.339L19.942 15.313C19.9699 15.2296 19.9864 15.1428 19.991 15.055C19.9926 15.0458 19.9949 15.0368 19.998 15.028C19.9998 15.0188 20.0004 15.0094 20.0001 15L20.0001 4C20.0001 2.89543 19.1046 2 18 2ZM6 20L6 4L18 4L18 14L13 14C12.4477 14 12 14.4477 12 15L12 20L6 20ZM14 18.586L14 16L16.586 16L14 18.586Z\"/>\n        <path\n            d=\"M9.8 14.987L8 14.987L8 13.187L12.2 8.997L14 10.797L9.8 14.987ZM14.625 10.169L12.825 8.369L14.2 7L16 8.8L14.63 10.17L14.625 10.169Z\"/>\n    </SvgIcon>\n}\n\nexport const CheckBoxIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path d=\"M17 19L7 19C5.89543 19 5 18.1046 5 17L5 7C5 5.89543 5.89543 5 7 5L17 5C18.1046 5 19 5.89543 19 7L19 17C19 18.1046 18.1046 19 17 19ZM7 7L7 17L17 17L17 7L7 7Z\" />\n    </SvgIcon>\n}\nexport const CheckedIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path d=\"M12 14L2 14C0.895431 14 8.90934e-08 13.1046 8.15838e-08 12L1.35973e-08 2C6.08772e-09 0.89543 0.89543 -6.08772e-09 2 -1.35973e-08L12 -8.15838e-08C13.1046 -8.90934e-08 14 0.89543 14 2L14 12C14 13.1046 13.1046 14 12 14ZM2 2L2 12L12 12L12 2L2 2ZM6 10.362L3.3 7.715L4.7 6.285L6 7.556L9.3 4.289L10.7 5.711L6 10.361L6 10.362Z\" />\n        <path d=\"M3.3 7.715L6 10.362L6 10.361L10.7 5.711L9.3 4.289L6 7.556L4.7 6.285L3.3 7.715Z\" />\n    </SvgIcon>\n}\n\nexport const ViewIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path d=\"M12 18.9999C10.3599 19.0203 8.7367 18.6663 7.254 17.9649C6.10469 17.4041 5.07265 16.6296 4.213 15.6829C3.30243 14.704 2.58547 13.5615 2.1 12.3159L2 11.9999L2.105 11.6839C2.59082 10.4393 3.30624 9.29713 4.214 8.31686C5.07334 7.37017 6.10504 6.59572 7.254 6.03486C8.73671 5.33345 10.3599 4.97947 12 4.99986C13.6401 4.9795 15.2633 5.33348 16.746 6.03486C17.8953 6.59559 18.9274 7.37005 19.787 8.31686C20.6993 9.29441 21.4165 10.4372 21.9 11.6839L22 11.9999L21.895 12.3159C20.3262 16.3996 16.3742 19.0692 12 18.9999ZM12 6.99986C8.59587 6.89319 5.47142 8.87495 4.117 11.9999C5.4712 15.125 8.59579 17.1068 12 16.9999C15.4041 17.1062 18.5284 15.1246 19.883 11.9999C18.5304 8.87344 15.4047 6.89094 12 6.99986ZM12 14.9999C10.5573 15.0094 9.30937 13.9972 9.02097 12.5836C8.73256 11.17 9.48427 9.74988 10.8154 9.19352C12.1465 8.63716 13.6852 9.09999 14.4885 10.2984C15.2919 11.4967 15.1354 13.0959 14.115 14.1159C13.5563 14.6811 12.7948 14.9994 12 14.9999Z\" />\n    </SvgIcon>\n}\nexport const HideIcon = (props: SvgIconProps) => {\n    return<SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path d=\"M19.97 21.385L16.614 18.029C15.1661 18.6882 13.5908 19.0204 12 19.002C10.3599 19.0223 8.73671 18.6684 7.254 17.967C6.10468 17.4062 5.07264 16.6317 4.213 15.685C3.30049 14.7068 2.5833 13.5633 2.1 12.316L2 12.002L2.105 11.686C2.82781 9.84224 4.04426 8.23312 5.621 7.03495L3 4.41395L4.413 3.00195L21.382 19.971L19.972 21.385L19.97 21.385ZM7.036 8.45095C5.75792 9.34687 4.74865 10.5747 4.117 12.002C5.47142 15.1269 8.59587 17.1086 12 17.002C13.0498 17.0106 14.0936 16.8415 15.087 16.502L13.287 14.702C12.8863 14.8984 12.4462 15.0009 12 15.002C10.3475 14.9916 9.01037 13.6545 9 12.002C9.00048 11.5547 9.10309 11.1135 9.3 10.712L7.036 8.45095ZM19.852 15.612L18.46 14.221C19.0456 13.5589 19.5256 12.8104 19.883 12.002C18.5304 8.87553 15.4047 6.89303 12 7.00195C11.753 7.00195 11.505 7.01095 11.265 7.02795L9.5 5.26095C10.3216 5.08519 11.1598 4.99835 12 5.00195C13.6401 4.9816 15.2633 5.33557 16.746 6.03695C17.8953 6.59769 18.9274 7.37215 19.787 8.31895C20.6991 9.29592 21.4163 10.438 21.9 11.684L22 12.002L21.895 12.318C21.4268 13.536 20.7342 14.6554 19.853 15.618L19.852 15.612Z\" />\n    </SvgIcon>\n}   \nexport const DropDownIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path d=\"M12.0002 15.7131L18.0102 9.70309L16.5972 8.28809L12.0002 12.8881L7.40423 8.28809L5.99023 9.70209L12.0002 15.7131Z\" />\n    </SvgIcon>\n}\nexport const MoreIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path d=\"M12.5918 20C11.4872 20 10.5918 19.1046 10.5918 18C10.5918 16.8954 11.4872 16 12.5918 16C13.6964 16 14.5918 16.8954 14.5918 18C14.5918 19.1046 13.6964 20 12.5918 20ZM12.5918 14C11.4872 14 10.5918 13.1046 10.5918 12C10.5918 10.8954 11.4872 10 12.5918 10C13.6964 10 14.5918 10.8954 14.5918 12C14.5918 12.5304 14.3811 13.0391 14.006 13.4142C13.6309 13.7893 13.1222 14 12.5918 14ZM12.5918 8C11.4872 8 10.5918 7.10457 10.5918 6C10.5918 4.89543 11.4872 4 12.5918 4C13.6964 4 14.5918 4.89543 14.5918 6C14.5918 6.53043 14.3811 7.03914 14.006 7.41421C13.6309 7.78929 13.1222 8 12.5918 8Z\" fill=\"white\"/>\n    </SvgIcon>\n}\nexport const StarHollowIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M21.2654 10.5904L21.2653 10.5904C20.9788 9.48264 20.9788 9.48262 20.5967 8.47558L14.8658 8.37488L13.051 2.73535H10.9497L9.03937 8.37488L3.40396 8.47558C3.11741 9.58335 3.11741 9.58335 2.73535 10.5904L7.32009 14.2158L5.60082 19.956L7.32009 21.2652L12.0004 17.8412L16.6806 21.2652C17.1104 20.9127 17.3253 20.7617 17.5402 20.6106C17.7552 20.4596 17.9701 20.3085 18.3999 19.956L16.6806 14.2158L21.2654 10.5904ZM17.4782 19.6669L15.9142 14.4453C15.8202 14.1313 15.9272 13.7916 16.1844 13.5883L20.3598 10.2866C20.2956 10.0432 20.2491 9.87691 20.1965 9.71259C20.153 9.57658 20.1053 9.44191 20.0399 9.26592L14.8518 9.17475C14.5096 9.16874 14.2091 8.94573 14.1043 8.61994L12.4681 3.53535H11.5233L9.79708 8.63154C9.68875 8.95136 9.39128 9.16872 9.05367 9.17475L4.02486 9.26461C3.90802 9.70292 3.83877 9.92257 3.68996 10.3254L7.81631 13.5883C8.07346 13.7916 8.18052 14.1313 8.08646 14.4453L6.52608 19.6551L7.32967 20.267L11.528 17.1956C11.8093 16.9898 12.1914 16.9898 12.4727 17.1956L16.6613 20.2599C16.8274 20.1339 16.9549 20.0442 17.0802 19.9561L17.0844 19.9532C17.2032 19.8697 17.3202 19.7874 17.4782 19.6669Z\" />\n    </SvgIcon>\n}\n\nexport const StarSolidIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path\n            d=\"M21.2654 10.5904C20.9788 9.48264 20.9788 9.48264 20.5967 8.47558L14.8658 8.37488L13.051 2.73535H10.9497L9.03937 8.37488L3.40396 8.47558C3.11741 9.58335 3.11741 9.58335 2.73535 10.5904L7.32009 14.2158L5.60082 19.956L7.32009 21.2652L12.0004 17.8412L16.6806 21.2652C17.5402 20.5603 17.5402 20.661 18.3999 19.956L16.6806 14.2158L21.2654 10.5904Z\"/>\n    </SvgIcon>\n}\nexport const DownloadIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3H20C20.5523 3 21 3.44772 21 4V20C21 20.5523 20.5523 21 20 21ZM7.33321 18.6668H16.6665V17.3335H7.33321V18.6668ZM7.99988 12.0002L11.9999 16.0002L15.9998 12.0002L15.0599 11.0602L12.6665 13.4468V5.3335H11.3332V13.4468L8.93987 11.0602L7.99988 12.0002Z\" />\n    </SvgIcon>\n}\nexport const NotificationIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path d=\"M12 22C10.896 21.9946 10.0009 21.1039 9.99 20L13.99 20C13.9921 20.2674 13.9411 20.5325 13.84 20.78C13.5777 21.382 13.0418 21.8211 12.4 21.96L12.395 21.96L12.38 21.96L12.362 21.96L12.353 21.96C12.2368 21.9842 12.1186 21.9976 12 22ZM20 19L4 19L4 17L6 16L6 10.5C5.94732 9.08912 6.26594 7.68913 6.924 6.44C7.57904 5.28151 8.6987 4.45888 10 4.18L10 2L14 2L14 4.18C16.579 4.794 18 7.038 18 10.5L18 16L20 17L20 19Z\" />\n    </SvgIcon>\n}\nexport const SettingIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >    <path d=\"M13.8199 22L10.1799 22C9.71003 22 9.30347 21.673 9.20292 21.214L8.79592 19.33C8.25297 19.0921 7.73814 18.7946 7.26092 18.443L5.42392 19.028C4.97592 19.1709 4.4889 18.9823 4.25392 18.575L2.42992 15.424C2.19751 15.0165 2.27758 14.5025 2.62292 14.185L4.04792 12.885C3.98312 12.2961 3.98312 11.7019 4.04792 11.113L2.62292 9.816C2.27707 9.49837 2.19697 8.98372 2.42992 8.576L4.24992 5.423C4.4849 5.0157 4.97192 4.82714 5.41992 4.97L7.25692 5.555C7.50098 5.37416 7.75505 5.20722 8.01792 5.055C8.27026 4.91269 8.52995 4.78385 8.79592 4.669L9.20392 2.787C9.30399 2.32797 9.71011 2.00049 10.1799 2L13.8199 2C14.2897 2.00049 14.6958 2.32797 14.7959 2.787L15.2079 4.67C15.4887 4.79352 15.7622 4.93308 16.0269 5.088C16.2742 5.23078 16.5132 5.38736 16.7429 5.557L18.5809 4.972C19.0286 4.82967 19.515 5.01816 19.7499 5.425L21.5699 8.578C21.8023 8.98548 21.7223 9.49951 21.3769 9.817L19.9519 11.117C20.0167 11.7059 20.0167 12.3001 19.9519 12.889L21.3769 14.189C21.7223 14.5065 21.8023 15.0205 21.5699 15.428L19.7499 18.581C19.515 18.9878 19.0286 19.1763 18.5809 19.034L16.7429 18.449C16.5103 18.6203 16.2687 18.7789 16.0189 18.924C15.7567 19.0759 15.4863 19.2131 15.2089 19.335L14.7959 21.214C14.6954 21.6726 14.2894 21.9996 13.8199 22ZM11.9959 8C9.78678 8 7.99592 9.79086 7.99592 12C7.99592 14.2091 9.78678 16 11.9959 16C14.2051 16 15.9959 14.2091 15.9959 12C15.9959 9.79086 14.2051 8 11.9959 8Z\" />\n    </SvgIcon>\n}\nexport const LinkIcon =(props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M21.8843 2.20898H15.3848V4.34676H18.1311L11.6167 10.8611L13.1298 12.3726L19.7458 5.75653V8.70785H21.8843V2.20898ZM15.4848 4.24676V2.30908H21.7843V2.30898H15.4848V4.24676H15.4848ZM18.3724 4.24686L11.7582 10.8611L11.7583 10.8612L18.3726 4.24686H18.3724ZM19.8458 5.51531V8.60785H19.8459V5.51521L19.8458 5.51531ZM19.8538 10.9314H17.7161V19.6535H4.34798V6.28548H13.0702V4.14697H2.20947V21.7913H19.8538V10.9314ZM4.24807 19.7535H17.8161V11.0314H19.7538V11.0315H17.8161V19.7536H4.24807V19.7535ZM2.30957 21.6913H2.30947V4.24697H12.9702V4.24707H2.30957V21.6913Z\" />\n    </SvgIcon>\n}\nexport const CopyIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.17451 2.17529L18.3089 2.17529L18.3089 5.41878L18.3091 5.41878L18.3091 2.175L2.17451 2.175L2.17451 2.17529ZM5.4181 18.3096L5.4183 18.3096L5.4183 16.2377L4.24641 16.2377L4.24641 4.24719L4.24621 4.24719L4.24621 16.238L5.4181 16.238L5.4181 18.3096ZM16.1872 5.46878L16.1872 4.2969L4.29641 4.2969L4.29641 16.1877L5.4683 16.1877L5.4683 18.3596L2.12451 18.3596L2.12451 2.125L18.3591 2.125L18.3591 5.46878L16.1872 5.46878ZM21.876 6.14268L6.14372 6.14268L6.14372 21.875L21.876 21.875L21.876 6.14268ZM19.7428 19.7417L19.7428 8.27595L8.27698 8.27595L8.27698 19.7417L19.7428 19.7417ZM21.826 21.825L21.826 6.19268L6.19372 6.19269L6.19372 6.19298L21.8258 6.19298L21.8258 21.825L21.826 21.825ZM8.22698 8.22624L8.22679 8.22624L8.22679 19.792L19.7926 19.792L19.7926 19.7917L8.22698 19.7917L8.22698 8.22624Z\" />\n    </SvgIcon>\n}\nexport const ReverseIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    ><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18 19C18.5523 19 19 18.5523 19 18L19 13L17 13L17 17L7 17L7 14L3 18L7 22L7 19L18 19ZM6 5C5.44772 5 5 5.44772 5 6L5 11L7 11L7 7L17 7L17 10L21 6L17 2L17 5L6 5Z\" />\n    </SvgIcon>\n}\n\n\nexport const HelpIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"><path d=\"M12 22C6.47967 21.994 2.00606 17.5204 2 12L2 11.8C2.10993 6.30455 6.63459 1.92797 12.1307 2.0009C17.6268 2.07382 22.0337 6.56891 21.9978 12.0654C21.9619 17.5618 17.4966 21.9989 12 22ZM11.984 20L12 20C16.4167 19.9956 19.9942 16.4127 19.992 11.996C19.9898 7.57931 16.4087 4.00002 11.992 4.00002C7.57528 4.00002 3.99421 7.57931 3.992 11.996C3.98979 16.4127 7.56729 19.9956 11.984 20ZM13 18L11 18L11 16L13 16L13 18ZM13 15L11 15C10.9684 13.6977 11.6461 12.4808 12.77 11.822C13.43 11.316 14 10.88 14 10C14 8.89545 13.1046 8.00002 12 8.00002C10.8954 8.00002 10 8.89545 10 10L8 10L8 9.91002C8.01608 8.48096 8.79333 7.16903 10.039 6.46842C11.2846 5.76781 12.8094 5.78496 14.039 6.51342C15.2685 7.24187 16.0161 8.57096 16 10C15.9284 11.079 15.3497 12.0603 14.44 12.645C13.6177 13.1612 13.0847 14.0328 13 15Z\" />\n    </SvgIcon>\n}\nexport const CalendarIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    ><path d=\"M19 22L5 22C3.89543 22 3 21.1046 3 20L3 6C3 4.89543 3.89543 4 5 4L7 4L7 2L9 2L9 4L15 4L15 2L17 2L17 4L19 4C20.1046 4 21 4.89543 21 6L21 20C21 21.1046 20.1046 22 19 22ZM5 10L5 20L19 20L19 10L5 10ZM5 6L5 8L19 8L19 6L5 6ZM17 18L15 18L15 16L17 16L17 18ZM13 18L11 18L11 16L13 16L13 18ZM9 18L7 18L7 16L9 16L9 18ZM17 14L15 14L15 12L17 12L17 14ZM13 14L11 14L11 12L13 12L13 14ZM9 14L7 14L7 12L9 12L9 14Z\" />\n    </SvgIcon>\n}\nexport const LinkedIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >    <path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C21.9939 17.5203 17.5203 21.9939 12 22ZM4 12.172C4.04732 16.5732 7.64111 20.1095 12.0425 20.086C16.444 20.0622 19.9995 16.4875 19.9995 12.086C19.9995 7.68451 16.444 4.10977 12.0425 4.086C7.64111 4.06246 4.04732 7.59876 4 12L4 12.172ZM13 17L11 17L11 13L7 13L7 11L11 11L11 7L13 7L13 11L17 11L17 13L13 13L13 17Z\" />\n    </SvgIcon>\n}\nexport const ExchangeIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    ><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C21.9939 17.5203 17.5203 21.9939 12 22ZM12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C16.4183 20 20 16.4183 20 12C19.995 7.58378 16.4162 4.00496 12 4ZM12 17L7 12L8.41 10.59L11 13.17L11 7L13 7L13 13.17L15.59 10.59L17 12L12 17Z\" fill=\"white\"/>\n    </SvgIcon>\n}\nexport const CloseIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path d=\"M17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41L17.59 5Z\" />\n\n    </SvgIcon>\n}\nexport const SearchIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    ><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.3201 17.7344C14.0741 18.5354 12.5913 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11C19 13.1038 18.1879 15.018 16.8601 16.4461L20.6567 20.2426L19.2425 21.6569L15.3201 17.7344ZM17 11C17 14.3137 14.3137 17 11 17C7.68629 17 5 14.3137 5 11C5 7.68629 7.68629 5 11 5C14.3137 5 17 7.68629 17 11Z\" />\n    </SvgIcon>\n}\nexport const MenuIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    ><path d=\"M21 18L3 18L3 16L21 16L21 18ZM21 13L3 13L3 11L21 11L21 13ZM21 8L3 8L3 6L21 6L21 8Z\" />\n    </SvgIcon>\n}\nexport const QRIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path d=\"M4 17.3333H6.66667V20H4V17.3333Z\" />\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.6667 21.3328L7.99951 24H0V13.3333H10.6667V21.3328ZM2.66667 21.3333L2.66667 16H8V21.3333H2.66667Z\" />\n        <path d=\"M20 4L17.3333 4V6.66667H20V4Z\" />\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M21.3328 10.6667L24 7.99951V0H13.3333V10.6667H21.3328ZM21.3333 8V2.66667L16 2.66667V8H21.3333Z\" />\n        <path d=\"M17.3333 14.6662V13.3333H13.3333V16H15.9995L17.3333 14.6662Z\" />\n        <path d=\"M6.66667 4H4V6.66667H6.66667V4Z\" />\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 0V10.6667H10.6667V0H0ZM2.66667 8V2.66667H8V8H2.66667Z\" />\n    </SvgIcon>\n}\nexport const DoneIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    ><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M22.875 12C22.875 18.0061 18.0061 22.875 12 22.875C5.9939 22.875 1.125 18.0061 1.125 12C1.125 5.9939 5.9939 1.125 12 1.125C18.0061 1.125 22.875 5.9939 22.875 12ZM24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM10.2099 15.7774L16.9716 9.01572L16.1784 8.22259L10.2099 14.1855L7.82101 11.8023L7.02788 12.5954L10.2099 15.7774Z\" />\n    </SvgIcon>\n}\nexport const RefuseIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M22.875 12C22.875 18.0061 18.0061 22.875 12 22.875C9.25164 22.875 6.7414 21.8555 4.82685 20.174L20.174 4.82686C21.8555 6.74142 22.875 9.25165 22.875 12ZM4.02078 19.3891L19.3891 4.02079C17.4493 2.22358 14.8529 1.125 12 1.125C5.9939 1.125 1.125 5.9939 1.125 12C1.125 14.8529 2.22358 17.4493 4.02078 19.3891ZM24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12Z\" />\n    </SvgIcon>\n}\nexport const SubmitIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M22.875 12C22.875 18.0061 18.0061 22.875 12 22.875C5.9939 22.875 1.125 18.0061 1.125 12C1.125 5.9939 5.9939 1.125 12 1.125C18.0061 1.125 22.875 5.9939 22.875 12ZM24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM12.5754 7.09267C12.3543 6.88211 12.0056 6.88636 11.7897 7.10225L7.85218 11.0398L8.64768 11.8352L11.6249 8.858V16.6875H12.7499V8.8125L15.737 11.6573L16.5129 10.8427L12.5754 7.09267Z\" />\n    </SvgIcon>\n}\nexport const FailedIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >     <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.9775 11.807L16.1423 14.9718L15.3468 15.7673L12.182 12.6025L9.01725 15.7673L8.22176 14.9718L11.3865 11.807L8.22176 8.64225L9.01725 7.84676L12.182 11.0115L15.3468 7.84676L16.1423 8.64225L12.9775 11.807ZM12 22.875C18.0061 22.875 22.875 18.0061 22.875 12C22.875 5.9939 18.0061 1.125 12 1.125C5.9939 1.125 1.125 5.9939 1.125 12C1.125 18.0061 5.9939 22.875 12 22.875ZM12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z\" />\n    </SvgIcon>\n}\nexport const GoodIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path d=\"M10 20C4.47967 19.994 0.00606248 15.5204 6.79866e-08 10L6.66269e-08 9.80002C0.109932 4.30455 4.63459 -0.0720257 10.1307 0.000898149C15.6268 0.073822 20.0337 4.5689 19.9978 10.0654C19.9619 15.5618 15.4966 19.9989 10 20ZM5.41 9.59002L4 11L8 15L16 7.00002L14.59 5.58002L8 12.17L5.41 9.59002Z\" />\n    </SvgIcon>\n}\nexport const AlertIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n            <path d=\"M10 20C4.47715 20 1.05534e-07 15.5228 6.79865e-08 10C3.04386e-08 4.47715 4.47715 -3.04386e-08 10 -6.79865e-08C15.5228 -1.05534e-07 20 4.47715 20 10C19.9939 15.5203 15.5203 19.9939 10 20ZM9 13L9 15L11 15L11 13L9 13ZM9 5L9 11L11 11L11 5L9 5Z\" />\n    </SvgIcon>\n}\nexport const ErrorIcon =  (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path d=\"M10 20.0002C7.34711 20.0026 4.80218 18.9498 2.9263 17.0739C1.05042 15.198 -0.00238264 12.6531 4.11739e-06 10.0002L4.11603e-06 9.80019C0.0817921 5.79241 2.5478 2.22035 6.26637 0.72325C9.98493 -0.773844 14.2381 0.0930833 17.074 2.92619C19.9365 5.78627 20.7932 10.0895 19.2443 13.8278C17.6955 17.5661 14.0465 20.0026 10 20.0002ZM10 11.4102L12.59 14.0002L14 12.5902L11.41 10.0002L14 7.41019L12.59 6.00019L10 8.59019L7.41001 6.00019L6.00001 7.41019L8.59001 10.0002L6.00001 12.5902L7.41001 14.0002L10 11.4112L10 11.4102Z\" />\n    </SvgIcon>\n}\nexport const InfoIcon =  (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    ><path d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C21.9939 17.5203 17.5203 21.9939 12 22ZM9.99 10.99L9.99 13L10.99 13L10.99 17L14.01 17L14.01 15L13 15L13.01 10.991L9.99 10.99ZM10.99 7L10.99 9.019L13.01 9.019L13.01 7L10.99 7Z\" />\n    </SvgIcon>\n}\nexport const UnConnectIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.71573 12L6.65622 9.05951L8.12068 10.524L5.1802 13.4645C3.70136 14.9433 3.70136 17.341 5.18019 18.8198C6.65903 20.2986 9.0567 20.2986 10.5355 18.8198L13.476 15.8793L14.9405 17.3438L12 20.2843C9.71236 22.5719 6.00337 22.5719 3.71573 20.2843C1.42809 17.9966 1.42809 14.2876 3.71573 12ZM18.8198 10.5355L16.405 12.9504L17.8694 14.4149L20.2843 12C22.5719 9.71236 22.5719 6.00337 20.2843 3.71573C17.9966 1.42809 14.2876 1.42809 12 3.71573L9.58515 6.13058L11.0496 7.59505L13.4645 5.18019C14.9433 3.70136 17.341 3.70136 18.8198 5.1802C20.2986 6.65903 20.2986 9.0567 18.8198 10.5355ZM3.03226 3.26608C2.837 3.46134 2.837 3.77792 3.03226 3.97318L19.9187 20.8596C20.1139 21.0548 20.4305 21.0548 20.6258 20.8596L21.3831 20.1022C21.5784 19.907 21.5784 19.5904 21.3831 19.3951L4.49673 2.50872C4.30147 2.31345 3.98489 2.31345 3.78962 2.50872L3.03226 3.26608Z\" fill=\"white\"/>\n    </SvgIcon>\n}\nexport const LockIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox=\"0 0 24 24\" aria-hidden=\"true\" data-testid=\"LockIcon\">\n        <path d=\"M6.6658 10.25L6.66712 7.6C6.66712 6.11479 7.25712 4.69041 8.30732 3.64021C9.35753 2.58999 10.7819 2 12.2671 2C13.7038 2 15.0856 2.55221 16.1266 3.54241C17.1677 4.53258 17.7883 5.885 17.8603 7.32253L17.8671 7.6V10.25H19.6C20.5988 10.25 21.4307 11.0096 21.5259 12.0022L21.5343 12.1829V20.4329C21.5343 21.4309 20.7727 22.2636 19.782 22.3574L19.6 22.3657H4.93434C4.45351 22.3661 3.98984 22.1874 3.63381 21.8643C3.27776 21.5413 3.05488 21.0971 3.00836 20.6136L3 20.4329V12.1829C3 11.1848 3.76156 10.3521 4.75225 10.2583L4.93425 10.25H6.6658ZM19.7 12.1829H4.83425V20.4329H19.7V12.1829ZM12.2671 13.9157C12.7727 13.9157 13.1995 14.287 13.2743 14.7896L13.2843 14.9329L13.2843 17.6835C13.2827 17.9392 13.185 18.1848 13.0106 18.3715C12.8361 18.5584 12.5978 18.6728 12.3428 18.6918C12.088 18.7108 11.8352 18.6332 11.6349 18.4743C11.4347 18.3154 11.3017 18.087 11.2613 17.8271L11.25 17.6829V14.9329C11.25 14.3717 11.7059 13.9157 12.2671 13.9157ZM12.2671 3.83288C11.3095 3.83311 10.3879 4.19803 9.68969 4.85345C8.9915 5.50887 8.56913 6.40559 8.50845 7.36129L8.50006 7.59645L8.5 10.35L8.6 10.45H15.9329L16.0329 10.35V7.6C16.0329 6.60117 15.6362 5.64319 14.93 4.93674C14.2239 4.23031 13.266 3.83325 12.2671 3.83288Z\" />\n    </SvgIcon>\n}\n\n\nexport const CheckIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path d=\"M22 5.67972L8.4 20L2 13.261L3.59523 11.5813L8.4 16.6286L20.4048 4L22 5.67972Z\" />\n    </SvgIcon>\n}\nexport const EmbarIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M6.01818 12C6.01818 8.69633 8.69633 6.01818 12 6.01818C12.9908 6.01818 13.9253 6.25905 14.7481 6.68543L8.47825 16.8357C6.9871 15.7479 6.01818 13.9871 6.01818 12ZM9.34888 17.3637C10.1479 17.7594 11.048 17.9818 12 17.9818C15.3037 17.9818 17.9818 15.3037 17.9818 12C17.9818 10.0519 17.0506 8.32138 15.609 7.22916L9.34888 17.3637ZM12 5C8.13401 5 5 8.13401 5 12C5 15.866 8.13401 19 12 19C15.866 19 19 15.866 19 12C19 8.13401 15.866 5 12 5Z\"/>\n    </SvgIcon>\n}\nexport const LoadingIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width={props.width ? props.width : \"48\"} height={props.height ? props.height : \"48\"}\n                    viewBox=\"0 0 48 48\" fill=\"none\">\n        <path\n            d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\n            <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\"\n                              dur=\"0.6s\" repeatCount=\"indefinite\"></animateTransform>\n        </path>\n    </SvgIcon>\n}\n\n\nexport const UnLockIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox=\"0 0 24 24\" aria-hidden=\"true\" data-testid=\"LockIcon\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M15.612 6.10622C14.9369 6.10622 14.2894 6.3744 13.8121 6.85177C13.3347 7.32914 13.0665 7.97658 13.0665 8.65168V10.5608H15.4842C16.5386 10.5608 17.3933 11.4155 17.3933 12.4699V16.9244C17.3933 17.9788 16.5386 18.8335 15.4842 18.8335H6.57511C5.52074 18.8335 4.66602 17.9788 4.66602 16.9244V12.4699C4.66602 11.4155 5.52074 10.5608 6.57511 10.5608H11.7938V8.65168C11.7938 7.63903 12.1961 6.66786 12.9121 5.95182C13.6282 5.23577 14.5993 4.8335 15.612 4.8335C16.6246 4.8335 17.5958 5.23577 18.3118 5.95182C19.0279 6.66786 19.4302 7.63903 19.4302 8.65168V9.54246H18.1574V8.65168C18.1574 7.97658 17.8892 7.32914 17.4119 6.85177C16.9345 6.3744 16.2871 6.10622 15.612 6.10622ZM12.4294 11.8335H6.57511C6.22365 11.8335 5.93874 12.1184 5.93874 12.4699V16.9244C5.93874 17.2759 6.22365 17.5608 6.57511 17.5608H15.4842C15.8357 17.5608 16.1206 17.2759 16.1206 16.9244V12.4699C16.1206 12.1184 15.8357 11.8335 15.4842 11.8335H12.4309C12.4307 11.8335 12.4304 11.8335 12.4301 11.8335C12.4299 11.8335 12.4296 11.8335 12.4294 11.8335ZM18.7938 11.8335L18.781 11.8334H18.8065L18.7938 11.8335ZM11.0306 13.106C11.3821 13.106 11.667 13.3909 11.667 13.7423V15.6514C11.667 16.0029 11.3821 16.2878 11.0306 16.2878C10.6792 16.2878 10.3943 16.0029 10.3943 15.6514V13.7423C10.3943 13.3909 10.6792 13.106 11.0306 13.106Z\"\n        />\n\n    </SvgIcon>\n}\n\n\n\n\nexport const ThemeDarkIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M19.1227 12.7035C19.0191 12.6176 18.8931 12.5626 18.7592 12.5448C18.6253 12.527 18.49 12.547 18.367 12.6027C17.6062 12.951 16.7784 13.1302 15.9413 13.1281C14.3931 13.1262 12.9083 12.5123 11.8106 11.4202C10.713 10.3281 10.0918 8.84633 10.0825 7.29805C10.0861 6.8128 10.1458 6.32964 10.2624 5.85852C10.2869 5.73295 10.2775 5.60307 10.2358 5.48227C10.1933 5.36146 10.1199 5.2541 10.022 5.17125C9.92486 5.08839 9.80682 5.03303 9.68087 5.01087C9.55491 4.98871 9.42535 5.00056 9.30515 5.04519C8.17656 5.55256 7.19625 6.33843 6.4549 7.32898C5.71355 8.31954 5.23634 9.48225 5.06792 10.7079C4.8995 11.9335 5.0456 13.1819 5.49185 14.3357C5.9381 15.4895 6.67082 16.5108 7.62019 17.3038C8.57027 18.0968 9.70533 18.6353 10.9203 18.8688C12.1352 19.1023 13.3898 19.0232 14.5659 18.6387C15.742 18.2544 16.8008 17.5774 17.6429 16.6714C18.4857 15.7653 19.0838 14.66 19.3818 13.4592C19.4178 13.3217 19.4128 13.1766 19.3667 13.0421C19.3206 12.9076 19.2357 12.7898 19.1227 12.7035Z\"\n        />\n    </SvgIcon>\n}\nexport const ThemeLightIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" focusable=\"false\" viewBox=\"0 0 24 24\"\n                    aria-hidden=\"true\">\n        <path\n            d=\"M7.548 15.5L7.051 15.997C6.92062 16.1279 6.84745 16.3057 6.84745 16.4905C6.84745 16.6753 6.92062 16.8531 7.051 16.984C7.18215 17.1142 7.35957 17.1877 7.5445 17.1877C7.72943 17.1877 7.90685 17.1142 8.038 16.984L8.535 16.487C8.64968 16.3533 8.70961 16.1811 8.7028 16.0047C8.69599 15.8283 8.62296 15.6617 8.4983 15.5364C8.37363 15.4118 8.20651 15.339 8.03034 15.332C7.85417 15.3257 7.68191 15.3852 7.548 15.5ZM7.1 12C7.1 11.8144 7.02626 11.6363 6.89498 11.505C6.7637 11.3738 6.58565 11.3 6.4 11.3H5.7C5.51435 11.3 5.3363 11.3738 5.20503 11.505C5.07375 11.6363 5 11.8144 5 12C5 12.1856 5.07375 12.3637 5.20503 12.495C5.3363 12.6262 5.51435 12.7 5.7 12.7H6.4C6.58565 12.7 6.7637 12.6262 6.89498 12.495C7.02626 12.3637 7.1 12.1856 7.1 12ZM12 7.1C12.1856 7.1 12.3637 7.02622 12.495 6.89497C12.6262 6.76372 12.7 6.58564 12.7 6.4V5.7C12.7 5.51436 12.6262 5.33628 12.495 5.20503C12.3637 5.07378 12.1856 5 12 5C11.8144 5 11.6363 5.07378 11.505 5.20503C11.3738 5.33628 11.3 5.51436 11.3 5.7V6.4C11.3 6.58564 11.3738 6.76372 11.505 6.89497C11.6363 7.02622 11.8144 7.1 12 7.1ZM7.548 8.535C7.67838 8.66429 7.85436 8.73723 8.038 8.738C8.13013 8.73856 8.22145 8.72085 8.30674 8.68606C8.39202 8.6512 8.46959 8.59989 8.535 8.535C8.66538 8.40382 8.73856 8.22644 8.73856 8.0415C8.73856 7.85656 8.66538 7.67918 8.535 7.548L8.038 7.051C7.90409 6.93634 7.73184 6.87642 7.55567 6.88321C7.37949 6.89 7.21237 6.96301 7.08771 7.08768C6.96304 7.21235 6.89001 7.37951 6.8832 7.55563C6.8764 7.73182 6.93633 7.90409 7.051 8.038L7.548 8.535ZM15.948 8.738C16.1316 8.73723 16.3076 8.66429 16.438 8.535L16.935 8.038C17.0083 7.97528 17.0678 7.898 17.1098 7.8112C17.1519 7.72433 17.1754 7.62976 17.1792 7.53337C17.1829 7.43691 17.1666 7.3408 17.1314 7.25099C17.0963 7.16111 17.0429 7.07956 16.9747 7.01138C16.9064 6.94313 16.8249 6.88972 16.735 6.85458C16.6452 6.81937 16.5491 6.80313 16.4527 6.80684C16.3562 6.81055 16.2617 6.83421 16.1748 6.87621C16.088 6.91821 16.0108 6.97771 15.948 7.051L15.5 7.548C15.3697 7.67918 15.2964 7.85656 15.2964 8.0415C15.2964 8.22644 15.3697 8.40382 15.5 8.535C15.6234 8.65778 15.7881 8.73016 15.962 8.738H15.948ZM18.3 11.3H17.6C17.4144 11.3 17.2363 11.3738 17.105 11.505C16.9738 11.6363 16.9 11.8144 16.9 12C16.9 12.1856 16.9738 12.3637 17.105 12.495C17.2363 12.6262 17.4144 12.7 17.6 12.7H18.3C18.4856 12.7 18.6637 12.6262 18.795 12.495C18.9262 12.3637 19 12.1856 19 12C19 11.8144 18.9262 11.6363 18.795 11.505C18.6637 11.3738 18.4856 11.3 18.3 11.3ZM12 16.9C11.8144 16.9 11.6363 16.9735 11.505 17.1051C11.3738 17.236 11.3 17.4145 11.3 17.6V18.3C11.3 18.4855 11.3738 18.664 11.505 18.7949C11.6363 18.9265 11.8144 19 12 19C12.1856 19 12.3637 18.9265 12.495 18.7949C12.6262 18.664 12.7 18.4855 12.7 18.3V17.6C12.7 17.4145 12.6262 17.236 12.495 17.1051C12.3637 16.9735 12.1856 16.9 12 16.9ZM16.452 15.5C16.319 15.4258 16.1656 15.3971 16.0148 15.4188C15.8641 15.4398 15.7243 15.5091 15.6168 15.6169C15.5092 15.7247 15.4395 15.864 15.4184 16.0145C15.3974 16.1657 15.426 16.319 15.5 16.452L15.997 16.949C16.1282 17.0792 16.3056 17.1527 16.4905 17.1527C16.6754 17.1527 16.8528 17.0792 16.984 16.949C17.1144 16.8181 17.1876 16.6403 17.1876 16.4555C17.1876 16.2707 17.1144 16.0929 16.984 15.962L16.452 15.5ZM12 8.15C11.2385 8.15 10.4942 8.37582 9.86106 8.79883C9.22793 9.22191 8.73446 9.82314 8.44307 10.5266C8.15167 11.2301 8.07543 12.0043 8.22398 12.7511C8.37253 13.4979 8.73921 14.1839 9.27764 14.7224C9.81607 15.2606 10.5021 15.6274 11.2489 15.7758C11.9957 15.9249 12.7699 15.8486 13.4734 15.5567C14.1769 15.2655 14.7781 14.7721 15.2012 14.1389C15.6242 13.5058 15.85 12.7615 15.85 12C15.8482 10.9795 15.4419 10.0013 14.7203 9.27966C13.9987 8.5581 13.0205 8.15182 12 8.15Z\"\n        />\n    </SvgIcon>\n}\nexport const PendingIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"11\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M12 5C10.6155 5 9.26215 5.41054 8.11101 6.17971C6.95987 6.94888 6.06266 8.04213 5.53285 9.32121C5.00303 10.6003 4.86441 12.0078 5.13451 13.3656C5.4046 14.7235 6.07129 15.9708 7.05026 16.9497C8.02922 17.9287 9.2765 18.5954 10.6344 18.8655C11.9922 19.1356 13.3997 18.997 14.6788 18.4672C15.9579 17.9373 17.0511 17.0401 17.8203 15.889C18.5895 14.7378 19 13.3845 19 12C19 11.0807 18.8189 10.1705 18.4672 9.32121C18.1154 8.47194 17.5998 7.70026 16.9497 7.05025C16.2997 6.40024 15.5281 5.88463 14.6788 5.53284C13.8295 5.18106 12.9193 5 12 5ZM12 17.6C10.8924 17.6 9.80972 17.2716 8.88881 16.6562C7.96789 16.0409 7.25013 15.1663 6.82628 14.143C6.40243 13.1198 6.29153 11.9938 6.50761 10.9075C6.72368 9.8212 7.25703 8.82337 8.0402 8.0402C8.82338 7.25703 9.8212 6.72368 10.9075 6.5076C11.9938 6.29153 13.1198 6.40242 14.143 6.82627C15.1663 7.25012 16.0409 7.96789 16.6562 8.88881C17.2716 9.80972 17.6 10.8924 17.6 12C17.6 13.4852 17.01 14.9096 15.9598 15.9598C14.9096 17.01 13.4852 17.6 12 17.6ZM14.17 12.441L12.7 11.594V8.5C12.7 8.31435 12.6263 8.1363 12.495 8.00502C12.3637 7.87375 12.1857 7.8 12 7.8C11.8144 7.8 11.6363 7.87375 11.505 8.00502C11.3738 8.1363 11.3 8.31435 11.3 8.5V12C11.3 12 11.3 12.056 11.3 12.084C11.3041 12.1322 11.316 12.1795 11.335 12.224C11.3494 12.2655 11.3682 12.3054 11.391 12.343C11.4102 12.3828 11.4336 12.4203 11.461 12.455L11.573 12.546L11.636 12.609L13.456 13.659C13.5627 13.7195 13.6834 13.7508 13.806 13.75C13.961 13.7511 14.112 13.7007 14.2352 13.6067C14.3585 13.5128 14.4471 13.3806 14.4871 13.2308C14.5272 13.0811 14.5164 12.9223 14.4565 12.7794C14.3965 12.6364 14.2909 12.5174 14.156 12.441H14.17Z\"/>\n\n    </SvgIcon>\n}\nexport const ActiveIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M18.775 8.17266L17.7828 7.18603L18.775 6.19941C18.9066 6.06765 18.9805 5.88894 18.9805 5.7026C18.9805 5.51626 18.9066 5.33755 18.775 5.20579C18.6435 5.07402 18.465 5 18.2789 5C18.0928 5 17.9144 5.07402 17.7828 5.20579L10.4179 12.581C9.69537 12.1036 8.82166 11.9119 7.96602 12.0428C7.11039 12.1737 6.33375 12.6181 5.7866 13.2897C5.23944 13.9613 4.96073 14.8124 5.00447 15.6781C5.0482 16.5438 5.41127 17.3624 6.02332 17.9753C6.63536 18.5882 7.45282 18.9517 8.31728 18.9955C9.18174 19.0393 10.0317 18.7602 10.7024 18.2123C11.3731 17.6644 11.8168 16.8867 11.9475 16.0299C12.0783 15.173 11.8868 14.2981 11.4101 13.5746L14.8201 10.1529L15.8053 11.1465C15.8706 11.2114 15.948 11.2627 16.0332 11.2975C16.1183 11.3323 16.2095 11.35 16.3014 11.3494C16.3934 11.35 16.4846 11.3323 16.5697 11.2975C16.6548 11.2627 16.7323 11.2114 16.7976 11.1465C16.863 11.0815 16.915 11.0041 16.9505 10.9188C16.986 10.8335 17.0042 10.7421 17.0042 10.6497C17.0042 10.5573 16.986 10.4659 16.9505 10.3806C16.915 10.2953 16.863 10.218 16.7976 10.1529L15.8053 9.20127L16.7976 8.20764L17.7828 9.20127C17.8481 9.26612 17.9255 9.31743 18.0107 9.35225C18.0958 9.38707 18.187 9.40472 18.2789 9.40419C18.3709 9.40472 18.462 9.38707 18.5472 9.35225C18.6323 9.31743 18.7098 9.26612 18.775 9.20127C18.846 9.13574 18.9026 9.05622 18.9413 8.9677C18.98 8.87918 19 8.7836 19 8.68696C19 8.59033 18.98 8.49474 18.9413 8.40622C18.9026 8.31771 18.846 8.23818 18.775 8.17266V8.17266ZM8.49626 17.5981C8.08166 17.5981 7.67636 17.475 7.33163 17.2443C6.9869 17.0136 6.71821 16.6858 6.55955 16.3022C6.40089 15.9186 6.35937 15.4965 6.44026 15.0893C6.52114 14.6821 6.7208 14.3081 7.01397 14.0145C7.30714 13.7209 7.68066 13.521 8.0873 13.44C8.49394 13.359 8.91543 13.4006 9.29848 13.5595C9.68152 13.7183 10.0089 13.9874 10.2393 14.3326C10.4696 14.6778 10.5925 15.0837 10.5925 15.4989C10.5925 16.0556 10.3717 16.5896 9.97856 16.9832C9.58543 17.3769 9.05223 17.5981 8.49626 17.5981Z\"/>\n    </SvgIcon>\n}\nexport const ProToLiteIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"20\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M3.75836 13.7023H1.82227V4.54492H5.43485C7.51426 4.54492 8.71619 5.8282 8.71619 7.64805C8.71619 9.47661 7.49102 10.7337 5.38546 10.7337H3.75836V13.7023ZM3.75836 6.12844V9.18218H5.07263C6.18158 9.18218 6.72202 8.55555 6.72202 7.64805C6.72202 6.7357 6.18158 6.12844 5.06391 6.12844H3.75836ZM11.6013 13.7025H9.69715V6.83469H11.5431V8.03274H11.6148C11.8657 7.18335 12.4962 6.73591 13.2652 6.73591C13.4569 6.73591 13.6942 6.76302 13.8637 6.8037V8.49376C13.6855 8.43565 13.3233 8.39111 13.0589 8.39111C12.2192 8.39111 11.6013 8.97222 11.6013 9.81676V13.7025ZM17.3902 13.8359C19.4735 13.8359 20.7703 12.4102 20.7703 10.295C20.7703 8.16715 19.4735 6.74537 17.3902 6.74537C15.3069 6.74537 14.0101 8.16715 14.0101 10.295C14.0101 12.4102 15.3069 13.8359 17.3902 13.8359ZM17.3989 12.3608C16.4381 12.3608 15.9461 11.4805 15.9461 10.2814C15.9461 9.08337 16.4381 8.19814 17.3989 8.19814C18.3423 8.19814 18.8343 9.08337 18.8343 10.2814C18.8343 11.4805 18.3423 12.3608 17.3989 12.3608ZM3.93144 16.6079C3.39682 16.6079 2.96292 17.0418 2.96292 17.5764C2.96292 18.111 3.39682 18.5449 3.93144 18.5449H17.4907C18.0253 18.5449 18.4592 18.111 18.4592 17.5764C18.4592 17.0418 18.0253 16.6079 17.4907 16.6079H3.93144Z\"/>\n    </SvgIcon>\n}\nexport const RefreshIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n        <path\n            d=\"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"></path>\n    </SvgIcon>\n}\nexport const EmptyIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path\n            d=\"M13.7154 4.8073C13.5636 4.8073 13.4262 4.7031 13.3903 4.54883L13.1251 3.40997C13.0832 3.23021 13.195 3.05064 13.3746 3.00878C13.5544 2.96693 13.734 3.07869 13.7759 3.25837L14.0411 4.39733C14.083 4.5771 13.9713 4.75666 13.7915 4.79852C13.7666 4.80431 13.741 4.80726 13.7154 4.8073ZM17.4343 7.74442C17.4123 7.74442 17.3901 7.74232 17.3677 7.73775L16.2215 7.50628C16.0406 7.46978 15.9236 7.29353 15.9601 7.11263C15.9967 6.93173 16.1729 6.81477 16.3538 6.85127L17.5001 7.08273C17.6809 7.11923 17.798 7.29555 17.7615 7.47639C17.7293 7.63501 17.5901 7.74442 17.4343 7.74442ZM15.6071 5.44742C15.5109 5.44742 15.4154 5.40613 15.3493 5.32617C15.2319 5.18388 15.2519 4.97323 15.3941 4.85575L16.377 4.04368C16.5193 3.9261 16.7299 3.94618 16.8475 4.08845C16.965 4.23067 16.9449 4.44127 16.8027 4.55888L15.8198 5.37092C15.76 5.42043 15.6848 5.44749 15.6071 5.44742ZM18.8346 20.207H10.9544L16.478 18.2049C16.8202 18.0809 17.0936 17.831 17.248 17.5013C17.4022 17.1716 17.4188 16.8016 17.2948 16.4593L16.9367 15.4715C16.8928 15.3501 16.7586 15.2873 16.6372 15.3314C16.5157 15.3754 16.453 15.5095 16.497 15.6309L16.855 16.6187C16.9364 16.8435 16.9256 17.0865 16.8243 17.3031C16.723 17.5196 16.5433 17.6837 16.3186 17.7651L10.1025 20.0183C9.87759 20.0997 9.63462 20.0888 9.41811 19.9875C9.2016 19.8861 9.03748 19.7066 8.95605 19.4818L5.52144 10.0059C5.3533 9.54203 5.59392 9.0277 6.05791 8.85956L12.274 6.60636C12.4988 6.52492 12.7418 6.5359 12.9584 6.63721C13.1749 6.73852 13.339 6.91813 13.4204 7.14254L14.8233 11.0268C14.8672 11.1484 15.0012 11.2112 15.1228 11.1674C15.2442 11.1235 15.3071 10.9895 15.2632 10.868L13.8601 6.98342C13.7361 6.64124 13.4863 6.36783 13.1566 6.21348C12.8269 6.05921 12.4568 6.04261 12.1146 6.1666L5.89845 8.41973C5.19198 8.67583 4.82561 9.45888 5.08163 10.1653L8.51626 19.6411C8.68333 20.102 9.07459 20.4179 9.52261 20.511C9.54931 20.5284 9.58051 20.5376 9.61239 20.5376H9.72953C9.75259 20.5387 9.77562 20.5396 9.79883 20.5396C9.82196 20.5396 9.8451 20.5389 9.86831 20.5376H18.8347C18.926 20.5376 19 20.4636 19 20.3723C19 20.281 18.926 20.207 18.8346 20.207ZM17.212 10.2003L16.8487 10.003C16.7036 9.92445 16.4959 10.0268 16.3846 10.2319L13.361 15.8048C13.3475 15.8296 13.3406 15.857 13.3415 15.8821L13.3612 16.4987C13.3518 16.4993 13.3424 16.5012 13.3332 16.5047L12.394 16.8548C12.369 16.864 12.3488 16.8828 12.3378 16.907C12.3267 16.9312 12.3257 16.9588 12.335 16.9837C12.3443 17.0086 12.3631 17.0288 12.3873 17.0398C12.4115 17.0509 12.439 17.0519 12.4639 17.0426L13.368 16.7057L13.3682 16.7129C13.3704 16.7809 13.4263 16.8112 13.4844 16.7759L14.1955 16.3454C14.217 16.3324 14.2362 16.3118 14.2497 16.2869L17.2732 10.714C17.3845 10.509 17.3571 10.2789 17.212 10.2003ZM10.4528 17.5784L9.76355 17.8352C9.75121 17.8398 9.7399 17.8468 9.73026 17.8558C9.72063 17.8647 9.71285 17.8755 9.70738 17.8875C9.70191 17.8995 9.69885 17.9124 9.69838 17.9255C9.69791 17.9387 9.70004 17.9518 9.70464 17.9641C9.71392 17.9891 9.73272 18.0093 9.7569 18.0203C9.78107 18.0314 9.80864 18.0324 9.83355 18.0231L10.5228 17.7662C10.5352 17.7616 10.5465 17.7546 10.5561 17.7456C10.5658 17.7367 10.5735 17.7259 10.579 17.7139C10.5845 17.702 10.5875 17.689 10.588 17.6759C10.5885 17.6627 10.5864 17.6496 10.5818 17.6373C10.5772 17.6249 10.5702 17.6136 10.5613 17.604C10.5523 17.5943 10.5415 17.5865 10.5295 17.5811C10.5175 17.5756 10.5046 17.5725 10.4914 17.5721C10.4783 17.5716 10.4652 17.5737 10.4528 17.5784ZM11.893 17.0415L10.9538 17.3916C10.9414 17.3962 10.9301 17.4031 10.9205 17.4121C10.9108 17.4211 10.9031 17.4318 10.8976 17.4438C10.8921 17.4558 10.8891 17.4687 10.8886 17.4819C10.8881 17.495 10.8902 17.5081 10.8948 17.5205C10.9041 17.5454 10.9229 17.5656 10.9471 17.5766C10.9713 17.5877 10.9988 17.5887 11.0238 17.5794L11.963 17.2293C11.9753 17.2247 11.9866 17.2178 11.9963 17.2088C12.0059 17.1998 12.0137 17.1891 12.0192 17.1771C12.0247 17.1651 12.0277 17.1522 12.0282 17.139C12.0287 17.1258 12.0265 17.1127 12.0219 17.1004C12.0173 17.088 12.0103 17.0767 12.0014 17.0671C11.9924 17.0574 11.9816 17.0497 11.9697 17.0442C11.9577 17.0387 11.9448 17.0357 11.9316 17.0352C11.9184 17.0347 11.9053 17.0368 11.893 17.0415ZM9.1285 15.4922C9.10804 15.4922 9.08807 15.4859 9.07126 15.4743C9.05445 15.4626 9.04162 15.4461 9.03447 15.4269C9.02521 15.402 9.02621 15.3744 9.03725 15.3503C9.0483 15.3261 9.06848 15.3073 9.09337 15.298L9.68278 15.0783C9.7076 15.0694 9.73492 15.0707 9.75882 15.0818C9.78273 15.0929 9.80129 15.113 9.8105 15.1377C9.8197 15.1624 9.81881 15.1897 9.80801 15.2137C9.79721 15.2378 9.77737 15.2566 9.75279 15.2661L9.1634 15.4858C9.15224 15.49 9.14042 15.4922 9.1285 15.4922ZM10.2187 15.0858C10.1781 15.0858 10.1399 15.0608 10.1248 15.0204C10.1202 15.0081 10.1181 14.995 10.1186 14.9818C10.119 14.9686 10.1221 14.9557 10.1276 14.9437C10.133 14.9318 10.1408 14.921 10.1504 14.912C10.1601 14.9031 10.1714 14.8961 10.1837 14.8915L11.123 14.5414C11.1353 14.5368 11.1484 14.5346 11.1616 14.5351C11.1747 14.5356 11.1876 14.5387 11.1996 14.5441C11.2116 14.5496 11.2224 14.5574 11.2313 14.567C11.2403 14.5766 11.2473 14.5879 11.2519 14.6003C11.2565 14.6126 11.2586 14.6257 11.2581 14.6389C11.2577 14.652 11.2546 14.665 11.2492 14.677C11.2437 14.6889 11.2359 14.6997 11.2263 14.7087C11.2166 14.7177 11.2053 14.7246 11.193 14.7292L10.2537 15.0793C10.2425 15.0836 10.2307 15.0857 10.2187 15.0858ZM11.6589 14.549C11.6384 14.549 11.6185 14.5427 11.6017 14.531C11.5849 14.5194 11.5721 14.5029 11.565 14.4837C11.5604 14.4714 11.5582 14.4583 11.5587 14.4451C11.5592 14.432 11.5622 14.419 11.5677 14.407C11.5732 14.3951 11.5809 14.3843 11.5906 14.3753C11.6002 14.3664 11.6115 14.3594 11.6239 14.3548L12.5631 14.0046C12.5754 14 12.5886 13.9979 12.6017 13.9983C12.6149 13.9988 12.6278 14.0019 12.6398 14.0073C12.6517 14.0128 12.6625 14.0206 12.6715 14.0302C12.6804 14.0399 12.6874 14.0512 12.692 14.0635C12.6966 14.0758 12.6988 14.089 12.6983 14.1021C12.6978 14.1153 12.6948 14.1282 12.6893 14.1402C12.6838 14.1522 12.676 14.1629 12.6664 14.1719C12.6568 14.1809 12.6455 14.1878 12.6331 14.1924L11.6939 14.5425C11.6827 14.5468 11.6708 14.5489 11.6589 14.549ZM13.099 14.0121C13.0755 14.0121 13.0528 14.0038 13.0347 13.9887C13.0167 13.9737 13.0045 13.9527 13.0003 13.9296C12.9962 13.9065 13.0003 13.8826 13.0119 13.8622C13.0236 13.8418 13.042 13.8261 13.064 13.8179L14.0033 13.4678C14.0156 13.4632 14.0287 13.4611 14.0419 13.4615C14.055 13.462 14.068 13.4651 14.0799 13.4705C14.0919 13.476 14.1027 13.4838 14.1117 13.4934C14.1206 13.503 14.1276 13.5144 14.1322 13.5267C14.1368 13.539 14.1389 13.5521 14.1385 13.5653C14.138 13.5784 14.1349 13.5914 14.1295 13.6034C14.124 13.6153 14.1162 13.6261 14.1066 13.6351C14.0969 13.644 14.0856 13.651 14.0733 13.6556L13.1341 14.0057C13.1229 14.0099 13.111 14.0121 13.099 14.0121Z\"/>\n    </SvgIcon>\n\n}\n\n\nexport const PoolsIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M15.1837 4.58978C16.964 5.02344 18.5432 6.5898 19.0818 8.481L19.5047 9.85554H14.5687L14.3576 9.74997C14.2268 9.67155 14.043 9.50334 13.9837 9.4264C13.9494 9.37355 13.8994 9.28032 13.8821 9.24117C13.8503 9.16525 13.8353 9.1024 13.83 9.07917C13.8177 9.02562 13.8126 8.98263 13.8111 8.97045C13.8072 8.93784 13.8057 8.911 13.8052 8.90236C13.8039 8.87933 13.8033 8.85681 13.8029 8.84183C13.8021 8.80857 13.8015 8.76579 13.8011 8.71872C13.8003 8.6228 13.8 8.48895 13.8 8.33196C13.8 8.01708 13.8013 7.59909 13.8031 7.18271C13.8048 6.76601 13.807 6.34966 13.8088 6.03757L13.8201 4.2002L15.1837 4.58978ZM14.8658 8.85255C14.8658 8.85255 14.862 7.53879 14.867 6.56298L14.8728 5.52073L14.9708 5.54855C15.2857 5.63792 15.5869 5.75892 15.8705 5.90804C16.7007 6.34449 17.3813 7.02187 17.8202 7.85255C17.9713 8.13857 18.0938 8.44276 18.1838 8.76155V8.85255H14.8658ZM14.8728 5.52055C14.8728 5.52055 14.709 5.47419 14.8728 5.52073L14.8728 5.52055ZM19.39 11.9999C19.39 16.1421 16.0322 19.4999 11.89 19.4999C7.74788 19.4999 4.39001 16.1421 4.39001 11.9999C4.39001 7.85778 7.74788 4.49992 11.89 4.49992C11.9529 4.49992 12.0354 4.49843 12.1257 4.49681C12.3362 4.49301 12.5887 4.48846 12.7324 4.50026V10.9898H19.3226C19.3452 11.1582 19.3736 11.4999 19.3736 11.4999C19.3845 11.6652 19.39 11.8319 19.39 11.9999ZM11.3047 6.20012L11.2067 6.21412C8.45574 6.59912 6.26474 8.82512 6.08274 11.5971C5.85874 15.0201 8.62374 17.8971 12.0397 17.8201C14.9307 17.7571 17.3037 15.5101 17.6817 12.6541L17.6957 12.5491H12.8307C12.0257 12.5491 11.3607 11.9261 11.3047 11.1211V11.0231V6.20012Z\"/>\n    </SvgIcon>\n}\nexport const MiningIcon = () => {\n    return <SvgIcon width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M16.0273 3.91406L12.5417 7.20561L14.6093 9.23934L13.4155 10.4331L9.88443 6.34619L6.17153 10.1299L6.11507 10.2038C5.56228 10.9279 5.17112 11.5666 4.91464 12.2357C4.65466 12.914 4.56657 13.538 4.51544 14.1637C4.43 15.2073 4.7132 16.6663 5.19215 18.3728L5.4352 19.2387L6.31357 19.4323C7.9572 19.7945 9.31738 19.9979 10.2753 19.9468C11.4947 19.8817 13.2507 19.5252 14.3719 18.4041L18.2341 14.5419L14.1279 11.1897L15.3498 9.9678L17.3579 11.943L20.8738 8.70782L16.0273 3.91406ZM17.3924 9.87288L14.7031 7.22764L16.0032 5.99998L18.7012 8.66861L17.3924 9.87288ZM10.4825 13.9032L11.793 11.7387L12.1095 11.2159L9.81426 8.55934L7.30734 11.1141C6.50373 12.1667 6.21581 12.8401 6.08541 13.6406C6.05217 13.8446 6.02916 14.0569 6.01046 14.2858C5.94906 15.0348 6.1577 16.262 6.63635 17.9674C8.27181 18.3278 9.45813 18.4883 10.1953 18.4489C11.3011 18.3899 12.5893 18.0654 13.3112 17.3434L16.0001 14.6545L13.365 12.5033L10.4825 13.9032Z\"/>\n    </SvgIcon>\n}\nexport const MyLiquidityIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M17.5008 9.5C17.5008 10.7901 17.0566 11.9765 16.3128 12.9145C16.4161 12.9599 16.5174 13.0105 16.6161 13.0664L16.619 13.068C17.1399 13.3657 17.7287 13.5245 18.3286 13.5292C18.8963 13.5274 19.4529 13.3712 19.9387 13.0774L19.9515 13.0699C20.1796 12.938 20.4227 12.8338 20.6756 12.7596L20.6769 12.7592C20.7405 12.7406 20.7942 12.6975 20.8261 12.6394L22.1413 13.3606C21.9182 13.7673 21.5429 14.0688 21.0977 14.1989C20.9616 14.2389 20.8308 14.2947 20.7078 14.3653C19.9895 14.7979 19.1671 15.0274 18.3284 15.0292L18.3218 15.0292V15.0292C17.4637 15.0233 16.6215 14.7968 15.8763 14.3713C15.5989 14.2146 15.2858 14.1323 14.9672 14.1323C14.119 14.6766 13.1115 14.9943 12.0301 14.9999C11.8963 15.011 11.7618 15.0165 11.6269 15.0165C10.7743 15.0165 9.93654 14.7941 9.19629 14.3712C8.91879 14.2146 8.60553 14.1323 8.28686 14.1323C7.97022 14.1323 7.65892 14.2135 7.38275 14.3682C6.64874 14.8043 5.81072 15.0344 4.95686 15.0344C4.10166 15.0344 3.26237 14.8035 2.52755 14.3662C2.40413 14.2953 2.27278 14.2391 2.1362 14.199C1.91583 14.1346 1.71027 14.0275 1.53125 13.8838L2.47034 12.7141C2.49594 12.7347 2.52534 12.75 2.55686 12.7592L2.55817 12.7595C2.81101 12.8338 3.05409 12.938 3.28223 13.0699L3.29127 13.0751L3.29123 13.0752C3.79483 13.3757 4.37038 13.5344 4.95686 13.5344C5.54333 13.5344 6.11888 13.3757 6.62248 13.0752L6.63763 13.0664C6.92079 12.9062 7.22456 12.7888 7.5391 12.7168C6.88579 11.8122 6.5008 10.7011 6.5008 9.5C6.5008 6.46243 8.96323 4 12.0008 4C15.0384 4 17.5008 6.46243 17.5008 9.5ZM16.0008 9.5C16.0008 10.7936 15.3868 11.9437 14.4343 12.6749C14.0432 12.7379 13.6649 12.8699 13.3176 13.0664L13.3176 13.0663L13.3146 13.0681C12.8985 13.306 12.438 13.4526 11.9636 13.4998C9.77158 13.4799 8.0008 11.6967 8.0008 9.5C8.0008 7.29086 9.79166 5.5 12.0008 5.5C14.2099 5.5 16.0008 7.29086 16.0008 9.5ZM4.95686 19.0344C5.81072 19.0344 6.64874 18.8043 7.38275 18.3682C7.65892 18.2135 7.97022 18.1323 8.28686 18.1323C8.60553 18.1323 8.91879 18.2146 9.19629 18.3712C9.93654 18.7941 10.7743 19.0165 11.6269 19.0165C12.4795 19.0165 13.3173 18.7941 14.0576 18.3711C14.3351 18.2145 14.6483 18.1323 14.9669 18.1323C15.2855 18.1323 15.5988 18.2146 15.8763 18.3713C16.6215 18.7968 17.4637 19.0233 18.3218 19.0292V19.0292L18.3284 19.0292C19.1671 19.0274 19.9895 18.7979 20.7078 18.3653C20.8308 18.2947 20.9616 18.2389 21.0977 18.1989C21.5429 18.0688 21.9182 17.7673 22.1413 17.3606L20.8261 16.6394C20.7942 16.6975 20.7405 16.7406 20.6769 16.7592L20.6756 16.7596C20.4227 16.8338 20.1796 16.938 19.9515 17.0699L19.9387 17.0774C19.4529 17.3712 18.8963 17.5274 18.3286 17.5292C17.7287 17.5245 17.1399 17.3657 16.619 17.068L16.6161 17.0664C16.113 16.7818 15.5448 16.6323 14.9669 16.6323C14.3889 16.6323 13.8207 16.7818 13.3176 17.0664L13.3176 17.0663L13.3146 17.0681C12.8006 17.362 12.2189 17.5165 11.6269 17.5165C11.0348 17.5165 10.4531 17.362 9.93915 17.0681L9.93609 17.0664C9.433 16.7818 8.86484 16.6323 8.28686 16.6323C7.70887 16.6323 7.14072 16.7818 6.63763 17.0664L6.62248 17.0752C6.11888 17.3757 5.54333 17.5344 4.95686 17.5344C4.37038 17.5344 3.79483 17.3757 3.29123 17.0752L3.29127 17.0751L3.28223 17.0699C3.05409 16.938 2.81101 16.8338 2.55817 16.7595L2.55686 16.7592C2.52534 16.75 2.49594 16.7347 2.47034 16.7141L1.53125 17.8838C1.71027 18.0275 1.91583 18.1346 2.1362 18.199C2.27278 18.2391 2.40413 18.2953 2.52755 18.3662C3.26237 18.8035 4.10166 19.0344 4.95686 19.0344ZM10.9752 8.417C10.9752 8.73418 11.2618 8.93736 12.1539 9.13427V9.134C13.0457 9.33091 14.0008 9.65436 14.0008 10.6013C14.0008 11.2847 13.3918 11.6616 12.6254 11.7849V12.5H11.4469V11.7765C10.6924 11.6395 10.0477 11.2294 10.0008 10.4993H10.8653C10.9083 10.8928 11.2265 11.1994 12.0363 11.1994C12.9043 11.1994 13.0968 10.8323 13.0968 10.6032C13.0968 10.2939 12.9004 10.0002 11.918 9.80027C10.8222 9.57773 10.0715 9.19427 10.0715 8.42409C10.0715 7.78045 10.6847 7.36045 11.4469 7.22V6.5H12.6263V7.23009C12.9752 7.28903 13.2901 7.44693 13.5193 7.67784C13.7484 7.90874 13.8782 8.19893 13.8874 8.50073H13.0181C12.9946 8.084 12.7356 7.80036 12.036 7.80036C11.372 7.80036 10.9752 8.05345 10.9752 8.417Z\"/>\n    </SvgIcon>\n}\nexport const OrderMinIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M16.1267 9.44667C16.1463 9.50509 16.1597 9.56542 16.1667 9.62667V9.66667V11.3627C17.5437 11.9947 18.5 13.3857 18.5 15C18.5 17.2091 16.7091 19 14.5 19C13.6822 19 12.9217 18.7546 12.2881 18.3333H7.5C6.96957 18.3333 6.46086 18.1226 6.08579 17.7475C5.71071 17.3725 5.5 16.8638 5.5 16.3333V7C5.5 6.46957 5.71071 5.96086 6.08579 5.58579C6.46086 5.21071 6.96957 5 7.5 5H11.5333C11.6108 5.00956 11.6856 5.03449 11.7533 5.07333H11.8133C11.8819 5.10539 11.9449 5.14814 12 5.2L16 9.2C16.0519 9.25511 16.0946 9.31812 16.1267 9.38667V9.44667ZM14.8333 10.3333V11.0137C14.7234 11.0046 14.6123 11 14.5 11C12.2909 11 10.5 12.7909 10.5 15C10.5 15.7286 10.6948 16.4117 11.0351 17H7.5C7.32319 17 7.15362 16.9298 7.0286 16.8047C6.90357 16.6797 6.83333 16.5101 6.83333 16.3333V7C6.83333 6.82319 6.90357 6.65362 7.0286 6.5286C7.15362 6.40357 7.32319 6.33333 7.5 6.33333H10.8333V8.33333C10.8333 8.86377 11.044 9.37247 11.4191 9.74755C11.7942 10.1226 12.3029 10.3333 12.8333 10.3333H14.8333ZM13.8933 9L12.1667 7.27333V8.33333C12.1667 8.51014 12.2369 8.67971 12.3619 8.80474C12.487 8.92976 12.6565 9 12.8333 9H13.8933ZM14.5 18C16.1569 18 17.5 16.6569 17.5 15C17.5 13.3431 16.1569 12 14.5 12C12.8431 12 11.5 13.3431 11.5 15C11.5 16.6569 12.8431 18 14.5 18ZM13.4504 13.4256C13.5691 13.4085 13.6893 13.4 13.8111 13.4C14.3136 13.3992 14.8047 13.5494 15.2208 13.831L15.2522 13.8529L15.475 13.6313H15.5739L16.069 14.1265V14.2254L15.8511 14.4424L15.9108 14.5264C16.1541 14.8919 16.2972 15.3148 16.3256 15.7529L16.3311 15.92C16.3311 16.0415 16.3223 16.162 16.3052 16.2807L16.2361 16.3406L15.5258 16.3403L15.4573 16.2563C15.4795 16.1465 15.4911 16.0342 15.4911 15.92C15.4911 15.5785 15.3888 15.252 15.2007 14.9759L15.2455 15.0478L13.5941 16.7004H13.4952L13 16.2052V16.1063L14.6435 14.4613L14.6015 14.4372C14.3998 14.3295 14.1781 14.2643 13.9502 14.2458L13.8111 14.24C13.6967 14.24 13.5843 14.2513 13.4745 14.2738L13.3905 14.205L13.3902 13.495L13.4504 13.4256Z\"/>\n    </SvgIcon>\n}\nexport const MakerRebatesIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M7 6.5H17C17.2761 6.5 17.5 6.72386 17.5 7V17C17.5 17.2761 17.2761 17.5 17 17.5H7C6.72386 17.5 6.5 17.2761 6.5 17V7C6.5 6.72386 6.72386 6.5 7 6.5ZM5 7C5 5.89543 5.89543 5 7 5H17C18.1046 5 19 5.89543 19 7V17C19 18.1046 18.1046 19 17 19H7C5.89543 19 5 18.1046 5 17V7ZM16.5 8.59985V8.5H13.0708L12.7934 8.85895L14.0108 9.89105L12.4843 11.8649L10.8446 10.429L7.5 14.7348L8.39899 15.5L11.0021 12.1472L12.6393 13.5804L12.7649 13.422L12.7675 13.4238L12.8814 13.2774L13.3816 12.6499L13.3724 12.6413L16.5 8.59985Z\"/>\n\n    </SvgIcon>\n}\nexport const TransactionsIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M19.975 12.3816C19.4212 12.3869 16.7056 10.8186 16.6198 10.7368C16.4136 10.5402 16.4915 10.2954 16.702 10.2619C16.9124 10.2284 18.0942 10.0879 18.0942 10.0879C17.3679 8.14661 15.7472 6.59624 13.6201 6.09373C10.2251 5.29141 6.7142 7.56725 5.93825 11.0406C5.93157 11.0703 5.88468 11.4244 5.60347 11.4131C5.4131 11.4055 4.78944 11.1576 4.56397 11.0518C4.30656 10.9311 4.237 10.9623 4.31506 10.5737C5.1981 6.15801 9.72029 3.18211 14.0607 4.20032C17.6628 5.04518 20.1651 8.17083 20.44 11.7321C20.486 12.2094 20.2431 12.379 19.975 12.3816ZM14.3058 13.3494C14.6624 13.3494 14.9514 13.6382 14.9514 13.995C14.9514 14.3512 14.6624 14.6406 14.3058 14.6406H13.0146V15.4476C13.0146 15.8934 12.6534 16.2547 12.2076 16.2547C11.7618 16.2547 11.4006 15.8934 11.4006 15.4476V14.6406H10.1093C9.75279 14.6406 9.46375 14.3512 9.46375 13.995C9.46375 13.6381 9.7528 13.3494 10.1093 13.3494H11.4006V12.7038H10.1093C9.75279 12.7038 9.46375 12.4144 9.46375 12.0582C9.46375 11.7014 9.7528 11.4126 10.1093 11.4126H11.4006V11.3684L9.9678 9.93596C9.71389 9.68187 9.71389 9.27019 9.9678 9.01639C10.2217 8.7626 10.6333 8.76262 10.8872 9.01639L12.1967 10.3256L13.5113 9.01101C13.7652 8.75756 14.1768 8.75756 14.4307 9.01101C14.6846 9.26509 14.6846 9.67682 14.4307 9.93058L13.0147 11.3467V11.4126H14.3059C14.6624 11.4126 14.9515 11.7013 14.9515 12.0582C14.9515 12.4144 14.6624 12.7038 14.3059 12.7038H13.0147V13.3494L14.3058 13.3494ZM7.82879 14.2605C8.11201 14.4415 8.04375 14.8053 7.73251 14.8377C7.42128 14.87 6.44662 14.9559 6.44662 14.9559C7.21929 16.7667 8.78527 18.1944 10.8101 18.6726C14.2051 19.4746 17.677 17.3089 18.4532 13.8355C18.4691 13.7642 18.4686 13.7754 18.4964 13.6224C18.5241 13.4694 18.5691 13.2367 18.868 13.3402C19.1669 13.4438 19.8959 13.6581 20.123 13.7189C20.3501 13.7796 20.3245 13.8691 20.296 14.0801C20.2874 14.1443 20.2743 14.2031 20.2606 14.2649C19.2444 18.7811 14.821 21.5984 10.3808 20.5565C6.78298 19.7126 4.28214 16.5939 4.00233 13.0379C3.96438 12.4269 4.39608 12.3021 4.83738 12.5356C5.18455 12.7192 7.54557 14.0794 7.82879 14.2605Z\"/>\n    </SvgIcon>\n}\nexport const TradeIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M13.6517 15.8163C13.9445 15.5234 13.9445 15.0485 13.6517 14.7557C13.3588 14.4628 12.8839 14.4628 12.591 14.7557C11.7123 15.6343 10.2877 15.6343 9.40901 14.7557C9.11612 14.4628 8.64124 14.4628 8.34835 14.7557C8.05546 15.0485 8.05546 15.5234 8.34835 15.8163C9.81282 17.2808 12.1872 17.2808 13.6517 15.8163Z\"/>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M14.0443 4C11.7428 4 9.74576 5.29595 8.73991 7.19369C5.98293 8.13365 4 10.7457 4 13.8208C4 17.6868 7.13401 20.8208 11 20.8208C14.622 20.8208 17.6015 18.0699 17.9631 14.5435C19.2363 13.4443 20.0443 11.8166 20.0443 10C20.0443 6.68629 17.358 4 14.0443 4ZM14.0443 6C13.1176 6 12.2638 6.31508 11.585 6.8449C14.4504 7.08199 16.8261 9.04488 17.6703 11.6916C17.9104 11.1776 18.0443 10.6044 18.0443 10C18.0443 7.79086 16.2534 6 14.0443 6ZM11 8.8208C8.23858 8.8208 6 11.0594 6 13.8208C6 16.5822 8.23858 18.8208 11 18.8208C13.7614 18.8208 16 16.5822 16 13.8208C16 11.0594 13.7614 8.8208 11 8.8208Z\"/>\n    </SvgIcon>\n}\nexport const AmmIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M11.4214 14.8426V11.1267H8V9.12671H11.4214V6H13.4214V9.12671H16.8426V11.1267H13.4214V14.8426H11.4214ZM8 18H16.8426V16H8V18Z\"/>\n    </SvgIcon>\n}\nexport const OrderIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M5 5H19V19.3874L12 17.0541L5 19.3874V5ZM7 7V16.6126L12 14.9459L17 16.6126V7H7Z\"/>\n    </SvgIcon>\n}\n\nexport const PowerIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M8.09968 8.00857L8.09972 8.0086L8.10277 8.00555C8.37315 7.73517 8.37315 7.32039 8.10277 7.05001C7.83239 6.77963 7.41761 6.77963 7.14723 7.05001C5.84734 8.3499 5.09986 10.0975 5.00027 11.9898L5 11.9898V12C5 15.8504 8.14956 19 12 19C15.8504 19 19 15.8504 19 12C19 10.0029 18.2006 8.15074 16.7479 6.84828L16.7415 6.8426L16.7347 6.8375C16.4687 6.63798 16.0679 6.63627 15.8 6.90417L15.7902 6.91395L15.7819 6.925C15.5824 7.19103 15.5807 7.59182 15.8486 7.85972L15.8483 7.86L15.8577 7.86819C17.0292 8.89911 17.6875 10.4006 17.6875 12C17.6875 15.1009 15.1496 17.6389 12.0486 17.6389C8.94767 17.6389 6.40972 15.1009 6.40972 12C6.40972 10.4963 7.02081 9.04053 8.09968 8.00857ZM12.7778 5.68056C12.7778 5.49054 12.7136 5.31708 12.5871 5.19063C12.4607 5.06419 12.2872 5 12.0972 5C11.9072 5 11.7337 5.06419 11.6073 5.19063C11.4809 5.31708 11.4167 5.49054 11.4167 5.68056V11.5139C11.4167 11.7039 11.4809 11.8774 11.6073 12.0038C11.7337 12.1303 11.9072 12.1944 12.0972 12.1944C12.2872 12.1944 12.4607 12.1303 12.5871 12.0038C12.7136 11.8774 12.7778 11.7039 12.7778 11.5139V5.68056ZM7.28472 7.1875C7.47917 6.99306 7.77083 6.99306 7.96528 7.1875C8.15972 7.38194 8.15972 7.67361 7.96528 7.86806C6.84722 8.9375 6.21528 10.4444 6.21528 12C6.21528 13.554 6.83115 14.9712 7.83088 16.0195C6.83126 14.9712 6.21547 13.5541 6.21547 12.0002C6.21547 10.4446 6.84741 8.93769 7.96547 7.86825C8.15991 7.6738 8.15991 7.38213 7.96547 7.18769C7.77102 6.99325 7.47936 6.99325 7.28491 7.18769C6.02102 8.45158 5.29186 10.153 5.19463 12.0002C5.19463 13.8064 5.90777 15.4542 7.0664 16.6758C5.90766 15.4542 5.19444 13.8063 5.19444 12C5.29167 10.1528 6.02083 8.45139 7.28472 7.1875ZM7.22257 16.8352C8.45369 18.052 10.1432 18.8057 12.0002 18.8057C15.7432 18.8057 18.8057 15.7432 18.8057 12.0002C18.8057 10.2354 18.165 8.5907 16.9926 7.35692C18.1649 8.59068 18.8056 10.2353 18.8056 12C18.8056 15.7431 15.7431 18.8056 12 18.8056C10.1431 18.8056 8.45368 18.0518 7.22257 16.8352ZM16.8121 7.17427C16.7488 7.11272 16.6841 7.0523 16.6181 6.99306C16.4236 6.84722 16.1319 6.84722 15.9375 7.04167C15.7917 7.23611 15.7917 7.52778 15.9861 7.72222C15.9862 7.72228 15.9862 7.72235 15.9863 7.72241C16.0361 7.7662 16.0849 7.8108 16.1329 7.85619C16.0849 7.81073 16.0359 7.76607 15.9861 7.72222C15.7919 7.52778 15.7919 7.23624 15.9377 7.04186C16.1321 6.84741 16.4238 6.84741 16.6182 6.99325C16.6843 7.05243 16.7489 7.11278 16.8121 7.17427ZM16.3137 8.0355C17.323 9.08419 17.8819 10.5022 17.8819 12C17.8819 15.2083 15.2569 17.8333 12.0486 17.8333C10.457 17.8333 9.00891 17.1873 7.95367 16.1445C9.00892 17.1874 10.4571 17.8335 12.0488 17.8335C15.2571 17.8335 17.8821 15.2085 17.8821 12.0002C17.8821 10.5023 17.3231 9.08421 16.3137 8.0355ZM12.4477 5.32623C12.534 5.41139 12.5833 5.53364 12.5833 5.68056V11.5139C12.5833 11.8056 12.3889 12 12.0972 12C11.9514 12 11.83 11.9514 11.7449 11.8664C11.6599 11.7813 11.6113 11.6599 11.6113 11.5141V5.68075C11.6113 5.38908 11.8057 5.19463 12.0974 5.19463C12.2421 5.19463 12.3628 5.24245 12.4477 5.32623ZM12.0972 5.19444C12.242 5.19444 12.3628 5.24233 12.4477 5.32623C12.5341 5.4114 12.5835 5.53372 12.5835 5.68075V11.5141C12.5835 11.8057 12.3891 12.0002 12.0974 12.0002C11.9515 12.0002 11.83 11.9515 11.7449 11.8664C11.6598 11.7813 11.6111 11.6598 11.6111 11.5139V5.68056C11.6111 5.38889 11.8056 5.19444 12.0972 5.19444Z\"/>\n    </SvgIcon>\n}\n\n","export const hexToRGB = (hex:string, alpha?:string|number)=> {\n    var r = parseInt(hex.slice(1, 3), 16),\n        g = parseInt(hex.slice(3, 5), 16),\n        b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha!==undefined) {\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha.toString() + \")\";\n    } else {\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n}\nexport const ColorDarkDefault = Object.freeze({\n    primary: '#3B5AF4',\n    primaryHover: '#627BF6',\n    primaryPressed: '#293EAA',\n    secondary: '#1890FF',\n    secondaryHover: '#46A6FF',\n    secondaryPressed: '#1064B2',\n    success: '#00BBA8',\n    warning: '#FBA95C',\n    error: '#FF5677',\n    textPrimary: '#FFFFFF',\n    textSecondary: '#A4ABC1',\n    textDisable: `${hexToRGB('#ffffff', '0.25')}`,\n    disable:'#404871',\n    border: '#49527D',\n    borderHover: '#828BA7',\n    divide: '#444C75',\n    box: '#2D2F4B',\n    boxSecondary: '#687295',\n    boxHover:  `${hexToRGB('#ffffff', '0.03')}`,\n    popBg: '#393F64',\n    globalBg: '#1F2034',\n    boxLinear: 'linear-gradient(194.79deg, #322C53 17.96%, #262B50 44.29%, #32314F 96.93%)',\n    mask: `${hexToRGB('#000000', '0.68')}`,\n    white: '#ffffff',\n    dark: '#000000',\n    opacity: `${hexToRGB('#000000', '0')}`,\n    star:`#F0B90B`,\n    /********************Case for provider*******************/\n    shadow: ` 0px 4px 4px ${hexToRGB('#000000', '.25')}`\n    /********************Case for provider*******************/\n})\nexport const ColorLightDefault = Object.freeze({...ColorDarkDefault})\nexport type ColorBaseInterface = typeof ColorDarkDefault\n\n//provider\n// primary: '#3B5AF4',\n// primaryLight: '#1C96FF',\n// primaryDark: '#0426CC',\n// primaryHover: '#627BF6',\n// secondary: '#F0B90B',\n// secondaryLight: '#F0B90B',\n// secondaryDark: '#F3A008',\n// info: '#1890FF',\n// infoHover: '#46A6FF',\n// infoVisited: '#1064B2',\n// success: '#00BBA8',\n// error: '#FF5677',\n// warning: '#F2994A',\n// textPrimary: \"#FFFFFF\",\n//textPrimaryLight: \"#E6EEFF\",\n// textSecondary: \"#A4ABC1\",\n// textDisable: \"#A1A7BB\",\n// textHint: \"rgba(255, 255, 255, 0.38)\",\n// textBtnDisabled: 'rgba(255, 255, 255, 0.25)',\n// backgroundGlobal: '#1F2034',\n// backgroundBox: '#2D2F4B',  //#191C30\n// backgroundHeader: 'rgba(45, 47, 75, 0.5)',\n// backgroundSecondary: '#0D1746', //'#1F2126',\n// backgroundDisabled: '#404871',\n// backDrop: 'rgba(0,0,0,.1)',\n// blur: '#A1A7BB',\n// borderColor: '#49527D',\n// borderHover: '#393F64',\n// borderInputHover: '#828BA7',\n// backgroundField:'#212530',\n// backgroundFieldOpacity:'rgba(255,255,255,.1)',\n// backgroundInput: '#343754',\n// backgroundInputOpacity:'rgba(255, 255, 255, .1)',\n// backgroundSwapPanelLinear: 'linear-gradient(194.79deg, #322C53 17.96%, #262B50 44.29%, #32314F 96.93%)',\n// backgroundMenuListHover: 'rgba(255, 255, 255, 0.03);',\n// outline: '#282C48',\n// focus: \"rgba(235, 238, 255, 0.6)\",\n// vipBgColor: \"rgba(255, 242, 202, 0.2)\",\n// shadowBox: \"0px 4px 38px rgba(0, 0, 0, 0.16)\",\n// modalMask: 'rgba(0, 0, 0, 0.7)',\n// dividerColor: 'rgba(255, 255, 255, 0.1)',\n// checkboxDefault: '#687295',\n// background: () => {\n//      return {\n//         // default: ColorDarkDefault.backgroundBox,\n//         // bg: ColorDarkDefault.backgroundGlobal,\n//         // popupBg1: ColorDarkDefault.backgroundSwapPanelLinear,\n//         // popupBg2: ColorDarkDefault.backgroundSecondary,\n//         // active: ColorDarkDefault.textSecondary,\n//         // outline: ColorDarkDefault.outline,\n//         // backDrop: ColorDarkDefault.backDrop,\n//         // field:ColorDarkDefault.backgroundField,\n//         // fieldOpacity: ColorDarkDefault.backgroundFieldOpacity,\n//         // hover: ColorDarkDefault.backgroundFieldOpacity,\n//         // disabled: ColorDarkDefault.backgroundDisabled,\n//         // swap: ColorDarkDefault.backgroundSwapPanelLinear,\n//         // header: ColorDarkDefault.backgroundHeader,\n//     }\n// },\n// border: () => {\n//     return {\n//         default: ColorDarkDefault.borderColor,\n//         selected: ColorDarkDefault.primaryLight,//'#1C96FF',\n//         blur: ColorDarkDefault.blur,//ColorDarkDefault.textDisable\n//         focus: ColorDarkDefault.focus,\n//     }\n// }\n\n","import { css } from \"@emotion/react\";\n\nexport default css`\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  box-sizing: border-box;\n}\n\naddress,\ncaption,\ncite,\ncode,\ndfn,\nem,\nstrong,\nth,\nvar,\nb {\n  font-weight: normal;\n  font-style: normal;\n}\n\nabbr,\nacronym {\n  border: 0;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\nhtml {\n  text-size-adjust: 100%;\n  box-sizing: border-box;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote {\n  &:before,\n  &:after {\n    content: '';\n    content: none;\n  }\n}\nq {\n  &:before,\n  &:after {\n    content: '';\n    content: none;\n  }\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ncaption,\nth {\n  text-align: left;\n}\ntextarea {\n  resize: none;\n}\na {\n  text-decoration: none;\n  cursor: pointer;\n}\nbutton {\n  padding: 0;\n  border: none;\n  background: none;\n}\n  html{\n    overscroll-behavior-x:none;\n    overscroll-behavior-y:none;\n  }\n`","export default __webpack_public_path__ + \"static/media/Inter-Medium.18b8c68e.ttf\";","export default __webpack_public_path__ + \"static/media/363123_0_0.f35f8477.ttf\";","import { css } from \"@emotion/react\";\nimport reset from './reset';\n// @ts-ignore\nimport InterMedium from '../fonts/english/Inter-Medium.ttf';\n// @ts-ignore\n// import GilroyMedium from '../fonts/english/DINCondensed.ttf';\nimport DINCondensed from  '../fonts/english/DINCondensed/363123_0_0.ttf'\n\nimport { ColorDarkDefault, ColorLightDefault,hexToRGB } from \"./color-lib\";\n\nexport const fontDefault = {\n    h1: '3.8rem',\n    h2: '3.0rem',\n    h3: '2.4rem',\n    h4: '2.0rem',\n    h5: '1.6rem',\n    h6: '1.4rem',\n    body1: '1.4rem',\n    body2: '1.2rem'\n}\n\nexport const\n    refreshTime = 10;\nexport const colorBase = ({theme}: any) => css`\n  html {\n    --color-primary: ${theme.colorBase.primary};\n    --color-primary-hover: ${theme.colorBase.primaryHover};\n    --color-primary-pressed: ${theme.colorBase.primaryPressed};\n    --color-secondary: ${theme.colorBase.secondary};\n    --color-secondary-hover: ${theme.colorBase.secondaryHover};\n    --color-secondary-pressed: ${theme.colorBase.secondaryPressed};\n    --color-success: ${theme.colorBase.success};\n    --color-warning: ${theme.colorBase.warning};\n    --color-error: ${theme.colorBase.error};\n    --color-text-primary: ${theme.colorBase.textPrimary};\n    --color-text-secondary: ${theme.colorBase.textSecondary};\n    --color-text-disable: ${theme.colorBase.textDisable};\n    --color-disable: ${theme.colorBase.disable};\n    --color-border: ${theme.colorBase.border};\n    --color-border-hover: ${theme.colorBase.borderHover};\n    --color-divide: ${theme.colorBase.divide};\n    --color-pop-bg: ${theme.colorBase.popBg};\n    --color-box: ${theme.colorBase.box};\n    --color-box-secondary: ${theme.colorBase.boxSecondary};\n    --color-box-hover: ${theme.colorBase.boxHover};\n    --color-box-linear: ${theme.colorBase.boxLinear};\n    --color-global-bg: ${theme.colorBase.globalBg};\n    --color-star: ${theme.colorBase.star};  \n    /********************Case for shadow*******************/\n    --color-mask:  ${theme.colorBase.mask};\n    --shadow: ${theme.colorBase.shadow};\n    --opacity: ${theme.colorBase.opacity};\n    /********************Case for special*******************/\n    --vip-bg: ${hexToRGB(theme.colorBase.warning, '0.2')};\n    --vip-text: ${theme.colorBase.warning};\n    --network-bg: ${hexToRGB(theme.colorBase.warning, '0.2')};\n    --network-text: ${theme.colorBase.warning};\n    --provider-btn: ${hexToRGB(theme.colorBase.white, '0.1')};\n    --provider-hover: ${hexToRGB(theme.colorBase.white, '0.03')};\n    --field-opacity: ${hexToRGB(theme.colorBase.white, '0.1')};\n    --auto-refresh-color: ${theme.colorBase.primary};\n    \n  }\n`;\nexport const scrollbarDefault = ({theme}: any) => css`\n  html {\n    scrollbar-face-color: ${theme.colorBase.box};\n    scrollbar-base-color: ${theme.colorBase.box};\n    scrollbar-3dlight-color: ${theme.colorBase.box};\n    scrollbar-highlight-color: ${theme.colorBase.box};\n    scrollbar-track-color: ${theme.colorBase.box};\n    scrollbar-arrow-color: ${theme.colorBase.box};\n    scrollbar-shadow-color: ${theme.colorBase.box};\n    scrollbar-dark-shadow-color: ${theme.colorBase.box};\n  }\n  \n  //::-webkit-scrollbar { width: 8px; height: 3px; position: absolute}\n    // ::-webkit-scrollbar-button {  background-color: ${theme.colorBase.textHint};}\n  ::-webkit-scrollbar-track {\n    background-color: ${theme.colorBase.box};\n    border-radius: 3px;\n  }\n\n  ::-webkit-scrollbar-track-piece {\n    background-color: ${theme.colorBase.box};\n    border-radius: 3px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    height: 50px;\n    background-color: ${theme.colorBase.blur};\n    border-radius: 3px;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background-color: ${theme.colorBase.box};\n  }\n\n  ::-webkit-resizer {\n    background-color: ${theme.colorBase.box};\n  }\n`;\nexport const globalCss = ({theme}: any) => css`\n  ${colorBase({theme})}\n  ${scrollbarDefault({theme})};\n  ${reset}\n  html, body {\n    position: relative;\n    // @font-face {\n    //   font-family: 'Inter-Medium';\n    //   src: url(${InterMedium}) format('truetype');\n    //   font-weight: normal;\n    //   font-style: normal;\n    // }\n    // @font-face {\n    //   font-family: 'DINCondensed';\n    //   src: url(${DINCondensed}) format('truetype');\n    //   font-weight: normal;\n    //   font-style: normal;\n    // }\n    \n    height: 100%;\n    box-sizing: border-box;\n    -moz-box-sizing: border-box; /* Firefox */\n    -webkit-box-sizing: border-box; /* Safari */\n    // font-family: DINCondensed, Helvetica, Arial, \"华文细黑\", \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"宋体\", Heiti, \"黑体\", sans-serif;\n    font-family: Roboto;\n    font-size: 62.5%; /* 62.5% of 16px = 10px */\n\n  }\n\n  body {\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n\n    &:before {\n      content: '';\n      position: fixed;\n      z-index: -1;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n  }\n\n  h1 {\n    font-size: ${fontDefault.h1};\n  }\n\n  h2 {\n    font-size: ${fontDefault.h2};\n  }\n\n  h3 {\n    font-size: ${fontDefault.h3};\n  }\n\n  h4 {\n    font-size: ${fontDefault.h4};\n  }\n\n  h5 {\n    font-size: ${fontDefault.h5};\n  }\n\n  h6 {\n    font-size: ${fontDefault.h6};\n  }\n\n  html {\n   \n    overflow-y: scroll;\n    --auto-refresh-duration: ${refreshTime-1}s;\n    --durationInternal: calc(var(--auto-refresh-duration) * 2);\n    --delay: calc(var(--auto-refresh-duration) / 2);\n    --header-row-height: 44px;\n    --header-height: 64px;\n    --header-menu-list-height: 72px;\n    --header-menu-list-width: 250px;\n    --desktop-max-width: 1200px;\n    --desktop-min-width: 1024px;\n    --btn-Input-height: 48px;\n    //--btn-max-width: 160px;\n    --btn-min-width: 100px;\n    --coin-min-width: 80px;\n    --datePicker-width: 320px;\n    --datePicker-height: 232px;\n    --list-coin-item: 44px;\n    --header-menu-icon-size: 20px;\n    --list-menu-coin-size: 24px;\n    --slippage-pop-width: 184px;\n    --slippage-pop-height: 88px ;\n    --chart-title-coin-size: 28px;\n    --btn-icon-size-small: 24px;\n    --btn-icon-size: 36px;\n    --svg-size: 14px;\n    --svg-size-large: 24px;\n    --swap-box-height: 540px; /** js used also **/\n    --panel-setting-height: 680px;\n    --panel-setting-width: 800px;\n    --modal-width: 480px;\n    --modal-height: 400px;\n    --swap-box-width: 338px;\n    --toolbar-row-height: 56px; /** js used also  40 + 56 = 96  CoinList.tsx **/\n    --toolbar-row-height-minus: -56px;\n    --toolbar-row-padding: 40px; /** js used also  40 + 56 = 96  CoinList.tsx **/\n    --toolbar-row-padding-minus: -40px;\n    --sub-menuItem-width: 200px;\n    --sub-menuItem-height: 52px;\n    --lage-modal-width: 580px;\n    --lage-modal-height: 620px;\n    --gateway-icon-size: 56px;\n    --account-button-fixed-width: 88px;\n    --account-button-fixed-height: 72px;\n    --empty-size: 130px;\n    --account-modal-box-width:284px;\n    --walletconnect-width:160px\n\n  }\n\n  //div {\n  //  -moz-user-select: none;\n  //  -webkit-user-select: none;\n  //  user-select: none;\n  //}\n\n  select {\n\n    appearance: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n\n    &::-ms-expand {\n      display: none;\n    }\n\n  }\n\n  . draggable_panel {\n    border: 1px solid var(--color-border);\n    height: 100%;\n  }\n\n  . draggable_header {\n    display: none;\n    cursor: move;\n    height: 0px;\n    width: 100%;\n  }\n\n  .rdg.rdg {\n    --background-color: inherit;\n  }\n`\nexport { ColorDarkDefault, ColorLightDefault }\n","import { ColorDarkDefault, ColorLightDefault } from \"../css/color-lib\";\nimport { fontDefault } from \"../css/global\";\nimport { ThemeKeys } from '../interface';\n\n\nexport const pxToRem = (px: any, oneRemPx = 10) => `${px / oneRemPx}rem`;\nexport const unit: number = 8;\nexport const borderFunc = (themeMode: ThemeKeys) => {\n    const colorBase = themeMode === 'dark' ? ColorDarkDefault : ColorLightDefault\n    const borderColor = {\n        default: colorBase.border,\n        primary: colorBase.secondary,\n        selected: colorBase.secondaryPressed,\n        focus: colorBase.borderHover,\n    }\n    return {\n        defaultBorder: `1px solid ${borderColor.default}`,\n        defaultRadius: `${unit / 2}px`,\n        FontDefault: fontDefault,\n        defaultFrame: ({\n                           d_W = 1,\n                           d_R = 1,\n                           c_key = 'primary'\n                       }: { d_W?: number, d_R?: number, c_key?: 'primary' | 'selected' | 'focus' | string }) => {\n            let color;\n            switch (c_key) {\n                case 'primary':\n                case 'selected':\n                case 'focus':\n                    color = borderColor[ c_key ];\n                    break;\n                default:\n                    color = c_key;\n            }\n            return `\n        border: ${d_W}px solid ${color};\n        border-radius: ${d_R * unit}px;\n       `\n        },\n        borderConfig: ({\n                           d_W = 1,\n                           c_key = 'primary'\n                       }: { d_W?: number, c_key?: 'primary' | 'selected'  | 'focus' | string }) => {\n            let color;\n            switch (c_key) {\n                case 'primary':\n                case 'selected':\n                case 'focus':\n                    color = borderColor[ c_key ];\n                    break;\n                default:\n                    color = c_key;\n            }\n            return `${d_W}px solid ${color}`;\n        }\n    }\n}\n\n","import { borderFunc, pxToRem } from './utils';\nimport { ComponentsOverrides } from '@material-ui/core/';\nimport { rgba } from 'polished';\nimport { fontDefault } from '../css/global';\n\nconst opacity = 1;\nexport const unit = 8;\nexport const radius = 4;\nexport const checkBoxSize = 18;\nconst hr = ({colorBase}: any) => {\n    return {\n        borderRadius: `${radius}px`,\n        content: '\\\"\\\"',\n        margin: `0 ${unit}px`,\n        display: 'block',\n        height: `2px`,\n        backgroundColor: colorBase.primary,\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n    }\n}\n\nexport const MuiCheckbox = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiCheckbox'] } => {\n    const width = pxToRem(checkBoxSize);\n    const height = pxToRem(checkBoxSize);\n    return {\n        styleOverrides: {\n            root: {\n                height: pxToRem(32),\n                ' svg': {\n                    width,\n                    height,\n                },\n                '&.MuiCheckbox-colorDefault': {\n                    // color: colorBase.textPrimary,\n                    color: colorBase.checkboxDefault,\n                },\n                '&:hover': {\n                    backgroundColor: 'inherit',\n                },\n                '&.Mui-checked': {\n                    color: colorBase.textPrimary,\n                },\n            },\n        }\n    }\n}\nexport const MuiCard = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                backgroundColor: colorBase.box,\n                padding: pxToRem(24),\n            },\n        }\n    }\n}\n\nexport const MuiCardContent = () => {\n    return {\n        styleOverrides: {\n            root: {\n                padding: pxToRem(8),\n            }\n        }\n    }\n}\n\nexport const MuiCardActions = () => {\n    return {\n        styleOverrides: {\n            root: {\n                padding: 0,\n            }\n        }\n    }\n}\n\nexport const MuiLink = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                color: colorBase.secondary,\n                '&:hover': {\n                    color: colorBase.secondaryHover,\n                },\n                '&.Mui-selected': {\n                    color: colorBase.secondaryPressed,\n                }\n            }\n        }\n    }\n}\n\nexport const MuiTextField = (): { styleOverrides: ComponentsOverrides['MuiTextField'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                '.MuiFormHelperText-root': {\n                    marginLeft: 0,\n                    marginRight: 0,\n                    textAlign: 'right',\n                }\n            }\n        }\n    }\n}\n\n\nexport const MuiModal = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                color: colorBase.textPrimary,\n                ' .MuiBackdrop-root': {\n                    zIndex: -1,\n                    backgroundColor: colorBase.mask,\n                },\n            }\n        }\n    }\n}\n\nexport const MuiToolbar = () => {\n    return {\n        styleOverrides: {\n            root: {height: 'var(--header-height)'}\n        }\n    }\n}\nexport const MuiSwitch = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiSwitch'] } => {\n    const borderWidth = 2;\n    const padding =  borderWidth + 2;\n    const width = pxToRem(46);\n    const height = pxToRem(24);\n    const size = pxToRem(16);\n    // const gap =  (38 - (borderWidth + padding)*2);\n    return {\n        styleOverrides: {\n            root: {\n                width,\n                height,\n                padding: 0,\n                margin: pxToRem(8),\n                overflow: 'unset',\n                '& .MuiIconButton-root': {\n                    padding: pxToRem(padding),\n                    height: 'auto',\n                    width: 'auto'\n                },\n                '& .Mui-checked': {\n                    color: colorBase.textPrimary,\n                    // transform: `translateX(-${gap}px)`,\n                    '& + .MuiSwitch-track.MuiSwitch-track': {\n                        backgroundColor: 'transparent',\n                        opacity: opacity,\n                        borderWidth,\n                        border: `solid ${colorBase.primary}`,\n                    },\n                    '& .MuiSwitch-thumb': {\n                        backgroundColor: colorBase.primary,\n                        opacity: opacity,\n                    }\n                },\n                '& .MuiIconButton-root.Mui-disabled': {\n                    '&.Mui-checked .MuiSwitch-thumb': {\n                        backgroundColor: colorBase.primary,\n                    },\n                    '& + .MuiSwitch-track': {\n                        backgroundColor: colorBase.divide,\n                        border: 'none',\n                        opacity: 0.6 * opacity,\n                    },\n                    '& .MuiSwitch-thumb': {\n                        backgroundColor: colorBase.textSecondary,\n                        opacity: .6 * opacity,\n                    }\n                }\n\n            },\n            colorPrimary: {},\n            track: {\n                borderRadius: 40,\n                border: `solid ${colorBase.textSecondary}`,\n                borderWidth,\n                backgroundColor: 'transparent', //${colorBase.textSecondary},\n                '&&': {\n                    opacity: opacity,\n                },\n                //transition: theme.transitions.create(['background-color', 'border']),\n                boxSizing: 'border-box',\n            },\n\n            thumb: {\n                boxShadow: 'none',\n                backgroundColor: colorBase.textSecondary, // this.palette.grey[400],\n                width: size,\n                height: size,\n            },\n\n        }\n    }\n}\n\nexport const MuiButton = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiButton'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                'textTransform': 'capitalize',\n                '&:not($sizeLarge):not($sizeSmall) $label': {\n                    fontSize: '1.4rem',\n\n                    // font: 'normal normal 700 0.875rem/1.6875rem Open Sans',\n                    // color: 'green'\n                },\n                fontFamily: 'Roboto',\n                fontSize: pxToRem(14),\n                borderRadius: pxToRem(4),\n                fontWeight: 'normal',\n                paddingLeft: pxToRem(12),\n                paddingRight: pxToRem(12),\n            },\n            text: {\n                color: colorBase.secondary,\n                fontSize: '1.4rem',\n                '&:hover': {\n                    color: colorBase.secondaryHover,\n                    backgroundColor: 'inherit',\n                },\n                '&:active': {\n                    color: colorBase.secondaryPressed\n                },\n                '&:disabled': {\n                    color: colorBase.disable\n                }\n            },\n            contained: {\n                height: pxToRem(40),\n                fontSize: pxToRem(14),\n                backgroundColor: colorBase.primary,\n                '&:hover': {\n                    backgroundColor: colorBase.primaryHover,\n                },\n                '&.Mui-disabled': {\n                    // backgroundColor: colorBase.border().blur,\n                    backgroundColor: colorBase.defaultDisable,\n                    color: colorBase.textBtnDisabled,\n                    // backgroundImage: `url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='4' ry='4' stroke='%23FFFFFF33' stroke-width='1' stroke-dasharray='4%25%2c 8%25' stroke-dashoffset='5' stroke-linecap='square'/%3e%3c/svg%3e\")`\n\n                },\n            },\n            sizeLarge: {\n                height: pxToRem(48),\n                fontSize: '2.0rem',\n                fontWeight: 'normal',\n                //     '& .MuiButton-label': {\n                //\n                // }\n            },\n            sizeSmall: {\n                height: pxToRem(32),\n                fontSize: '1.6rem'\n                //     '& $label': {\n                //\n                // },\n\n            },\n            outlinedSizeSmall: {\n                height: pxToRem(24),\n                fontSize: '1.2rem'\n            },\n            outlined: {\n                height: pxToRem(32),\n                // boxShadow: '0px 4px 62px rgba(0, 0, 0, 0.25)',\n                fontSize: '1.4rem',\n                fontWeight: 'normal',\n                color: colorBase.textSecondary,\n                borderColor: colorBase.border,\n                backgroundColor: colorBase.box,\n                '&:hover': {\n                    color: colorBase.textPrimary,\n                    borderColor: colorBase.textPrimary,\n                    backgroundColor: colorBase.box,\n                },\n                '&.Mui-disabled': {\n                    backgroundColor: colorBase.defaultDisable,\n                    color: colorBase.textBtnDisabled,\n                    // border: '1px dashed',\n                    borderColor: colorBase.border\n                    // backgroundImage: `url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='4' ry='4' stroke='%23FFFFFF33' stroke-width='1' stroke-dasharray='4%25%2c 8%25' stroke-dashoffset='5' stroke-linecap='square'/%3e%3c/svg%3e\")`\n                },\n            },\n            // outlinedSecondary:{\n            //     borderColor: colorBase.primaryLight,\n            //     color: colorBase.primaryLight,\n            //     '&:hover': {borderColor: colorBase.primary},\n            // },\n        }\n\n    }\n}\n\n\n// @ts-ignore\nexport const MuiPopover = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiPopover'] } => {\n    return {\n        styleOverrides: {}\n\n    }\n}\n// export const MuiBackdrop = ({colorBase}: any) => {\n//     return {\n//         styleOverrides: {\n//             root: {\n//                 zIndex: -1,\n//\n//             }\n//         }\n//     }\n// }\n\nexport const MuiPaper = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiPaper'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                borderRadius: pxToRem(8),\n                backgroundImage: 'none',\n                backgroundColor: colorBase.popBg,\n                '&.MuiPopover-paper': {\n                    backgroundImage: 'none',\n                    // backgroundColor: colorBase.popBg\n                    // backgroundColor: colorBase.background().popupBg2,\n                    // backgroundColor: colorBase.popBg,\n                },\n            }\n        }\n\n    }\n}\nexport const MuiSvgIcon = () => {\n    return {\n        styleOverrides: {\n            root: {\n                height: 'var(--svg-size)',\n                width: 'var(--svg-size)',\n                // margin: '-4px',\n                '&.MuiSvgIcon-fontSizeLarge': {\n                    height: 'var(--svg-size-large)',\n                    width: 'var(--svg-size-large)',\n                    // margin: '-6px',\n                },\n                '&.tag': {\n                    width: 'auto',\n                    height: 'auto',\n                }\n            },\n\n        }\n    }\n}\n//@ts-ignore\nexport const MuiRadio = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                ' svg': {\n                    height: 'var(--svg-size)',\n                    width: 'var(--svg-size)',\n                }\n            }\n        }\n\n    }\n}\n\n\n\n\nexport const MuiInputLabel = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiInputBase'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                fontSize: '1.4rem',\n                height: 20,\n                transform: 'none',\n                top: 0,\n                left: 0,\n                '&.Mui-focused': {\n                    color: colorBase.textSecondary,\n                },\n                '&.Mui-disabled ': {\n                    color: colorBase.textSecondary,\n                }\n            }\n        }\n    }\n}\nexport const MuiInputBase = ({colorBase,themeMode}: any): { styleOverrides: ComponentsOverrides['MuiInputBase'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                'label + &': {\n                    marginTop: 24,\n                },\n                position: 'relative',\n                fontSize: '1.4rem',\n                backgroundColor: colorBase.box,\n                border: borderFunc(themeMode).borderConfig({c_key:colorBase.border}),//`1px solid ${colorBase.border}`,\n                borderRadius: 4,\n                '&:not(.MuiFormControl-fullWidth)': {\n                    // width: 'var(--btn-min-width)',\n                    minWidth: 'var(--btn-min-width)',\n                    // maxWidth: 'var(--btn-max-width)',\n                },\n                '& .MuiListItemText-multiline': {\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    flexWrap: 'noWrap',\n                    justifyContent: 'space-between',\n                    margin: 0,\n                    height:'inherit',\n                },\n                '& fieldset': {\n                    display: 'none',\n                },\n                '& svg': {\n                    pointerEvents: 'none',\n                    color: 'var(--color-text-secondary)',\n                },\n                paddingRight: 0,\n                '&:hover': {\n                    border: borderFunc(themeMode).borderConfig({c_key:colorBase.borderHover}),//`1px solid ${colorBase.border}`,\n                },\n                '&:disabled': {\n                    backgroundColor: colorBase.defaultDisable,\n                    borderColor: colorBase.defaultDisable,\n                    color: colorBase.textBtnDisabled,\n                },\n                '.MuiSelect-iconOpen': {\n                    transform: 'rotate(180deg)',\n                },\n                ' .MuiSelect-select': {\n                    padding: 0,\n                    border: 'transparent',\n                    backgroundColor: 'transparent',\n                    color: 'var(--color-text-secondary)',\n                    '&$focused': {\n                        background: 'transparent',\n                    },\n\n                    ' svg': {\n                        right: '.4rem',\n                        top: 1,\n                        position: 'absolute',\n                        pointerEvents: 'none',\n                        transition: 'fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n                        color: 'var(--color-text-secondary)'\n                    },\n                    '&.MuiInputBase-root': {\n                        minWidth: 'auto',\n                        width: 'auto'\n                    }\n                },\n                '&.MuiOutlinedInput-root': {\n                    padding: '.3rem 2.4rem .3rem .8rem',\n                    minWidth: 'auto',\n                    width: 'auto'\n                },\n                ' .MuiOutlinedInput-input': {\n                    padding:0,\n                    height: pxToRem(24),\n                },\n                ' .MuiSelect-outlined': {\n                    // padding: '.3rem 2.4rem .3rem .8rem',\n                    height: pxToRem(24),\n                    lineHeight: pxToRem(24), minWidth: 'auto',\n\n                },\n            },\n\n        }\n    }\n}\n\n\nexport const MuiIconButton =   ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiIconButton'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                height: 'var(--btn-icon-size)',\n                width: 'var(--btn-icon-size)',\n                ' svg': {\n                    height: 'var(--svg-size-large)',\n                    width: 'var(--svg-size-large)',\n                    color: 'inherit',\n                },\n                '&.MuiIconButton-sizeSmall': {\n                    height: 'var(--btn-icon-size-small)',\n                    width: 'var(--btn-icon-size-small)',\n                    ' svg': {\n                        height: 'var(--svg-size)',\n                        width: 'var(--svg-size)',\n                    },\n                },\n                '&.MuiIconButton-colorInherit':{\n                    color:colorBase.textSecondary,\n                    '&:hover': {\n                        color:colorBase.textPrimary,\n                    }\n                }\n            },\n            label: {\n                width: 'auto'\n            }\n        }\n    }\n}\nexport const MuiToggleButton = ({colorBase, themeMode}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                '&.MuiToggleButton-sizeSmall': {\n                    height: pxToRem(24),\n                    fontSize: '1.2rem'\n                },\n                height: pxToRem(28),\n                boxShadow: '0px 4px 62px rgba(0, 0, 0, 0.25)',\n                borderRadius: '4px !important',\n                margin: '0 8px',\n                fontSize: '1.4rem',\n                color: colorBase.textPrimary,\n                borderColor: colorBase.border,\n                '&&:not(:first-of-type), &&:not(:last-child)': {\n                    borderColor: colorBase.border,\n                },\n                backgroundColor: colorBase.box,\n                '&:hover': {\n                    backgroundColor: colorBase.box,\n                    borderColor: colorBase.textPrimary,\n                    '&:not(:last-child), &:not(:first-of-type)': {\n                        borderColor: colorBase.textPrimary,\n                    },\n                    '&.Mui-selected,&.Mui-selected': {\n                        borderColor: colorBase.primary,\n                    }\n                },\n                '&.Mui-disabled': {\n                    backgroundColor: colorBase.defaultDisable,\n                    color: colorBase.textSecondary,\n                    border: '1px dashed',\n                    borderColor: colorBase.border\n                    // backgroundImage: `url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='4' ry='4' stroke='%23FFFFFF33' stroke-width='1' stroke-dasharray='4%25%2c 8%25' stroke-dashoffset='5' stroke-linecap='square'/%3e%3c/svg%3e\")`\n                },\n                '&&.Mui-selected, &&.Mui-selected + &.Mui-selected': {\n                    color: colorBase.primary,\n                    backgroundColor: rgba(colorBase.primary, 0.1),\n                    border: borderFunc(themeMode).borderConfig({c_key: rgba(colorBase.primary, 0.5)})\n                }\n            }\n        }\n\n    }\n}\nexport const MuiButtonBase = {\n    defaultProps: {\n        disableRipple: true,\n    },\n}\nexport const MuiPaginationItem = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                fontSize: '1.4rem',\n                color: colorBase.textSecondary,\n                borderRadius: '4px',\n            },\n            icon: {\n                fontSize: '2rem',\n            },\n            textPrimary: {\n                '&.Mui-selected': {\n                    backgroundColor: 'transparent',\n                    color: colorBase.secondary,\n                    '&:hover': {\n                        backgroundColor: colorBase.opacity,\n                    }\n                }\n\n\n            },\n            selected: {}\n        }\n    }\n}\nexport const MuiFormLabel = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                padding: '1.2rem 0',\n                display: 'inline-block',\n                position: 'relative',\n                fontSize: '1.4rem',\n                lineHeight: 1,\n                height: '38px',\n                boxSizing: 'border-box',\n                '&.MuiInputLabel-shrink': {\n                    transform: 'none'\n                },\n                '&$focused': {\n                    color: colorBase.textSecondary,\n                }\n            },\n        }\n\n\n    }\n}\nexport const MuiList = () => {\n    return {\n        styleOverrides: {\n            root: {\n                '&.MuiList-padding': {\n                    padding: '0.8rem 0'\n                }\n            }\n        }\n    }\n}\nexport const MuiListItem = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                height: pxToRem(32),\n                paddingLeft: pxToRem(20),\n                paddingRight: pxToRem(20),\n                color: colorBase.textSecondary,\n                '&:hover': {\n                    color: colorBase.textPrimary,\n                    background:colorBase.boxHover,\n                },\n                // '&.Mui-selected': {\n                //     color: colorBase.textPrimary,\n                //     background: 'none',//colorBase.boxHover,\n                // },\n                '&.Mui-selected, &.Mui-selected.Mui-focusVisible': {\n                    '&:hover, &':{\n                        color: colorBase.textPrimary,\n                        border: 'none',\n                    }\n                }\n            },\n        }\n    }\n}\nexport const MuiMenu = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            list: {\n                backgroundColor: colorBase.popBg\n            }\n        }\n    }\n}\nexport const MuiMenuItem = ({colorBase,themeMode}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                height: pxToRem(32),\n                borderLeft: borderFunc(themeMode).borderConfig({c_key:'var(--opacity)'}), ////`1px solid transparent`,\n                // borderLeftColor: 'transparent',\n                paddingLeft: pxToRem(12),\n                paddingRight: pxToRem(12),\n                color: colorBase.textSecondary,\n                // backgroundColor: `${colorBase.borderHover} !important`,\n                '&:hover, &.Mui-selected:hover': {\n                    // borderColor: colorBase.primaryLight,\n                    backgroundColor: colorBase.boxHover,\n                },\n                '& .MuiListItemText-multiline': {\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'space-between',\n                    flexWrap: 'noWrap',\n                    justifyContent: 'space-between',\n                    '&.Mui-selected, &.Mui-selected.Mui-focusVisible': {\n\n                        '&:after': {\n                            display: 'none'\n                        }\n                    }\n                },\n                '&.Mui-selected, &.Mui-selected.Mui-focusVisible': {\n                    // backgroundColor: 'transparent',\n                    background: 'none',\n                    color: colorBase.textPrimary,\n                    // '&:after': {\n                    //     fontSize: '1.6rem',\n                    //     height: '1em',\n                    //     width: '1em',\n                    //     right: '1em',\n                    //     position: 'absolute',\n                    //     display: 'block',\n                    //     content: `url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 18 13' fill='` + encodeURIComponent(colorBase.primaryLight) + `'><path fillRule='evenodd' clipRule='evenodd' d='M17.7071 0.292893C18.0976 0.683417 18.0976 1.31658 17.7071 1.70711L6.70711 12.7071C6.31658 13.0976 5.68342 13.0976 5.29289 12.7071L0.292893 7.70711C-0.0976311 7.31658 -0.0976311 6.68342 0.292893 6.29289C0.683417 5.90237 1.31658 5.90237 1.70711 6.29289L6 10.5858L11.1464 5.43934L16.2929 0.292893C16.6834 -0.0976311 17.3166 -0.0976311 17.7071 0.292893Z' /></svg>\\\")`\n                    // }\n                },\n            },\n        }\n    }\n}\nexport const MuiTab = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiTab'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                fontWeight: 'normal',\n                padding: `0 ${unit * 2}px`,\n                maxWidth: 'initial',\n                minWidth: 'auto !important',\n                fontSize: fontDefault.h5,\n                color: colorBase.textSecondary,\n                '&:hover': {\n                    backgroundColor: 'transparent',\n                },\n                '.MuiTab-wrapper': {\n                    textTransform: 'capitalize',\n                },\n                '&.Mui-selected': {\n                    color: colorBase.textPrimary,\n                    '&:after': hr({colorBase}),\n                },\n                '&:focus-visible::after, &:active::after, &.Mui-selected:after': hr({colorBase}),\n                '> div, > button': {\n                    height: 'calc(100% - 2px)',\n                    textTransform: 'capitalize'\n                },\n                '.MuiTabs-indicator': {\n                    display: 'none',\n                }\n            },\n\n        }\n    }\n}\nexport const MuiTabs = () => {\n    return {\n        styleOverrides: {\n            root: {\n                '& .MuiTabs-indicator': {\n                    display: 'none',\n                    background: 'red'\n                }\n\n            },\n\n        }\n    }\n}\nexport const MuiDivider = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                borderColor: `${colorBase.dividerColor}`,\n                // margin: `${unit / 4 * 5}px 0`,\n            },\n\n        }\n    }\n}\n\n\nexport const MuiListItemAvatar = () => {\n    return {\n        styleOverrides: {\n            root: {\n                minWidth: 'auto',\n                marginRight: `${unit}px`,\n                '.MuiAvatar-root': {\n                    height: `var(--list-menu-coin-size)`,\n                    width: `var(--list-menu-coin-size)`,\n                    'svg': {\n                        height: `var(--header-menu-icon-size)`,\n                        width: `var(--header-menu-icon-size)`,\n                    }\n                }\n            },\n\n        }\n    }\n}\n","import { borderFunc } from './utils';\nimport { ColorDarkDefault } from '../css/color-lib';\nimport { radius } from './overrides-mui';\nimport { fontDefault } from \"../css/global\";\nimport { ThemeKeys } from '../interface';\n\nexport const MuPickDate = ({colorBase, themeMode}: { colorBase: typeof ColorDarkDefault, themeMode: ThemeKeys }) => {\n    return {\n        MuiPickersBasePicker: {\n            styleOverrides: {\n                root: {\n                    width: `var(--datePicker-width)`,\n                    background: colorBase.popBg,\n                    boxShadow: colorBase.shadow,\n                    borderRadius: radius * 2 + 'px',\n                    // border: borderFunc(themeMode).borderConfig({c_key: 'blur'}),\n                    border: borderFunc(themeMode).defaultFrame({c_key:colorBase.divide}),//`1px solid `,\n                    '& svg': {\n                        fontSize: '2rem',\n                        color: colorBase.textSecondary\n                    },\n                    '& .MuiPickersCalendar-weekDayLabel': {\n                        fontSize: '1rem',\n                    },\n                    '& .MuiPickersArrowSwitcher-root .MuiIconButton-edgeEnd': {\n                        position: 'relative',\n                        padding: 3,\n                    }\n                },\n\n            }\n        },\n        MuiPicker: {\n            styleOverrides: {\n                root: {\n                    width: `var(--datePicker-width)`,\n                    background: colorBase.popBg,\n                    boxShadow: colorBase.shadow,\n                    borderRadius: radius * 2 + 'px',\n                    border: borderFunc(themeMode).borderConfig({c_key: 'blur'}),\n                    '& svg': {\n                        fontSize: '2rem',\n                        color: colorBase.textSecondary\n                    },\n                    '& .MuiPickersCalendar-weekDayLabel': {\n                        fontSize: '1rem',\n                    },\n                    '& .MuiPickersArrowSwitcher-root .MuiIconButton-edgeEnd': {\n                        position: 'relative',\n                        padding: 3,\n                    }\n                },\n\n            }\n        },\n        MuiDateRangePickerViewDesktop: {\n            styleOverrides: {\n                root: {\n                    '& svg': {\n                        fontSize: '2rem',\n                        color: colorBase.textSecondary\n                    },\n                    background: colorBase.popBg,\n                    boxShadow: colorBase.shadow,\n                    borderRadius: radius * 2 + 'px',\n                    // border: borderFunc(themeMode).borderConfig({c_key: 'blur'}),\n                    border: borderFunc(themeMode).defaultFrame({c_key:colorBase.divide}),//`1px solid ${colorBase.divide}`,\n                    fontSize: 1.6,\n                    \"& .MuiDateRangePickerViewDesktop-rangeCalendarContainer:not(:last-child)\": {\n                        borderColor: colorBase.divide,\n                    },\n                    \"& .MuiPickersArrowSwitcher-root\": {\n                        border: borderFunc(themeMode).borderConfig({c_key: \"rgba(0,0,0,0)\"}),\n                        borderBottomColor: colorBase.divide,\n                        boxSizing: \"border-box\",\n                        height: 52,\n                        minHeight: 52,\n                        maxHeight: 52,\n                        margin: 0,\n                        marginBottom: 0,\n                        '& .MuiIconButton-root': {\n                            color: colorBase.textSecondary\n                        },\n                        '& .MuiTypography-subtitle1,& .MuiTypography-subtitle2': {\n                            fontSize: '1.4rem'\n                        },\n\n                    },\n                    '& .MuiPickersCalendar-weekDayLabel': {\n                        fontSize: '1rem',\n                    },\n                    '& .MuiDateRangePickerDay-rangeIntervalPreview,& .MuiDateRangePickerDay-rangeIntervalDayPreview': {\n                        borderWidth: 0,\n                    },\n                    \"& .MuiDateRangePickerDay-day\": {\n                        transform: 'none',\n                    },\n                    '& .MuiDateRangePickerViewDesktop-calendar': {\n                        width: `var(--datePicker-width)`,\n                        minHeight: `var(--datePicker-height)`,\n                        marginBottom: '.8rem',\n                    },\n                    \"& .MuiDateRangePickerDay-dayOutsideRangeInterval:hover\": {\n                        borderColor: 'transparent'\n                    },\n\n                }\n            }\n        },\n        MuiPickersDesktopDateRangeCalendar: {\n            styleOverrides: {\n                root: {\n                    '& svg': {\n                        fontSize: '2rem',\n                        color: colorBase.textSecondary\n                    },\n                    background:  colorBase.popBg,\n                    boxShadow: colorBase.shadow,\n                    borderRadius: radius * 2 + 'px',\n                    border: borderFunc(themeMode).borderConfig({c_key: 'blur'}),\n                    fontSize: 1.6,\n                    \"& .MuiTypography-subtitle1\": {\n                        fontSize: fontDefault.h4\n                    },\n                    \"& .MuiPickersDesktopDateRangeCalendar-rangeCalendarContainer:not(:last-child)\": {\n                        borderColor: colorBase.divide,\n                    },\n                    \"& .MuiPickersArrowSwitcher-root\": {\n                        border: borderFunc(themeMode).borderConfig({c_key: \"rgba(0,0,0,0)\"}),\n                        borderBottomColor: colorBase.divide,\n                        boxSizing: \"border-box\",\n                        height: 52,\n                        minHeight: 52,\n                        maxHeight: 52,\n                        margin: 0,\n                        marginBottom: 0,\n                        '& .MuiIconButton-root': {\n                            color: colorBase.textSecondary\n                        },\n                        '& .MuiTypography-subtitle1,& .MuiTypography-subtitle2': {\n                            fontSize: '1.4rem'\n                        },\n\n                    },\n                    '& .MuiPickersCalendar-weekDayLabel': {\n                        fontSize: '1rem',\n                    },\n                    '& .MuiPickersDateRangeDay-rangeIntervalPreview,& .MuiPickersDateRangeDay-rangeIntervalDayPreview': {\n                        borderWidth: 0,\n                    },\n                    \"& .MuiPickersDateRangeDay-day\": {\n                        transform: 'none',\n                    },\n                    '& .MuiPickersDesktopDateRangeCalendar-calendar': {\n                        width: `var(--datePicker-width)`,\n                        minHeight: `var(--datePicker-height)`,\n                        marginBottom: '.8rem',\n                    },\n                    \"& .MuiPickersDateRangeDay-dayOutsideRangeInterval:hover\": {\n                        borderColor: 'transparent'\n                    }\n\n                }\n            }\n        },\n        MuiPickersDateRangeDay: {\n            styleOverrides: {\n                root: {\n                    \"&.MuiPickersDateRangeDay-rangeIntervalDayHighlight:last-child, &.MuiPickersDateRangeDay-rangeIntervalDayHighlightEnd\": {\n                        borderTopRightRadius: radius * 2 + 'px',\n                        borderBottomRightRadius: radius * 2 + 'px',\n                    },\n                    '&.MuiPickersDateRangeDay-rangeIntervalDayHighlight:first-of-type, &.MuiPickersDateRangeDay-rangeIntervalDayHighlightStart': {\n                        borderTopLeftRadius: radius * 2 + 'px',\n                        borderBottomLeftRadius: radius * 2 + 'px',\n                    },\n                    '& .MuiPickersDay-root:focus.Mui-selected': {\n                        backgroundColor: colorBase.primaryPressed,\n                    },\n                    '& .MuiPickersDay-root:focus.Mui-selected,& .MuiPickersDay-root.Mui-selected,& .MuiPickersDay-root': {\n                        '&:hover': {\n                            borderColor: 'transparent'\n                        }\n                    }\n                }\n            }\n        },\n        MuiDateRangePickerDay: {\n            styleOverrides: {\n                root: {\n                    '&.MuiDateRangePickerDay-rangeIntervalDayHighlight:last-child, &.MuiDateRangePickerDay-rangeIntervalDayHighlightEnd': {\n                        borderTopRightRadius: radius * 2 + 'px',\n                        borderBottomRightRadius: radius * 2 + 'px',\n                    },\n                    '&.MuiDateRangePickerDay-rangeIntervalDayHighlight:first-of-type, &.MuiDateRangePickerDay-rangeIntervalDayHighlightStart': {\n                        borderTopLeftRadius: radius * 2 + 'px',\n                        borderBottomLeftRadius: radius * 2 + 'px',\n                    },\n                    '& .MuiPickersDay-root:focus.Mui-selected': {\n                        backgroundColor: colorBase.primaryPressed,\n                    }\n                }\n            }\n        },\n        MuiPickersToolbarButton: {\n            styleOverrides: {\n                root: {\n                    fontSize: 1.6,\n                }\n            }\n        },\n        MuiPickersToolbar: {\n            root: {},\n        },\n        MuiPickersDay: {\n            styleOverrides: {\n                root: {\n                    '&&': {\n                        fontSize: '1.4rem',\n                        borderRadius: radius * 2 + 'px',\n                        border: borderFunc(themeMode).borderConfig({c_key: \"rgba(0,0,0,0)\"}),\n                        backgroundColor: colorBase.opacity\n                    },\n\n                    \"&.Mui-selected,&:focus.Mui-selected \": {\n                        backgroundColor: colorBase.primary,\n                        // color: colorBase.textThird,\n\n                    },\n                    \"&.Mui-disabled\": {\n                        //backgroundColor: colorBase.primary,\n                        color: colorBase.textDisable,\n\n                    },\n                    \"&.MuiPickersDay-today\": {\n                        \"&:not(.Mui-selected)\": {\n                            backgroundColor: 'transparent',\n                            color: colorBase.primary,\n                            borderColor: 'transparent'\n                        },\n\n                        // borderColor: colorBase.primary,\n                        \"&.Mui-selected\": {\n                            //backgroundColor: colorBase.primary,\n                            color: colorBase.textPrimary,\n                            backgroundColor: colorBase.primary,\n\n                        },\n                    },\n\n                    \"&:hover.Mui-selected, &:hover\": {\n                        backgroundColor: colorBase.primaryHover,\n                    }\n\n\n                }\n            }\n        },\n        MuiPickersCalendar: {\n            styleOverrides: {\n                root: {\n                    minHeight: `var(--datePicker-height)`,\n                    marginBottom: '.8rem',\n                }\n            }\n        },\n        MuiPickersCalendarHeader: {\n            styleOverrides: {\n                root: {\n                    '&&': {\n                        border: borderFunc(themeMode).borderConfig({c_key: \"rgba(0,0,0,0)\"}),\n                        borderBottomColor: colorBase.divide,\n                        boxSizing: \"border-box\",\n                        height: 52,\n                        minHeight: 52,\n                        maxHeight: 52,\n                        margin: 0,\n                        marginBottom: 0,\n                        // margin:0,\n                    },\n                    '& .MuiButtonBase': {\n                        color: colorBase.textSecondary\n                    },\n                    '& .MuiTypography-subtitle1': {\n                        fontSize: fontDefault.h4\n                    }\n                }\n            }\n        },\n        MuiPickersYear: {\n            styleOverrides: {\n                root: {\n                    '&&': {\n                        fontSize: '1.4rem'\n                    },\n                    '&& .MuiPickersYear-yearButton': {\n                        color: colorBase.textSecondary,\n                        fontSize: '1.4rem',\n                        \"&.Mui-selected\": {\n                            backgroundColor: colorBase.primary,\n                            // color: colorBase.textThird,\n                            borderRadius: radius * 2 + 'px',\n                        }\n                    }\n                }\n            }\n        },\n        MuiPickersModalDialog: {\n            dialogAction: {},\n        },\n    }\n}\n\n\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { ColorDarkDefault, ColorLightDefault } from \"../css/color-lib\";\nimport { borderFunc, unit } from \"./utils\";\nimport {\n    MuiButton,\n    MuiButtonBase,\n    MuiCard,\n    MuiCardContent,\n    MuiCardActions,\n    MuiCheckbox,\n    MuiDivider, MuiIconButton,\n    MuiInputBase,\n    MuiInputLabel,\n    MuiLink,\n    MuiList,\n    MuiListItem,\n    MuiListItemAvatar,\n    MuiMenu,\n    MuiMenuItem,\n    MuiModal,\n    MuiPaginationItem,\n    MuiPaper,\n    MuiPopover,\n    MuiRadio,\n    MuiSvgIcon,\n    MuiSwitch,\n    MuiTab,\n    MuiTabs,\n    MuiTextField,\n    MuiToggleButton,\n    MuiToolbar,\n    radius,\n} from \"./overrides-mui\";\nimport { MuPickDate } from './overrides-date-pick';\nimport { fontDefault } from \"../css/global\";\nimport { LoopringTheme, ThemeKeys } from '../interface';\n\nexport { unit };\nexport const getTheme = (themeMode: ThemeKeys): LoopringTheme => {\n    const colorBase: typeof ColorDarkDefault = themeMode === 'dark' ? ColorDarkDefault : ColorLightDefault\n    const theme = createMuiTheme({\n        spacing: unit,\n        palette: {\n            mode: themeMode,\n            primary: {\n                light: colorBase.primary,\n                main: colorBase.primary,\n                dark: colorBase.primary,\n                contrastText: themeMode === 'dark'?\"#fff\":'#000',\n            },\n            secondary: {\n                light: colorBase.secondary,\n                main: colorBase.secondary,\n                dark: colorBase.secondary,\n                contrastText: themeMode === 'dark'?\"#fff\":'#000',\n                // light:\n            },\n            contrastThreshold: 3,\n            tonalOffset: 0.2,\n            background: {\n                paper: colorBase.box,\n                default: colorBase.globalBg,\n            },\n            text: {\n                primary: colorBase.textPrimary,\n                secondary: colorBase.textSecondary,\n                disabled: colorBase.textDisable,\n                //hint: colorBase.textHint,\n            },\n            // divider: \"rgba(0, 0, 0, 0.12)\",\n            common: {\"black\": \"#000\", \"white\": \"#fff\"},\n            action: {\n                hoverOpacity: 0.05,\n                hover: colorBase.secondaryHover,\n                selected: colorBase.secondaryPressed,\n                // disabledBackground: \"rgba(0, 0, 0, 0.12)\",\n                disabled: colorBase.textDisable,\n                active: colorBase.secondaryPressed,\n            },\n            warning:{\n                main: colorBase.warning,\n            },\n            error: {\n                main: colorBase.error,\n                dark: colorBase.error,\n                contrastText: themeMode === 'dark'?\"#fff\":'#000',\n            },\n        },\n        typography: {\n            // fontFamily: `DINCondensed, Helvetica, Arial, \"华文细黑\", \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"宋体\", Heiti, \"黑体\", sans-serif`,\n            fontFamily: 'Roboto',\n            fontSize: 14,\n            h1: {\n                fontSize: fontDefault.h1,\n                lineHeight: '4.6rem'\n            },\n            h2: {\n                fontSize: fontDefault.h2,\n                lineHeight: '3.8rem'\n            },\n            h3: {\n                fontSize: fontDefault.h3,\n                lineHeight: '3.2rem'\n            },\n            h4: {\n                fontSize: fontDefault.h4,\n                lineHeight: '2.8rem',\n            },\n            h5: {\n                fontSize: fontDefault.h5,\n                lineHeight: '2.4rem',\n                margin:0\n            },\n            h6: {\n                fontSize: fontDefault.h6,\n                margin: 0,\n            },\n            subtitle1: {\n                fontSize: 24,\n            },\n            button: {\n                fontSize: 20,\n            },\n            body1: {\n                fontSize: fontDefault.body1,\n                fontColor: colorBase.textPrimary,\n            },\n            body2: {\n                fontSize: 12,\n                fontColor: colorBase.textSecondary,\n            },\n        },\n        components: {\n            MuiCard: MuiCard({colorBase}),\n            MuiCardContent: MuiCardContent(),\n            MuiCardActions: MuiCardActions(),\n            MuiCheckbox: MuiCheckbox({colorBase}),\n            MuiLink: MuiLink({colorBase}),\n            MuiModal: MuiModal({colorBase}),\n            // MuiBackdrop:MuiBackdrop({colorBase}),\n            MuiPopover: MuiPopover({colorBase}),\n            MuiToolbar: MuiToolbar(),\n            MuiSvgIcon: MuiSvgIcon(),\n            MuiTabs: MuiTabs(),\n            MuiTab: MuiTab({colorBase}),\n            MuiButtonBase: MuiButtonBase,\n            MuiRadio: MuiRadio({colorBase}),\n            MuiButton: MuiButton({colorBase, themeMode}),\n            MuiToggleButton: MuiToggleButton({colorBase}),\n            MuiSwitch: MuiSwitch({colorBase}),\n            MuiIconButton: MuiIconButton({colorBase}),\n            MuiPaginationItem: MuiPaginationItem({colorBase}),\n            MuiTextField: MuiTextField(),\n            MuiInputBase: MuiInputBase({colorBase,themeMode}),\n            MuiMenu: MuiMenu({colorBase}),\n            MuiMenuItem: MuiMenuItem({colorBase,themeMode}),\n            MuiList: MuiList(),\n            MuiListItem: MuiListItem({colorBase}),\n            MuiListItemAvatar: MuiListItemAvatar(),\n            MuiInputLabel: MuiInputLabel({colorBase}),\n            // MuiPopover: MuiPopover({colorBase, themeMode}),\n            MuiPaper: MuiPaper({colorBase, themeMode}),\n            MuiDivider: MuiDivider({colorBase}),\n            ...MuPickDate({colorBase, themeMode})\n        },\n        shape: {borderRadius: radius}\n    });\n    return {\n        ...theme, ...{\n            unit,\n            mode: themeMode,\n            border: borderFunc(themeMode), fontDefault,\n            colorBase: themeMode === 'dark' ? ColorDarkDefault : ColorLightDefault\n        }\n    }\n}\n\n\n","export const globalSetup = Object.freeze({\n        wait: 100\n    }\n)","export enum HeaderMenuTabStatus {\n    hidden = 'hidden',\n    disabled = 'disabled',\n    default = 'default'\n}\n\nexport interface HeaderMenuItemInterface {\n    label: {\n        icon?: any,\n        id: string,\n        style?: any,\n        description?: string,\n        i18nKey: string\n    },\n    child?: Array<HeaderMenuItemInterface>,\n    router?: { path: string, [ key: string ]: any },\n    status?: keyof typeof HeaderMenuTabStatus\n    extender?: React.ElementType<any> | JSX.Element | undefined,\n}\n\n\n","import { ConnectProviders } from '../constant';\n\nexport enum WalletStatus {\n    disabled = 'disabled',\n    loading = 'loading',\n    unlock = 'unlock',\n    connect = 'connect',\n    noAccount = 'noAccount',\n    accountPending = 'accountPending',\n    noNetwork = 'noNetwork',\n    default = 'default',\n}\n\nexport interface GatewayItem {\n    key: keyof typeof ConnectProviders\n    imgSrc: string\n    handleSelect?: (event: React.MouseEvent) => void\n}","export enum ConnectProviders {\n    unknown = 'unknown',\n    MetaMask = 'MetaMask',\n    WalletConnect = 'WalletConnect',\n}\n","import styled from '@emotion/styled';\nimport { Avatar } from '@material-ui/core';\nimport { AvatarCoinProps } from './interface';\n\nexport * from \"./overrides/muTheme\"\nexport * from \"./css/global\"\n// export * from \"./css/color-lib\"\nexport * from \"./interface\"\nexport * from \"./globalSetup\"\n\nexport const AvatarCoinStyled = styled(Avatar)<AvatarCoinProps>`\n      &.MuiAvatar-root{  \n        height: 36px;\n        width: 36px;\n        transform-origin: top left;\n        background-image: url(\"./static/images/coin/loopring.png\") ;\n        ${({imgx,imgy,imgheight=36,imgwidth=36,size=24}:AvatarCoinProps)=>{\n            return `\n             background-position-x: -${imgx}px ;\n             background-position-y: -${imgy}px ;\n             height: ${imgheight}px ;\n             width: ${imgwidth}px ;\n             transform: scale(${size/36});\n        `}}\n        background-size: auto;\n        \n      }\n` as React.ComponentType<AvatarCoinProps>;","import { GatewayItem } from '../loopring-interface';\nimport { ConnectProviders } from './connect';\n\nexport const gatewayList: GatewayItem[] = [\n    {\n        key: ConnectProviders.MetaMask,\n        imgSrc: 'static/svg/meta-mask.svg',\n    },\n    {\n        key: ConnectProviders.WalletConnect,\n        imgSrc: 'static/svg/wallet-connect.svg',\n    },\n    // {\n    //     key: 'Ledger',\n    //     imgSrc: 'static/svg/ledger.svg',\n    // },\n    // {\n    //     key: 'Trezor',\n    //     imgSrc: 'static/svg/trezor.svg',\n    // },\n]\n","export enum UpColor {\n    green = 'green',\n    red = 'red'\n}\n\nexport enum Currency {\n    dollar = 'USD',\n    yen = 'CNY',\n}\n\nexport const SlippageTolerance: Array<0.1 | 0.5 | 1 | string> = [0.1, 0.5, 1]","export enum FloatTag {\n    increase = 'increase',\n    decrease = 'decrease',\n    none = 'none'\n}\n","export enum ChartType {\n    Depth = 'Depth',\n    Trend = 'Trend',\n    Kline = 'Kline',\n}\n\nexport enum ChartUnit {\n    W1 = '1W',\n    H1 = '1H',\n    D1 = '1D',\n}\n","export enum WithdrawType {\n    'Fast' = 'Fast',\n    'Standard' = 'Standard',\n}\n\nexport const WithdrawTypes: {\n    [P in keyof typeof WithdrawType]: string | number\n} = {\n    'Fast': '',\n    'Standard': '',\n}\n\nexport  type PriceTagType = '$' | '￥';\n\nexport enum PriceTag {\n    Dollar = '$',\n    Yuan = '￥'\n}\n\n\nexport enum TradeTypes {\n    Buy = 'Buy',\n    Sell = 'Sell'\n}\n\nexport enum TradeStatus {\n    // Filled = 'Filled',\n    // Cancelled = 'Cancelled',\n    // Succeeded = 'Succeeded',\n    Processing = 'processing',\n    Processed = 'processed',\n    Cancelling = 'cancelling',\n    Cancelled = 'cancelled',\n    Expired = 'expired',\n    Waiting = 'waiting'\n}\n\nexport const EmptyValueTag = '--'\n\n\n","import {\n    AssetsIcon,\n    MiningIcon,\n    MyLiquidityIcon,\n    // OrderIcon,\n    // PoolsIcon,\n    SettingIcon,\n    L2MyLiquidityIcon,\n    L2HistoryIcon,\n    L2OrderIcon,\n} from '../svg';\n\nimport { HeaderMenuItemInterface, HeaderMenuTabStatus } from '../loopring-interface';\n\nexport enum ButtonComponentsMap {\n    Download,\n    Notification ,\n    Setting,\n    WalletConnect,\n}\n\nexport const ToolBarAvailableItem = [\n    ButtonComponentsMap.Download,\n    // ButtonComponentsMap.Notification,\n    ButtonComponentsMap.Setting,\n    ButtonComponentsMap.WalletConnect\n]\n\nexport let headerToolBarData: Array<{ buttonComponent: number, handleClick?: (props: any) => void, [ key: string ]: any }> = [\n    {\n        buttonComponent: ButtonComponentsMap.Download,\n        url: 'https://apps.apple.com/us/app/loopring-smart-wallet/id1550921126',\n        i18nTitle: 'labelDownloadAppTitle',\n        i18nDescription: 'labelDownloadBtn',\n    },\n    {buttonComponent: ButtonComponentsMap.Notification, label: 'labelNotification',},\n    {buttonComponent: ButtonComponentsMap.Setting, label: 'labelSetting'},\n    {\n        buttonComponent: ButtonComponentsMap.WalletConnect,\n        label: 'labelConnectWallet',\n        status: undefined,\n        notificationList: [],\n        handleClick: undefined\n    }];\nexport let layer2ItemData: Array<HeaderMenuItemInterface> = [{\n    label: {\n        id: 'Classic', i18nKey: 'labelClassic',\n        description: 'labelClassicDescription',\n    },\n    router: {path: '/trading/lite'},\n},\n// {\n//     label: {\n//         id: 'Advanced', i18nKey: 'labelAdvanced',\n//         //TODO: translate id\n//         description: 'labelAdvancedDescription',\n//     },\n//     router: { path: '/trading/pro' },\n// },\n]\n\n\nexport enum HeadMenuTabKey {\n    markets,\n    trade,\n    liquidity,\n    Layer2,\n}\n\nexport enum NavListIndex {\n    markets,\n    trade,\n    liquidity,\n    layer2\n}\n\nexport let headerMenuData: Array<HeaderMenuItemInterface> = [\n    {\n        label: {\n            id: 'Markets', i18nKey: 'labelMarkets',\n        },\n        router: {path: '/markets'},\n        status: HeaderMenuTabStatus.default,\n    },\n    {\n        label: {\n            id: 'Trading', i18nKey: 'labelTrade',\n        },\n        // router: {path: '/trading'},\n        router: {path: '/trading/lite'},\n        // child: layer2ItemData,\n        status: HeaderMenuTabStatus.default,\n    },\n    {\n        label: {\n            id: 'Liquidity', i18nKey: 'labelLiquidity',\n        },\n        router: {path: '/liquidity'},\n        status: HeaderMenuTabStatus.default,\n    },\n    {\n        label: {\n            id: 'Mining', i18nKey: 'labelMining',\n        },\n        router: {path: '/mining'},\n        status: HeaderMenuTabStatus.default,\n    },\n    {\n        label: {\n            id: 'Layer2', i18nKey: 'labelLayer2',\n        },\n        router: {path: '/layer2'},\n        status: HeaderMenuTabStatus.default,\n\n    }\n];\n\nexport const subMenuLayer2 = {\n    assetsGroup: [{\n        icon: AssetsIcon,\n        router: {path: '/layer2/assets'},\n        label: {\n            id: 'assets', i18nKey: 'labelAssets',\n        },\n    }, {\n        icon: L2MyLiquidityIcon,\n        router: {path: '/layer2/my-liquidity'},\n        label: {\n            id: 'my-liquidity', i18nKey: 'labelMyLiquidity',\n        }\n    }],\n    transactionsGroup: [{\n        icon: L2HistoryIcon,\n        router: {path: '/layer2/history'},\n        label: {\n            id: 'history', i18nKey: 'labelHistory',\n        },\n    }, {\n        icon: L2OrderIcon,\n        router: {path: '/layer2/order'},\n        label: {\n            id: 'order', i18nKey: 'labelOrder',\n        },\n    },\n    /* {\n        icon: TransactionsIcon,\n        router: {path: '/layer2/transactions'},\n        label: {\n            id: 'transactions', i18nKey: 'labelTransactions',\n        },\n    }, {\n        icon: TradeIcon,\n        router: {path: '/layer2/trades'},\n        label: {\n            id: 'trades', i18nKey: 'labelTrades',\n        },\n    },\n        {\n            icon: AmmIcon,\n            router: {path: '/layer2/ammRecords'},\n            label: {\n                id: 'AmmRecords', i18nKey: 'labelAmmRecords',\n                description: 'labelAmmRecordsDes',\n            },\n        } */\n    ],\n    // countInfoGroup: [{\n    //     icon: OrderIcon,\n    //     router: {path: '/layer2/orders'},\n    //     label: {\n    //         id: 'orders', i18nKey: 'labelOrders',\n    //     },\n    // },\n\n    // ],\n    settingGroup: [{\n        icon: SettingIcon,\n        router: {path: '/layer2/setting'},\n        label: {\n            id: 'setting',\n            i18nKey: 'labelSetting',\n        },\n    },\n\n    ]\n}\n\n\nexport const subMenuLiquidity = {\n    poolsGroup: [{\n        // icon: PoolsIcon,\n        router: {path: '/liquidity/pools'},\n        label: {\n            id: 'pools',\n            i18nKey: 'labelPools',\n        },\n    }, {\n        icon: MiningIcon,\n        router: {path: '/liquidity/amm-mining'},\n        label: {\n            id: 'amm-mining',\n            i18nKey: 'labelAmmMining',\n        },\n    }, {\n        icon: MyLiquidityIcon,\n        router: {path: '/liquidity/my-liquidity'},\n        label: {\n            id: 'my-liquidity',\n            i18nKey: 'labelMyLiquidity',\n        },\n    }],\n    // bookGroup: [{\n    //     icon: OrderMinIcon,\n    //     router: {path: '/liquidity/orderBook-Mining'},\n    //     label: {\n    //         id: 'orderBook-Mining',\n    //         i18nKey: 'labelOrderBookMining',\n    //     }\n    // },\n    //     {\n    //     icon: MakerRebatesIcon,\n    //     router: {path: '/liquidity/maker-rebates'},\n    //     label: {\n    //         id: 'maker-rebates',\n    //         i18nKey: 'labelMakerRebates',\n    //     },\n    // }\n    // ]\n}\nexport const headerRoot = 'trade'\n","export enum TableType {\n    filter = 'filter',\n    page = 'page'\n}\n","export const imgConfig = {\n  \"file\": \"loopring.png\", \"frames\": {\n    \"0XBTC\": {\"x\": 248, \"y\": 282, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"1INCH\": {\"x\": 207, \"y\": 322, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"AAVE\": {\"x\": 166, \"y\": 362, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"AC\": {\"x\": 125, \"y\": 402, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ADX\": {\"x\": 84, \"y\": 442, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ALCX\": {\"x\": 453, \"y\": 82, \"w\": 36, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ALEND\": {\"x\": 453, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ALINK\": {\"x\": 412, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"AMP\": {\"x\": 371, \"y\": 122, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ANT\": {\"x\": 248, \"y\": 322, \"w\": 36, \"h\": 35, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"AUC\": {\"x\": 166, \"y\": 478, \"w\": 33, \"h\": 32, \"offX\": 3, \"offY\": 2, \"sourceW\": 37, \"sourceH\": 36},\n    \"AUSDC\": {\"x\": 330, \"y\": 162, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BADGER\": {\"x\": 125, \"y\": 442, \"w\": 37, \"h\": 35, \"offX\": 0, \"offY\": 1, \"sourceW\": 37, \"sourceH\": 36},\n    \"BAL\": {\"x\": 289, \"y\": 202, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BAND\": {\"x\": 100, \"y\": 482, \"w\": 19, \"h\": 26, \"offX\": 9, \"offY\": 5, \"sourceW\": 37, \"sourceH\": 36},\n    \"BAT\": {\"x\": 248, \"y\": 242, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BCDT\": {\"x\": 205, \"y\": 442, \"w\": 27, \"h\": 36, \"offX\": 5, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BCP\": {\"x\": 207, \"y\": 282, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BEL\": {\"x\": 166, \"y\": 322, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BKT\": {\"x\": 125, \"y\": 362, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BNT\": {\"x\": 84, \"y\": 402, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BOR\": {\"x\": 43, \"y\": 442, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BTC2XFLI\": {\"x\": 289, \"y\": 242, \"w\": 36, \"h\": 36, \"offX\": 1, \"offY\": 0, \"sourceW\": 38, \"sourceH\": 36},\n    \"BTU\": {\"x\": 456, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BUSD\": {\"x\": 412, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"BZRX\": {\"x\": 371, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"CDAI\": {\"x\": 330, \"y\": 122, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"CEL\": {\"x\": 289, \"y\": 162, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"CETH\": {\"x\": 248, \"y\": 202, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"COMP\": {\"x\": 207, \"y\": 242, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"CRV\": {\"x\": 166, \"y\": 282, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"CUSDC\": {\"x\": 125, \"y\": 322, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"CVT\": {\"x\": 409, \"y\": 202, \"w\": 33, \"h\": 30, \"offX\": 2, \"offY\": 3, \"sourceW\": 37, \"sourceH\": 36},\n    \"DAI\": {\"x\": 84, \"y\": 362, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"DEP\": {\"x\": 370, \"y\": 240, \"w\": 31, \"h\": 34, \"offX\": 3, \"offY\": 1, \"sourceW\": 37, \"sourceH\": 36},\n    \"DOUGH\": {\"x\": 43, \"y\": 402, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"DPI\": {\"x\": 2, \"y\": 442, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"DPR\": {\"x\": 415, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"DXD\": {\"x\": 371, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ENJ\": {\"x\": 330, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ENTRP\": {\"x\": 236, \"y\": 442, \"w\": 21, \"h\": 30, \"offX\": 8, \"offY\": 3, \"sourceW\": 37, \"sourceH\": 36},\n    \"ETH-1\": {\"x\": 289, \"y\": 122, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ETH\": {\"x\": 248, \"y\": 162, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"FARM\": {\"x\": 166, \"y\": 442, \"w\": 35, \"h\": 32, \"offX\": 1, \"offY\": 2, \"sourceW\": 37, \"sourceH\": 36},\n    \"FIN\": {\"x\": 207, \"y\": 202, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"FLI\": {\"x\": 166, \"y\": 242, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"FLX\": {\"x\": 2, \"y\": 2, \"w\": 40, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 40, \"sourceH\": 36},\n    \"FUSE\": {\"x\": 207, \"y\": 362, \"w\": 35, \"h\": 36, \"offX\": 1, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"GNO\": {\"x\": 330, \"y\": 202, \"w\": 36, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"GRG\": {\"x\": 84, \"y\": 322, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"GRID\": {\"x\": 43, \"y\": 362, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"GRT\": {\"x\": 2, \"y\": 402, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"HBTC\": {\"x\": 205, \"y\": 402, \"w\": 32, \"h\": 36, \"offX\": 2, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"HEX\": {\"x\": 452, \"y\": 122, \"w\": 37, \"h\": 32, \"offX\": 0, \"offY\": 2, \"sourceW\": 37, \"sourceH\": 36},\n    \"HT\": {\"x\": 374, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ICHI\": {\"x\": 330, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"IDLE\": {\"x\": 289, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"INDEX\": {\"x\": 241, \"y\": 402, \"w\": 24, \"h\": 36, \"offX\": 7, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"JRT\": {\"x\": 248, \"y\": 122, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"KAI\": {\"x\": 125, \"y\": 481, \"w\": 29, \"h\": 29, \"offX\": 4, \"offY\": 3, \"sourceW\": 37, \"sourceH\": 36},\n    \"KEEP\": {\"x\": 207, \"y\": 162, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"KNC\": {\"x\": 203, \"y\": 482, \"w\": 19, \"h\": 26, \"offX\": 9, \"offY\": 5, \"sourceW\": 37, \"sourceH\": 36},\n    \"KP3R\": {\"x\": 166, \"y\": 202, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"LINK\": {\"x\": 125, \"y\": 242, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"LRC\": {\"x\": 412, \"y\": 122, \"w\": 36, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"MASK\": {\"x\": 84, \"y\": 282, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"MCB\": {\"x\": 63, \"y\": 482, \"w\": 33, \"h\": 18, \"offX\": 2, \"offY\": 9, \"sourceW\": 37, \"sourceH\": 36},\n    \"MKR\": {\"x\": 43, \"y\": 322, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"MTA\": {\"x\": 2, \"y\": 362, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"NEC\": {\"x\": 333, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"NEST\": {\"x\": 289, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"NIOX\": {\"x\": 411, \"y\": 162, \"w\": 33, \"h\": 36, \"offX\": 2, \"offY\": 0, \"sourceW\": 38, \"sourceH\": 36},\n    \"NMR\": {\"x\": 248, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"OBTC\": {\"x\": 207, \"y\": 122, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"OGN\": {\"x\": 166, \"y\": 162, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"OMG\": {\"x\": 125, \"y\": 202, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ONG\": {\"x\": 84, \"y\": 242, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"OVR\": {\"x\": 43, \"y\": 282, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"PAX\": {\"x\": 2, \"y\": 322, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"PBTC\": {\"x\": 292, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"PLTC\": {\"x\": 248, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"PNK\": {\"x\": 329, \"y\": 242, \"w\": 37, \"h\": 34, \"offX\": 0, \"offY\": 1, \"sourceW\": 37, \"sourceH\": 36},\n    \"PNT\": {\"x\": 207, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"QCAD\": {\"x\": 166, \"y\": 122, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"RAI\": {\"x\": 166, \"y\": 402, \"w\": 35, \"h\": 36, \"offX\": 1, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"REN\": {\"x\": 125, \"y\": 162, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"RENBTC\": {\"x\": 84, \"y\": 202, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"RENDOGE\": {\"x\": 43, \"y\": 242, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"REP\": {\"x\": 2, \"y\": 482, \"w\": 23, \"h\": 28, \"offX\": 7, \"offY\": 4, \"sourceW\": 37, \"sourceH\": 36},\n    \"REPT\": {\"x\": 2, \"y\": 282, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"RFOX\": {\"x\": 251, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"RGT\": {\"x\": 207, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"RICE\": {\"x\": 166, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"RPL\": {\"x\": 125, \"y\": 122, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"RSPT\": {\"x\": 84, \"y\": 162, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"RSR\": {\"x\": 43, \"y\": 202, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"SMARTCREDIT\": {\"x\": 2, \"y\": 242, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"SNT\": {\"x\": 210, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"SNX\": {\"x\": 166, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"STAKE\": {\"x\": 125, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"SUSD\": {\"x\": 84, \"y\": 122, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"SUSHI\": {\"x\": 370, \"y\": 202, \"w\": 35, \"h\": 34, \"offX\": 1, \"offY\": 1, \"sourceW\": 37, \"sourceH\": 36},\n    \"SX\": {\"x\": 289, \"y\": 282, \"w\": 35, \"h\": 34, \"offX\": 1, \"offY\": 1, \"sourceW\": 37, \"sourceH\": 36},\n    \"TEL\": {\"x\": 43, \"y\": 162, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"TRB\": {\"x\": 2, \"y\": 202, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"TRYB\": {\"x\": 169, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"TUSD\": {\"x\": 125, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"UBT\": {\"x\": 84, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"UMA\": {\"x\": 43, \"y\": 122, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"UNI\": {\"x\": 2, \"y\": 162, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"USDC\": {\"x\": 371, \"y\": 162, \"w\": 36, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"USDT\": {\"x\": 128, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"VBZRX\": {\"x\": 84, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"VETH\": {\"x\": 43, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"VSP\": {\"x\": 2, \"y\": 122, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"WBTC\": {\"x\": 87, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"WNXM\": {\"x\": 43, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"WOO\": {\"x\": 29, \"y\": 482, \"w\": 30, \"h\": 21, \"offX\": 3, \"offY\": 8, \"sourceW\": 37, \"sourceH\": 36},\n    \"YFI\": {\"x\": 2, \"y\": 82, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"YFII\": {\"x\": 46, \"y\": 2, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"YPIE\": {\"x\": 2, \"y\": 42, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36},\n    \"ZRX\": {\"x\": 125, \"y\": 282, \"w\": 37, \"h\": 36, \"offX\": 0, \"offY\": 0, \"sourceW\": 37, \"sourceH\": 36}\n  }\n}","import { StateBase } from './sagaStatus';\nimport { ConnectProviders } from './connect';\n\nexport enum AccountStatus {\n    UN_CONNECT = 'UN_CONNECT',\n    // CONNECT = 'CONNECT',\n    NO_ACCOUNT = 'NO_ACCOUNT',\n    LOCKED = 'LOCKED',\n    ACTIVATED = 'ACTIVATED',\n    DEPOSITING = 'DEPOSITING',\n    ERROR_NETWORK = 'ERROR_NETWORK'\n}\n\nexport enum fnType {\n    UN_CONNECT = 'UN_CONNECT',\n    NO_ACCOUNT = 'NO_ACCOUNT',\n    LOCKED = 'LOCKED',\n    ACTIVATED = 'ACTIVATED',\n    DEFAULT = 'DEFAULT',\n    DEPOSITING = 'DEPOSITING',\n    CONNECT = 'CONNECT',\n    ERROR_NETWORK='ERROR_NETWORK',\n}\n\nexport type Account = {\n    accAddress: string,\n    readyState: keyof typeof AccountStatus | 'unknown',\n    accountId: number,\n    level: string,\n    apiKey: string,\n    eddsaKey: any,\n    publicKey: any,\n    nonce:number|undefined,\n    keyNonce: number|undefined,\n    connectName: keyof typeof ConnectProviders,\n    wrongChain?: boolean|undefined,\n    _chainId?: 1 | 5 | 'unknown',\n    _userOnModel?: boolean|undefined\n}\nexport type AccountState = Account & StateBase;\nexport type AccountFull = {\n    account: Account,\n    resetAccount:()=>void\n    updateAccount:(account: Partial<Account>)=>void\n} & StateBase\n\n// export  enum StorageCommands {\n//     CLEAN= 'CLEAN',\n//     UPDATE='UPDATE'\n// }\n","import { ErrorObject } from '../error';\n\nexport enum SagaStatus {\n    UNSET = 'UNSET',\n    PENDING = 'PENDING',\n    ERROR = 'ERROR',   // success failed timeout is Done\n    DONE = 'DONE',   // success failed timeout is Done\n}\n\nexport type StateBase = {\n    status: keyof typeof SagaStatus,\n    errorMessage?: ErrorObject | null,\n}\n","\n/**\n *\n * @param value\n * @param minFractionDigits default = 6\n * @returns\n */\nexport const getThousandFormattedNumbers = (value: undefined | number, minFractionDigits: number = 6, option?: { isAbbreviate: boolean }) => {\n    if (!Number.isFinite(value)) return value\n    let result = value !== undefined ? value.toLocaleString('en', {\n        minimumFractionDigits: minFractionDigits\n    }).replace(/(\\.\\d+?)0*$/, '$1') : undefined\n    return value == undefined ? undefined : option && option.isAbbreviate ? abbreviateNumber(value) : result;\n\n\n}\n\nexport function abbreviateNumber(value: number) {\n    let newValue = value, result: string = '';\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue >= 1000) {\n        newValue /= 1000;\n        suffixNum++;\n    }\n\n    result = newValue.toPrecision(3);\n\n    result += suffixes[ suffixNum ];\n    return result;\n}\n\nexport const getFormattedHash = (hash?: string) => {\n    if (!hash) return hash\n    const firstSix = hash.slice(0, 6)\n    const lastFour = hash.slice(hash.length - 4)\n    return `${firstSix}****${lastFour}`\n}\n\nexport function getShortAddr(address: string):string|'' {\n    if (!address || address === undefined || address === null || address.trim() === '') {\n        // console.log('getShortAddr got empty!')\n        return ''\n    }\n    const convertAddr = address.substr(0, 6) + '...' + address.substr(address.length - 4)\n    return convertAddr\n}\n\n","export const ErrorMap = {\n    LOADING_WHOLE_SITE: {\n        id: 'LOADING_WHOLE_SITE',\n        messageKey: 'errorLoading'\n    },\n    NO_SUPPORT_PAIR: {\n        id: 'NO_SUPPORT_PAIR',\n        messageKey: 'no support base/quote pair!'\n    },\n    NO_SDK: {\n        id: 'NO_SDK',\n        messageKey: 'errorBase'\n    },\n    NO_NETWORK_ERROR: {\n        id: 'NO_NETWORK_ERROR',\n        messageKey: 'errorMessageNoNetwork'\n    },\n    NO_TOKEN_MAP: {\n        id: 'NO_TOKEN_MAP',\n        messageKey: 'errorMessageTokenMapIsEmpty'\n    },\n    NO_ENOUGH_BALANCE: {\n        id: 'NO_ENOUGH_BALANCE',\n        messageKey: 'errorTokenNotEnough'\n    },\n    NO_TOKEN_KEY_LIST: {\n        id: 'NO_TOKEN_KEY_LIST',\n        messageKey: 'errorRequiredTokenKeyList'\n    },\n    GET_X_TOKEN_TICKER_ERROR: {\n        id: 'NO_TOKEN_KEY_LIST',\n        messageKey: 'errorRequiredTokenKeyList',\n        options: {}\n    },\n    BUILD_AMM_MAP_WITH_TICKER: {\n        id: 'BUILD_AMM_MAP_WITH_TICKER',\n        messageKey: 'errorBase',\n        options: {}\n    },\n    TRADE_LITE_SET_PAIR_ERROR: {\n        id: 'TRADE_LITE_SET_PAIR_ERROR',\n        messageKey: 'errorBase',\n        options: {}\n    },\n    SOCKET_ERROR: {\n        id: 'SOCKET_ERROR',\n        messageKey: 'errorBase',\n        options: {}\n    },\n    TRADE_404: {\n        id: '404',\n        messageKey: 'error404',\n        options: {}\n    }\n\n}\n\nexport type ErrorObject = {\n    from?: string,\n    timestamp?: number,\n    messageKey: string\n    [ key: string ]: any,\n}\n","export * from './errorMap'\n\nexport type ErrorType = {\n    id: string,\n    messageKey: string,\n    options?: any\n}\n\nexport class CustomError extends Error {\n    constructor(error: ErrorType) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(error.id)\n\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, CustomError)\n        }\n\n        this.name = error.id;\n        this.message = error.id;\n        this._date = Date.now();\n        this._messageKey = error.messageKey;\n        this._options = error.options\n        // Custom debugging information\n        // this.foo = foo\n        // this.date = new Date()\n    }\n\n    private _options: any;\n\n    get options(): any {\n        return this._options;\n    }\n\n    private _date: number;\n\n    get date(): number {\n        return this._date;\n    }\n\n    private _messageKey: string;\n\n    get messageKey(): string {\n        return this._messageKey;\n    }\n}\n","import type { Provider as TProvider } from \"react\"\n\nexport const provider = (Provider: TProvider<any>, props: any = {}) => [Provider, props];\n\n/**\n * @param providers  inner -> outer\n * @param children\n * @constructor\n * example\n *  <ProviderComposer  providers={[\n *     provider(LocalizationProvider,{dateAdapter:MomentUtils}),\n *     provider(I18nextProvider,{i18n}),\n *     provider(ThemeProvider),\n *   ]}>\n *     <App />\n *  </ProviderComposer>\n */\nexport const ProviderComposer = ({providers, children}: { providers: Array<[TProvider<any>, any]>, children: any }) => {\n    // @ts-ignore\n    return providers.reduce((children, [Provider, props]: [TProvider<any>, any]) => {\n            // @ts-ignore\n            return <Provider {...props}>{children}</Provider>\n        }\n        , children)\n    // return children;\n}\n\n","export enum Commands {\n    // Provider = 'Provider',\n    ConnectWallet=  'ConnectWallet',\n    DisConnect=  'DisConnect',\n    ChangeNetwork= 'ChangeNetwork',\n    Processing= 'Processing',\n    Error = 'Error'\n    // UnLockWallet=  'UnLockWallet',\n    // SignatureTransfer= 'SignatureTransfer',\n    // SignatureApprove= 'SignatureApprove'\n    //....\n}\nexport enum ErrorType {\n    FailedConnect = 'FailedConnect'\n}\n// 'ConnectWallet',\n// 'UnLockWallet',\n// 'SignatureTransfer',\n// 'SignatureApprove'\n\n\nexport enum ProcessingType{\n    waiting = 'waiting',\n    nextStep = 'nextStep'\n}\n","import { Subject } from 'rxjs';\nimport Web3 from \"web3\";\nimport { Commands, ErrorType, ProcessingType } from './command';\n\n//TODO typeof account State\nconst subject = new Subject<{ status: keyof typeof Commands, data: any, }>();\n\nconst AvaiableNetwork = [1, 5];\nexport const walletServices = {\n    subject,\n    sendProcess: async (type: keyof typeof ProcessingType, props?: any) => {\n        subject.next({\n            status: Commands.Processing,\n            data: {type: type, opts: props}\n        });\n    },\n    sendError: async (errorType: keyof typeof ErrorType, errorObj: any) => {\n        subject.next({\n            status: Commands.Error,\n            data: {type: errorType, opts: errorObj}\n        });\n    },\n    sendConnect: async (web3: Web3, provider: any) => {\n        try {\n            const accounts = provider.accounts?? await web3.eth.getAccounts();\n            let chainId = provider.chainId ?? await web3.eth.getChainId();\n\n            // console.log('wallet connect:', accounts, chainId);\n\n            subject.next({status: 'ConnectWallet', data: {provider, accounts,\n                    chainId: AvaiableNetwork.findIndex((i)=>i == Number(chainId))!==-1?  Number(chainId) :'unknown'\n            }});\n        } catch (error) {\n            subject.next({status: 'Error', data: {error}});\n        }\n    },\n    // sendChainChanged: async (chainId: number) => {\n    //     console.log('wallet connect:', chainId);\n    //     subject.next({status: 'ChangeNetwork', data: {chainId: Number(chainId)}})\n    // },\n    sendDisconnect: async (code: any, reason: any) => {\n        subject.next({status: 'DisConnect', data: {reason: reason, code: code}})\n    },\n\n    // clearMessages: () => subject.next(),\n    onSocket: () => subject.asObservable()\n};","import WalletConnectProvider from '@walletconnect/web3-provider';\nimport Web3 from \"web3\";\nimport { walletServices } from '../walletServices';\nimport { ErrorType } from '../command';\nimport { ConnectProviders } from '@loopring-web/common-resources';\nimport { MetaMaskUnsubscribe } from '../metamask';\n\nconst RPC_URLS: { [ chainId: number ]: string } = {\n    1: process.env.REACT_APP_RPC_URL_1 as string,\n    5: process.env.REACT_APP_RPC_URL_5 as string\n}\nconst POLLING_INTERVAL = 12000\nexport const WalletConnectProvide = async (account?: string): Promise<{ provider?: WalletConnectProvider, web3?: Web3, } | undefined> => {\n    try {\n        const provider: WalletConnectProvider = new WalletConnectProvider({\n            rpc: RPC_URLS,\n            bridge: 'https://bridge.walletconnect.org',\n            pollingInterval: POLLING_INTERVAL,\n            qrcode: false,\n        });\n        const {connector} = provider;\n        let web3: Web3|undefined\n        if (!connector.connected && account === undefined) {\n            await connector.createSession();\n            const uri = connector.uri;\n            walletServices.sendProcess('nextStep', {qrCodeUrl: uri});\n            await provider.enable();\n            web3 = new Web3(provider as any);\n            walletServices.sendConnect(web3, provider);\n\n        } else if (!connector.connected && account !== undefined) {\n            console.log('WalletConnect reconnect connected is failed',account,provider)\n            // WalletConnectUnsubscribe(provider);\n            // walletServices.sendDisconnect('', 'walletConnect not connect');\n            web3=undefined\n            throw new Error('walletConnect not connect');\n        } else if (account && provider.isWalletConnect) {\n            console.log('WalletConnect reconnect connected is true',account, provider, connector.session)\n            const wc = await provider.getWalletConnector()\n            if (wc) {\n                await provider.start();\n                provider.subscribeWalletConnector();\n                web3 = new Web3(provider as any);\n                // connector.updateSession({accounts:[account],chainId:connector.chainId})\n                walletServices.sendConnect(web3, provider)\n            }else {\n                web3=undefined\n                throw new Error('walletConnect not connect');\n            }\n        }\n        return {provider, web3}\n    } catch (error) {\n        console.log('error happen at connect wallet with WalletConnect:', error)\n        walletServices.sendError(ErrorType.FailedConnect, {connectName: ConnectProviders.WalletConnect, error})\n    }\n}\n\nexport const WalletConnectSubscribe = (provider: any, web3: Web3, account?: string) => {\n    const {connector} = provider;\n    if (provider && connector && connector.connected) {\n\n        // if(account) {\n        //     connector.approveSession({accounts:[account], chainId:provider.chainId})\n        // }\n\n        connector.on(\"connect\", (error: Error | null, payload: any | null) => {\n            if (error) {\n                walletServices.sendError(ErrorType.FailedConnect, {connectName: ConnectProviders.WalletConnect, error})\n            }\n            const {accounts, chainId} = payload.params[ 0 ];\n            connector.approveSession({accounts, chainId})\n            //\n            // // const _accounts = await web3.eth.getAccounts();\n            // console.log('accounts:', accounts)\n            walletServices.sendConnect(web3, provider)\n        });\n        connector.on(\"session_update\", (error: Error | null, payload: any | null) => {\n            const {accounts, chainId} = payload.params[ 0 ];\n            if (error) {\n                walletServices.sendError(ErrorType.FailedConnect, {connectName: ConnectProviders.WalletConnect, error})\n            }\n            connector.updateSession({accounts, chainId})\n            walletServices.sendConnect(web3, provider);\n        });\n        connector.on(\"disconnect\", (error: Error | null, payload: any | null) => {\n            const {message} = payload.params[ 0 ];\n            if (error) {\n                walletServices.sendError(ErrorType.FailedConnect, {connectName: ConnectProviders.WalletConnect, error})\n            }\n            walletServices.sendDisconnect('', message);\n            console.log('WalletConnect on disconnect')\n        });\n    }\n}\n\nexport const WalletConnectUnsubscribe = async  (provider: any) => {\n    if (provider && provider.connector) {\n        const {connector} = provider;\n        console.log('WalletConnect on Unsubscribe')\n        connector.off('disconnect');\n        connector.off('connect')\n        connector.off('session_update');\n        return\n    }\n}\n//)\n//     new Proxy<Array<keyof typeof Commands>>(\n//    [\n//        'Provider',\n//        'ConnectWallet',\n//        'UnLockWallet',\n//        'SignatureTransfer',\n//        'SignatureApprove']\n// , {\n//     get: function (obj, prop) {\n//         switch (prop){\n//             case 'Provider':\n//\n//             case 'ConnectWallet':\n//                 return async (props:any )=>{\n//                     obj\n//                 }\n//                 break\n//             case 'UnLockWallet':\n//                 return async (props:any )=>{\n//\n//                 }\n//             case 'SignatureTransfer':\n//                 return async (props:any )=>{\n//\n//                 }\n//             case 'SignatureApprove':\n//                 return async (props:any )=>{\n//\n//                 }\n//         }\n//         // if(prop === 'ConnectWallet') {\n//         //     return async (props:any )=>{\n//         //\n//         //     }\n//         // }\n//         //\n//         // if(prop === 'UnLockWallet') {\n//         //     return async (props:any )=>{\n//         //\n//         //     }\n//         // }\n//         // // 附加一个属性\n//         // if (prop === 'latestBrowser') {\n//         //     return obj.browsers[ obj.browsers.length - 1 ];\n//         // }\n//         //\n//         // // 默认行为是返回属性值\n//         // return obj[ prop ];\n//     },\n//\n// })\n\n// import { InjectedConnector } from '@web3-react/injected-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\n// import { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\n// import { LedgerConnector } from '@web3-react/ledger-connector'\n// import { TrezorConnector } from '@web3-react/trezor-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { myLog } from 'utils/log_tools'\n//\n// const POLLING_INTERVAL = 12000\n//\n// const RPC_URLS: { [chainId: number]: string } = {\n//     1: process.env.REACT_APP_RPC_URL_1 as string,\n//     5: process.env.REACT_APP_RPC_URL_5 as string\n// }\n//\n// myLog('RPC_URLS 1:', RPC_URLS[1])\n// myLog('RPC_URLS 5:', RPC_URLS[5])\n//\n// export const injected = new InjectedConnector({ supportedChainIds: [1, 5,] })\n//\n// export const network = new NetworkConnector({\n//     urls: RPC_URLS,\n//     defaultChainId: 1\n// })\n//\n// export const walletconnect = new WalletConnectConnector({\n//     rpc: RPC_URLS,\n//     bridge: 'https://bridge.walletconnect.org',\n//     qrcode: true,\n//     pollingInterval: POLLING_INTERVAL\n// })\n//\n// export const walletlink = new WalletLinkConnector({\n//     url: RPC_URLS[1],\n//     appName: 'Loopring DEX'\n// })\n//\n// export const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL })\n//\n// export const trezor = new TrezorConnector({\n//     chainId: 1,\n//     url: RPC_URLS[1],\n//     pollingInterval: POLLING_INTERVAL,\n//     manifestEmail: 'dummy@abc.xyz',\n//     manifestAppUrl: 'http://localhost:1234'\n// })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n","import detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { walletServices } from '../walletServices';\nimport { IpcProvider } from 'web3-core';\nimport { ErrorType } from '../command';\nimport { ConnectProviders } from '@loopring-web/common-resources';\n\nexport const MetaMaskProvide = async (): Promise<{ provider: IpcProvider, web3: Web3 } | undefined> => {\n    try {\n        const provider: any = await detectEthereumProvider();\n        const ethereum: any = window.ethereum;\n        if (provider && ethereum) {\n            const web3 = new Web3(provider as any);\n            await ethereum.request({method: 'eth_requestAccounts'});\n            walletServices.sendConnect(web3, provider);\n            return {provider, web3}\n        } else {\n            return undefined\n        }\n\n    } catch (error) {\n        console.log('Error happen at connect wallet with MetaMask:', error)\n        walletServices.sendError(ErrorType.FailedConnect, {connectName: ConnectProviders.MetaMask, error})\n    }\n}\nexport const MetaMaskSubscribe = (provider: any, web3: Web3) => {\n    if (provider) {\n        provider.on(\"accountsChanged\", (accounts: Array<string>) => {\n            // const _accounts = await web3.eth.getAccounts();\n            // console.log('accounts:', accounts)\n            if (accounts.length) {\n                walletServices.sendConnect(web3, provider)\n            } else {\n                walletServices.sendDisconnect(-1, 'disconnect for no account');\n            }\n\n        });\n        provider.on(\"chainChanged\", (chainId: number) => {\n            walletServices.sendConnect(web3, provider);\n        });\n        provider.on(\"disconnect\", (code: number, reason: string) => {\n\n            walletServices.sendDisconnect(code, reason);\n\n        });\n    }\n}\n\nexport const MetaMaskUnsubscribe = async (provider: any) => {\n    if (provider && typeof provider.removeAllListeners === 'function') {\n        // provider.removeAllListeners('accountsChanged');\n        // provider.removeAllListeners('chainChanged');\n        // provider.removeAllListeners('disconnect');\n        await provider.removeAllListeners();\n    }\n}","import { WalletConnectProvide, WalletConnectSubscribe, WalletConnectUnsubscribe } from './walletConnect';\nimport { MetaMaskProvide, MetaMaskSubscribe, MetaMaskUnsubscribe } from './metamask';\nimport { IpcProvider } from 'web3-core';\nimport Web3 from 'web3';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport { ConnectProviders } from '@loopring-web/common-resources';\n\n\nexport class ConnectProvides {\n    public usedProvide: undefined | IpcProvider | WalletConnectProvider;\n    public usedWeb3: undefined | Web3;\n\n    private _provideName: string | undefined;\n\n    get provideName(): string | undefined {\n        return this._provideName;\n    }\n\n    // private provderObj:provider|undefined\n    public MetaMask = async () => {\n        this._provideName = ConnectProviders.MetaMask;\n        this.clearProviderSubscribe();\n        const obj = await MetaMaskProvide();\n        if (obj) {\n            this.usedProvide = obj.provider\n            this.usedWeb3 = obj.web3\n        }\n        this.subScribe()\n\n    }\n\n    public WalletConnect = async (account?: string) => {\n        this._provideName = ConnectProviders.WalletConnect;\n        this.clearProviderSubscribe();\n        try {\n           const obj = await WalletConnectProvide(account);\n           if (obj) {\n               this.usedProvide = obj.provider\n               this.usedWeb3 = obj.web3\n           }\n           console.log('WalletConnect subScribe')\n           this.subScribe(account)\n        }catch (e){\n            throw e;\n        }\n\n    };\n\n    public clear = async () => {\n        return await this.clearProviderSubscribe();\n    }\n\n    private clearProviderSubscribe = async () => {\n        switch (this._provideName) {\n            case  ConnectProviders.WalletConnect:\n                if (this.usedProvide) {\n                    await (this.usedProvide as WalletConnectProvider).connector.killSession();\n                }\n                await WalletConnectUnsubscribe(this.usedProvide);\n                delete this.usedProvide;\n                delete this.usedWeb3;\n                break;\n            case  ConnectProviders.MetaMask:\n                await MetaMaskUnsubscribe(this.usedProvide);\n                delete this.usedProvide;\n                delete this.usedWeb3;\n                break;\n        }\n        \n        return\n    }\n\n    private subScribe = (account?:string) => {\n        switch (this._provideName) {\n            case  ConnectProviders.WalletConnect:\n                WalletConnectSubscribe(this.usedProvide, this.usedWeb3 as Web3, account)\n                break\n            case  ConnectProviders.MetaMask:\n                MetaMaskSubscribe(this.usedProvide, this.usedWeb3 as Web3)\n                break\n        }\n    }\n\n}\n\nexport const connectProvides = new ConnectProvides();\n\n\n//\n//\n//\n//\n//     new Proxy<{\n//     WalletConnect:undefined|provider,\n//     MetaMask:undefined|provider,\n//     usedProvide: undefined|IpcProvider|WalletConnectProvider,\n//     usedWeb3:undefined|Web3,\n//     clear: undefined,\n// }>({\n//     WalletConnect:undefined,\n//     MetaMask:undefined,\n//     usedWeb3:undefined,\n//     usedProvide: undefined,\n//     clear:undefined\n// }, {\n//     get: async function (obj, prop) {\n//         switch (prop){\n//             case 'usedProvide':\n//                 return obj.usedProvide;\n//             case 'usedWeb3':\n//                 return obj.usedWeb3;\n//         }\n//\n//\n//\n//         let provderObj;\n//         walletServices.sendProcess('waiting');\n//         // let provider,web3;\n//         switch (prop) {\n//             case ConnectProviders.MetaMask:\n//                 // if(obj.usedProvide === ConnectProviders.MetaMask){\n//                 //     return  obj.MetaMask\n//                 // }else{\n//                 //     obj.usedProvide = ConnectProviders.MetaMask;\n//                 provderObj  = await MetaMaskProvide();\n//                 if(provderObj) {\n//                     obj.usedProvide =  provderObj.provider\n//                     obj.usedWeb3 =    provderObj.web3\n//                 }\n//\n//                 break;\n//\n//                 // }\n//             case ConnectProviders.WalletConnect:\n//                 // if(obj.usedProvide === ConnectProviders.WalletConnect){\n//                 //     delete  obj.WalletConnect\n//                 // }\n//                 // obj.usedProvide = ConnectProviders.WalletConnect;\n//                 provderObj = await WalletConnectProvide();\n//                 if(provderObj) {\n//                     obj.usedProvide =  provderObj.provider\n//                     obj.usedWeb3 =    provderObj.web3\n//                 }\n//                 break;\n//             case 'clear':\n//             default:\n//                 obj.usedProvide\n//\n//         }\n//         if( obj.usedProvide) {\n//             // @ts-ignore\n//             obj.usedProvide.on(\"accountsChanged\", (accounts: Array<string>) => {\n//                 // const _accounts = await web3.eth.getAccounts();\n//                 console.log('accounts:',accounts)\n//                 // walletServices.sendConnect(web3,provider)\n//             });\n//             // @ts-ignore\n//             obj.usedProvide.on(\"chainChanged\", (chainId: number) => {\n//                 walletServices.sendChainChanged(chainId);\n//             });\n//             // @ts-ignore\n//             obj.usedProvide.on(\"disconnect\", (code: number, reason: string) => {\n//                 if(obj.usedProvide instanceof WalletConnectProvider) {\n//                     const {connector} = obj.usedProvide as WalletConnectProvider;\n//                     connector.killSession();\n//                 }\n//                 walletServices.sendDisconnect(code,reason);\n//\n//             });\n//         }\n//\n//         return  {provider: obj.usedProvide,web3: obj.usedWeb3 }\n//         // // 附加一个属性\n//         // if (prop === 'latestBrowser') {\n//         //     return obj.browsers[ obj.browsers.length - 1 ];\n//         // }\n//         //\n//         // // 默认行为是返回属性值\n//         // return obj[ prop ];\n//     },\n//\n// })","import React from 'react';\nimport { walletServices } from './walletServices';\nimport { Commands, ErrorType, ProcessingType } from './command';\nimport { provider } from 'web3-core';\nimport { ChainId } from 'loopring-sdk';\n\nexport function useConnectHook(\n    {\n        // handleChainChanged,\n        handleConnect, handleAccountDisconnect, handleError, handleProcessing\n    }: {\n        handleProcessing?: (props: { type: keyof typeof ProcessingType, opts: any }) => void,\n        handleError?: (props: { type: keyof typeof ErrorType, errorObj: any }) => void,\n        // handleChainChanged?: (chainId: string) => void,\n        handleConnect?: (prosp: { accounts: string, provider: provider, chainId: ChainId |'unknown' }) => void,\n        handleAccountDisconnect?: () => void\n    }\n) {\n    const subject = React.useMemo(() => walletServices.onSocket(), []);\n    React.useEffect(() => {\n        const subscription = subject.subscribe(({data, status}: { status: keyof typeof Commands, data?: any }) => {\n            switch (status) {\n                case 'Error':\n                    handleError ? handleError(data) : undefined;\n                    break\n                case 'Processing':\n                    handleProcessing ? handleProcessing(data) : {}\n                    break\n                // case 'ChangeNetwork':\n                //     // {chainId} = data ? data : {chainId: undefined};\n                //     handleChainChanged ? handleChainChanged(data.chainId) : undefined;\n                //     break\n                case 'ConnectWallet':                      // provider, accounts, chainId, networkId\n                    const {accounts, provider, chainId} = data ? data : {\n                        accounts: undefined,\n                        provider: undefined,\n                        chainId: 1\n                    };\n                    handleConnect ? handleConnect({accounts, provider, chainId}) : undefined\n                    break\n                case 'DisConnect':\n                    handleAccountDisconnect ? handleAccountDisconnect() : undefined\n                    //TODO reset\n                    console.log(data)\n\n            }\n        });\n        return () => subscription.unsubscribe();\n    }, [subject, handleConnect, handleAccountDisconnect, handleError, handleProcessing]);\n}\n"],"sourceRoot":""}