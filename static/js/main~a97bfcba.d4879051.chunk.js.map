{"version":3,"sources":["defs/web3_defs.ts","stores/account/hook.ts","state_machine/machine_builder.ts","stores/account/reducer.ts","storage/index.ts","stores/trading/hook.ts","stores/global/actions.ts","stores/transactions/reducer.ts","stores/Amm/AmmRecord/reducer.ts","stores/Amm/AmmTrades/reducer.ts","stores/Amm/AmmActivityMap/saga.ts","stores/Amm/AmmMap/saga.ts","stores/Amm/AmmRecord/saga.ts","stores/Amm/AmmTrades/saga.ts","stores/Amm/index.ts","stores/wallet/reducer.ts","stores/token/saga.ts","stores/wallet/saga.ts","stores/ticker/saga.ts","stores/system/saga.ts","stores/rootSaga.ts","stores/index.ts","hooks/web3/useWeb3.ts","networks/web3_connectors.ts","stores/trading/reducer.ts","index.tsx","stores/ticker/reducer.ts","stores/apis/api.ts","stores/Amm/AmmMap/reducer.ts","stores/Amm/AmmActivityMap/reducer.ts","stores/token/reducer.ts","stores/system/reducer.ts","stores/Amm/AmmMap/hook.ts","stores/system/interface.ts","stores/system/hook.ts","stores/ticker/hook.ts","state_machine/account_machine_spec.ts","utils/web3_tools.ts","provider/global/index.tsx","provider/web3ReactManager/index.tsx","provider/dev-wrapper/index.tsx","stores/token/hook.ts","stores/Amm/AmmActivityMap/hook.ts","hooks/common/useCustomDCEffect.ts","hooks/exchange/useApi.ts","stores/constant.ts","utils/swap_calc_utils.ts","hook.ts","defs/common_defs.ts","hooks/modal/useModals.ts","utils/hook_tools.ts","hooks/common/useCommon.ts","hooks/exchange/useExchangeAPI.ts","hooks/exchange/useUserAPI.ts","layouts/header/hook.tsx","utils/obj_tools.ts","pages/AccountPage/index.tsx","layouts/header/index.tsx","pages/QuotePage/index.tsx","pages/QuotePage/hook.ts","pages/SwapPage/panel/SwapPanel/index.tsx","hooks/exchange/useAmmpoolAPI.ts","hooks/exchange/useWebsocketApi.ts","hooks/exchange/useWsAPI.ts","defs/swap_defs.ts","pages/SwapPage/hook.ts","pages/SwapPage/panel/BasicInfoPanel/hook.tsx","pages/SwapPage/panel/BasicInfoPanel/index.tsx","pages/SwapPage/panel/TradePanel/TradePanel.tsx","pages/SwapPage/panel/TradePanel/index.tsx","pages/SwapPage/panel/TradePanel/hooks.ts","pages/SwapPage/index.tsx","hooks/common/useApi2.ts","hooks/common/useWebsocketApi.ts","pages/DebugPage/index.tsx","pages/Layer2Page/TxPanel/index.tsx","pages/Layer2Page/TxPanel/hooks.ts","pages/Layer2Page/AssetPanel/index.tsx","pages/Layer2Page/TradePanel/index.tsx","pages/Layer2Page/TradePanel/hooks.ts","pages/Layer2Page/OrderPanel/index.tsx","pages/SettingPage/SettingPanel.tsx","pages/Layer2Page/index.tsx","pages/LiquidityPage/PoolsPanel/hook.ts","pages/LiquidityPage/PoolsPanel/index.tsx","pages/LiquidityPage/AmmPanel/index.tsx","pages/LiquidityPage/CoinPairPanel/index.tsx","pages/LiquidityPage/AmmMining/index.tsx","pages/LiquidityPage/AmmMining/hook.ts","pages/LiquidityPage/LiquidityOverview/index.tsx","pages/LiquidityPage/index.tsx","routers/index.tsx"],"names":["connectorsByName","ConnectorNames","Unknown","undefined","Injected","injected","Network","network","WalletConnect","walletconnect","WalletLink","walletlink","Ledger","ledger","Trezor","trezor","Authereum","authereum","useWeb3Account","useActiveWeb3React","connector","library","account","chainId","active","error","isConnected","voca","isBlank","useAccount","useSelector","state","isNoAccount","status","AccountStatus","NOACCOUNT","isActivated","ACTIVATED","apiKey","eddsaKey","accountId","useStateMachine","spec","dispatch","useDispatch","machine","AccountMachineSpec","currentState","event","stateTransitions","states","Error","nextState","sendEvent","useCallback","setAccountStatus","useConnect","activate","useState","activatingConnector","setActivatingConnector","connect","item_name","isSwitch","newConnector","setConnectNameTemp","store","getState","StatusChangeEvent","Reset","Connecting","console","log","useDisconnect","deactivate","disconnect","reset","useUnlock","exchangeApi","useExchangeAPI","userApi","useUserAPI","tradingInfo","useGetTradingInfo","lock","a","Lock","unlock","exchangeInfo","exchangeAddress","LOCKED","sk","apikey","getProvider","provider","web3","Web3","sign_tools","accAddr","nonce","connectName","eddsakey","toHex","toBig","keyPair","secretKey","getUserApiKey","Unlock","setEddsaKey","setApikey","useCheckAccStatus","web3Account","lv1Acc","prevChainId","usePrevious","prevWeb3Account","useCustomDCEffect","UNCONNNECTED","cleanUp","CONNECTED","DEPOSITING","DEPOSIT_TO_CONFIREM","UNACTIVATED","ARPROVING","APPROV_TO_CONFIRM","getAccount","owner","acc","setAccountInfo","connectNameTemp","setConnectName","HasPubkey","dumpError400","setAccAddr","response","data","resultInfo","code","ErrorResponse","FinishDeposit","UserStorage","checkTimeout","handler","setInterval","isTimeOut","clearInterval","setHandler","getHandler","checkStatus","initialState","defaultAccId","process","REACT_APP_TEST_ACCOUND_ID","getAccountId","defaultApiKey","REACT_APP_TEST_API_KEY","getApikey","defaultOwner","REACT_APP_TEST_OWNER","defaultEddsaKey","REACT_APP_TEST_EDDSA_KEY","getEddsakey","JSON","stringify","publicKey","isContractAddress","accountSlice","createSlice","name","reducers","initState","Object","assign","action","payload","setIsContractAddress","actions","CONSTANTS","rawHandler","sessionStorage","getItem","Handler","parseInt","err","setItem","removeItem","dateTimeStr","localStorage","ActiveTime","now","Date","getTime","toString","tmpDt","SESSION_TIMEOUT_SECONDS","clear","rawId","AccountId","Account","Apikey","Eddsakey","orderHash","AmmOrder","address","current","HardwareAddresses","includes","toLowerCase","newValue","getTradingInfo","trading","useUpdateChainId","useEffect","setChainId","ChainId","GORLI","useUpdateExchangeMarkets","api","getMixMarkets","setMarkets","useUpdateExchangeInfo","getExchangeInfo","setExchangeInfo","useUpdateAmmPoolConf","useAmmpoolAPI","getAmmPoolConf","ammPoolConf","setAmmPoolConf","useUpdateAmmPoolStats","getAmmPoolStats","ammPoolStats","setAmmPoolStats","useUpdateAmmActivityRules","getAmmPoolActivityRules","ammActivityRules","setAmmActivityRules","activityRules","useUpdateTokens","getTokens","tokens","setTokens","asyncGetTradingInfo","tokenIdMap","exchangeAPI","ammpools","ammpoolAPI","updateVersion","createAction","transactionsSlice","addTransaction","from","hash","approval","summary","claim","addedTime","clearAllTransactions","checkedTransaction","blockNumber","tx","lastCheckedBlockNumber","Math","max","finalizeTransaction","receipt","confirmedTime","ammRecordSlice","ammRecords","errorMessage","getAmmRecord","STATUS","PENDING","getAmmRecordStatus","ERROR","DONE","statusUnset","UNSET","ammTradesSlice","ammTrades","getAmmTrades","getAmmTradesStatus","getPostsSaga","ammActivityMapSaga","getAmmActivityMapApi","totalRewards","myRewards","rewardToken","coinMap","ETH","duration","to","Promise","resolve","call","put","getAmmActivityMapStatus","ammActivityMap","all","takeLatest","getAmmActivityMap","ammMapSaga","getAmmMapApi","getFiatPrice","legal","faitPrice","forex","prices","Reflect","ownKeys","forEach","key","item","tokenA","getTokenInfoById","pooled","tokenB","ammPoolStat","market","usdLiquidity","parseFloat","liquidityUSD","dataItem","coinAInfo","makeCoinInfo","coinBInfo","amountDollar","amountYuan","totalLPToken","lpLiquidity","totalA","liquidity","totalB","rewardValue","rewards","feeA","fees","feeB","feeDollar","feeYuan","isNew","isActivity","getAmmMapStatus","ammMap","getAmmMap","ammRecordSaga","getAmmRecordApi","side","amount","sell","belong","tradeValue","buy","time","fee","amountLP","ammTradesSaga","getAmmTradesApi","priceValue","priceToken","posts","ammReducer","combineReducers","ammRecord","reducer","ammMapSlice","ammActivityMapSlice","ammForks","fork","walletSlice","wallet","getWallet","getWalletStatus","tokenSaga","getTokenMapApi","tokenSymbolMap","keys","startsWith","icon","getIcon","simpleName","description","company","getTokenMapStatus","tokenMap","getTokenMap","walletSaga","getWalletBalance","reject","count","LRC","tickerSaga","tickersSaga","getTickersApi","list","getTicker","join","tickers","tickMap","base_token_volume","timeUnit","priceDollar","priceYuan","volume","floatTag","close","open","APY","reward","tickerKey","tickerKeys","length","getTickerStatus","tickerMap","CustomError","ErrorMap","NO_TOKEN_KEY_LIST","getTickers","tickerForks","getUpdateSystem","systemSaga","getSystemsApi","system","env","NETWORK","Goerli","ENV","UAT","PROD","baseURL","getSystemStatus","updateSystem","systemForks","mySaga","sagaMiddleware","createSagaMiddleware","settings","settingsSlice","systemSlice","tradingSlice","transactions","transactionlice","modals","modalsSlice","amm","tokenMapSlice","walletMap","tickerMapSlice","PERSISTED_KEYS","configureStore","middleware","getDefaultMiddleware","thunk","serializableCheck","save","devTools","enhancers","reduxBatch","preloadedState","load","setLanguage","language","run","context","useWeb3React","contextNetwork","NetworkContextName","useEtherscan","etherscanUrl","setEtherscanUrl","MAINNET","useEagerConnect","tried","setTried","isAuthorized","then","catch","useInactiveListener","onReConnectInjected","ethereum","window","reConnectInjected","on","handleChainChanged","handleAccountsChanged","accounts","removeListener","POLLING_INTERVAL","RPC_URLS","InjectedConnector","supportedChainIds","NetworkConnector","urls","1","5","defaultChainId","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","WalletLinkConnector","url","appName","LedgerConnector","TrezorConnector","manifestEmail","manifestAppUrl","AuthereumConnector","defaultSymbol","getBaseQuote","base","quote","symbol","symbol_base","symbol_quote","interval","markets","marketTrades","refreshRate","refreshRateSlow","changeSymbol","changeTradingInterval","setTickerMap","setMarketTrades","Web3ProviderNetwork","createWeb3ReactRoot","providers","LocalizationProvider","dateAdapter","MomentUtils","I18nextProvider","i18n","MuThemeProvider","theme","getTheme","ThemeProvider","Provider","ReactDOM","render","getLibrary","App","document","getElementById","ExchangeAPI","AmmpoolAPI","useAmmMap","updateAmmMap","useSystem","useTicker","updateTickers","updateTicker","HasNoPubkey","IsSmartWallet","ApproveSubmit","ApproveConfirmed","Web3Provider","getShortAddr","trim","substr","WindowEvent","events","Click","Scroll","forceReset","debounce","GlobalProvider","children","addEventListener","removeEventListener","Fragment","MessageWrapper","Message","colorBase","Web3ReactManager","t","useTranslation","networkActive","networkError","activateNetwork","triedEager","showLoader","setShowLoader","timeout","setTimeout","clearTimeout","DevWrapper","useTokenMap","updateTokenMap","useAmmActivityMap","updateAmmActivityMap","deps","useDeepCompareEffect","useApi","ApiClass","DEFAULT_TIMEOUT","genApi","useMemo","useWsAPI","WsAPI","UserAPI","SwapStatus","MULTI_FACTOR","baseAmt","MaxBaseAmt","quoteAmt","MaxQuoteAmt","newStatus","Normal","BigNumber","zero","gt","ExceedUserBalance","ExceedPoolBalance","eq","EmptyInput","isNormal","getIconByTokenInfo","token","addr","utils","getAddress","getLeft","pairs","left","coinMapLeft","getRight","right","tokenList","coinMapRight","getToken","getTokenInfoByToken","ammBalance","tokenInfo","tokenVol","pooledMap","tokenId","reserve","fm","getKey","key_bak","isOK","getInfoByKey","raw_data","getBalances","ammPoolsBalances","getAmmInfo","ammInfo","baseToken","quoteToken","baseBalance","quoteBalance","feeBips","getAmt","rawAmt","times","decimals","applySlippageTolerance","value","slippageTolerance","f","feeFactor","outInWei","dividedBy","out","fromWEI","applyOrderFee","feeBip","valueInWEI","precision","ceil","precisionToFixed","div","toWEI","rm","toFixed","getAmountOut","amt","takerRate","currentPrice","baseTokenInfo","reserveIn","reserveOut","amountIn","feeBipsFactor","amountInWithFee","numerator","denominator","plus","_amount1ApplyOrderFeeInWei","_amount1ApplyOrderFee","Number","priceImpact","getAmountOut_Reverse","quoteTokenInfo","amountOut","hasError","reserveOutSubAmountOut","minus","useInit","systemState","tokenState","ammMapState","MAIN","detectEthereumProvider","request","method","React","ammMapCheck","Theme","LangType","SystemStatus","MODAL_TYPE","useModals","ShowDeposit","isShow","props","title","setShowDeposit","ShowTransfer","setShowTransfer","ShowWithdraw","setShowWithdraw","ShowResetAccount","setShowResetAccount","PromiseJob","fetchPromise","setFunc","field","prefix","mounted","reason","usePromiseJob","dependencies","useGetMarkets","getMarkets","useGetExchangeInfo","useGetTokens","useGetUserBalances","balances","setBalances","push","getUserBalances","map","total","locked","availableInWei","useChargeFeeList","tokenSymbol","requestType","chargeFeeList","setChargeFeeList","getOffchainFeeAmt","index","useModalProps","tokensAll","setCoinMap","useCoinMap","walletMap_Lv1","setWalletMap","getTokenBalances","tokenBalances","balance","useLv1WalletMap","walletMap_Lv2","useLv2WalletMap","deposit","depositAddress","sendByMetaMask","getGasPrice","gasPrice","gasLimit","contract","response2","withdraw","sellTokenId","getNextStorageId","storageId","request2","exchange","offchainId","maxFee","extraData","minGas","validUntil","VALID_UNTIL","submitOffchainWithdraw","transfer","payeeAddr","walletType","payeeAcc","payeeId","payerAddr","payerId","submitInternalTransfer","depositValue","setDepositValue","depositProps","tradeData","depositBtnStatus","TradeBtnStatus","AVAILABLE","onDepositClick","handlePanelEvent","switchType","res","setTokenSymbol","withdrawValue","setWithdrawValue","withdrawalFeeList","OffchainFeeReqType","OFFCHAIN_WITHDRAWAL","withdrawProps","withdrawBtnStatus","onWithdrawClick","withdrawType","WithdrawType","Fast","withdrawTypes","WithdrawTypes","chargeFeeToken","chargeFeeTokenList","handleOnAddressChange","handleAddressError","_value","message","transferValue","setTransferValue","transferTokenSymbol","setTransferTokenSymbol","transferFeeList","TRANSFER","transferProps","transferBtnStatus","onTransferClick","resetValue","setResetValue","resetProps","resetBtnStatus","onResetClick","price","ammProps","ammDepositData","coinA","coinB","slippage","ammWithdrawData","ammCalcData","myCoinA","myCoinB","AtoB","coinInfoMap","handleDepositEvent","type","handleWithDrawEvent","onAmmWithdrawClick","onAmmDepositClick","swapProps","swapTradeData","tradeCalcData","coinSell","coinBuy","BtoS","StoB","sellCoinInfoMap","buyCoinInfoMap","minimumReceived","onSwapClick","handleSwapPanelEvent","deepClone","result","constructor","hasOwnProperty","ModalAccountInfo","withTranslation","onClose","rest","Modal","aria-labelledby","aria-describedby","style","boxShadow","Box","paddingTop","paddingBottom","display","flexDirection","minWidth","Header","location","useLocation","useSettings","setTheme","themeMode","setOpen","openConnect","setOpenConnect","forceUpdate","useReducer","bool","gatewayList","DefaultGatewayList","handleSelect","showAccountInfo","setShowAccountInfo","accountInfoProps","setAccountInfoProps","onNotification","onWalletBtnConnect","onThemeBtnClick","dark","light","onLangBtnClick","lang","headerToolBarData","ButtonComponentsMap","handleClick","Language","handleChange","UnlockBtn","onClick","className","startIcon","fontSize","variant","Typography","marginTop","LockBtn","updateHeaderMenuWhenHasAccountInfo","headerMenuData","HeadMenuTabKey","Layer2","HeaderMenuTabStatus","default","addressShort","level","etherscanLink","mainBtn","connectBy","label","WalletStatus","hidden","noAccount","accountPending","useHeader","onSwitch","openQRCode","setOpenQRCode","copyToastOpen","setCopyToastOpen","closeCopyToast","Snackbar","autoHideDuration","Alert","severity","withDrawProps","selected","pathname","headerRoot","Toolbar","onCopy","text","execCommand","textarea","createElement","body","appendChild","select","removeChild","clipboardData","setData","copyToClipBoard","onViewQRCode","onDisconnect","RowStyled","Grid","unit","TableWrapStyled","background","border","defaultFrame","c_key","d_R","TablePaddingX","pLeft","pRight","QuotePage","tickList","setTickList","big4","setBig4","refresh","getAllTickers","ticks","quote_token_volume","high","low","rowData","change","base_token_amt","sort","b","isNaN","slice","useQuote","formattedRawData","o","pair","first","last","lastPrice","isFinite","volumn","buyData","sellData","tradeFloat","percent","FloatTag","increase","flex","container","xs","none","decrease","marginY","paddingY","onVisibleRowsChange","rawData","SwapPanel","useGetAmmPools","setAmmpools","stateArr","useWebsocket","topics","verify","needApiKey","ws","useRef","wsData","setMessage","readyState","setReadyState","creatWebSocket","getWsKey","wsApiKey","basePath","WebSocket","onopen","_e","op","unsubscribeAll","flat_txt","sendMessage","subTopics","onclose","e","onerror","onmessage","webSocketInit","closeWebSocket","msg","send","reconnect","useWs","socketData","setSocketData","isLocalPage","setIsLocalPage","visibilityState","parse","useHandleSocketData","setAccount","ammPool","setAmmPool","order","setOrder","ticker","setTicker","topic","WsTopicType","Ammpool","timestamp","Candlestick","Order","OrderBook","Ticker","Trade","OrderHandling","useSwapNew","match","useRouteMatch","params","globalAcc","useGetMixMarkets","setAmmPoolsBalances","getAmmPoolBalances","useGetAmmPoolsBalances","setBase","setQuote","setLeft","setRight","setMarket","poolAddress","setPoolAddress","setBalance","availToShow","setAvailToShow","setFee","setTakerRate","setCurrentPrice","getAmmOrder","ammOrder","setAmmOrder","setPriceImpact","setBaseAmt","setQuoteAmt","amount1ApplyOrderFee","setAmount1ApplyOrderFee","quoteToShow","setSwapProps","getAccountArg","getOrderArg","getAmmpoolArg","useSwapPageWs","marketArr","getExistedMarket","ammpoolsbalances","currentBalance","totalAmount","amountLocked","newAvailable","balancesTmp","fn","getOrderDetails","TxStatus","processed","clearAmmOrder","too_many_times","no_such_order","getUserFeeRate","onBaseAmtInputChange","baseAmtVal","quoteAmtVal","onQuoteAmtInputChange","onSwap","allOrNone","orderId","amount0InBigNumber","amount1WithSlippage","amount1InBigNumber","sellToken","buyToken","maxFeeBips","fillAmountBOrS","orderType","OrderType","ClassAmm","eddsaSignature","submitOrder","swap","abs","__cache__","swapData","SwapType","SEll_CLICK","BUY_CLICK","SELL_SELECTED","BUY_SELECTED","EXCHANGE_CLICK","toggleData","ChartType","Trend","Depth","useBasicInfo","tgItemJSXs","tlabel","JSX","chartType","setChartType","setChange","setVolume","ChartUnit","D1","chartUnit","originData","setOriginData","baseVol","tgItemJSXsPriceChart","reduce","pre","tGItemData","TradingInterval","min15","limit","getCandlestick","candlesticks","timeStamp","quoteVol","getDepth","depth","bidsPrices","bids_prices","bidsAmtTotals","bids_amtTotals","asksPrices","asks_prices","asksAmtTotals","asks_amtTotals","BasicInfoPanel","upColor","getThousandFormattedNumbers","justifyContent","alignItems","exclusive","minHeight","maxHeight","height","width","riseColor","handleMove","size","StylePaper","styled","borderColor","applyProps","id","TradePanel","withRouter","trades","isAllTrade","setIsAllTrade","setValue","StyledTabsWrapper","StyledFormControlLabel","FormControlLabel","control","Checkbox","checked","checkedIcon","color","onChange","flag","Tabs","aria-label","Tab","myTrades","setMyTrades","tradesNew","getUserTrades","fillTypes","FilledType","itemTmp","baseShow","quoteShow","useGetMyTrades","recentTrades","ammPoolAddress","ammPoolApi","setRecentTrades","getAmmPoolTrades","useGetRecentTrades","FixedStyle","SwapPage","marginRight","alignContent","useAmmpoolWs","getTickerArg","DebugPage","gas","setGas","useGetGas","TxPanel","pageSize","setPageSize","offsetHeight","floor","txs","setTxs","getUserTranferList","tmpTx","senderAddress","receiverAddress","feeTokenSymbol","feeAmount","memo","txnHash","tradeType","TransactionTradeTypes","allTypes","useGetTxs","txList","ref","pagination","StyledChartWrapper","StyledBtnGroupWrapper","DoughnutData","testTrendData","random","AssetPanel","chartPeriod","setChartPeriod","AssetTitleProps","assetInfo","totalAsset","priceTag","PriceTag","Dollar","onShowDeposit","onShowTransfer","onShowWithdraw","Paper","component","OrderPanel","StyledPaper","StyledSwitch","Switch","textPrimary","success","backgroundColor","opacity","BtnCurrency","currency","Currency","dollar","setState","_handleChange","target","IconComponent","DropDownIcon","labelId","autoWidth","yen","StyledDivider","Divider","SettingPanel","focus","useTheme","setUpColor","setCurrency","direction","flexWrap","paddingLeft","marginBottom","paddingX","Trans","i18nKey","alignSelf","Button","passDay","changeLanguage","textTransform","UpColor","green","up","down","red","subMenu","subMenuLayer2","BoxStyle","SubMenuList","withRef","BasicSubMenuList","Layer2Page","accStatus","useAmmMapUI","setRawData","page","setPage","ammMapStatus","ammMapStatusUnset","tickerStatus","tickerStatusUnset","updateTickersUI","_page","i","_ammMap","tickerMapKey","ammKey","NO_TOKEN_MAP","options","updateRawData","PoolsPanel","handlePageChange","AmmPanelView","tabSelected","AmmPanelType","Deposit","USTD","coinPairInfo","activity","myAmm","ammRecordArray","AmmTradeType","add","totalDollar","totalYuan","amountA","amountB","moment","toDate","remove","BoxStyled","CoinPairPanel","_handlePageChange","Breadcrumbs","Link","href","spacing","wrap","md","paddingRight","Yuan","Hidden","mdDown","noWrap","textAlign","textOverflow","format","AmmCardWrap","forwardRef","AmmCard","AmmMiningView","ammActivities","ammActivityStatus","ammActivityStatusUnset","_ammActivityMap","mapArray","useAmmMiningUI","sm","lg","balanceA","balanceB","balanceYuan","balanceDollar","ammDetail","StyleWrapper","LiquidityOverview","totalFeeDollar","totalFeeYuan","totalMiningDollar","totalMiningYuan","padding","margin","handleDeposit","row","handleWithdraw","subMenuLiquidity","LiquidityPage","matchPair","next","RouterView","Container","maxWidth","exact","path"],"mappings":"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","file":"static/js/main~a97bfcba.d4879051.chunk.js","sourcesContent":["import { ConnectorNames } from 'loopring-sdk'\n\nimport {\n    injected,\n    network,\n    walletconnect,\n    walletlink,\n    ledger,\n    trezor,\n    authereum,\n} from 'networks/web3_connectors'\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n    [ConnectorNames.Unknown]: undefined,\n    [ConnectorNames.Injected]: injected,\n    [ConnectorNames.Network]: network,\n    [ConnectorNames.WalletConnect]: walletconnect,\n    [ConnectorNames.WalletLink]: walletlink,\n    [ConnectorNames.Ledger]: ledger,\n    [ConnectorNames.Trezor]: trezor,\n    [ConnectorNames.Authereum]: authereum,\n}\n","import { useState, useCallback, useMemo, useRef, useEffect, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport { useGetTradingInfo } from 'stores/trading/hook'\nimport { useActiveWeb3React, } from 'hooks/web3/useWeb3'\n\nimport { Lv2Account, } from 'defs/account_defs'\n\nimport { AccountStatus, StatusChangeEvent } from 'state_machine/account_machine_spec'\n\nimport * as sign_tools from 'loopring-sdk'\n\nimport { connectorsByName } from 'defs/web3_defs'\n\nimport { ChainId, ConnectorNames, dumpError400, ExchangeAPI, UserAPI, } from 'loopring-sdk'\n\nimport { toHex, toBig, } from 'loopring-sdk'\n\nimport { RootState } from 'stores'\n\nimport {\n    reset, setAccountStatus, setConnectName,\n    setConnectNameTemp, setAccountInfo, setEddsaKey, setApikey, setAccAddr,\n} from 'stores/account/reducer'\n\nimport { AccountMachineSpec, } from 'state_machine/account_machine_spec'\n\nimport { buildMachine } from 'state_machine/machine_builder'\n\nimport voca from 'voca'\nimport { usePrevious } from 'react-use'\n\nimport Web3 from 'web3'\n\nimport { useExchangeAPI, useUserAPI } from 'hooks/exchange/useApi'\n\nimport { UserStorage } from 'storage'\n\nimport store from 'stores'\nimport { setChainId } from 'stores/trading/reducer'\nimport { loopHooks } from 'react-table'\n\nexport function useWeb3Account() {\n\n    const {\n        connector,\n        library,\n        account,\n        chainId,\n        active,\n        error,\n    } = useActiveWeb3React()\n\n    const isConnected: boolean = active && !voca.isBlank(account as string)\n\n    return {\n        account,\n        connector,\n        library,\n        chainId,\n        active,\n        isConnected,\n        error,\n    }\n\n}\n\nexport function useAccount() {\n\n    const account: Lv2Account = useSelector((state: RootState) => state.account)\n\n    const isNoAccount = () => {\n        return account.status === AccountStatus.NOACCOUNT\n    }\n\n    const isActivated = () => {\n        return account.status === AccountStatus.ACTIVATED\n    }\n\n    return {\n        account,\n        isNoAccount,\n        isActivated,\n        apiKey: account.apiKey,\n        eddsaKey: account.eddsaKey,\n        accountId: account.accountId,\n    }\n}\n\nexport function useStateMachine() {\n    const dispatch = useDispatch()\n\n    const machine = buildMachine(AccountMachineSpec())\n\n    const sendEvent = useCallback((account: Lv2Account, event: StatusChangeEvent) => {\n        const nextState = machine(account.status, event)\n        if (nextState) {\n            dispatch(setAccountStatus(nextState))\n        }\n    }, [machine, dispatch])\n\n    return {\n        sendEvent,\n    }\n}\n\nexport function useConnect() {\n\n    const {\n        activate,\n    } = useActiveWeb3React()\n\n    const { sendEvent } = useStateMachine()\n\n    const dispatch = useDispatch()\n\n    const [activatingConnector, setActivatingConnector] = useState<any>()\n\n    const connect = useCallback((item_name: ConnectorNames, isSwitch: boolean = false) => {\n        const newConnector: any = connectorsByName[item_name]\n        setActivatingConnector(newConnector)\n        activate(newConnector)\n        dispatch(setConnectNameTemp(item_name))\n\n        if (isSwitch) {\n          //  console.log('try Connecting... isSwitch Reset')\n            sendEvent(store.getState().account, StatusChangeEvent.Reset)\n        }\n\n        sendEvent(store.getState().account, StatusChangeEvent.Connecting)\n\n        console.log('try Connecting...')\n    }, [activate, dispatch, sendEvent])\n\n    return {\n        connect,\n        activatingConnector,\n    }\n\n}\n\nexport function useDisconnect() {\n\n    const {\n        deactivate,\n    } = useActiveWeb3React()\n\n    const dispatch = useDispatch()\n\n    const disconnect = useCallback(() => {\n        deactivate()\n        dispatch(reset(undefined))\n    }, [deactivate, dispatch])\n\n    return {\n        disconnect,\n    }\n\n}\n\nexport function useUnlock() {\n\n    const dispatch = useDispatch()\n\n    const exchangeApi: any = useExchangeAPI()\n\n    const userApi: any = useUserAPI()\n\n    const { tradingInfo } = useGetTradingInfo()\n\n    const { connector, } = useWeb3Account()\n\n    const { sendEvent } = useStateMachine()\n\n    const lock = useCallback(async (account: Lv2Account) => {\n        console.log('useCallback lock:', account.status)\n        sendEvent(account, StatusChangeEvent.Lock)\n    }, [sendEvent])\n\n    const unlock = useCallback(async (account: Lv2Account) => {\n\n        if (!userApi || !exchangeApi || !connector || !account.accountId || !tradingInfo.exchangeInfo?.exchangeAddress\n            || account.status !== AccountStatus.LOCKED) {\n            console.log('accountId:', account.accountId)\n            console.log('exchangeAddress:', tradingInfo.exchangeInfo)\n            console.log('enter !! account.status:', account.status)\n            return\n        }\n\n        console.log('useUnlock useCallback:', account.status)\n\n        if (account.status !== AccountStatus.LOCKED) {\n            throw Error('unexpected status:' + account.status)\n        }\n\n        let event = undefined\n        let sk = undefined\n        let apikey: any = undefined\n\n        try {\n            const provider = await connector.getProvider()\n            const web3 = new Web3(provider as any)\n            console.log('useUnlock eddsaKey:', account.eddsaKey)\n\n            if (!account.eddsaKey) {\n                const eddsakey = await sign_tools\n                    .generateKeyPair(\n                        web3,\n                        account.accAddr,\n                        tradingInfo.exchangeInfo?.exchangeAddress as string,\n                        account.nonce - 1,\n                        account.connectName,\n                    )\n                sk = toHex(toBig(eddsakey.keyPair.secretKey))\n\n            } else {\n                sk = account.eddsaKey\n            }\n\n            apikey = await userApi.getUserApiKey({\n                accountId: account.accountId\n            }, sk)\n\n            console.log('useUnlock apikey:', apikey)\n\n            event = StatusChangeEvent.Unlock\n\n        } catch (reason) {\n            event = StatusChangeEvent.Reset\n        }\n\n        if (sk) {\n            dispatch(setEddsaKey(sk))\n        }\n\n        if (apikey?.apiKey) {\n            dispatch(setApikey(apikey.apiKey))\n        }\n\n        console.log('next event:', event)\n        if (event) {\n            sendEvent(account, event)\n        }\n\n    }\n        , [dispatch, sendEvent, exchangeApi, userApi, connector, tradingInfo.exchangeInfo])\n\n    return {\n        lock,\n        unlock,\n    }\n}\n\nasync function checkAccountAvailableAsync(exchangeApi: ExchangeAPI, userApi: UserAPI, account: Lv2Account, dispatch: any, sendEvent: any, connector: any, exchangeAddress: string) {\n\n    let accInfo = undefined\n    let event = undefined\n    let sk = undefined\n    let code = undefined\n    let apikey: any = undefined\n\n    try {\n        accInfo = await exchangeApi.getAccount({\n            owner: account.accAddr\n        })\n        if (accInfo.publicKey && accInfo.publicKey.x && accInfo.publicKey.y) {\n            if (account.accountId !== accInfo.accountId) {\n                const provider = await connector.getProvider()\n                const web3 = new Web3(provider as any)\n                try {\n                    code = await web3.eth.getCode(account.accAddr)\n                    // console.log('!!!!!! about to generateKeyPair!!!!!!!!!!!')\n                    try {\n                        const eddsakey = await sign_tools\n                            .generateKeyPair(\n                                web3,\n                                account.accAddr,\n                                exchangeAddress,\n                                accInfo.nonce - 1,\n                                account.connectName,\n                            )\n                        sk = toHex(toBig(eddsakey.keyPair.secretKey))\n                        const px = toHex(toBig(eddsakey.keyPair.publicKeyX))\n                        const py = toHex(toBig(eddsakey.keyPair.publicKeyY))\n\n                        try {\n                            apikey = await userApi.getUserApiKey({\n                                accountId: accInfo.accountId\n                            }, sk)\n                            event = (StatusChangeEvent.HasPubkey)\n                        } catch (reason) {\n                            dumpError400(reason)\n                            event = (StatusChangeEvent.ErrorResponse)\n                        }\n                    } catch (reason) {\n                        dumpError400(reason)\n                        event = (StatusChangeEvent.ErrorResponse)\n                    }\n\n                } catch (reason) {\n                    dumpError400(reason)\n                    event = (StatusChangeEvent.ErrorResponse)\n                }\n\n            } else {\n                console.log('already has accountId!')\n            }\n        } else {\n            console.log('2 has id but no pubkey currStatus:', account.status)\n            event = (StatusChangeEvent.HasNoPubkey)\n        }\n    } catch (reason) {\n        // 3 has none of above\n        console.log('2 has id but no pubkey currStatus:', account.status)\n        dumpError400(reason)\n        // check deposit tx (local and ethereum)\n        event = (StatusChangeEvent.ErrorResponse)\n    }\n\n    if (accInfo && accInfo.owner !== account.accAddr) {\n        dispatch(setAccountInfo(accInfo))\n    }\n\n    if (sk) {\n        dispatch(setEddsaKey(sk))\n    }\n\n    if (apikey) {\n        console.log('---------> apikey:', apikey)\n        dispatch(setApikey(apikey.apiKey))\n    }\n\n    if (event) {\n        sendEvent(event)\n    }\n\n}\n\nexport function useCheckAccStatus() {\n\n    const dispatch = useDispatch()\n\n    const { account } = useAccount()\n\n    const { sendEvent } = useStateMachine()\n\n    const exchangeApi: ExchangeAPI = useExchangeAPI()\n\n    const userApi: UserAPI = useUserAPI()\n\n    const { account: web3Account, active, isConnected, chainId, connector, } = useWeb3Account()\n\n    const lv1Acc = web3Account as string\n\n    const prevChainId = usePrevious(chainId)\n    const prevWeb3Account = usePrevious(web3Account)\n\n    // console.log('prevChainId:', prevChainId, ' chainId:', chainId)\n    // console.log('prevWeb3Account:', prevWeb3Account, ' web3Account:', web3Account)\n\n    // console.log(exchangeApi, userApi, account, 'prevChainId:', prevChainId, 'chainId:', chainId, 'web3Account:', web3Account)\n\n    const { tradingInfo } = useGetTradingInfo()\n\n    useCustomDCEffect(async () => {\n\n        const cleanUp = () => {\n            let handler = UserStorage.getHandler()\n            if (account.status !== AccountStatus.ACTIVATED && handler) {\n                clearInterval(handler)\n            }\n        }\n\n        async function checkStatus() {\n\n            if (!account || !lv1Acc || !exchangeApi || !userApi || !connector || !tradingInfo.exchangeInfo?.exchangeAddress) {\n                console.log('checkStatus return!!!!!!')\n                return\n            }\n\n            if (((prevChainId && chainId && prevChainId !== chainId)\n                || (prevWeb3Account && web3Account && prevWeb3Account !== web3Account))\n                && account.status !== AccountStatus.UNCONNNECTED) {\n\n                console.log('checkStatus try to resetFunc')\n                dispatch(reset(undefined))\n                sendEvent(account, StatusChangeEvent.Reset)\n                return\n            }\n\n            cleanUp()\n\n            switch (account.status) {\n                case AccountStatus.UNCONNNECTED:\n                    console.log('---> render UNCONNNECTED active:', active, ' isConnected:', isConnected)\n\n                    if (isConnected) {\n                        dispatch(setConnectNameTemp(ConnectorNames.Injected))\n                        sendEvent(account, StatusChangeEvent.Connecting)\n                    }\n\n                    break\n\n                case AccountStatus.CONNECTED:\n                    //check session or local storage\n\n                    console.log('---> render CONNECTED account:', account)\n\n                    try {\n\n                        const acc = await exchangeApi.getAccount({ owner: lv1Acc })\n\n                        // current acc is local acc info\n                        if (account.accAddr && account.eddsaKey && acc.owner === account.accAddr) {\n                            console.log('cur Eddsakey:', account.eddsaKey)\n                        } else {\n                            console.log('got a new address:', acc)\n                            // got a new address\n                            dispatch(setAccountInfo(acc))\n                            // dispatch(setEddsaKey(''))\n                        }\n\n                        if (account?.connectName !== account?.connectNameTemp) {\n                            dispatch(setConnectName(account.connectNameTemp))\n                        }\n\n                        sendEvent(account, StatusChangeEvent.HasPubkey)\n\n                    } catch (reason) {\n                        dumpError400(reason)\n\n                        if (lv1Acc) {\n                            dispatch(setAccAddr(lv1Acc))\n                        }\n\n                        if (reason.response && reason.response.data && reason.response.data.resultInfo\n                             && reason.response.data.resultInfo.code === 101002) {\n                            sendEvent(account, StatusChangeEvent.ErrorResponse)\n                        }\n                    }\n\n                    break\n\n                case AccountStatus.NOACCOUNT:\n                    break\n\n                case AccountStatus.DEPOSITING:\n                    // TODO sub contract event, check deposit.\n                    const depositFinished = true // TODO\n                    if (depositFinished) {\n                        console.log('depositFinished currStatus:', account.status)\n                        sendEvent(account, StatusChangeEvent.FinishDeposit)\n                    }\n                    break\n\n                case AccountStatus.DEPOSIT_TO_CONFIREM:\n                    // getAccount every 10s to check\n                    break\n\n                case AccountStatus.UNACTIVATED:\n                    const isSmartWallet = false // TODO\n                    if (isSmartWallet) {\n                        // TODO approve hash,\n                        console.log('approve hash, currStatus:', account.status)\n                        sendEvent(account, StatusChangeEvent.IsSmartWallet)\n                    } else {\n                        console.log('approve hash no smartwallet, account.status:', account.status)\n                    }\n                    break\n\n                case AccountStatus.ARPROVING:\n                    // TODO sub contract event, check approving.\n                    const approved = false // TODO\n                    if (approved) {\n                        console.log('sub contract event, check approving. approved! status:', account.status)\n                        sendEvent(account, StatusChangeEvent.ApproveSubmit)\n                    }\n                    break\n\n                case AccountStatus.APPROV_TO_CONFIRM:\n                    const approveConfirmed = false // TODO\n                    if (approveConfirmed) {\n                        console.log('approveConfirmed status:', account.status)\n                        sendEvent(account, StatusChangeEvent.ApproveConfirmed)\n                    }\n                    break\n\n                case AccountStatus.LOCKED:\n                    break\n\n                case AccountStatus.ACTIVATED:\n                    UserStorage.checkTimeout(true)\n                    const handler = setInterval(() => {\n                        const isTimeOut = UserStorage.checkTimeout()\n                        if (account.status === AccountStatus.ACTIVATED && isTimeOut) {\n                            clearInterval(handler)\n                            sendEvent(account, StatusChangeEvent.Lock)\n                        }\n                    }, 1000)\n                    UserStorage.setHandler(handler)\n                    break\n\n                default:\n                    break\n            }\n\n\n\n        }\n\n        checkStatus()\n\n        return () => {\n            cleanUp()\n        }\n\n    }, [exchangeApi, userApi, account, prevChainId, chainId, lv1Acc, dispatch, connector, tradingInfo.exchangeInfo?.exchangeAddress,])\n\n}\n","export const buildMachine = <S, E>(spec: any) => (currentState: S, event: E) => {\n    // We get all possible transitions for the current State\n    const stateTransitions = spec.states[currentState]\n\n    // No transitions? Error!\n    if (stateTransitions === undefined) {\n        throw new Error(`No transitions defined for ${currentState}`)\n    }\n\n    // We try to transition to the next state\n    const nextState = stateTransitions[event]\n\n    // No next state? Error!\n    if (nextState === undefined) {\n        throw new Error(\n            `Unknown transition for event ${event} in state ${currentState}`\n        )\n    }\n\n   // console.log('got nextState:', nextState)\n\n    // We return the new state\n    return nextState\n}\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\n\nimport { AccountInfo, ConnectorNames, } from 'loopring-sdk'\n\nimport { Lv2Account, } from 'defs/account_defs'\nimport { AccountStatus } from 'state_machine/account_machine_spec'\nimport { UserStorage } from 'storage'\n\n\nconst initialState = () => {\n  const defaultAccId = process.env.REACT_APP_TEST_ACCOUND_ID ? process.env.REACT_APP_TEST_ACCOUND_ID : UserStorage.getAccountId()\n  const defaultApiKey = process.env.REACT_APP_TEST_API_KEY ? process.env.REACT_APP_TEST_API_KEY : UserStorage.getApikey()\n  const defaultOwner = process.env.REACT_APP_TEST_OWNER ? process.env.REACT_APP_TEST_OWNER : UserStorage.getAccount()\n  const defaultEddsaKey = process.env.REACT_APP_TEST_EDDSA_KEY ? process.env.REACT_APP_TEST_EDDSA_KEY : UserStorage.getEddsakey()\n\n  console.log('defaultApiKey:', JSON.stringify(defaultApiKey))\n  const defaultStatus = AccountStatus.UNCONNNECTED\n  return {\n    accAddr: defaultOwner,\n    status: defaultStatus,\n    accountId: defaultAccId,\n    publicKey: {},\n    nonce: 0,\n    isContractAddress: false,\n    apiKey: defaultApiKey,\n    eddsaKey: defaultEddsaKey,\n    connectName: ConnectorNames.Unknown,\n    connectNameTemp: ConnectorNames.Unknown,\n  } as Lv2Account\n}\n\nconst accountSlice:Slice = createSlice({\n  name: 'account',\n  initialState: initialState(),\n  reducers: {\n    reset(state) {\n      const initState = initialState()\n      console.log('!!! reset account!', initState)\n      Object.assign(state, initState)\n    },\n    setAccAddr(state, action: PayloadAction<string>) {\n      state.accAddr = action.payload\n      // UserStorage.setAccount(action.payload)\n    },\n    setAccountInfo(state, action: PayloadAction<AccountInfo>) {\n      state.accAddr = action.payload.owner\n      state.accountId = action.payload.accountId\n      state.nonce = action.payload.nonce\n      state.publicKey = action.payload.publicKey\n\n      // UserStorage.setAccount(state.accAddr)\n      // UserStorage.setAccountId(state.accountId)\n      \n    },\n    setApikey(state, action: PayloadAction<string>) {\n      state.apiKey = action.payload\n      // UserStorage.setApikey(action.payload)\n    },\n    setAccountStatus(state, action: PayloadAction<AccountStatus>) {\n      state.status = action.payload\n    },\n    setEddsaKey(state, action: PayloadAction<any>) {\n      state.eddsaKey = action.payload\n      // UserStorage.setEddsakey(action.payload)\n    },\n    setConnectName(state, action: PayloadAction<ConnectorNames>) {\n      state.connectName = action.payload\n    },\n    setConnectNameTemp(state, action: PayloadAction<ConnectorNames>) {\n      state.connectNameTemp = action.payload\n    },\n    setIsContractAddress(state, action: PayloadAction<boolean>) {\n      state.isContractAddress = action.payload\n    },\n  },\n})\n\nexport const { reset, setAccAddr, setApikey, setConnectName, setConnectNameTemp, setAccountInfo, setAccountStatus, setEddsaKey, setIsContractAddress, } = accountSlice.actions\nexport default accountSlice\n","export enum CONSTANTS {\n    Handler = 'handler',\n    AccountId = 'account_id',\n    Account = 'account',\n    Apikey = 'apikey',\n    Eddsakey = 'eddsakey',\n    ActiveTime = 'active_time',\n    AmmOrder = 'amm_order',\n    HardwareAddresses = 'hardware_addresses',\n}\n\nconst SESSION_TIMEOUT_SECONDS = 600\n\nexport class UserStorage {\n\n    public static getHandler() {\n        const rawHandler = sessionStorage.getItem(CONSTANTS.Handler)\n        try {\n            if (rawHandler !== undefined && rawHandler !== null)\n                return parseInt(rawHandler)\n        } catch (err) {\n        }\n        return undefined\n    }\n\n    public static setHandler(handler: any) {\n        sessionStorage.setItem(CONSTANTS.Handler, handler)\n    }\n\n    public static clearHandler() {\n        sessionStorage.removeItem(CONSTANTS.Handler)\n    }\n\n    public static checkTimeout(reset: boolean = false) : boolean {\n        let dateTimeStr = localStorage.getItem(CONSTANTS.ActiveTime)\n        let now = new Date().getTime()\n\n        if (dateTimeStr !== null && !reset) {\n            let tmpDt = new Date(parseInt(dateTimeStr))\n\n            // console.log(`now:${now} dateTimeStr:${dateTimeStr} delta:${now - tmpDt.getTime()}`)\n\n            if(now - tmpDt.getTime() > SESSION_TIMEOUT_SECONDS * 1000) {\n                console.log(`TIMEOUT! now:${now} dateTimeStr:${dateTimeStr} delta:${now - tmpDt.getTime()}`)\n                sessionStorage.clear()\n                localStorage.setItem(CONSTANTS.ActiveTime, now.toString())\n                return true\n            }\n        } else {\n\n            if (reset) {\n                console.log('force reset!!')\n            }\n\n            localStorage.setItem(CONSTANTS.ActiveTime, now.toString())\n        }\n\n        return false\n    }\n\n\n    public static getAccountId() {\n        const rawId = sessionStorage.getItem(CONSTANTS.AccountId)\n        try {\n            if (rawId)\n                return parseInt(rawId)\n        } catch (err) {\n        }\n        return undefined\n    }\n\n    public static setAccountId(accountId: number) {\n        sessionStorage.setItem(CONSTANTS.AccountId, accountId.toString())\n    }\n\n    public static getAccount() {\n        return sessionStorage.getItem(CONSTANTS.Account)\n    }\n\n    public static setAccount(account: string) {\n        sessionStorage.setItem(CONSTANTS.Account, account)\n    }\n\n    public static getApikey() {\n        return sessionStorage.getItem(CONSTANTS.Apikey)\n    }\n\n    public static setApikey(apikey: string) {\n        sessionStorage.setItem(CONSTANTS.Apikey, apikey)\n    }\n\n    public static getEddsakey() {\n        return sessionStorage.getItem(CONSTANTS.Eddsakey)\n    }\n\n    public static setEddsakey(eddsakey: string) {\n        sessionStorage.setItem(CONSTANTS.Eddsakey, eddsakey)\n    }\n\n    public static getAmmOrder(): string {\n        var orderHash = localStorage.getItem(CONSTANTS.AmmOrder)\n        return orderHash ? orderHash : ''\n    }\n\n    public static setAmmOrder(orderHash: string) {\n        localStorage.setItem(CONSTANTS.AmmOrder, orderHash)\n    }\n\n    public static clearAmmOrder() {\n        localStorage.removeItem(CONSTANTS.AmmOrder)\n    }\n\n    public static isHardwareAddress(address: string) {\n        let current = localStorage.getItem(CONSTANTS.HardwareAddresses)\n        if (current) {\n            if (current.includes(address.toLowerCase())) {\n                return true\n            }\n        }\n        return false\n    }\n\n    public static saveHardwareAddress(address: string) {\n        let current = localStorage.getItem(CONSTANTS.HardwareAddresses);\n        if (current) {\n            if (current.includes(address.toLowerCase()) !== true) {\n                let newValue = current + ',' + address.toLowerCase();\n                localStorage.setItem(CONSTANTS.HardwareAddresses, newValue);\n            }\n        } else {\n            localStorage.setItem(CONSTANTS.HardwareAddresses, address.toLowerCase());\n        }\n\n    }\n}\n","import { useAmmpoolAPI, useExchangeAPI } from 'hooks/exchange/useApi'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport store, { RootState } from 'stores'\n\nimport { \n    setMarkets, \n    setExchangeInfo, \n    setTokens, \n    setTickerMap, \n    setAmmPoolStats,\n    setAmmPoolConf, \n    setMarketTrades,\n    setAmmActivityRules,\n    setChainId, \n} from 'stores/trading/reducer'\n\nimport { dumpError400, ChainId, AmmPoolStat, FiatType, } from 'loopring-sdk'\nimport { useActiveWeb3React } from 'hooks/web3/useWeb3'\nimport { useEffect } from 'react'\n\nimport { ammpoolAPI, exchangeAPI } from \"stores/apis/api\"\n\nexport function getTradingInfo() {\n    const tradingInfo = store.getState().trading\n    return {\n        tradingInfo,\n        chainId: tradingInfo.chainId,\n    }\n}\n\nexport function useGetTradingInfo() {\n    const tradingInfo = useSelector((state: RootState) => state.trading)\n    return {\n        tradingInfo,\n        chainId: tradingInfo.chainId,\n    }\n}\n\nexport function useUpdateChainId() {\n    const { chainId } = useActiveWeb3React()\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(setChainId(chainId ?? ChainId.GORLI))\n    }, [chainId, dispatch])\n}\n\nexport function useUpdateExchangeMarkets() {\n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const response = await api.getMixMarkets()\n            dispatch(setMarkets(response))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateExchangeInfo() {\n\n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const response = await api.getExchangeInfo()\n            dispatch(setExchangeInfo(response.exchangeInfo))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateAmmPoolConf() {\n\n    const dispatch = useDispatch()\n    const api = useAmmpoolAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const ammPoolConf = await api.getAmmPoolConf()\n            dispatch(setAmmPoolConf(ammPoolConf))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateAmmPoolStats() {\n\n    const dispatch = useDispatch()\n    const api = useAmmpoolAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const ammPoolStats = await api.getAmmPoolStats()\n            dispatch(setAmmPoolStats(ammPoolStats))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateAmmActivityRules() {\n\n    const dispatch = useDispatch()\n    const api = useAmmpoolAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const ammActivityRules = await api.getAmmPoolActivityRules()\n            dispatch(setAmmActivityRules(ammActivityRules.activityRules))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateTokens() {\n\n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const tokens = await api.getTokens()\n            dispatch(setTokens(tokens))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateTickerMap(market: string) {\n\n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const tickMap = await api.getTicker({\n                market\n              })\n            dispatch(setTickerMap(tickMap))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useMarketTrades(market: string) {\n  \n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const marketTrades = await api.getMarketTrades({\n                market\n              })\n            dispatch(setMarketTrades(marketTrades))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api, dispatch])\n\n}\n\nexport function useUpdateFiatPrice() {\n  \n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const usdFiatPrices = await api.getFiatPrice({\n                legal: FiatType.USD\n            })\n            const cnyFiatPrices = await api.getFiatPrice({\n                legal: FiatType.CNY\n            })\n            dispatch(setMarketTrades({}))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api, dispatch])\n\n}\n\nexport const asyncGetTradingInfo = async() => {\n\n    const { tradingInfo } = getTradingInfo()\n    console.log('--- tradingInfo', tradingInfo)\n\n    let tokens: any = undefined\n\n    if (tradingInfo.tokens?.tokenIdMap) {\n        tokens = tradingInfo.tokens\n    } else {\n        tokens = (await exchangeAPI().getTokens())\n    }\n\n    let ammpools: any = undefined\n\n    if (tradingInfo.ammPoolConf?.ammpools) {\n        ammpools = tradingInfo.ammPoolConf.ammpools\n    } else {\n        ammpools = (await ammpoolAPI().getAmmPoolConf()).ammpools\n    }\n\n    let ammPoolStats: { [key: string] : AmmPoolStat } = {}\n\n    if (tradingInfo.ammPoolStats.ammPoolStats) {\n        ammPoolStats = tradingInfo.ammPoolStats.ammPoolStats\n    } else {\n        ammPoolStats = (await ammpoolAPI().getAmmPoolStats()).ammPoolStats\n    }\n\n    return {\n        tokens,\n        ammpools,\n        ammPoolStats,\n    }\n}","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nconst now = () => new Date().getTime()\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nconst transactionsSlice = createSlice({\n  name: 'transactions',\n  initialState,\n  reducers: {\n    reset(state) {\n      Object.assign(state, initialState)\n    },\n    addTransaction(state: TransactionState, action: PayloadAction<{\n      chainId: number, from: string,\n      hash: string, approval: any, summary: string, claim: any\n    }>) {\n      const { chainId, from, hash, approval, summary, claim} = action.payload\n      if (state[chainId]?.[hash]) {\n        throw Error('the existing TX can\\'t be added again')\n      }\n\n      const txs = state[chainId] ?? {}\n      txs[hash] = {\n        hash, \n        approval, \n        summary, \n        claim, \n        from,\n        addedTime: now(), \n      }\n      // state[chainId] = txs\n    },\n    clearAllTransactions(state: TransactionState, action: PayloadAction<number>) {\n      const chainId = action.payload\n      if (!state[chainId]) return\n      state[chainId] = {}\n    },\n    checkedTransaction(state: TransactionState, action: PayloadAction<{chainId: number,\n    hash: string, blockNumber: number}>) {\n      const { chainId, hash, blockNumber} = action.payload\n      const tx = state[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n      // state[chainId][hash] = tx\n    },\n    finalizeTransaction(state: TransactionState, action: PayloadAction<{\n      hash: string, chainId: number, receipt: any\n    }>) {\n      const { chainId, hash, receipt } = action.payload\n      \n      const tx = state[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }\n  }\n}\n)\n\nexport const { reset, addTransaction, clearAllTransactions, checkedTransaction, finalizeTransaction, } = transactionsSlice.actions\nexport default transactionsSlice\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  AmmRecordStates } from './interface';\nimport { STATUS } from '../../constant';\n\nconst initialState:Required<AmmRecordStates>  = {\n    ammRecords:[],\n    status:'UNSET',\n    errorMessage:null,\n}\nconst ammRecordSlice:Slice = createSlice({\n    name: 'ammRecord',\n    initialState,\n    reducers: {\n        getAmmRecord(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getAmmRecordStatus(state, action: PayloadAction<AmmRecordStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.ammRecords = {...action.payload.ammRecords};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n    },\n});\nexport { ammRecordSlice };\nexport const { getAmmRecord, getAmmRecordStatus,statusUnset } = ammRecordSlice.actions\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  AmmTradesStates } from './interface';\nimport { STATUS } from '../../constant';\n\n\nconst initialState:Required<AmmTradesStates>  = {\n    ammTrades:[],\n    status:'UNSET',\n    errorMessage:null,\n}\nconst ammTradesSlice:Slice = createSlice({\n    name: 'ammTrades',\n    initialState,\n    reducers: {\n        getAmmTrades(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getAmmTradesStatus(state, action: PayloadAction<AmmTradesStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.ammTrades = {...action.payload.ammTrades};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n    },\n});\nexport { ammTradesSlice };\nexport const { getAmmTrades, getAmmTradesStatus, statusUnset } = ammTradesSlice.actions\n","import { all, takeLatest, call, put } from \"redux-saga/effects\"\nimport { getAmmActivityMap, getAmmActivityMapStatus } from './reducer'\nimport { coinMap, CoinType } from '@loopring-web/component-lib/static'\nimport { AmmActivity, CoinInfo } from '@loopring-web/component-lib/src/static-resource'\nimport { useState } from \"react\"\nimport { useGetTradingInfo } from \"stores/trading/hook\"\n\n/*\nconst useGetAmmActivityMap = ()=>new Promise((resolve)=>{\n    const data:AmmActivity<any> = {\n        // @ts-ignore\n        'AMM-ETH-LRC': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-USDT-USDC': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-USDT-LRC': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-USDT-ETH': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }\n    }\n    resolve({data});\n});\n*/\nconst getAmmActivityMapApi = async () => {\n    const data:AmmActivity<any> = {\n        // @ts-ignore\n        'AMM-LRC-ETH': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-ETH-USDC': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-ETH-USDT': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-LRC-USDT': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }\n    }\n    return  Promise.resolve({data})\n}\n\nexport function* getPostsSaga() {\n    try {\n        //\n        const { data } = yield call(getAmmActivityMapApi);\n        yield put(getAmmActivityMapStatus({ammActivityMap:data}));\n    } catch (err) {\n        yield put(getAmmActivityMapStatus(err));\n    }\n}\n\nexport default function* ammActivityMapSaga() {\n    yield all([takeLatest(getAmmActivityMap, getPostsSaga)]);\n}\n","import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport { getAmmMap, getAmmMapStatus } from './reducer';\nimport { AmmDetail, CoinInfo, PairKey } from '@loopring-web/component-lib/src/static-resource';\nimport { ErrorMap } from '@loopring-web/component-lib/src/static-resource/';\nimport store from '../../index';\nimport { AmmpoolAPI, getTokenInfoById, AmmPoolInfoV3, AmmPoolStat, } from \"loopring-sdk\";\nimport { asyncGetTradingInfo, getTradingInfo } from \"stores/trading/hook\";\n\nimport { makeCoinInfo } from 'utils/swap_calc_utils'\nimport { exchangeAPI, userAPI } from \"stores/apis/api\";\n\ntype AmmMap<R extends object> = Map<PairKey<R>,AmmDetail<R>> | {}\nconst getAmmMapApi = async <R extends object>() => {\n\n    let data: AmmMap<R> = {}\n    \n    const {\n        tokens,\n        ammpools,\n        ammPoolStats,\n    } = await asyncGetTradingInfo()\n\n    const faitPrice = await exchangeAPI().getFiatPrice({ legal: 'CNY' })\n\n    const forex = faitPrice.prices['USDT']\n\n    const keys = Reflect.ownKeys(ammpools)\n\n    keys.forEach(async(key: any) => {\n        const item: AmmPoolInfoV3 = ammpools[key]\n        const tokenA = getTokenInfoById(tokens.tokenIdMap, parseInt(item.tokens.pooled[0]))\n        const tokenB = getTokenInfoById(tokens.tokenIdMap, parseInt(item.tokens.pooled[1]))\n\n        const ammPoolStat: AmmPoolStat = ammPoolStats[item.market]\n\n        const usdLiquidity = parseFloat(ammPoolStat.liquidityUSD)\n\n        // const balance = await userAPI().getUserBalances({accountId: 0, tokens: ''}, '')\n\n        const dataItem: AmmDetail<R> = {\n            coinAInfo: makeCoinInfo(tokenA) as CoinInfo<any>,\n            coinBInfo: makeCoinInfo(tokenB) as CoinInfo<any>,\n            amountDollar: usdLiquidity,\n            amountYuan: usdLiquidity / forex,\n            totalLPToken: parseFloat(ammPoolStat.lpLiquidity),\n            totalA: parseInt(ammPoolStat.liquidity[0]),\n            totalB: parseInt(ammPoolStat.liquidity[1]),\n            rewardValue: ammPoolStat.rewards[1],\n            rewardToken: ammPoolStat.rewards[0],\n            feeA:parseInt(ammPoolStat.fees[0]),\n            feeB:parseInt(ammPoolStat.fees[1]),\n            feeDollar: 100,  //TODO coinA price * feeA + price * feeB\n            feeYuan: 100, //TODO coinA price * feeA + price * feeB  /forex\n            isNew: true,\n            isActivity: false,\n        }\n        if (item.market) {\n            //@ts-ignore\n            data[item.market] = dataItem\n        }\n    })\n\n    return { data }\n}\n\nexport function* getPostsSaga() {\n    try {\n        const { data } = yield call(getAmmMapApi);\n        console.log('--- getPostsSaga:', data)\n        yield put(getAmmMapStatus({ammMap:data}));\n    } catch (err) {\n        yield put(getAmmMapStatus(err));\n    }\n}\n\nexport default function* ammMapSaga() {\n    yield all([takeLatest(getAmmMap, getPostsSaga)]);\n}\n","import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport { getAmmRecord, getAmmRecordStatus } from './reducer';\n\nconst getAmmRecordApi= ()=>new Promise((resolve)=>{ resolve({data:[\n        {side: 'Buy',\n            amount: {\n                sell:{ belong:'ETH', tradeValue: 0.1 },\n                buy:{ belong:'LRC', tradeValue: 123 }\n            },\n            time: Date.now(),\n            fee: 0.02,\n            amountLP:{\n                sell:{ belong:'ETH', tradeValue: 0.1 },\n                buy:{ belong:'LRC', tradeValue: 123 }\n            }\n        },{side: 'Buy',\n            amount: {\n                sell:{ belong:'ETH', tradeValue: 0.1 },\n                buy:{ belong:'LRC', tradeValue: 123 }\n            },\n            time: Date.now(),\n            fee: 0.02,\n            amountLP:{\n                sell:{ belong:'ETH', tradeValue: 0.1 },\n                buy:{ belong:'LRC', tradeValue: 123 }\n            }\n        }\n    ]})});\nexport function* getPostsSaga() {\n    try {\n        //\n        const { data } = yield call(getAmmRecordApi);\n        yield put(getAmmRecordStatus({ammRecords: data}));\n    } catch (err) {\n        yield put(getAmmRecordStatus(err));\n    }\n}\n\nexport default function* ammRecordSaga() {\n    yield all([takeLatest(getAmmRecord, getPostsSaga)]);\n}\n\n\n\n\n","import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport { getAmmTrades, getAmmTradesStatus } from './reducer';\n\nconst getAmmTradesApi = ()=>new Promise((resolve)=>{\n    //TODO: check is connect and active and assign wallet\n    //TODO: if not reject directory, any error happen will clean the\n    resolve([\n    {side: 'Buy',\n        amount: {\n            sell:{ belong:'ETH', tradeValue: 0.1 },\n            buy:{ belong:'LRC', tradeValue: 123 }\n        },\n        time: Date.now(),\n        fee: 0.02,\n        priceValue: 0.123,\n        priceToken: 'LRC'}\n    ,{side: 'Buy',\n        amount: {\n            sell:{ belong:'ETH', tradeValue: 0.1 },\n            buy:{ belong:'LRC', tradeValue: 123 }\n        },\n        time: Date.now(),\n        fee: 0.02,\n        priceValue: 0.123,\n        priceToken: 'LRC'}\n])});\nexport function* getPostsSaga() {\n    try {\n        //\n        const { data } = yield call(getAmmTradesApi);\n        const posts = data;\n        yield put(getAmmTradesStatus(posts));\n    } catch (err) {\n        yield put(getAmmTradesStatus(err));\n    }\n}\n\nexport default function* ammTradesSaga() {\n    yield all([takeLatest(getAmmTrades, getPostsSaga)]);\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { ammRecordSlice } from './AmmRecord';\nimport { ammTradesSlice, getAmmTrades } from './AmmTrades';\nimport { ammMapSlice } from './AmmMap';\nimport { ammActivityMapSlice } from './AmmActivityMap';\nimport ammActivityMapSaga from './AmmActivityMap/saga';\nimport ammMapSaga from './AmmMap/saga';\nimport ammRecordSaga from './AmmRecord/saga';\nimport ammTradesSaga from './AmmTrades/saga';\nimport { all, fork } from 'redux-saga/effects';\nimport tokenSaga from '../token/saga';\nimport walletSaga from '../wallet/saga';\n// export * from './AmmRecord';\n// export * from './AmmTrades';\n// export * from './AmmMap';\n// export * from './AmmActivityMap';\n\nexport const  ammReducer = combineReducers({\n    ammRecord: ammRecordSlice.reducer,\n    ammTrades: ammTradesSlice.reducer,\n    ammMap: ammMapSlice.reducer,\n    ammActivityMap:ammActivityMapSlice.reducer\n})\nexport const ammForks =  [\n    fork(ammActivityMapSaga),\n    fork(ammMapSaga),\n    fork(ammRecordSaga),\n    fork(ammTradesSaga)\n]\n\n// export * from './interface'\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  WalletStates } from './interface';\nimport { STATUS } from '../constant';\n\n\nconst initialState:Required<WalletStates>  = {\n    wallet:{},\n    status:'UNSET',\n    errorMessage:null,\n}\nconst walletSlice:Slice = createSlice({\n    name: 'walletS',\n    initialState,\n    reducers: {\n        getWallet(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getWalletStatus(state, action: PayloadAction<WalletStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.wallet = {...action.payload.wallet};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n    },\n});\nexport { walletSlice };\nexport const { getWallet, getWalletStatus,statusUnset } = walletSlice.actions\n","import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport { getTokenMap, getTokenMapStatus } from './reducer';\n\n\nimport { exchangeAPI } from '../apis/api';\nimport { getIcon } from '../../utils/swap_calc_utils';\nimport { CoinInfo, CoinMap } from '@loopring-web/component-lib/static-resource/index';\n\nconst getTokenMapApi = async ()=>{\n    const {tokenSymbolMap: tokens} = (  await exchangeAPI().getTokens())\n    const keys = Reflect.ownKeys(tokens);\n    let coinMap: CoinMap<any, CoinInfo<any>> = {}\n    keys.forEach((key: any) => {\n        if (!(key as string).startsWith('LP-')) {\n            coinMap[ key ] = {\n                icon: getIcon(key, tokens),\n                name: key,\n                simpleName: key,\n                description: '',\n                company: '',\n            }\n        }\n    })\n\n    return {data:coinMap}\n };\nexport function* getPostsSaga() {\n    try {\n        const {data}  = yield call(getTokenMapApi);\n        yield put(getTokenMapStatus({tokenMap:data}));\n    } catch (err) {\n        yield put(getTokenMapStatus(err));\n    }\n}\n\nexport default function* tokenSaga() {\n    yield all([takeLatest(getTokenMap, getPostsSaga)]);\n}\n","import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { getWallet, getWalletStatus } from './reducer';\nimport { CoinKey, ErrorObject, PairKey, WalletCoin } from '@loopring-web/component-lib/src/static-resource';\ntype WalletMap<R extends object> = {\n    [key in CoinKey<R>|PairKey<R>]?:WalletCoin<R>\n}\n\nconst getWalletBalance = async <R extends object>() => new Promise((resolve,reject) => {\n    //TODO: check is connect and active and assign wallet\n    //TODO: if not reject directory, any error happen will clean the\n    // await sdk\n    const data:WalletMap<R> = {\n        // @ts-ignore\n        ETH: {\n            belong: 'ETH',\n            count: 11,\n        },\n        LRC: {\n            belong: 'LRC',\n            count: 11111111111111,\n        },\n        'AMM-ETH-LRC':{\n            belong: 'AMM-ETH-LRC',\n            count: 11,\n        }\n    }\n    resolve({data}) ;\n    if(false){\n        const errorMessage:ErrorObject={\n            from:'get wallet balace map',\n            timestamp:Date.now(),\n            messageKey:\"translatedkey\"\n        }\n        reject(errorMessage)\n    }\n});\n\nexport function* getPostsSaga() {\n    try {\n        //\n        const {data} = yield call(getWalletBalance);\n        yield put(getWalletStatus({wallet:data}));\n    } catch (err) {\n        yield put(getWalletStatus(err));\n    }\n}\n\nexport default function* walletSaga() {\n    yield all([takeLatest(getWallet, getPostsSaga)]);\n}\n","import { all, call, fork, put, takeLatest } from \"redux-saga/effects\"\nimport { getTicker, getTickers, getTickerStatus } from './reducer'\nimport {\n    CoinKey,\n    CustomError,\n    ErrorMap,\n    FloatTag,\n    PairKey,\n    TradeFloat\n} from '@loopring-web/component-lib/src/static-resource'\n\nimport { asyncGetTradingInfo, getTradingInfo } from \"stores/trading/hook\"\nimport { TickerData, getTokenInfoById } from \"loopring-sdk\"\n\nimport { makeCoinInfo } from 'utils/swap_calc_utils'\nimport { exchangeAPI } from \"stores/apis/api\"\n\ntype TickerMap<R extends object> = {\n    [key in CoinKey<R>|PairKey<R>]?:TradeFloat & {\n    reward?:number,rewardToken?:string\n    }\n\n}\n\nconst demoTicker = [\n    ['ETH','2.4','24h','1234','3423525222','up'],\n    ['LRC','2.4','24h','1234','3423525222','up'],\n    ['DPR','2.4','24h','1234','3423525222','up'],\n    ['USDC','2.4','24h','1234','3423525222'],\n    ['USDT','2.4','24h','1234','3423525222','down'],\n    ['AMM-LRC-ETH','2.4','24h','1234','3423525222','up','23','1231','LRC'],\n    ['AMM-USDT-USDC','2.4','24h','1234','3423525222','up','23','1231','USDT'],\n    ['AMM-USDT-LRC','2.4','24h','1234','3423525222','up','23','1231'],\n    ['AMM-USDT-ETH','2.4','24h','1234','3423525222','up','23','1331'],\n    ['AMM-ETH-USDC','2.4','24h','1234','3423525222','up','12','233'],\n    ['AMM-ETH-USDT','2.4','24h','1234','3423525222','up','56','233'],\n\n]\n/*\nconst getTickersApi = async <R extends object>(list:Array<keyof R>)=>new Promise((resolve,reject)=>{\n\n    if(list.length>0){\n        const data:TickerMap<R> = {}; //= // {\n        list.map((tokenKey: keyof R) => {\n                const index = demoTicker.findIndex((item) => {\n                  return  item[ 0 ] === tokenKey\n                })\n                if (index > -1) {\n                    const ticker = demoTicker[index]\n                    data[tokenKey] = {\n                        percent: ticker[1],\n                        timeUnit: ticker[2].toString(),\n                        priceDollar: Number(ticker[3]),\n                        priceYuan:  Number(ticker[3]) * 6.3, //TODO get usdt to rmb price\n                        volume: Number(ticker[4]),\n                        floatTag: ticker[5].toString() === 'up'? FloatTag.increase:ticker[5].toString() === 'down'?FloatTag.decrease:FloatTag.none ,\n                        APY: 0,\n                        reward: ticker[7] ?  Number(ticker[7]) :undefined,\n                        rewardToken: ticker[8] ?  Number(ticker[8]) :undefined,\n                    } as TradeFloat\n                } else {\n                    throw new CustomError({...ErrorMap.GET_X_TOKEN_TICKER_ERROR, options: {token: tokenKey}});\n                    //reject(ErrorMap.GET_X_TOKEN_TICKER_ERROR)\n                }\n        })\n        resolve({data});\n    }else{\n       reject(ErrorMap.NO_TOKEN_KEY_LIST)\n    }\n\n});\n*/\nconst getTickersApi = async <R extends object>(list:Array<keyof R>)=> {\n\n    const data:TickerMap<R> = {}\n\n    const tickers = await exchangeAPI().getTicker({market: list.join(',')})\n\n    console.log('>>>tickMap:', tickers.tickMap)\n\n    tickers.tickMap.forEach((item: TickerData, key: keyof R) => {\n        console.log('>>>base_token_volume:', item.base_token_volume)\n        data[key] = {\n            timeUnit: '24h',\n            priceDollar: 0,\n            priceYuan:  0,\n            volume: item.base_token_volume,\n            floatTag: item.close > item.open ? 'increase' : 'decrease' ,\n            APY: 0,\n            reward: 0,\n            rewardToken: '',\n        } as TradeFloat\n    })\n\n    return { data }\n}\n\nexport function* getPostsSaga({payload}:any) {\n    try {\n        // @ts-ignore\n        const { tickerKey,tickerKeys } = payload;\n        console.log('getPostsSaga tickerKey',tickerKey, tickerKeys)\n        if(tickerKey || (tickerKeys && tickerKeys.length)) {\n            const {data}  = yield call(getTickersApi,tickerKey?[tickerKey]:tickerKeys);\n            yield put(getTickerStatus({tickerMap:data}));\n\n        }else{\n            throw new CustomError(ErrorMap.NO_TOKEN_KEY_LIST);\n        }\n    } catch (err) {\n        yield put(getTickerStatus(err));\n    }\n}\n\nfunction* tickerSaga() {\n    yield all([takeLatest(getTicker, getPostsSaga)]);\n}\nfunction* tickersSaga() {\n    yield all([takeLatest(getTickers, getPostsSaga)]);\n}\n\nexport const tickerForks = [\n    fork(tickerSaga),\n    fork(tickersSaga),\n]\n ","import { all, call, fork, put, takeLatest } from \"redux-saga/effects\"\nimport { updateSystem, getSystemStatus } from './reducer'\n\n\nimport { exchangeAPI } from \"stores/apis/api\"\nimport { ENV, NETWORK } from \"./interface\"\nimport store from '../index';\nimport { reset } from '../account/reducer';\n\n\nconst getSystemsApi = async <R extends object>(system:any)=> {\n    //TODO get some other reuqired id...... put into system\n\n    const { network } = system\n\n    const env = network === NETWORK.Goerli ? ENV.UAT : ENV.PROD\n    const baseURL = network === NETWORK.Goerli ? 'https://uat2.loopring.io' : 'https://api3.loopring.io'\n    store.dispatch(reset(undefined))\n    return { data:{network, env, baseURL} }\n}\n\n\n\nexport function* getUpdateSystem({payload}:any) {\n    try {\n        // @ts-ignore\n        const { system } = payload;\n        // console.log('getPostsSaga systemKey',systemKey, systemKeys)\n        const { data }  = yield call(getSystemsApi, system);\n\n        yield put(getSystemStatus({system:data}));\n        //TODO check wallect store\n\n\n\n    } catch (err) {\n        yield put(getSystemStatus(err));\n    }\n}\n\nfunction* systemSaga() {\n    yield all([takeLatest(updateSystem, getUpdateSystem)]);\n}\n\n\nexport const systemForks = [\n    fork(systemSaga),\n]\n ","import { all, put, fork, select, takeEvery } from \"redux-saga/effects\"\n// import machine from \"../state_machine/fsm/machine\"\n// import { TRANSITION } from \"../state_machine/fsm/actionTypes\"\n// import { helloSaga } from \"./sagas\"\nimport tokenSaga from './token/saga';\nimport walletSaga from './wallet/saga';\nimport { ammForks } from './Amm';\nimport { tickerForks } from './ticker/saga';\nimport { systemForks } from './system/saga';\n\n\n// https://css-tricks.com/finite-state-machines-with-react/\n// https://musing-rosalind-2ce8e7.netlify.com/?machine=%7B%22initial%22%3A%22initial%22%2C%22states%22%3A%7B%22initial%22%3A%7B%22on%22%3A%7B%22LOGIN%22%3A%22loggedIn%22%2C%22LOGOUT%22%3A%22loggedOut%22%7D%7D%2C%22loggedOut%22%3A%7B%22on%22%3A%7B%22SUBMIT%22%3A%22loading%22%7D%7D%2C%22loading%22%3A%7B%22on%22%3A%7B%22SUCCESS%22%3A%22loggedIn%22%2C%22FAIL%22%3A%22loggedOut%22%7D%7D%2C%22loggedIn%22%3A%7B%22onEntry%22%3A%5B%22SET_TOKEN%22%5D%2C%22onExit%22%3A%5B%22CLEAR_TOKEN%22%5D%2C%22on%22%3A%7B%22LOGOUT%22%3A%22loggedOut%22%7D%7D%7D%7D\n\n// function* machineHandler(event: any, action: any) {\n//\n//   // @ts-ignore\n//   const currentAppState = yield select((state) => { state.account.status })\n//   const nextAppState = machine.transition(currentAppState, event)\n//\n//   yield put({\n//     type: \"APP_STATE/\" + nextAppState.value,\n//     payload: {\n//       value: nextAppState.value\n//     }\n//   });\n//\n//   console.debug(\"-> from \" + currentAppState + \" to \" + nextAppState);\n//\n//   for (let i = 0; i < nextAppState.actions.length; i++) {\n//     yield put({\n//       type: nextAppState.actions[i],\n//       payload: action\n//     });\n//   }\n// }\n\n// function* watchTransition() {\n//   yield takeEvery(TRANSITION, function*(action: any) {\n//     yield machineHandler(action.event, action.payload);\n//   });\n// }\n\nfunction* mySaga() {\n  yield all([\n    // fork(helloSaga),\n    // fork(watchTransition),\n    fork(tokenSaga),\n    fork(walletSaga),\n    ...systemForks,\n    ...ammForks,\n    ...tickerForks\n\n  ]);\n}\n\nexport default mySaga;\n","import { configureStore, combineReducers, getDefaultMiddleware } from '@reduxjs/toolkit'\n\nimport { useDispatch } from 'react-redux'\nimport { save, load } from 'redux-localstorage-simple'\n\nimport createSagaMiddleware from 'redux-saga'\n\n// We'll use redux-logger just as an example of adding another middleware\nimport logger from 'redux-logger'\n\n// And use redux-batch as an example of adding enhancers\nimport { reduxBatch } from '@manaflair/redux-batch'\nimport { updateVersion } from './global/actions'\n\nimport accountSlice from './account/reducer'\nimport tradingSlice from './trading/reducer'\nimport transactionlice from './transactions/reducer'\n\n\nimport { modalsSlice, setLanguage, settingsSlice } from '@loopring-web/component-lib';\nimport { ammReducer } from './Amm';\nimport { tokenMapSlice } from './token';\nimport { walletSlice } from './wallet';\nimport mySaga from './rootSaga';\nimport { tickerMapSlice } from './ticker';\nimport { systemSlice } from './system';\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst reducer = combineReducers({\n  account: accountSlice.reducer,\n  settings: settingsSlice.reducer,\n  system: systemSlice.reducer,\n  trading: tradingSlice.reducer,\n  transactions: transactionlice.reducer,\n  modals: modalsSlice.reducer,\n  amm:ammReducer,\n  tokenMap: tokenMapSlice.reducer,\n  walletMap: walletSlice.reducer,\n  tickerMap: tickerMapSlice.reducer\n})\n\n//\n\nconst PERSISTED_KEYS: string[] = ['settings']\n\nconst store = configureStore({\n  reducer,\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  middleware: [...getDefaultMiddleware({ thunk: false,serializableCheck:false, }), save({ states: PERSISTED_KEYS }), sagaMiddleware, ],\n  // middleware: [...getDefaultMiddleware({ thunk: true }), ],\n  devTools: process.env.NODE_ENV !== 'production',\n  enhancers: [reduxBatch],\n  preloadedState: load({ states: PERSISTED_KEYS })\n})\nstore.dispatch(updateVersion())\nstore.dispatch(setLanguage(store.getState().settings.language))\n// @ts-ignore\nsagaMiddleware.run(mySaga, store.dispatch);\n\n// The store has been created with these options:\n// - The slice reducers were automatically passed to combineReducers()\n// - redux-thunk and redux-logger were added as middleware\n// - The Redux DevTools Extension is disabled for production\n// - The middleware, batch, and devtools enhancers were composed together\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport type RootState = ReturnType<typeof reducer>\n\nexport default store\n","import { useMemo, useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Web3Provider } from '@ethersproject/providers'\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from 'networks/web3_connectors'\n\nimport { ChainId, NetworkContextName } from 'loopring-sdk'\n\n/*\nimport EXCHANGE_ABI from 'config/abis/exchange_3_6.json'\nimport ERC20_ABI from 'config/abis/erc20.json'\nimport DEPOSIT_ABI from 'config/abis/deposit.json'\n\nimport Web3 from 'web3'\n*/\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3React<Web3Provider>()\n  const contextNetwork = useWeb3React<Web3Provider>(NetworkContextName)\n  return context.active ? context : contextNetwork\n}\n\nexport function useEtherscan() {\n  const { chainId } = useActiveWeb3React()\n\n  const [etherscanUrl, setEtherscanUrl] = useState<string>('')\n\n  useEffect(() => {\n    switch(chainId) {\n      case ChainId.MAINNET:\n        setEtherscanUrl('https://etherscan.io/address/')\n        break\n      default:\n        setEtherscanUrl('https://goerli.etherscan.io/address/')\n    }\n  }, [chainId])\n\n  return {\n    etherscanUrl,\n  }\n}\n\nexport function useEagerConnect() {\n\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        console.log('useEagerConnect isAuthorized')\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        console.log('useEagerConnect NOT isAuthorized')\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(onReConnectInjected: any = undefined, suppress: boolean = false) {\n  const { active, error, activate, chainId, } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n\n    const reConnectInjected = () => {\n      console.log('--------------------------> reConnectInjected')\n      activate(injected)\n      if (onReConnectInjected) {\n        onReConnectInjected()\n      }\n    }\n\n    if (ethereum && ethereum.on && !active && !error) {\n\n      const handleChainChanged = (chainId: string | number) => {\n        console.log('Handling \\'chainChanged\\' event with payload', chainId)\n        reConnectInjected()\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log('---------------------------------------------')\n        console.log('Handling \\'accountsChanged\\' event with payload', accounts)\n        console.log('before reset accounts.length=', accounts.length)\n        if (accounts.length > 0) {\n          console.log('before reset!!!!!!!!!!!!!!!!1')\n          reConnectInjected()\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n  }, [active, error, chainId, activate, dispatch])\n}\n\nexport function useBlockNumber() {\n  const { library, chainId } = useActiveWeb3React()\n\n  const [blockNumber, setBlockNumber] = useState<number>()\n\n  useEffect((): any => {\n      if (!!library) {\n          let stale = false\n\n          library\n              .getBlockNumber()\n              .then((blockNumber: number) => {\n                  if (!stale) {\n                      setBlockNumber(blockNumber)\n                  }\n              })\n              .catch(() => {\n                  if (!stale) {\n                      setBlockNumber(-1)\n                  }\n              })\n\n          const updateBlockNumber = (blockNumber: number) => {\n              setBlockNumber(blockNumber)\n          }\n          library.on('block', updateBlockNumber)\n\n          return () => {\n              stale = true\n              library.removeListener('block', updateBlockNumber)\n              setBlockNumber(undefined)\n          }\n      }\n  }, [library, chainId])\n\n  return {\n      blockNumber,\n  }\n}\n\nexport function useBalance() {\n  const { account, library, chainId } = useActiveWeb3React()\n\n  const [balance, setBalance] = useState<number>()\n  useEffect((): any => {\n      if (!!account && !!library) {\n          let stale = false\n\n          library\n              .getBalance(account)\n              .then((balance: any) => {\n                  if (!stale) {\n                      setBalance(balance)\n                  }\n              })\n              .catch(() => {\n                  if (!stale) {\n                      setBalance(0)\n                  }\n              })\n\n          return () => {\n              stale = true\n              setBalance(0)\n          }\n      }\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return {\n      balance,\n  }\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\nimport { AuthereumConnector } from '@web3-react/authereum-connector'\n\nconst POLLING_INTERVAL = 12000\n\nconst RPC_URLS: { [chainId: number]: string } = {\n  1: process.env.REACT_APP_RPC_URL_1 as string,\n  5: process.env.REACT_APP_RPC_URL_5 as string\n}\n\nconsole.log('RPC_URLS 1:', RPC_URLS[1])\nconsole.log('RPC_URLS 5:', RPC_URLS[5])\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 5,] })\n\nexport const network = new NetworkConnector({\n  urls: { \n    1: RPC_URLS[1], \n    5: RPC_URLS[5] \n  },\n  defaultChainId: 1\n})\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: RPC_URLS[1] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n\nexport const walletlink = new WalletLinkConnector({\n  url: RPC_URLS[1],\n  appName: 'Loopring DEX'\n})\n\nexport const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'dummy@abc.xyz',\n  manifestAppUrl: 'http://localhost:1234'\n})\n\nexport const authereum = new AuthereumConnector({ chainId: 42 })\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\n\nimport { TradingInterval, ChainId, ExchangeInfo, TokenInfo, TickerData, getBaseQuote } from 'loopring-sdk'\n\nexport interface TradingInfo {\n  chainId: number\n  symbol: string\n  symbol_base: string | undefined\n  symbol_quote: string | undefined\n  interval: TradingInterval\n  ammPoolStats: any\n  ammPoolConf: any\n  ammActivityRules: any\n  markets: any\n  marketTrades: any\n  tickerMap: {[key: string]: TickerData}\n  tokens: {[key: string]: [value: TokenInfo]}\n  exchangeInfo?: ExchangeInfo\n}\n\nconst defaultSymbol = process.env.REACT_APP_TEST_SYMBOL ? process.env.REACT_APP_TEST_SYMBOL : 'LRC-ETH'\nconst defaultInterval = process.env.REACT_APP_TEST_INTERVAL ? process.env.REACT_APP_TEST_INTERVAL : TradingInterval.hr1\n\nconst { base, quote } = getBaseQuote(defaultSymbol)\n\nconst initialState = {\n  chainId: ChainId.GORLI,\n  symbol: defaultSymbol,\n  symbol_base: base,\n  symbol_quote: quote,\n  interval: defaultInterval,\n  ammPoolConf: {},\n  ammActivityRules: {},\n  ammPoolStats: {},\n  markets: [],\n  marketTrades: {},\n  tokens: {},\n  tickerMap: {},\n  refreshRate: 1000,\n  refreshRateSlow: 3000,\n} as TradingInfo\n\nconst tradingSlice:Slice = createSlice({\n  name: 'trading',\n  initialState,\n  reducers: {\n    setChainId(state, action: PayloadAction<number>) {\n      state.chainId = action.payload\n    },\n    changeSymbol(state, action: PayloadAction<any>) {\n      state.symbol = action.payload\n      const { base, quote } = getBaseQuote(state.symbol)\n      state.symbol_base = base\n      state.symbol_quote = quote\n    },\n    changeTradingInterval(state, action: PayloadAction<any>) {\n      state.interval = action.payload\n    },\n    setTickerMap(state, action: PayloadAction<any>) {\n      state.tickerMap = action.payload\n    },\n    setAmmPoolStats(state, action: PayloadAction<any>) {\n      state.ammPoolStats = action.payload\n    },\n    setAmmActivityRules(state, action: PayloadAction<any>) {\n      state.ammActivityRules = action.payload\n    },\n    setAmmPoolConf(state, action: PayloadAction<any>) {\n      state.ammPoolConf = action.payload\n    },\n    setMarketTrades(state, action: PayloadAction<any>) {\n      state.marketTrades = action.payload\n    },\n    setMarkets(state, action: PayloadAction<any>) {\n      state.markets = action.payload\n    },\n    setTokens(state, action: PayloadAction<{}>) {\n      state.tokens = action.payload\n    },\n    setExchangeInfo(state, action: PayloadAction<ExchangeInfo>) {\n      state.exchangeInfo = action.payload\n    },\n  },\n})\n\nexport const {\n  setChainId, \n  setAmmPoolStats,\n  setAmmActivityRules,\n  setMarketTrades, \n  setTickerMap, \n  setAmmPoolConf, \n  changeSymbol, \n  changeTradingInterval, \n  setMarkets, \n  setTokens, \n  setExchangeInfo, \n} = tradingSlice.actions\n\nexport default tradingSlice\n","import { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport store from 'stores'\n\nimport { getLibrary } from 'utils/web3_tools'\nimport { NetworkContextName } from 'loopring-sdk'\n\nimport { getTheme, i18n, provider, ProviderComposer } from \"@loopring-web/component-lib/static-resource\"\nimport { ThemeProvider as MuThemeProvider } from '@material-ui/core'\nimport LocalizationProvider from '@material-ui/pickers/LocalizationProvider'\n\nimport MomentUtils from '@material-ui/lab/AdapterMoment'\n\nimport { ThemeProvider } from \"@emotion/react\"\n\nimport { I18nextProvider } from \"react-i18next\"\n\n\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\nconst providers = [\n    provider(LocalizationProvider as any, {dateAdapter: MomentUtils}),\n    provider(I18nextProvider as any, {i18n:i18n}),\n    provider(MuThemeProvider as any, {theme: getTheme('dark')}),\n    provider(ThemeProvider as any, {theme: getTheme('dark')}),\n    provider(Provider as any, {store}),\n]\n\nReactDOM.render(\n// @ts-ignore\n    <ProviderComposer providers={providers}>\n        <Web3ReactProvider getLibrary={getLibrary}>\n            <Web3ProviderNetwork getLibrary={getLibrary}>\n                <App/>\n            </Web3ProviderNetwork>\n        </Web3ReactProvider>\n    </ProviderComposer>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nif (process.env.NODE_ENV !== 'production') {\n    reportWebVitals(console.log)\n}\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  TickerStates } from './interface';\nimport { STATUS } from '../constant';\nimport { CoinKey } from '@loopring-web/component-lib/src/static-resource';\n\nconst initialState:Required<TickerStates>  = {\n    tickerMap:{},\n    status:'UNSET',\n    errorMessage:null,\n}\nconst tickerMapSlice:Slice = createSlice({\n    name: 'tickerMap',\n    initialState,\n    reducers: {\n        getTicker(state, action:PayloadAction<CoinKey<any>>) {\n            state.status = STATUS.PENDING\n        },\n        getTickers(state, action:PayloadAction<Array<CoinKey<any>>>) {\n            state.status = STATUS.PENDING\n        },\n        getTickerStatus(state, action: PayloadAction<TickerStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.tickerMap = {...state.tickerMap,...action.payload.tickerMap};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n\n    },\n});\nexport { tickerMapSlice };\nexport const { getTicker,getTickers, getTickerStatus, statusUnset } = tickerMapSlice.actions;","import { AmmpoolAPI, ExchangeAPI, UserAPI, WsAPI } from \"loopring-sdk\"\nimport { getTradingInfo } from 'stores/trading/hook'\n\nexport const userAPI = () => {\n    return new UserAPI(getTradingInfo().chainId)\n}\n\nexport const exchangeAPI = () => {\n    return new ExchangeAPI(getTradingInfo().chainId)\n}\n\nexport const ammpoolAPI = () => {\n    return new AmmpoolAPI(getTradingInfo().chainId)\n}\n\nexport const wsAPI = () => {\n    return new WsAPI(getTradingInfo().chainId)\n}\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  AmmMapStates } from './interface';\nimport { STATUS } from '../../constant';\n\n\nconst initialState:Required<AmmMapStates<object,object>>  = {\n    ammMap:{},\n    status:'UNSET',\n    errorMessage:null,\n}\nconst ammMapSlice:Slice = createSlice({\n    name: 'ammMap',\n    initialState,\n    reducers: {\n        getAmmMap(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getAmmMapStatus(state, action: PayloadAction<AmmMapStates<any,any>>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.ammMap = {...action.payload.ammMap};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n    },\n});\nexport { ammMapSlice };\nexport const { getAmmMap, getAmmMapStatus,statusUnset } = ammMapSlice.actions\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport { AmmActivityMapStates } from './interface';\nimport { STATUS } from '../../constant';\n\n\nconst initialState:Required<AmmActivityMapStates>  = {\n    ammActivityMap:{},\n    status:'UNSET',\n    errorMessage:null,\n}\nconst ammActivityMapSlice:Slice = createSlice({\n    name: 'ammActivityMap',\n    initialState,\n    reducers: {\n        getAmmActivityMap(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getAmmActivityMapStatus(state, action: PayloadAction<AmmActivityMapStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.ammActivityMap = {...action.payload.ammActivityMap};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n\n    },\n});\nexport { ammActivityMapSlice };\nexport const { getAmmActivityMap, getAmmActivityMapStatus, statusUnset } = ammActivityMapSlice.actions\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  TokenMapStates } from './interface';\nimport { STATUS } from '../constant';\n\nconst initialState:Required<TokenMapStates>  = {\n    tokenMap:{},\n    status:'UNSET',\n    errorMessage:null,\n}\nconst tokenMapSlice:Slice = createSlice({\n    name: 'tokenMap',\n    initialState,\n    reducers: {\n        getTokenMap(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getTokenMapStatus(state, action: PayloadAction<TokenMapStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.tokenMap = {...action.payload.tokenMap};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n\n    },\n});\nexport { tokenMapSlice };\nexport const { getTokenMap, getTokenMapStatus, statusUnset } = tokenMapSlice.actions;","import\n{ createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  SystemStatus } from './interface';\nimport { STATUS } from '../constant';\nimport { CoinKey } from '@loopring-web/component-lib/src/static-resource';\n\nconst initialState:Required<SystemStatus>  = {\n    system: {},\n    status:'UNSET',\n    errorMessage:null,\n}\nconst systemSlice:Slice = createSlice({\n    name: 'system',\n    initialState,\n    reducers: {\n        updateSystem(state, action:PayloadAction<Partial<SystemStatus>>) {\n            state.status = STATUS.PENDING\n        },\n        getSystemStatus(state, action: PayloadAction<Partial<SystemStatus>>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.system = {...state.system,...action.payload.system};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n\n    },\n});\nexport  { systemSlice };\nexport const { updateSystem, getSystemStatus, statusUnset } = systemSlice.actions;","import { useDispatch, useSelector } from 'react-redux'\nimport { AmmMapStates } from './interface';\nimport { ammMapSlice } from './reducer';\n\nexport const useAmmMap = <R extends object,I extends object>(): AmmMapStates<R,I> & {\n    updateAmmMap:()=> void,\n    statusUnset:()=> void,\n} => {\n    const ammMap:AmmMapStates<R,I>= useSelector((state: any) => state.amm.ammMap)\n    const dispatch = useDispatch();\n    const updateAmmMap = () => {\n        dispatch(ammMapSlice.actions.getAmmMap(undefined))\n    }\n    const statusUnset = ()=>{\n        dispatch(ammMapSlice.actions.statusUnset(undefined))\n    }\n    return {\n        ...ammMap,\n        statusUnset,\n        updateAmmMap\n    }\n}\n","import { StateBase } from '../interface';\n\nexport enum ENV {\n    DEV='DEV',\n    UAT='UAT',\n    PROD='PROD',\n}\nexport enum NETWORK {\n    Goerli='Goerli',\n    MAIN='MAIN',\n    NONETWORK='NONETWORK'\n}\n\nexport type System = {\n    env:keyof typeof ENV,\n    network:keyof typeof NETWORK,\n    baseURL: string,\n}\n\nexport type SystemStatus = {\n    system:System | {}\n}  & StateBase\n\n\n\n","import { useDispatch, useSelector } from 'react-redux'\nimport { systemSlice } from './reducer';\nimport { System, SystemStatus } from './interface';\n\nexport function useSystem(): SystemStatus & {\n    updateSystem:(system:Partial<System>)=>void,\n    statusUnset:()=>void,\n} {\n    const system:SystemStatus = useSelector((state: any) => state.system)\n    const dispatch = useDispatch();\n    const updateSystem = (system:Partial<System>) => {\n        dispatch(systemSlice.actions.updateSystem({system}))\n    }\n    const statusUnset = ()=>{\n        dispatch(systemSlice.actions.statusUnset(undefined))\n    }\n    return {\n        ...system,\n        statusUnset,\n        updateSystem,\n    }\n\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { tickerMapSlice } from './reducer';\nimport { TickerStates } from './interface';\nimport { CoinKey } from '@loopring-web/component-lib/src/static-resource';\n\nexport function useTicker(): TickerStates & {\n    updateTickers:(tickerKeys:Array<CoinKey<any>>)=>void,\n    updateTicker:(tickerKey:CoinKey<any>)=>void,\n    statusUnset:()=>void,\n} {\n    const tickerMap:TickerStates = useSelector((state: any) => state.tickerMap)\n    const dispatch = useDispatch();\n    const updateTicker = (tickerKey:CoinKey<any>) => {\n        dispatch(tickerMapSlice.actions.getTicker({tickerKey}))\n    }\n    const updateTickers = (tickerKeys:Array<CoinKey<any>>) => {\n        dispatch(tickerMapSlice.actions.getTickers({tickerKeys}))\n    }\n    const statusUnset = ()=>{\n        dispatch(tickerMapSlice.actions.statusUnset(undefined))\n    }\n    return {\n        ...tickerMap,\n        statusUnset,\n        updateTickers,\n        updateTicker,\n    }\n\n}\n","export enum AccountStatus {\n    UNKNOWN = 'UNKNOWN',\n    UNCONNNECTED = 'UNCONNNECTED',\n    CONNECTED = 'CONNECTED',\n    NOACCOUNT = 'NOACCOUNT',\n    DEPOSITING = 'DEPOSITING',\n    DEPOSIT_TO_CONFIREM = 'DEPOSIT_TO_CONFIREM',\n    UNACTIVATED = 'UNACTIVATED',\n    ARPROVING = 'ARPROVING',\n    APPROV_TO_CONFIRM = 'APPROV_TO_CONFIRM',\n    LOCKED = 'LOCKED',\n    ACTIVATED = 'ACTIVATED',\n}\n\nexport enum StatusChangeEvent {\n    Reset = 'Reset',\n    Connecting = 'Connecting',\n    HasPubkey = 'HasPubkey',\n    HasNoPubkey = 'HasNoPubkey',\n    ErrorResponse = 'ErrorResponse',\n    FinishDeposit = 'FinishDeposit',\n    DepositConfirmed = 'DepositConfirmed',\n    IsSmartWallet = 'IsSmartWallet',\n    ApproveSubmit = 'ApproveSubmit',\n    ApproveConfirmed = 'ApproveConfirmed',\n    Unlock = 'Unlock',\n    Lock = 'Lock',\n}\n\nexport const AccountMachineSpec = (initialState: AccountStatus = AccountStatus.UNCONNNECTED) => \n{\n    return {\n        initialState: initialState,\n        states: {\n            UNCONNNECTED: {\n                Connecting: AccountStatus.CONNECTED,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            CONNECTED: {\n                HasPubkey: AccountStatus.LOCKED,\n                HasNoPubkey: AccountStatus.UNACTIVATED,\n                ErrorResponse: AccountStatus.NOACCOUNT,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            NOACCOUNT: {\n                ErrorResponse: AccountStatus.NOACCOUNT,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            DEPOSITING: {\n                FinishDeposit: AccountStatus.DEPOSIT_TO_CONFIREM,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            DEPOSIT_TO_CONFIREM: {\n                HasPubkey: AccountStatus.ACTIVATED,\n                HasNoPubkey: AccountStatus.DEPOSIT_TO_CONFIREM,\n                ErrorResponse: AccountStatus.DEPOSIT_TO_CONFIREM,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            UNACTIVATED: {\n                IsSmartWallet: AccountStatus.ARPROVING,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            ARPROVING: {\n                ApproveSubmit: AccountStatus.APPROV_TO_CONFIRM,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            APPROV_TO_CONFIRM: {\n                ApproveConfirmed: AccountStatus.ACTIVATED,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            LOCKED: {\n                Unlock: AccountStatus.ACTIVATED,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            ACTIVATED: {\n                Lock: AccountStatus.LOCKED,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n        },\n    }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { BigNumber } from '@ethersproject/bignumber'\n\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\n\nimport { UnsupportedChainIdError } from '@web3-react/core'\n\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\n\nimport { ChainId } from 'loopring-sdk'\n\nexport function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 10000\n  return library\n}\n\nexport function getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return 'You\\'re connected to an unsupported network.'\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected ||\n    error instanceof UserRejectedRequestErrorWalletConnect\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nexport function transactionChecker(web3: any, address: string) {\n  const account = address.toLowerCase()\n\n  const subscription = web3.eth.subscribe('pendingTransactions', (err: any, res: any) => {\n    if (err) {\n      console.error(err)\n    }\n  })\n\n  return function watchTransactions() {\n    console.log('Watch Transactions...')\n    subscription.on('data', (txHash: any) => {\n      setTimeout(async () => {\n        try {\n          let tx = await web3.eth.getTransaction(txHash)\n          if (tx.to && tx.to.toLowerCase() === account) {\n            const value = web3.utils.fromWei(tx.value, 'ether')\n            if (value > 0) {\n              console.log('watchTransactions value:', value)\n            }\n          }\n        } catch (err) {\n          console.error(err)\n        }\n      }, 60 * 1000)\n    })\n  }\n}\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\n  1: '',\n  5: 'goerli.',\n}\n\nexport function getEtherscanLink(\n  chainId: ChainId,\n  data: string,\n  type: 'transaction' | 'token' | 'address' | 'block'\n): string {\n  const prefix = `https://${ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[1]}etherscan.io`\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/token/${data}`\n    }\n    case 'block': {\n      return `${prefix}/block/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport async function isContract(web3: any, address: string) {\n  const code = await web3.eth.getCode(address)\n  return code && code.length > 2\n}\n\nexport function getShortAddr(address: string) {\n    if (!address || address === undefined || address === null || address.trim() === '') {\n        console.log('getShortAddr got empty!')\n        return undefined\n    }\n    const convertAddr = address.substr(0, 6) + '...' + address.substr(address.length - 4)\n    return convertAddr\n}\n","import { debounce } from 'lodash'\nimport React, { useEffect } from 'react'\nimport { UserStorage } from 'storage'\n\nimport { useCheckAccStatus, } from 'stores/account/hook'\n\nimport { \n  useUpdateChainId,\n  useUpdateExchangeInfo, \n  useUpdateExchangeMarkets, \n  useUpdateTokens, \n  useUpdateAmmPoolConf,\n  useUpdateAmmActivityRules,\n  useUpdateAmmPoolStats,\n} from 'stores/trading/hook'\n\nenum WindowEvent {\n  Click = 'click',\n  Scroll = 'scroll',\n  Mouseover = 'mouseover',\n}\n\nconst events = [WindowEvent.Click, WindowEvent.Scroll]\n\nconst forceReset = debounce(() => { UserStorage.checkTimeout(true) }, 100)\n\nexport const GlobalProvider = ({ children }: { children: React.ReactNode }) => {\n\n  useUpdateExchangeInfo()\n  useUpdateExchangeMarkets()\n  useUpdateTokens()\n  useUpdateAmmPoolConf()\n  useUpdateAmmActivityRules()\n  useUpdateAmmPoolStats()\n  useUpdateChainId()\n\n  useCheckAccStatus()\n\n  useEffect(() => {\n\n    events.forEach((event: string) => {\n      document.addEventListener(event, forceReset)\n    })\n\n    return () => {\n\n      events.forEach((event: string) => {\n        document.removeEventListener(event, forceReset)\n      })\n    }\n\n  }, [])\n\n  return (\n    <React.Fragment>\n      { children}\n    </React.Fragment>\n  )\n\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport { network } from 'networks/web3_connectors'\n\nimport { useEagerConnect, useInactiveListener } from 'hooks/web3/useWeb3'\nimport { reset, setAccountStatus } from 'stores/account/reducer'\n\nimport { ChainId, NetworkContextName } from 'loopring-sdk'\n\n// import Loader from 'components/modals/Loader'\nimport { useDispatch } from 'react-redux'\nimport { AccountStatus } from 'state_machine/account_machine_spec'\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 20rem;\n`\n\nconst Message = styled.h2`\n  color: ${({ theme }) => theme.colorBase.error};\n`\n\nexport function Web3ReactManager({ children }: { children: JSX.Element }) {\n  const { t } = useTranslation()\n  const { active } = useWeb3React()\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React(NetworkContextName)\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\n  useEffect(() => {\n    if (triedEager && !networkActive && !networkError && !active) {\n      activateNetwork(network)\n    }\n  }, [triedEager, networkActive, networkError, activateNetwork, active])\n\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  \n  const dispatch = useDispatch()\n\n  const onReConnectInjected = () => {\n    console.log('onReConnectInjected')\n    dispatch(reset(undefined))\n    dispatch(setAccountStatus(AccountStatus.UNCONNNECTED))\n  }\n  \n  useInactiveListener(onReConnectInjected, !triedEager)\n\n  // handle delayed loader state\n  const [showLoader, setShowLoader] = useState(false)\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowLoader(true)\n    }, 600)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [])\n\n  // on page load, do nothing until we've tried to connect to the injected connector\n  if (!triedEager) {\n    return null\n  }\n\n  // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\n  if (!active && networkError) {\n    return (\n      <MessageWrapper>\n        <Message>{t('unknownError')}</Message>\n      </MessageWrapper>\n    )\n  }\n\n  // if neither context is active, spin\n  if (!active && !networkActive) {\n    return showLoader ? (\n      <MessageWrapper>\n        {/*<Loader />*/}\n      </MessageWrapper>\n    ) : null\n  }\n\n  return children\n}\n","import React from 'react'\n\nexport const DevWrapper = ({ children }: { children: React.ReactNode }) => {\n\n  return (\n    <React.Fragment>\n      {\n        process.env.NODE_ENV !== 'production' ? (\n          <>\n          {children}\n          </>\n        ) : null\n      }\n    </React.Fragment>\n  )\n\n}\n\n","import { useDispatch, useSelector } from 'react-redux'\nimport { tokenMapSlice } from './reducer';\nimport { TokenMapStates } from './interface';\n\nexport function useTokenMap(): TokenMapStates & {\n    updateTokenMap:()=>void,\n    statusUnset:()=>void,\n} {\n    const tokenMap:TokenMapStates = useSelector((state: any) => state.tokenMap)\n    const dispatch = useDispatch();\n    const updateTokenMap = () => {\n        dispatch(tokenMapSlice.actions.getTokenMap(undefined))\n    }\n    const statusUnset = ()=>{\n        dispatch(tokenMapSlice.actions.statusUnset(undefined))\n    }\n    return {\n        ...tokenMap,\n        statusUnset,\n        updateTokenMap,\n    }\n\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { AmmActivityMapStates } from './interface';\nimport { ammActivityMapSlice } from './reducer';\n\nexport function useAmmActivityMap(): AmmActivityMapStates & {\n    updateAmmActivityMap:()=> void,\n    statusUnset:()=> void,\n} {\n    const ammActivityMap:AmmActivityMapStates = useSelector((state: any) => state.amm.ammActivityMap)\n    const dispatch = useDispatch();\n    const updateAmmActivityMap = () => {\n        dispatch(ammActivityMapSlice.actions.getAmmActivityMap(undefined))\n    }\n    const statusUnset = ()=>{\n        dispatch(ammActivityMapSlice.actions.statusUnset(undefined))\n    }\n    return {\n        ...ammActivityMap,\n        statusUnset,\n        updateAmmActivityMap\n    }\n\n}\n","import { useDeepCompareEffect } from \"react-use\"\n\nexport function useCustomDCEffect(action: any, deps: any[] | undefined | null) {\n    useDeepCompareEffect(action, [deps || {}])\n}\n","import { WsAPI, ExchangeAPI, AmmpoolAPI, UserAPI, DEFAULT_TIMEOUT, } from 'loopring-sdk'\nimport store, { RootState } from 'stores'\nimport { useSelector } from 'react-redux'\n\nimport { useMemo } from 'react'\n\nfunction useApi(ApiClass: any, timeout = DEFAULT_TIMEOUT) {\n    // const chainId = store.getState().trading.chainId\n    // return new ApiClass(chainId, timeout)\n\n  const { chainId, } = useSelector((state: RootState) => state.trading)\n\n  const genApi = () => {\n      if (!chainId) {\n          return undefined\n      }\n\n      return new ApiClass(chainId, timeout)\n  }\n\n  const api = useMemo(genApi, [ApiClass, chainId, timeout])\n\n  return api\n}\n\nexport function useWsAPI() {\n    return useApi(WsAPI) as WsAPI\n}\n\nexport function useExchangeAPI() {\n    return useApi(ExchangeAPI) as ExchangeAPI\n}\n\nexport function useAmmpoolAPI() {\n    return useApi(AmmpoolAPI) as AmmpoolAPI\n}\n\nexport function useUserAPI() {\n    return useApi(UserAPI) as UserAPI\n}\n","export enum STATUS {\n    UNSET='UNSET',\n    PENDING='PENDING',\n    ERROR='ERROR',   // success failed timeout is Done\n    DONE='DONE',   // success failed timeout is Done\n}\n","import * as fm from 'loopring-sdk'\nimport BigNumber from 'bignumber.js'\n\nimport { CoinInfo, CoinMap, } from '@loopring-web/component-lib/static-resource'\n\nimport { utils } from 'ethers'\nimport { TokenInfo } from 'loopring-sdk'\n\nconst MULTI_FACTOR = 10000\n\nexport enum SwapStatus {\n    Normal = 'Normal',\n    EmptyInput = 'EmptyInput',\n    ExceedUserBalance = 'ExceedUserBalance',\n    ExceedPoolBalance = 'ExceedPoolBalance',\n    Loading = 'Loading',\n}\n\nexport const checkStatus = (baseAmt: any, MaxBaseAmt: any, quoteAmt: any, MaxQuoteAmt: any) => {\n    let newStatus = SwapStatus.Normal\n\n    baseAmt = new BigNumber(baseAmt)\n    MaxBaseAmt = new BigNumber(MaxBaseAmt)\n    quoteAmt = new BigNumber(quoteAmt)\n    MaxQuoteAmt = new BigNumber(MaxQuoteAmt)\n\n    const zero = new BigNumber(0)\n\n    if (baseAmt.gt(MaxBaseAmt)) {\n        newStatus = SwapStatus.ExceedUserBalance\n    } else if (quoteAmt.gt(MaxQuoteAmt)) {\n        newStatus = SwapStatus.ExceedPoolBalance\n    } else if (baseAmt.eq(zero) || quoteAmt.eq(zero)) {\n        newStatus = SwapStatus.EmptyInput\n    }\n\n    const isNormal = newStatus === SwapStatus.Normal\n\n    return {\n        isNormal,\n    }\n\n}\n\nexport function getIcon(symbol: string, tokens: any) {\n    const token: any = tokens[symbol]\n    return getIconByTokenInfo(token)\n}\n\nexport function getIconByTokenInfo(token: TokenInfo) {\n    if (token) {\n        const addr = utils.getAddress(token.address)\n        const path = `https://exchange.loopring.io/assets/images/ethereum/assets/${addr}/logo.png`\n        return path\n    }\n    return ''\n}\n\nexport function makeCoinInfo(token: TokenInfo) {\n    if (token) {\n        const info: CoinInfo<any> = {\n            icon: getIconByTokenInfo(token),\n            name: token.symbol,\n            simpleName: token.symbol,\n            description: token.name,\n            company: token.name,\n        }\n        return info\n    }\n    return undefined\n}\n\nexport const getLeft = (pairs: any, tokens: any) => {\n    if (pairs) {\n\n        const left = Reflect.ownKeys(pairs)\n\n        let coinMapLeft: CoinMap<any, CoinInfo<any>> = {}\n\n        //https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png\n\n        left.forEach((key: any) => {\n            coinMapLeft[key] = {\n                icon: getIcon(key, tokens),\n                name: key,\n                simpleName: key,\n                description: '',\n                company: ''\n            }\n        })\n\n        return {\n            left,\n            coinMapLeft,\n        }\n    }\n\n    return undefined\n}\n\nexport const getRight = (pairs: any, left: any, tokens: any) => {\n    if (pairs) {\n        const right = pairs[left].tokenList\n\n        let coinMapRight: CoinMap<any, CoinInfo<any>> = {}\n\n        if (right) {\n            right.forEach((key: any) => {\n                coinMapRight[key] = {\n                    icon: getIcon(key, tokens),\n                    name: key,\n                    simpleName: key,\n                    description: '',\n                    company: ''\n                }\n            })\n\n            return {\n                right,\n                coinMapRight,\n            }\n        }\n    }\n    return undefined\n}\n\nexport const getToken = (tokens: any, token: any) => {\n    if (!tokens) {\n        throw Error('no tokens list!')\n    }\n    return tokens[token]\n}\n\nexport const getTokenInfoByToken = (ammBalance: any, tokens: any, token: any) => {\n\n    const tokenInfo = getToken(tokens, token)\n\n    // console.log(' tokenInfo:', tokenInfo, ' tokens:', tokens, ' token:', token)\n    const tokenVol = ammBalance.pooledMap[tokenInfo.tokenId].volume\n    const reserve = fm.toBig(tokenVol)\n\n    // console.log(' tokenInfo:', tokenInfo, ' tokenVol:', tokenVol)\n\n    return {\n        tokenInfo, tokenVol, reserve,\n    }\n}\n\nconst getKey = (base: any, quote: any) => {\n    // const isLRCETH = (base === 'LRC' && quote === 'ETH') || (base === 'ETH' && quote === 'LRC')\n\n    if (!base || !quote) {\n        return {\n            key: undefined,\n            key_bak: undefined,\n            isOK: false,\n        }\n    }\n\n    const isLRCETH = false\n    const key = isLRCETH ? 'LRCETH-Pool' : ('AMM-' + base + '-' + quote)\n    const key_bak = isLRCETH ? 'LRCETH-Pool' : ('AMM-' + quote + '-' + base)\n    return {\n        key,\n        key_bak,\n        isOK: true,\n    }\n}\n\nconst getInfoByKey = (raw_data: any, keyPair: any) => {\n    const {\n        key,\n        key_bak,\n    } = keyPair\n\n    if (raw_data[key]) return raw_data[key]\n    return raw_data[key_bak]\n}\n\nexport const getBalances = (ammpools: any, ammPoolsBalances: any, base: any, quote: any, tokens: any) => {\n\n    const { ammInfo,\n        ammBalance,\n    } = getAmmInfo(ammpools, ammPoolsBalances, base, quote)\n\n    const baseToken = getToken(tokens, base)\n    const quoteToken = getToken(tokens, quote)\n\n    const baseBalance = ammBalance.pooledMap[baseToken.tokenId]\n    const quoteBalance = ammBalance.pooledMap[quoteToken.tokenId]\n\n    return {\n        ammInfo,\n        ammBalance,\n        baseBalance,\n        quoteBalance,\n    }\n\n}\n\nexport const getAmmInfoOnly = (ammpools: any, base: any, quote: any) => {\n\n    const keyPair = getKey(base, quote)\n    // console.log('keyPair:', keyPair)\n\n    const ammInfo = getInfoByKey(ammpools, keyPair)\n\n    if (!ammInfo) {\n        throw Error('no ammInfo!')\n    }\n\n    return {\n        ammInfo,\n    }\n\n}\n\nexport const getAmmInfo = (ammpools: any, ammPoolsBalances: any, base: any, quote: any) => {\n\n    const keyPair = getKey(base, quote)\n\n    const ammInfo = getInfoByKey(ammpools, keyPair)\n    const ammBalance = getInfoByKey(ammPoolsBalances, keyPair)\n\n    if (!ammInfo || !ammBalance) {\n        throw Error('no ammInfo! no ammBalance!')\n    }\n\n    const feeBips = parseInt(ammInfo.feeBips)\n\n    return {\n        ammInfo,\n        ammBalance,\n        feeBips,\n    }\n\n}\n\nconst getAmt = (rawAmt: any, tokenInfo: any) => {\n    if (rawAmt === undefined) {\n        rawAmt = 0\n    }\n\n    return fm.toBig(rawAmt).times('1e' + tokenInfo.decimals)\n}\n\nexport const applySlippageTolerance = (\n    tokens: any,\n    token: any,\n    value: any,\n    slippageTolerance: number = 0.01\n) => {\n    const tokenInfo = getToken(tokens, token)\n    const f = 1e7\n    const feeFactor = fm.toBig(f * (1 - slippageTolerance))\n    const amount = fm.toBig(value).times('1e' + tokenInfo.decimals)\n    const outInWei = amount.times(feeFactor).dividedBy(f)\n    const out = fromWEI(tokens, token, outInWei)\n\n    return {\n        outInWei,\n        out,\n    }\n}\n\nexport const applyOrderFee = (tokens: any, token: any, value: any, feeBip: any) => {\n    const tokenInfo = getToken(tokens, token)\n    const feeFactor = fm.toBig(MULTI_FACTOR - feeBip)\n    const amount = fm.toBig(value).times('1e' + tokenInfo.decimals)\n    const appliedAmount = amount.times(feeFactor).dividedBy(MULTI_FACTOR)\n    return appliedAmount\n}\n\nexport function fromWEI(tokens: any, symbol: any, valueInWEI: any, precision?: any, ceil?: any) {\n    try {\n        const tokenInfo = getToken(tokens, symbol)\n        const precisionToFixed = precision ? precision : tokenInfo.precision\n        const value = fm.toBig(valueInWEI).div('1e' + tokenInfo.decimals)\n        return fm.toFixed(value, precisionToFixed, ceil)\n    } catch (error) {\n        return 0\n    }\n}\n\n\nexport function toWEI(tokens: any, symbol: any, value: any, rm: any = 3) {\n    const tokenInfo = getToken(tokens, symbol)\n    if (typeof tokenInfo === 'undefined') {\n        return 0\n    }\n\n    return fm.toBig(value)\n        .times('1e' + tokenInfo.decimals)\n        .toFixed(0, rm)\n}\n\nexport const getAmountOut = (amt: any, ammpools: any, ammPoolsBalances: any, tokens: any,\n    base: any, quote: any, takerRate: number, currentPrice: number) => {\n\n    if (amt === undefined) {\n        amt = 0\n    }\n\n    const { ammBalance, feeBips, } = getAmmInfo(ammpools, ammPoolsBalances, base, quote)\n\n    const { tokenInfo: baseTokenInfo, reserve: reserveIn } = getTokenInfoByToken(ammBalance, tokens, base)\n    const { tokenInfo: quoteTokenInfo, reserve: reserveOut } = getTokenInfoByToken(ammBalance, tokens, quote)\n\n    const amountIn = getAmt(amt, baseTokenInfo)\n    const feeBipsFactor = fm.toBig(MULTI_FACTOR - feeBips)\n    const amountInWithFee = amountIn.times(feeBipsFactor)\n    const numerator = amountInWithFee.times(reserveOut)\n    const denominator = reserveIn.times(MULTI_FACTOR).plus(amountInWithFee)\n    const amountOutInWei: any = numerator.dividedBy(denominator)\n\n    let quoteAmt: any = fromWEI(tokens, quote, amountOutInWei)\n\n    const _amount1ApplyOrderFeeInWei = applyOrderFee(tokens, quote, quoteAmt, takerRate + feeBips)\n\n    let _amount1ApplyOrderFee = Number(fromWEI(tokens, quote, _amount1ApplyOrderFeeInWei))\n\n    let priceImpact = 0\n    if (_amount1ApplyOrderFee < 0) {\n        _amount1ApplyOrderFee = 0\n        quoteAmt = null\n    } else {\n        const newPrice = Number(quoteAmt) / Number(amt)\n        priceImpact = (newPrice - currentPrice) / currentPrice\n    }\n\n    // console.log('got:', ammBalance)\n\n    return {\n        quoteAmt,\n        _amount1ApplyOrderFeeInWei,\n        _amount1ApplyOrderFee,\n        priceImpact,\n    }\n\n}\n\nexport const getAmountOut_Reverse = (amt: any, ammpools: any, ammPoolsBalances: any, tokens: any,\n    base: any, quote: any, takerRate: number, currentPrice: number) => {\n\n    if (amt === undefined) {\n        amt = 0\n    }\n\n    // console.log('amt:', amt, 'ammpools:', ammpools, 'ammPoolsBalances:', ammPoolsBalances, ' base:', base, ' quote:', quote)\n\n    const { ammBalance, feeBips, } = getAmmInfo(ammpools, ammPoolsBalances, base, quote)\n\n    const { tokenInfo: baseTokenInfo, reserve: reserveIn } = getTokenInfoByToken(ammBalance, tokens, base)\n    const { tokenInfo: quoteTokenInfo, reserve: reserveOut } = getTokenInfoByToken(ammBalance, tokens, quote)\n\n    const amountOut = getAmt(amt, quoteTokenInfo)\n\n    if (amountOut.gt(reserveOut)) {\n        return {\n            baseAmt: 0,\n            _amount1ApplyOrderFeeInWei: 0,\n            _amount1ApplyOrderFee: 0,\n            priceImpact: 0,\n            hasError: false,\n        }\n    }\n\n    const numerator = amountOut.times(reserveIn).times(MULTI_FACTOR)\n    const feeBipsFactor = fm.toBig(MULTI_FACTOR - feeBips)\n\n    // If amountOut is larger than reserveOut?\n    // It's handled before getAmountOut_reserve\n    const reserveOutSubAmountOut = reserveOut.minus(amountOut)\n\n    const denominator = feeBipsFactor.times(reserveOutSubAmountOut)\n    const amountInInWei = numerator.dividedBy(denominator)\n\n    let baseAmt: any = fromWEI(tokens, quote, amountInInWei)\n\n    const _amount1ApplyOrderFeeInWei = applyOrderFee(tokens, quote, amt, takerRate + feeBips)\n\n    let _amount1ApplyOrderFee = Number(fromWEI(tokens, quote, _amount1ApplyOrderFeeInWei))\n\n    let priceImpact = 0\n    if (_amount1ApplyOrderFee < 0) {\n        _amount1ApplyOrderFee = 0\n        baseAmt = null\n    } else {\n        const newPrice = Number(amt) / Number(baseAmt)\n        priceImpact = (newPrice - currentPrice) / currentPrice\n    }\n\n    // console.log('got:', ammBalance)\n\n    return {\n        baseAmt,\n        _amount1ApplyOrderFeeInWei,\n        _amount1ApplyOrderFee,\n        priceImpact,\n        hasError: false,\n    }\n\n}\n\n/*\nexport const getAmountIn = (amt: any, ammpools: any, ammPoolsBalances: any, tokens: any, base: any, quote: any) => {\n\n    const { ammBalance, feeBips, } = getAmmInfo(ammpools, ammPoolsBalances, base, quote)\n\n    const { tokenInfo: baseTokenInfo, reserve: reserveIn } = getTokenInfoByToken(ammBalance, tokens, base)\n    const { tokenInfo: quoteTokenInfo, reserve: reserveOut } = getTokenInfoByToken(ammBalance, tokens, quote)\n\n    const amountOut = getAmt(amt, quoteTokenInfo)\n    const numerator = reserveIn.times(amountOut).times(MULTI_FACTOR)\n    const denominator = reserveOut.minus(amountOut).times(MULTI_FACTOR - feeBips)\n    const amountIn = numerator.dividedBy(denominator).plus(1)\n\n    // const baseAmt = amountIn.dividedBy('1e' + baseTokenInfo.decimals).toString()\n    const baseAmt = fromWEI(tokens, base, amountIn)\n\n    let amountInShown: any = ''\n    if (baseAmt !== 'NaN') {\n        amountInShown = baseAmt\n    }\n\n    return {\n        amountIn,\n        amountInShown,\n    }\n}\n*/\n","import { useTokenMap } from './stores/token';\nimport { useAmmMap } from './stores/Amm/AmmMap';\nimport React, { useState } from 'react';\nimport { ENV, NETWORK, SystemStatus, useSystem } from './stores/system';\nimport { ChainId } from 'loopring-sdk';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect';\n\n/**\n * @description call it when bootstrap the page or change the network\n */\nexport function useInit(){\n    const systemState = useSystem();\n    const tokenState = useTokenMap();\n    const ammMapState = useAmmMap();\n\n    // const wallectState = useWalletStatus();\n    //init function do only once\n    let web3:any;\n\n    //TODO register when network changed update\n    //systemState.updateSystem({network:NETWORK.MAIN})\n\n  \n\n    useCustomDCEffect(async() => {\n\n        const handleChainChanged = (chainId: number) => {\n    \n            const network = chainId == ChainId.GORLI ? NETWORK.Goerli : NETWORK.MAIN       \n            systemState.updateSystem({ network })\n\n        }\n\n        const provider: any = await detectEthereumProvider()\n        if (provider) {\n            const chainId = await provider.request({ method: 'eth_chainId' });\n    \n            provider.on('chainChanged', handleChainChanged)\n\n            handleChainChanged(chainId)\n            \n        } else {\n            systemState.updateSystem({network: NETWORK.MAIN})\n            console.log('web3 is not found')\n        }\n     \n\n        //TODO if have  metaMask plugin\n        // tokenState.updateTokenMap();\n        // ammMapState.updateTokenMap();\n    }, [])\n\n    React.useEffect(() => {\n        switch (systemState.status) {\n            case \"ERROR\":\n                systemState.statusUnset();\n                //TODO show error at button page show error  some retry dispat again\n                break;\n            case \"DONE\":\n                systemState.statusUnset();\n                //TODO do some static information update\n                tokenState.updateTokenMap();\n                ammMapState.updateAmmMap();\n                break;\n            default:\n                break;\n\n        }\n    },[systemState.status,systemState.statusUnset,tokenState.updateTokenMap,ammMapState.updateAmmMap]);\n\n    const ammMapCheck = React.useCallback(()=>{\n        if(ammMapState.status ===  \"ERROR\"){\n            //TODO show error at button page show error  some retry dispat again\n\n        }\n        return ammMapState.status\n    },[ammMapState.status])\n\n    React.useEffect(() => {\n\n\n        switch (tokenState.status) {\n            case \"ERROR\":\n                //TODO show error at button page show error  some retry dispat again\n\n            case \"DONE\":\n                if(ammMapCheck() !== \"PENDING\") {\n                    tokenState.statusUnset();\n                    ammMapState.statusUnset();\n                }\n                break;\n            default:\n                break;\n\n        }\n    },[tokenState.status,ammMapState.status,tokenState.updateTokenMap]);\n\n    return {\n        systemState: systemState,\n    }\n\n}\n","export enum Theme {\n    dark = 'dark',\n    light = 'light',\n}\n\nexport enum LangType {\n    en = 'en_US',\n    cn = 'zh_CN',\n}\n\nexport enum SystemStatus {\n    NORMAL,\n    ERROR,\n    UNKNOWN,\n}\n\nexport enum MODAL_TYPE {\n    UNKNOWN,\n    LOADING,\n    WALLET,\n}\n","import { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\"\n\nimport {\n    setShowDeposit,\n    setShowResetAccount,\n    setShowTransfer,\n    setShowWithdraw,\n} from '@loopring-web/component-lib'\nimport { useTranslation } from \"react-i18next\";\nimport store from 'stores'\nimport { AccountStatus } from \"state_machine/account_machine_spec\";\n\nexport function useModals() {\n\n    const dispatch = useDispatch()\n\n    const { t } = useTranslation('common')\n\n    const ShowDeposit = useCallback((isShow: boolean)=>{\n        const isNoAccount = store.getState().account.status === AccountStatus.NOACCOUNT\n\n        console.log('isNoAccount: ', isNoAccount, t('depositTitleAndActive'))\n        const action = {\n            isShow,\n            props: {\n                title: isNoAccount ? t('depositTitleAndActive') : t('depositTitle'),\n                description: 'depositAndActiveDescription'\n            }\n        }\n        dispatch(setShowDeposit(action))\n    }, [dispatch, t])\n    const ShowTransfer = useCallback((isShow: boolean)=>dispatch(setShowTransfer({isShow})), [dispatch])\n    const ShowWithdraw = useCallback((isShow: boolean)=>dispatch(setShowWithdraw({isShow})), [dispatch])\n    const ShowResetAccount = useCallback((isShow: boolean)=>dispatch(setShowResetAccount({isShow})), [dispatch])\n\n    return {\n        ShowDeposit,\n        ShowTransfer,\n        ShowWithdraw,\n        ShowResetAccount,\n    }\n}","import { REFRESH_RATE } from \"loopring-sdk\"\n\nexport function PromiseJob(fetchPromise: any, setFunc: any, field?: string, prefix: any = 'PromiseJob') {\n\n    let mounted = true\n\n    const handler = () => {\n        if (fetchPromise()) {\n            fetchPromise().then((data: any) => {\n                if (mounted) {\n                    setFunc(field ? data[field] : data)\n                } else {\n                    console.log(prefix + ' unmounted!')\n                }\n            }).catch((reason: any) => {\n                console.error(reason)\n            })\n        }\n    }\n\n    const cleanUp = () => {\n        mounted = false\n    }\n\n    return {\n        handler,\n        cleanUp,\n    }\n\n}\n\n\nexport function PromiseJobInTimer(fetchPromise: any, setFunc: any, field?: string, prefix: any = 'PromiseJobInTimer', timeout: number = REFRESH_RATE) {\n\n    let mounted = true\n\n    const handler = () => {\n\n        mounted = true\n\n        const fetchFunc = () => {\n            if (fetchPromise()) {\n                fetchPromise().then((data: any) => {\n                    if (mounted) {\n                        setFunc(field ? data[field] : data)\n                    } else {\n                        console.log(prefix + ' unmounted!')\n                    }\n                }).catch((reason: any) => {\n                    console.error(reason)\n                })\n            }\n        }\n\n        fetchFunc()\n\n        const id = setInterval(fetchFunc, timeout)\n\n        return id\n    }\n\n    const cleanUp = (handler: any) => {\n        mounted = false\n        if (handler) clearInterval(handler)\n    }\n\n    return {\n        handler,\n        cleanUp,\n    }\n\n}\n","import { useEffect } from 'react'\nimport { PromiseJob, PromiseJobInTimer } from '../../utils/hook_tools'\nimport { REFRESH_RATE_SLOW } from \"loopring-sdk\"\n\nexport function usePromiseJob(fetchPromise: any, setFunc: any, field? :string, prefix: any = undefined, dependencies: any[] = []) {\n\n  const {\n    handler,\n    cleanUp,\n  } = PromiseJob(fetchPromise, setFunc, field, prefix)\n\n  useEffect(() => {\n    handler()\n    return () => cleanUp()\n  }, [...dependencies])\n\n}\n\nexport function usePromiseJobInTimer(fetchPromise: any, setFunc: any, field? :string, prefix: any = undefined, dependencies: any[] = [], timeout: number= REFRESH_RATE_SLOW) {\n\n  const {\n    handler,\n    cleanUp,\n  } = PromiseJobInTimer(fetchPromise, setFunc, field, prefix, timeout)\n\n  useEffect(() => {\n    const id = handler()\n    return () => cleanUp(id)\n  }, [...dependencies])\n\n}\n","import { useState, } from 'react'\n\nimport { TradesData, TickerData, DepthData, \n  TokensResponse,\n  MarketsResponse, } from 'loopring-sdk'\n\nimport { usePromiseJob } from 'hooks/common/useCommon'\nimport { useExchangeAPI, } from './useApi'\n\nexport function useGetGas() {\n\n  const [gas, setGas] = useState<any>()\n\n  const api = useExchangeAPI()\n\n  const fetchData = () => {\n    if (!api) {\n      return undefined\n    }\n    return api.getGasPrice()\n  }\n\n  usePromiseJob(fetchData, setGas, undefined, 'useGetGas', [api])\n\n  return { gas }\n\n}\n\nexport function useGetMixMarkets() {\n\n  const [markets, setMarkets] = useState<MarketsResponse>()\n    const api = useExchangeAPI()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getMixMarkets()\n    }\n  \n    usePromiseJob(fetchData, setMarkets, undefined, 'useGetMarkets', [api])\n    \n    return { markets }\n\n}\n\nexport function useGetMarkets() {\n\n  const [markets, setMarkets] = useState<MarketsResponse>()\n    const api = useExchangeAPI()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getMarkets()\n    }\n  \n    usePromiseJob(fetchData, setMarkets, undefined, 'useGetMarkets', [api])\n    \n    return { markets }\n\n}\n\nexport function useGetExchangeInfo() {\n\n  const [exchangeInfo, setExchangeInfo] = useState<any>()\n    const api = useExchangeAPI()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getExchangeInfo()\n    }\n  \n    usePromiseJob(fetchData, setExchangeInfo, 'exchangeInfo', 'useGetExchangeInfo', [api])\n    \n    return { exchangeInfo }\n\n}\n\nexport function useGetTokens() {\n\n  const [tokens, setTokens] = useState<TokensResponse>()\n    const api = useExchangeAPI()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getTokens()\n    }\n  \n    usePromiseJob(fetchData, setTokens, undefined, 'useGetTokens', [api])\n    \n    return { tokens }\n\n}\n\n\nexport function useTrades(symbol: string) {\n\n  const [trades, setTrades] = useState<TradesData>()\n\n  const api = useExchangeAPI()\n\n  const fetchData = () => {\n    if (!api) {\n      return undefined\n    }\n    return api.getMarketTrades({\n      market: symbol\n    })\n  }\n\n  usePromiseJob(fetchData, setTrades, undefined, 'useTrades', [api, symbol])\n\n  return { trades, }\n\n}\n\nexport function useTickerMap(market: string) {\n\n  const [tickerMap, setTickerMap] = useState<{[key: string]: TickerData}>()\n\n  const api = useExchangeAPI()\n\n  const fetchData = () => {\n    if (!api) {\n      return undefined\n    }\n    return api.getTicker({\n      market\n    })\n  }\n\n  usePromiseJob(fetchData, setTickerMap, 'tickMap', 'useTickerMap', [api, market])\n\n  return { tickerMap, }\n\n}\n\nexport function useDepth(symbol: string) {\n\n  const api = useExchangeAPI()\n\n  const [depth, setDepth] = useState<DepthData>()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getDepth({\n        market: [symbol]\n      })\n    }\n  \n    usePromiseJob(fetchData, setDepth, 'depth', 'useDepth', [api, symbol])\n\n  return { depth, }\n\n}\n","import { useState, useCallback } from 'react'\n\nimport { useAccount } from 'stores/account/hook'\n\nimport { OrdersData, REFRESH_RATE, dumpError400, } from 'loopring-sdk'\n\nimport { useUserAPI } from './useApi'\n\nimport { getToken, fromWEI } from 'utils/swap_calc_utils'\n\nimport * as fm from 'loopring-sdk'\n\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nexport function useOrders() {\n\n  const acc = useAccount().account\n\n  const api = useUserAPI()\n\n  const [orders, setOrders] = useState<OrdersData>()\n\n  useCustomDCEffect(() => {\n\n    if (!acc || !api) {\n      return\n    }\n\n    let mounted = true\n\n    const exit = (id: any) => {\n      mounted = false\n      clearInterval(id)\n    }\n\n    if (acc && acc.accountId > 0) {\n\n      const id: any = setInterval(async () => {\n        try {\n          const orders_data = (await api.getOrders({\n            accountId: acc.accountId\n          }, acc.apiKey)).data\n          if (mounted) {\n            setOrders(orders_data)\n          }\n        } catch (err) {\n          return exit(id)\n        }\n      }, REFRESH_RATE)\n\n      return exit(id)\n\n    }\n  }, [acc, api])\n\n  return {\n    orders,\n  }\n\n}\n\nexport function useGetUserBalancesByToken(token: any) {\n\n  const api = useUserAPI()\n\n  //const [balance, setBalance] = useState<any>({total: '0', locked: '0', availableInWei: '0'})\n\n  const [balance, setBalance] = useState<any>('0')\n\n  const { apiKey, accountId } = useAccount()\n\n  // console.log('enter! useGetUserBalances tokens:', tokens, 'symbol:', symbol, 'apiKey:', apiKey, ' accountId:', accountId )\n\n  useCustomDCEffect(() => {\n    if (!api || !apiKey || !accountId || !token) {\n      return\n    }\n\n    api.getUserBalances({\n      accountId,\n      tokens: token.tokenId\n    }, apiKey).then((data) => {\n      const total = fm.toBig(data[0].total)\n      const locked = fm.toBig(data[0].locked)\n      const availableInWei = total.minus(locked)\n      /*\n      setBalance({\n        total: data[0].total, \n        locked: data[0].locked, \n        availableInWei: availableInWei.toString(),\n        available: fromWEI(tokens, symbol, availableInWei)\n      })\n      */\n      setBalance(availableInWei.toString())\n    }).catch((reason: any) => {\n      dumpError400(reason, 'getUserBalances tokenId:' + token.tokenId)\n    })\n\n  }, [api, apiKey, accountId, token,])\n\n  return {\n    balance,\n    setBalance,\n  }\n\n}\n\nexport function useGetUserBalances(tokens: any, toList: boolean = false) {\n\n  const api = useUserAPI()\n\n  //const [balance, setBalance] = useState<any>({total: '0', locked: '0', availableInWei: '0'})\n\n  const [balances, setBalances] = useState<any>(undefined)\n\n  const { apiKey, accountId } = useAccount()\n\n  // console.log('enter! useGetUserBalances tokens:', tokens, 'symbol:', symbol, 'apiKey:', apiKey, ' accountId:', accountId )\n\n  useCustomDCEffect(() => {\n\n    if (!api || !apiKey || !accountId || !tokens) {\n      return\n    }\n\n    let tokenList: any[] = []\n\n    const keys = Reflect.ownKeys(tokens)\n\n    let tokenMap: any = {}\n\n    keys.forEach((item: any) => {\n      const token = tokens[item]\n      tokenList.push(token.tokenId)\n      tokenMap[token.tokenId] = token\n    })\n\n    api.getUserBalances({\n      accountId,\n      tokens: tokenList.join(',')\n    }, apiKey).then((data) => {\n\n      let balances: any = {\n        map: tokenMap,\n        tokenId: {},\n        symbol: {},\n      }\n\n      data.forEach((item: any) => {\n        const total = fm.toBig(item.total)\n        const locked = fm.toBig(item.locked)\n        const availableInWei = total.minus(locked)\n\n        console.log('item:', item)\n\n        const token = tokenMap[item.tokenId]\n\n        const balance = {\n          total: data[0].total,\n          locked: data[0].locked,\n          availableInWei: availableInWei.toString(),\n          available: fromWEI(tokens, token.symbol, availableInWei)\n        }\n\n        balances.tokenId[item.tokenId] = availableInWei.toString()\n        balances.symbol[token.symbol] = availableInWei.toString()\n      })\n\n      setBalances(balances)\n\n    }).catch((reason: any) => {\n      dumpError400(reason, 'getUserBalances tokenId:' + tokens.tokenId)\n    })\n\n  }, [api, apiKey, accountId, tokens,])\n\n  return {\n    balances,\n    setBalances,\n  }\n\n}\n\nexport function useGetUserBalance(tokens: any, symbol: any) {\n\n  const api = useUserAPI()\n\n  //const [balance, setBalance] = useState<any>({total: '0', locked: '0', availableInWei: '0'})\n\n  const [balance, setBalance] = useState<any>('0')\n\n  const { apiKey, accountId } = useAccount()\n\n  useCustomDCEffect(() => {\n    if (!api || !apiKey || !accountId || !tokens || !symbol) {\n      return\n    }\n\n    const tokenInfo = getToken(tokens, symbol)\n\n    api.getUserBalances({\n      accountId,\n      tokens: tokenInfo.tokenId\n    }, apiKey).then((data) => {\n      const total = fm.toBig(data[0].total)\n      const locked = fm.toBig(data[0].locked)\n      const availableInWei = total.minus(locked)\n      \n      setBalance(availableInWei.toString())\n\n    }).catch((reason: any) => {\n      dumpError400(reason, 'getUserBalances tokenId:' + tokens.tokenId)\n    })\n\n  }, [api, apiKey, accountId, tokens, symbol,])\n\n  return {\n    balance,\n    setBalance,\n  }\n\n}","import React, { useCallback } from 'react'\n\nimport { useTranslation, WithTranslation, withTranslation } from 'react-i18next'\n\nimport {\n    gatewayList as DefaultGatewayList,\n    headerMenuData, HeaderMenuTabStatus,\n    headerToolBarData, HeadMenuTabKey,\n    ButtonComponentsMap, LanguageKeys,\n    WalletStatus, HideIcon,\n    GatewayItem, ViewIcon, ThemeKeys, LockIcon, UnLockIcon,\n} from '@loopring-web/component-lib/src/static-resource'\n\nimport { useAccount, useUnlock, useConnect, } from 'stores/account/hook'\n\nimport { getShortAddr } from 'utils/web3_tools'\n\nimport { AccountStatus } from 'state_machine/account_machine_spec'\n\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport { Theme, } from 'defs/common_defs'\n\nimport { Button, SwapProps, useSettings } from '@loopring-web/component-lib'\n\nimport store from 'stores'\n\nimport { ConnectorNames } from 'loopring-sdk'\nimport { IconButton, Typography } from '@material-ui/core';\nimport { AccountInfoProps } from '@loopring-web/component-lib/components/block';\nimport { useEtherscan } from 'hooks/web3/useWeb3'\n\nimport { useModals } from 'hooks/modal/useModals'\n\nimport {useState } from 'react'\nimport Web3 from 'web3'\n\nimport { AmmData, AmmInData, CoinInfo, CoinMap, IBData, TradeCalcData, WalletCoin, WalletMap, } from '@loopring-web/component-lib/static-resource'\nimport { AmmProps } from '@loopring-web/component-lib'\n\nimport { useExchangeAPI, useUserAPI } from 'hooks/exchange/useApi'\n\nimport { fromWEI, getIcon } from 'utils/swap_calc_utils'\nimport { useWeb3Account } from 'stores/account/hook'\nimport { useGetExchangeInfo, useGetTokens } from 'hooks/exchange/useExchangeAPI'\n\nimport * as contract from 'loopring-sdk'\n\nimport { Lv2Account } from 'defs/account_defs'\n\nimport {\n    ExchangeAPI,\n    dumpError400,\n    GetNextStorageIdRequest,\n    GetOffchainFeeAmtRequest,\n    OffchainFeeReqType,\n    OffChainWithdrawalRequestV3,\n    OriginTransferRequestV3,\n    TokenInfo,\n    VALID_UNTIL,\n} from 'loopring-sdk'\n\nimport { useGetUserBalances } from 'hooks/exchange/useUserAPI'\n\nimport {\n    DepositProps,\n    ResetProps,\n    SwitchData,\n    TradeBtnStatus,\n    TransferProps,\n    WithdrawProps,\n} from '@loopring-web/component-lib'\n\nimport { WithdrawType, WithdrawTypes } from '@loopring-web/component-lib/src/static-resource'\nimport { ButtonProps } from '@loopring-web/component-lib/components/basic-lib/index';\nimport { CoinType } from '@loopring-web/component-lib/static'\n\nexport const useHeader = () => {\n    const { i18n,t } = useTranslation(['common','layout'])\n    const { setTheme,themeMode,language, setLanguage } = useSettings();\n    const { ShowDeposit } = useModals()\n\n    const [open, setOpen] = React.useState(false)\n\n    const [openConnect, setOpenConnect] = React.useState(false)\n\n    const forceUpdate = React.useReducer((bool) => !bool, false)[1]\n    const { account } = useAccount()\n\n    const { lock, unlock } = useUnlock()\n\n    const { connect } = useConnect()\n\n    const { etherscanUrl } = useEtherscan()\n\n    const gatewayList: GatewayItem[] = [\n        {\n            ...DefaultGatewayList[0],\n            handleSelect: () => {\n                console.log('try to connect to ', ConnectorNames.Injected)\n                connect(ConnectorNames.Injected, true)\n                setOpen(false)\n            }\n        },\n        /*\n        {\n            key: ConnectorNames.WalletConnect,\n            imgSrc: '',\n            handleSelect: () => {\n                connect(ConnectorNames.WalletConnect)\n                setOpen(false)\n            }\n        },\n        {\n            key: ConnectorNames.Ledger,\n            imgSrc: '',\n            handleSelect: () => {\n                connect(ConnectorNames.Ledger)\n                setOpen(false)\n            }\n        },\n        {\n            key: ConnectorNames.Trezor,\n            imgSrc: '',\n            handleSelect: () => {\n                connect(ConnectorNames.Trezor)\n                setOpen(false)\n            }\n        },\n        */\n    ]\n    const [showAccountInfo, setShowAccountInfo] = React.useState(account?.accAddr ? true : false)\n    const [accountInfoProps, setAccountInfoProps] = React.useState<undefined|AccountInfoProps>(undefined)\n    //const theme: any = useTheme()\n\n    const onNotification = React.useCallback(async () => {\n        console.log('onNotification click')\n    }, [])\n\n    const onWalletBtnConnect = React.useCallback(async () => {\n        const acc = store.getState().account\n        console.log(`onWalletBtnConnect click: ${acc.status}`)\n\n        switch (acc.status) {\n            case AccountStatus.NOACCOUNT:\n                ShowDeposit(true)\n                break\n            case AccountStatus.UNCONNNECTED:\n                setOpen(true)\n                break\n                /*\n            case AccountStatus.CONNECTED:\n\n                break\n            case AccountStatus.LOCKED:\n                console.log('onWalletBtnConnect try to unlock')\n                await unlock(acc)\n                break\n            case AccountStatus.ACTIVATED:\n                console.log('onWalletBtnConnect try to lock')\n                await lock(acc)\n                break\n                */\n\n            default:\n                console.log('setOpenConnect(true)')\n                setOpenConnect(true)\n                break\n        }\n    }, [setOpen, lock, unlock, ShowDeposit])\n\n    const onThemeBtnClick = React.useCallback(async (themeMode:ThemeKeys) => {\n        if (themeMode === Theme.dark) {\n            setTheme(Theme.light)\n        } else {\n            setTheme(Theme.dark)\n        }\n    }, [setTheme])\n\n    const onLangBtnClick = (lang: LanguageKeys) => {\n        //i18n.changeLanguage(lang);\n        setLanguage(lang);\n    }\n\n    // const [advanceOpen,setAdvanceOpen] = React.useState(false)\n\n    // const handleViewAccountInfo =  React.useCallback((event: React.MouseEvent) => {\n    //     event.stopPropagation();\n    //     event.preventDefault();\n    //     if (showAccountInfo) {\n    //         // headerMenuData[ NavListIndex.layer2 ].iconBtn.view = false;\n    //         setShowAccountInfo(false);\n    //     } else {\n    //         // headerMenuData[ NavListIndex.layer2 ].iconBtn.view = true;\n    //         setShowAccountInfo(true);\n    //     }\n    // },[setShowAccountInfo, showAccountInfo])\n\n    // useCustomCompareEffect(()=>{\n    //     if(language!==i18n.language)  {\n    //         headerToolBarData[ButtonComponentsMap.Language] = { ...headerToolBarData[ButtonComponentsMap.Language], language: i18n.language}\n    //     }\n    // },[language],(prevDeps,curDeps)=> prevDeps!== curDeps)\n    //init componment\n    useCustomDCEffect(() => {\n\n\n        headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n            ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n            handleClick: onWalletBtnConnect,\n        }\n\n        // headerToolBarData[ButtonComponentsMap.Notification] = { ...headerToolBarData[ButtonComponentsMap.Theme], themeMode: theme.mode, handleClick: onNotification }\n        // headerToolBarData.update(ButtonComponentsMap.WalletConnect,value=>{\n        //   return {...value, handleClick:onWalletBtnConnect}});\n        headerToolBarData[ButtonComponentsMap.Theme] = { ...headerToolBarData[ButtonComponentsMap.Theme], themeMode, handleClick: onThemeBtnClick }\n        // headerToolBarData.update(ButtonComponentsMap.Theme,value=>{\n        //   return {...value, themeMode:theme.mode, handleClick:onThemeBtnClick}});\n\n        headerToolBarData[ButtonComponentsMap.Language] = { ...headerToolBarData[ButtonComponentsMap.Language], handleChange: onLangBtnClick }\n        // headerToolBarData.update(ButtonComponentsMap.Language,value=>{\n        //  return  {...value, language:i18n.language, handleClick:onThemeBtnClick}});\n    }, [themeMode, language, i18n, onWalletBtnConnect, onThemeBtnClick, onLangBtnClick, onNotification, t]);\n\n\n    const UnlockBtn = ({onClick}:{onClick:({...props}:any)=>void})=>{\n        return <Button className={'unlock'}  startIcon={<LockIcon fontSize={'large'}/>}  onClick={(event)=>onClick(event)} variant={'outlined'} >\n            <Typography variant={'body2'} marginTop={1/2}>   {t('labelUnLock')} </Typography>\n        </Button>\n    }\n    const LockBtn = ({onClick}:{onClick:({...props}:any)=>void})=>{\n        return  <Button className={'lock'}  startIcon={<UnLockIcon fontSize={'large'}/>}  onClick={(event)=>onClick(event)} variant={'outlined'} >\n            <Typography variant={'body2'} marginTop={1/2}>  {t('labelLock')} </Typography>\n        </Button>\n    }\n\n\n    useCustomDCEffect(() => {\n\n        if (!account) {\n            console.log('account'+account+'* exit')\n            setAccountInfoProps(undefined)\n            return\n        }\n\n        const { status } = account\n\n        const addr = getShortAddr(account?.accAddr)\n\n\n\n        // if((addr && accountInfoProps && accountInfoProps.address !== addr) || addr ){\n        //     //TODO getAccount detail info\n        //\n        // }else if(addr) {\n        //     setAccountInfoProps(undefined)\n        // }\n\n        const updateHeaderMenuWhenHasAccountInfo =  ({status}:{status:keyof  typeof AccountStatus})=>{\n            headerMenuData[HeadMenuTabKey.Layer2] = {\n                ...headerMenuData[HeadMenuTabKey.Layer2],\n                status: HeaderMenuTabStatus.default\n            }\n            let props;\n            if(status === AccountStatus.ACTIVATED) {\n                props = {\n                    addressShort: addr?addr:'',\n                    address: account?.accAddr,\n                    level: 'VIP 1',\n                    etherscanLink: etherscanUrl + account?.accAddr,\n                    //TODO: changed by account status\n                    mainBtn: <LockBtn onClick={(event)=>{console.log(event) }}/>,\n                    connectBy:''\n                }\n                setShowAccountInfo(true)\n            }else if(status === AccountStatus.LOCKED) {\n                props = {\n                    addressShort: addr?addr:'',\n                    address: account?.accAddr,\n                    level: 'VIP 1',\n                    etherscanLink: etherscanUrl + account?.accAddr,\n                    //TODO: changed by account status\n                    mainBtn: <UnlockBtn onClick={(event)=>{console.log(event) }}/>,\n                    connectBy:''\n                }\n                setShowAccountInfo(true)\n            }else if(status === AccountStatus.UNACTIVATED\n                || status === AccountStatus.NOACCOUNT\n                || status === AccountStatus.DEPOSITING\n                || status === AccountStatus.DEPOSIT_TO_CONFIREM\n                || status === AccountStatus.ARPROVING\n                || status === AccountStatus.APPROV_TO_CONFIRM\n            )  {\n                props = {\n                    addressShort: addr?addr:'',\n                    address: account?.accAddr,\n                    //TODO: level\n                    level: 'VIP 1',\n                    etherscanLink: etherscanUrl + account?.accAddr,\n                    //TODO: changed by account status\n                    connectBy:''\n                }\n                setShowAccountInfo(true)\n            } else  {\n                setShowAccountInfo(false)\n            }\n\n\n            setAccountInfoProps(props)\n            // setShowAccountInfo(true);\n        }\n        switch (status) {\n            case AccountStatus.UNCONNNECTED:\n                headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n                    ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n                    label: 'Connect Wallet',\n                    status: WalletStatus.default\n                }\n                headerMenuData[HeadMenuTabKey.Layer2] = {\n                    //TODO:  HeaderMenuTabStatus.hidden\n                    ...headerMenuData[HeadMenuTabKey.Layer2], status: HeaderMenuTabStatus.hidden\n                }\n                setShowAccountInfo(false)\n                break\n            case AccountStatus.LOCKED:\n                headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n                    ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n                    label: addr,\n                    status: WalletStatus.connect\n                };\n\n                updateHeaderMenuWhenHasAccountInfo({status});\n                break\n            case AccountStatus.ACTIVATED:\n                headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n                    ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n                    label: addr,\n                    status: WalletStatus.unlock\n                }\n\n                updateHeaderMenuWhenHasAccountInfo({status});\n                break\n            case AccountStatus.UNACTIVATED:\n            case AccountStatus.NOACCOUNT:\n                headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n                    ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n                    // TODO got cache address if no show Connect Wallet\n                    label: addr,\n                    status: WalletStatus.noAccount\n                }\n\n                updateHeaderMenuWhenHasAccountInfo({status});\n                break\n            case AccountStatus.DEPOSITING:\n            case AccountStatus.DEPOSIT_TO_CONFIREM:\n            case AccountStatus.ARPROVING:\n            case AccountStatus.APPROV_TO_CONFIRM:\n                headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n                    ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n                    label: addr,\n                    status: WalletStatus.accountPending\n                }\n                updateHeaderMenuWhenHasAccountInfo({status});\n\n                break\n        }\n        forceUpdate()\n    }, [account, showAccountInfo, etherscanUrl, setAccountInfoProps])\n\n    return {\n        headerToolBarData,\n        headerMenuData,\n        gatewayList,\n        open,\n        setOpen,\n        openConnect,\n        setOpenConnect,\n        setShowAccountInfo,\n        account,\n        showAccountInfo,\n        accountInfoProps,\n\n    }\n\n}\n\nexport function useCoinMap(exchangeApi: ExchangeAPI, tokens: any) {\n\n    const [coinMap, setCoinMap] = useState<CoinMap<any, CoinInfo<any>>>({})\n\n    useCustomDCEffect(async () => {\n\n        if (!exchangeApi || !tokens) {\n            return\n        }\n\n        const keys = Reflect.ownKeys(tokens)\n\n        let coinMap: CoinMap<any, CoinInfo<any>> = {}\n\n        keys.forEach((key: any) => {\n\n            if (!(key as string).startsWith('LP-')) {\n                coinMap[ key ] = {\n                    icon: getIcon(key, tokens),\n                    name: key,\n                    simpleName: key,\n                    description: '',\n                    company: '',\n                }\n            }\n\n        })\n\n        setCoinMap(coinMap)\n\n    }, [exchangeApi, tokens])\n\n    return {\n        coinMap,\n    }\n\n}\n\nexport function useLv1WalletMap(exchangeApi: ExchangeAPI, account: Lv2Account, tokens: any) {\n\n    const [walletMap, setWalletMap] = useState<WalletMap<any, WalletCoin<any>>>({})\n\n    useCustomDCEffect(async () => {\n\n        if (!exchangeApi || !account || !account.accAddr || !tokens) {\n            return\n        }\n\n        let walletMap: WalletMap<any, WalletCoin<any>> = {}\n\n        const {tokenBalances} = await exchangeApi.getTokenBalances({\n            owner: account.accAddr, token: ''\n        }, tokens)\n\n        const keys = Reflect.ownKeys(tokenBalances)\n\n        keys.forEach((item: any) => {\n            const balance = tokenBalances[ item ]\n            walletMap[ item ] = {\n                belong: item,\n                count: fromWEI(tokens, item, balance) as number,\n            }\n        })\n\n        setWalletMap(walletMap)\n\n    }, [exchangeApi, account, tokens])\n\n    return {\n        walletMap,\n    }\n\n}\n\nexport function useLv2WalletMap(tokens: any) {\n\n    const {balances} = useGetUserBalances(tokens)\n\n    const [walletMap, setWalletMap] = useState<WalletMap<any, WalletCoin<any>>>({})\n\n    useCustomDCEffect(() => {\n        let walletMap: WalletMap<any, WalletCoin<any>> = {}\n        if (balances && balances.symbol) {\n            const keys = Reflect.ownKeys(balances.symbol)\n\n            keys.forEach((item: any) => {\n                const balance = balances.symbol[ item ]\n                walletMap[ item ] = {\n                    belong: item,\n                    count: fromWEI(tokens, item, balance) as number,\n                }\n            })\n        }\n\n        console.log('lv2:', walletMap)\n\n        setWalletMap(walletMap)\n    }, [balances, tokens])\n\n    return {\n        walletMap,\n    }\n\n}\n\nexport function useChargeFeeList(tokenSymbol: string | undefined, requestType: OffchainFeeReqType) {\n\n    const api = useUserAPI()\n\n    const {accountId, apiKey,} = useAccount()\n\n    const [chargeFeeList, setChargeFeeList] = useState<any>([])\n\n    useCustomDCEffect(async () => {\n\n        console.log('!!!!!!!!!useCustomDCEffect useChargeFeeList:', tokenSymbol, accountId)\n\n        if (!accountId || !tokenSymbol) {\n            return\n        }\n\n        let chargeFeeList: any[] = []\n\n        try {\n\n            const request: GetOffchainFeeAmtRequest = {\n                accountId,\n                tokenSymbol,\n                requestType,\n            }\n\n            const response = await api.getOffchainFeeAmt(request, apiKey)\n\n            if (response) {\n                response.fees.forEach((item: any, index: number) => {\n                    chargeFeeList.push({belong: item.token, fee: item.fee})\n                })\n\n                setChargeFeeList(chargeFeeList)\n            }\n            console.log('response:', response)\n\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n\n        setChargeFeeList(chargeFeeList)\n\n    }, [accountId, apiKey, tokenSymbol])\n\n    return {\n        chargeFeeList,\n    }\n\n}\n\nexport function useModalProps() {\n\n    const {\n        ShowDeposit,\n        ShowTransfer,\n        ShowWithdraw,\n        ShowResetAccount,\n    } = useModals()\n\n    const {chainId, isConnected, connector,} = useWeb3Account()\n\n    const {exchangeInfo} = useGetExchangeInfo()\n\n    const {account, apiKey, accountId, eddsaKey,} = useAccount()\n\n    const {tokens: tokensAll} = useGetTokens()\n\n    const tokens = tokensAll?.tokenSymbolMap\n\n    const userApi = useUserAPI()\n\n    const exchangeApi = useExchangeAPI()\n\n    const {coinMap} = useCoinMap(exchangeApi, tokens)\n\n    const {walletMap: walletMap_Lv1} = useLv1WalletMap(exchangeApi, account, tokens)\n\n    const {walletMap: walletMap_Lv2} = useLv2WalletMap(tokens)\n\n    const deposit = useCallback(async (token: string, amt: any) => {\n\n        if (!tokens || !isConnected || !connector || !exchangeInfo?.exchangeAddress || !exchangeInfo?.depositAddress) {\n            console.log(`exchangeInfo:${exchangeInfo} deposit exit!!!!!`)\n            return\n        }\n\n        try {\n            const tokenInfo: TokenInfo = tokens[ token ]\n\n            const provider = await connector.getProvider()\n            const web3 = new Web3(provider as any)\n\n            let sendByMetaMask = account.connectName === ConnectorNames.Injected\n            sendByMetaMask = true\n\n            const gasPrice = (await exchangeApi.getGasPrice()).data / 1e+9\n            const gasLimit = 350000\n\n            const nonce = await contract.getNonce(web3, account.accAddr)\n\n            console.log('gasPrice:', gasPrice)\n            console.log('account.connectName:', account.connectName, ' tokenInfo:', tokenInfo)\n\n            const response = await contract.approveMax(web3, account.accAddr, tokenInfo.address,\n                exchangeInfo?.depositAddress, gasPrice, gasLimit, chainId, nonce, sendByMetaMask)\n\n            console.log('response:', response)\n\n            const fee = 0\n\n            const response2 = await contract.deposit(web3, account.accAddr,\n                exchangeInfo?.exchangeAddress, tokenInfo, amt, fee,\n                gasPrice, gasLimit, chainId, nonce + 1, sendByMetaMask)\n\n            console.log('response2:', response2)\n\n\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [chainId, isConnected, connector, account, exchangeInfo, tokens, exchangeApi])\n\n    const withdraw = useCallback(async (token: string, amt: any) => {\n\n        console.log('withdraw apiKey:', apiKey, ' exchangeInfo:', exchangeInfo, ' exchangeAddr:', exchangeInfo.exchangeAddress)\n\n        if (!account || !account.accountId || !account.accAddr\n            || !connector || !chainId || !apiKey || !exchangeInfo\n            || !exchangeInfo.exchangeAddress) {\n            console.log('return directly!!!!!', account, connector, chainId, apiKey, exchangeInfo)\n            return\n        }\n\n        amt = '5500000000000000000'\n\n        const fee = '5500000000000000000'\n\n        console.log('exchangeAddress:', exchangeInfo.exchangeAddress)\n\n        try {\n\n            const request: GetNextStorageIdRequest = {\n                accountId: account.accountId,\n                sellTokenId: 1\n            }\n\n            const storageId = await userApi.getNextStorageId(request, apiKey)\n\n            const request2: OffChainWithdrawalRequestV3 = {\n                exchange: exchangeInfo.exchangeAddress,\n                owner: account.accAddr,\n                to: account.accAddr,\n                accountId: account.accountId,\n                storageId: storageId.offchainId,\n                token: {\n                    tokenId: '1',\n                    volume: '100000000000000000000',\n                },\n                maxFee: {\n                    tokenId: '1',\n                    volume: '9400000000000000000',\n                },\n                extraData: '',\n                minGas: 0,\n                validUntil: VALID_UNTIL,\n            }\n\n            const provider = await connector.getProvider()\n            const web3 = new Web3(provider as any)\n\n            const response = await userApi.submitOffchainWithdraw(request2, web3, chainId, ConnectorNames.Injected,\n                account.eddsaKey, apiKey, false)\n\n            console.log(response)\n\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [apiKey, account, connector, exchangeInfo, chainId, userApi])\n\n    const transfer = useCallback(async (amt: number, payeeAddr: string = '0xb6AdaC3e924B4985Ad74646FEa3610f14cDFB79c') => {\n\n        if (!connector || !apiKey || !chainId || !accountId || !account?.accAddr) {\n            return\n        }\n\n        const request: GetNextStorageIdRequest = {\n            accountId,\n            sellTokenId: 1\n        }\n        const storageId = await userApi.getNextStorageId(request, apiKey)\n\n        console.log(`amt: ${amt} storageId:${JSON.stringify(storageId)}`)\n\n        try {\n\n            const provider = await connector.getProvider()\n            const web3 = new Web3(provider as any)\n\n            let walletType = account.connectName\n            walletType = ConnectorNames.Injected\n\n            const payeeAcc = await exchangeApi.getAccount({owner: payeeAddr})\n\n            let payeeId = 0\n            if (payeeAcc) {\n                payeeId = payeeAcc.accountId\n            }\n\n            const request2: OriginTransferRequestV3 = {\n                exchange: exchangeInfo.exchangeAddress,\n                payerAddr: account.accAddr,\n                payerId: accountId,\n                payeeAddr,\n                payeeId,\n                storageId: storageId.offchainId,\n                token: {\n                    tokenId: '1',\n                    volume: '100000000000000000000',\n                },\n                maxFee: {\n                    tokenId: '1',\n                    volume: '9400000000000000000',\n                },\n                validUntil: VALID_UNTIL,\n            }\n\n            console.log(`request2:${JSON.stringify(request2)}`)\n\n            const response = await userApi.submitInternalTransfer(request2, web3, chainId, walletType,\n                eddsaKey, apiKey, false)\n\n            console.log(response)\n\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [apiKey, accountId, account, connector, exchangeInfo, chainId, eddsaKey, userApi, exchangeApi])\n\n    const [depositValue, setDepositValue] = useState<IBData<any>>({\n        belong: undefined,\n        tradeValue: 0,\n        balance: 0\n    } as IBData<unknown>)\n\n    // deposit\n\n    let depositProps: DepositProps<any, any> = {\n        tradeData: {belong: undefined},\n        coinMap: coinMap,\n        walletMap: walletMap_Lv1,\n        depositBtnStatus: TradeBtnStatus.AVAILABLE,\n        onDepositClick: (tradeData: any) => {\n            console.log('1. onDepositClick', depositValue)\n            if (depositValue && depositValue.belong) {\n                deposit(depositValue.belong.toString(), depositValue.tradeValue)\n            }\n            ShowDeposit(false)\n        },\n        handlePanelEvent: async (data: SwitchData<any>, switchType: 'Tomenu' | 'Tobutton') => {\n            return new Promise((res) => {\n                if (data?.tradeData?.belong) {\n                    if (depositValue !== data.tradeData) {\n                        setDepositValue(data.tradeData)\n                    }\n                    setTokenSymbol(data.tradeData.belong)\n                } else {\n                    setDepositValue({belong: undefined, tradeValue: 0, balance: 0} as IBData<unknown>)\n                }\n                res();\n            })\n        },\n    }\n\n    // withdraw\n    const [withdrawValue, setWithdrawValue] = useState<IBData<any>>({\n        belong: undefined,\n        tradeValue: 0,\n        balance: 0\n    } as IBData<unknown>);\n\n    const [tokenSymbol, setTokenSymbol] = useState<string>('')\n    const {chargeFeeList: withdrawalFeeList} = useChargeFeeList(tokenSymbol, OffchainFeeReqType.OFFCHAIN_WITHDRAWAL)\n\n    let withdrawProps: WithdrawProps<any, any> = {\n        tradeData: {belong: undefined},\n        coinMap: coinMap,\n        walletMap: walletMap_Lv2,\n        withdrawBtnStatus: TradeBtnStatus.AVAILABLE,\n        onWithdrawClick: (tradeData: any) => {\n            console.log('Swap button click', withdrawValue)\n            if (withdrawValue && withdrawValue.belong) {\n                withdraw(withdrawValue.belong.toString(), withdrawValue.tradeValue)\n            }\n            ShowWithdraw(false)\n        },\n\n        handlePanelEvent: async (data: SwitchData<any>, switchType: 'Tomenu' | 'Tobutton') => {\n            return new Promise((res: any) => {\n                if (data?.tradeData?.belong) {\n                    if (withdrawValue !== data.tradeData) {\n                        setWithdrawValue(data.tradeData)\n                    }\n                    setTokenSymbol(data.tradeData.belong)\n                } else {\n                    setWithdrawValue({belong: undefined, tradeValue: 0, balance: 0} as IBData<unknown>);\n                }\n                res();\n            })\n        },\n        withdrawType: WithdrawType.Fast,\n        withdrawTypes: WithdrawTypes,\n        chargeFeeToken: 'ETH',\n        chargeFeeTokenList: withdrawalFeeList,\n        handleOnAddressChange: (value: any) => {\n            console.log('handleOnAddressChange', value);\n        },\n        handleAddressError: (_value: any) => {\n            return {error: true, message: 'any error'}\n        }\n    }\n    // console.log(coinMap)\n    // transfer\n    const [transferValue, setTransferValue] = useState<IBData<any>>({\n        belong: undefined,\n        tradeValue: 0,\n        balance: 0\n    } as IBData<unknown>)\n\n    const [transferTokenSymbol, setTransferTokenSymbol] = useState<string>('')\n    const {chargeFeeList: transferFeeList} = useChargeFeeList(transferTokenSymbol, OffchainFeeReqType.TRANSFER)\n\n    let transferProps: TransferProps<any, any> = {\n        tradeData: {belong: undefined},\n        coinMap: coinMap,\n        walletMap: walletMap_Lv2,\n        transferBtnStatus: TradeBtnStatus.AVAILABLE,\n        onTransferClick: (tradeData: any) => {\n            console.log('onTransferClick:', transferValue);\n            if (transferValue && transferValue.belong) {\n                transfer(transferValue.tradeValue)\n            }\n\n            ShowTransfer(false)\n        },\n\n        handlePanelEvent: async (data: SwitchData<any>, switchType: 'Tomenu' | 'Tobutton') => {\n            return new Promise((res: any) => {\n                if (data?.tradeData?.belong) {\n                    if (transferValue !== data.tradeData) {\n                        setTransferValue(data.tradeData)\n                    }\n                    setTransferTokenSymbol(data.tradeData.belong)\n                } else {\n                    setTransferValue({belong: undefined, tradeValue: 0, balance: 0} as IBData<unknown>)\n                }\n                // else{\n                //     setTransferValue({ belong: undefined, amt: 0 })\n                // }\n\n                res();\n            })\n        },\n\n        chargeFeeToken: 'ETH',\n        chargeFeeTokenList: transferFeeList,\n        handleOnAddressChange: (value: any) => {\n            console.log('handleOnAddressChange', value);\n        },\n        handleAddressError: (_value: any) => {\n            return {error: true, message: 'any error'}\n        }\n    }\n\n    // reset\n    const [resetValue, setResetValue] = useState<IBData<any>>({\n        belong: undefined,\n        tradeValue: 0,\n        balance: 0\n    } as IBData<unknown>)\n\n\n    let resetProps: ResetProps<any, any> = {\n        tradeData: {belong: undefined},\n        coinMap: coinMap,\n        walletMap: walletMap_Lv2,\n        resetBtnStatus: TradeBtnStatus.AVAILABLE,\n        onResetClick: (tradeData: any) => {\n            console.log('onResetClick', resetValue)\n            if (resetValue && resetValue.belong) {\n            }\n\n            ShowResetAccount(false)\n        },\n        handlePanelEvent: async (data: SwitchData<any>, switchType: 'Tomenu' | 'Tobutton') => {\n            return new Promise((res) => {\n                if (data?.tradeData?.belong) {\n                    if (resetValue !== data.tradeData) {\n                        setResetValue(data.tradeData)\n                    }\n                } else {\n                    setResetValue({belong: undefined, tradeValue: 0, balance: 0} as IBData<unknown>)\n                }\n\n                res();\n            })\n        },\n        fee: {count: 234, price: 123}\n    }\n\n     const tradeCalcData: TradeCalcData<CoinType> = {\n        coinSell: 'ETH', //name\n        coinBuy: 'LRC',\n        BtoS: 0,\n        StoB: 0,\n        sellCoinInfoMap: coinMap,\n        buyCoinInfoMap: coinMap,\n        walletMap: {},\n        slippage: 0.5,\n        slippageTolerance: [0.1, 0.5, 1, 'slippage:N'],\n        priceImpact: '12',\n        minimumReceived: '1%',\n        fee: '1%'\n    }\n     const ammCalcData: AmmInData<CoinType> = {\n        myCoinA: {belong:'ETH',balance:1000,tradeValue:0},\n        myCoinB: {belong:'LRC',balance:1000,tradeValue:0},\n        AtoB:50,\n        coinInfoMap: coinMap,\n        slippage: 0.5,\n        slippageTolerance: [0.1, 0.5, 1, 'slippage:N'],\n        fee: '1%'\n    }\n    \n\n    let swapProps: SwapProps<IBData<string>, string, any> = {\n        swapTradeData: {sell: {belong: undefined}, buy: {belong: undefined}, slippage: ''} as any,\n        tradeCalcData,\n        onSwapClick: (tradeData) => {\n            console.log('Swap button click', tradeData);\n        },\n        handleSwapPanelEvent: async (data: any, switchType: any) => {\n            console.log(data, switchType)\n        },\n    };\n    let ammProps: AmmProps<AmmData<IBData<any>>, any, AmmInData<any>> = {\n        ammDepositData:{coinA: {belong: 'ETH',balance:0.3,tradeValue:0}, coinB:  {belong: 'LRC',balance:1000,tradeValue:0},slippage: '',},\n        ammWithdrawData:{coinA: {belong: 'ETH',balance:0.3,tradeValue:0}, coinB:  {belong: 'LRC',balance:1000,tradeValue:0},slippage: '',},\n        // tradeCalcData,\n        ammCalcData:ammCalcData,\n        handleDepositEvent: (data,type) => {\n            console.log('handleDepositEvent',data,type) ;\n        },\n        handleWithDrawEvent:  (data,type) => {\n            console.log('handleWithDrawEvent',data,type) ;\n        },\n        onAmmWithdrawClick: (data)=>{\n            console.log('onAmmWithdrawClick',data) ;\n        },\n        onAmmDepositClick: (data)=>{\n            console.log('onAmmDepositClick',data) ;\n        }\n    }\n\n    return {\n        depositProps, withdrawProps, transferProps, resetProps, ammProps, swapProps,\n    }\n}\n","export function deepClone(data: any) {\n    if (!data || !(data instanceof Object) || (typeof data == \"function\")) {\n        return data || undefined\n    }\n    let constructor = data.constructor\n    let result = new constructor()\n    for (let key in data) {\n        if (data.hasOwnProperty(key)) {\n            result[key] = deepClone(data[key])\n        }\n    }\n    return result\n}\n\nexport function copyToClipBoard(text: string){ //复制到剪切板\n\n    if(document.execCommand){\n        var textarea =document.createElement('textarea')\n        document.body.appendChild(textarea)\n        textarea.value=text\n        textarea.select()\n        document.execCommand(\"Copy\")\n        document.body.removeChild(textarea)\n\t}\n\n\tif((window as any).clipboardData){\n        (window as any).clipboardData.setData(\"Text\", text)\n        return true\n    }\n\treturn false\n}","import { WithTranslation, withTranslation } from 'react-i18next';\nimport { Box, Modal } from '@material-ui/core';\nimport { ModalCloseButton, ModalContentStyled, ModalQRCode } from '@loopring-web/component-lib';\nimport React from 'react';\nimport { AccountInfo, AccountInfoProps } from '@loopring-web/component-lib';\n\nexport const ModalAccountInfo = withTranslation('common')(({\n                                                               onClose,\n                                                               open,\n                                                               t,\n                                                               ...rest\n                                                           }: { open:boolean, onClose:(e:any)=>void} & AccountInfoProps & WithTranslation) => {\n\n\n    return <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"Account information\"\n        aria-describedby=\"show layer2 address, unlock/locked loopring wallet, copy address\"\n    >\n        <ModalContentStyled style={{boxShadow: '24'}}>\n            <Box paddingTop={3} paddingBottom={3} display={'flex'} flexDirection={'column'} minWidth='var(--modal-width)'>\n                <ModalCloseButton onClose={onClose} {...{...rest, t}} />\n                <AccountInfo {...rest}/>\n            </Box>\n\n        </ModalContentStyled>\n    </Modal>\n})","import React, { useCallback, useState, } from 'react'\n\nimport {\n    Header as HeaderUI,\n    HideOnScroll,\n    ModalWalletConnect,\n    AccountInfo,\n    ModalCloseButton,\n} from '@loopring-web/component-lib'\n\nimport { headerRoot } from '@loopring-web/component-lib/src/static-resource'\n\nimport { useLocation } from 'react-router-dom'\n\nimport { Box, Collapse, Container, Toolbar, Snackbar, Alert, } from '@material-ui/core'\n\nimport { useHeader } from './hook'\n\nimport { useDisconnect, } from 'stores/account/hook'\nimport { ModalPanel, ModalQRCode, } from '@loopring-web/component-lib';\nimport { useGetExchangeInfo } from 'hooks/exchange/useExchangeAPI'\nimport { useModalProps } from './hook'\n\nimport { copyToClipBoard } from 'utils/obj_tools'\nimport { ModalAccountInfo } from '../../pages/AccountPage';\nimport { useTranslation } from 'react-i18next';\n\nconst Header = ({ ...rest }: any) => {\n\n    const {\n        depositProps,\n        withdrawProps,\n        transferProps,\n        resetProps,\n        ammProps,\n        swapProps,\n    } = useModalProps()\n\n    const location = useLocation()\n\n    const {\n        headerToolBarData,\n        headerMenuData,\n        gatewayList,\n        open,\n        setOpen,\n        openConnect,\n        setOpenConnect,\n        setShowAccountInfo,\n        account,\n        accountInfoProps,\n        showAccountInfo\n    } = useHeader()\n\n    const { exchangeInfo } = useGetExchangeInfo()\n\n    const { disconnect } = useDisconnect()\n\n    const onSwitch = useCallback(() => {\n        setOpen(true)\n    }, [setOpen])\n\n    const [openQRCode, setOpenQRCode] = useState(false)\n\n    const [copyToastOpen, setCopyToastOpen] = useState(false);\n    const {t} = useTranslation('commom')\n\n    const closeCopyToast = () => { setCopyToastOpen(false) }\n\n    return (<>\n        <Snackbar open={copyToastOpen} autoHideDuration={2500} onClose={closeCopyToast}>\n            <Alert onClose={closeCopyToast} severity=\"success\">\n                {t('Address Copied to Clipboard!')}\n        </Alert>\n        </Snackbar>\n\n        <ModalQRCode open={openQRCode} onClose={() => setOpenQRCode(false)} title={'ETH Address'}\n            description={account.accAddr} url={account.accAddr} />\n\n        <ModalPanel transferProps={transferProps} withDrawProps={withdrawProps} \n        depositProps={depositProps} resetProps={resetProps} ammProps={ammProps} swapProps={swapProps}/>\n\n        <HideOnScroll>\n            {process.env.NODE_ENV !== 'production' && JSON.stringify(account?.status)}\n            {process.env.NODE_ENV !== 'production' && ' exchangeAddress:' + JSON.stringify(exchangeInfo?.exchangeAddress)}\n\n            <HeaderUI {...rest} headerMenuData={headerMenuData} headerToolBarData={headerToolBarData}\n                selected={location.pathname === '/' ? headerRoot : location.pathname}></HeaderUI>\n\n        </HideOnScroll>\n        <Toolbar />\n\n        <ModalWalletConnect {...{ ...rest, gatewayList, open, onClose: () => setOpen(false) }} />\n        {<ModalAccountInfo\n            open={openConnect}\n            onClose={() => {setOpenConnect(false)}}\n            onCopy={() => {\n                copyToClipBoard(account.accAddr);\n                setCopyToastOpen(true)\n            }}\n            onViewQRCode={() => {\n                setOpenQRCode(true)\n            }}\n            onDisconnect={() => {\n                disconnect();\n                setShowAccountInfo(false);\n            }}\n            onSwitch={onSwitch}\n            {...{...accountInfoProps, ...rest}}></ModalAccountInfo>}\n    </>)\n}\n\n\nexport default Header\n\n\n\n","import styled from '@emotion/styled/macro'\n\nimport { MarketBlock, QuoteTable, TablePaddingX } from '@loopring-web/component-lib'\n\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { coinMap } from '@loopring-web/component-lib/static'\nimport { FloatTag } from '@loopring-web/component-lib/src/static-resource'\nimport { Box, Grid } from '@material-ui/core'\nimport { useQuote } from './hook'\n\nconst  RowStyled = styled(Grid)`\n      & .MuiGrid-root:not(:last-of-type) > div{\n        margin-right: ${({theme}) => theme.unit * 3}px;\n      }\n` as typeof Grid\nconst  TableWrapStyled = styled(Grid)`\n  &{\n    background-color: ${({theme}) => theme.colorBase.background().default};\n    ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\n    .rdg{\n      height: 100%;\n    }\n  }\n  ${({theme}) => TablePaddingX({pLeft:theme.unit * 3,pRight:theme.unit * 3})}\n` as typeof Grid\n\nconst QuotePage = withTranslation('common')((rest: WithTranslation) => {\n\n    const { tickList, big4 } = useQuote()\n\n    const formattedRawData = tickList.map((o: any) => ({\n        pair: !!o[0].length ? {\n            first: o[0][0],\n            last: o[0][1]\n        }: {\n            first: '--',\n            last: '--'\n        },\n        lastPrice: Number.isFinite(o[2]) ? o[2] : '--',\n        change: Number.isFinite(o[3]) ? o[3] : '--',\n        high: Number.isFinite(o[4]) ? o[4] : '--',\n        low: Number.isFinite(o[5]) ? o[5] : '--',\n        volumn: Number.isFinite(o[6]) ? o[6] : '--'\n    }))\n    \n    let props: any = {\n        ...rest,\n        buyData: coinMap.ETH,\n        sellData: coinMap.LRC,\n        tradeFloat: {priceDollar: +123, priceYuan: 2343232, percent: '+15%', timeUnit: \"24h\",\n            volume: 112312312,\n            floatTag:FloatTag.increase},\n\n    }\n\n    const onVisibleRowsChange=(data: any) => {\n        console.log(data)\n    }\n\n    return <Box display={'flex'} flexDirection={'column'} flex={1}>\n\n        <RowStyled container >\n            <Grid item xs={3} >\n                <MarketBlock {...{...props,tradeFloat: {priceDollar: 123,priceYuan: 2343232, percent: '0%', timeUnit: \"24h\",floatTag:FloatTag.none}}} />\n            </Grid>\n            <Grid item xs={3} >\n                <MarketBlock {...{...props,tradeFloat: {priceDollar: 123,priceYuan: 2343232, percent: '-15%', timeUnit: \"24h\",floatTag:FloatTag.decrease}}} />\n            </Grid>\n            <Grid item xs={3} >\n                <MarketBlock {...{...props}}></MarketBlock>\n            </Grid>\n            <Grid item xs={3} >\n                <MarketBlock {...{...props}}></MarketBlock>\n            </Grid>\n        </RowStyled>\n        <TableWrapStyled container marginY={3} paddingY={2} flex={1}>\n            <Grid item xs={12} display={'flex'}>\n                <QuoteTable onVisibleRowsChange={onVisibleRowsChange} rawData={formattedRawData} {...{ ...rest }} />\n            </Grid>\n        </TableWrapStyled>\n    </Box>\n\n\n})\n\nexport default QuotePage\n","import { QuoteTableRawDataItem } from \"@loopring-web/component-lib\"\nimport { TickerData } from \"loopring-sdk\"\nimport { useExchangeAPI } from \"hooks/exchange/useApi\"\nimport { useCustomDCEffect } from \"hooks/common/useCustomDCEffect\"\n\nimport { useState } from \"react\"\n\nconst amtCol = 5\n\nexport function useQuote() {\n\n    const [tickList, setTickList] = useState<any>([])\n\n    const [big4, setBig4] = useState<any>([])\n\n    const exchangeApi = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!exchangeApi) {\n            return\n        }\n\n        let mounted = true\n\n        const refresh = async () => {\n\n            const { tickList } = await exchangeApi.getAllTickers()\n\n            let ticks: any[] = []\n\n            tickList.forEach((item: TickerData) => {\n                const item2: QuoteTableRawDataItem = {\n                    pair: {\n                        first: item.base as string,\n                        last: item.quote as string,\n                    },\n                    lastPrice: item.quote_token_volume / item.base_token_volume,\n                    change: (item.close - item.open) / item.open,\n                    high: item.high,\n                    low: item.low,\n                    volume: item.base_token_volume,\n                }\n                const rowData: any = [[item.base, item.quote], [item.close, item.close],\n                item.change, item.high, item.low, item.base_token_volume, item.base_token_amt, item.base, item.quote]\n                ticks.push(rowData)\n            })\n            \n            ticks = ticks.sort((a: any, b: any) => {\n                let res = 0\n                if (!isNaN(b[amtCol]) && !isNaN(a[amtCol])) {\n                    res = b[amtCol] - a[amtCol]\n                }\n\n                return res\n            })\n\n            if (mounted) {\n                setBig4(ticks.slice(0, 4))\n                setTickList(ticks)\n            }\n        }\n\n        await refresh()\n\n        /*\n\n        const handler = setInterval(async() => {\n            await refresh()\n        }, 3000)\n        */\n\n        return () => {\n            /*\n            if (handler) {\n                clearInterval(handler)\n            }\n            */\n            mounted = false\n        }\n\n    }, [exchangeApi])\n\n    return {\n        tickList,\n        big4,\n    }\n\n}\n","import { SwapPanel as SwapPanelUi } from '@loopring-web/component-lib'\n\nconst SwapPanel = ({swapProps,...rest}: any) => {\n\n    return (<SwapPanelUi {...{\n        ...swapProps\n        , ...rest\n    }}> </SwapPanelUi>\n    )\n\n}\n\nexport default SwapPanel\n","import { useState, } from 'react'\n\nimport { usePromiseJob } from 'hooks/common/useCommon'\nimport { useAmmpoolAPI, } from './useApi'\n\nimport { AmmPoolConfResponse } from 'loopring-sdk'\n\nexport function useGetAmmPools() {\n\n  const [ammpools, setAmmpools] = useState<AmmPoolConfResponse>()\n\n  const api = useAmmpoolAPI()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getAmmPoolConf()\n    }\n  \n    usePromiseJob(fetchData, setAmmpools, undefined, 'useGetAmmPools', [api])\n\n  return { ammpools }\n\n}\n\nexport function useGetAmmPoolsBalances() {\n\n  const [ammPoolsBalances, setAmmPoolsBalances] = useState<any>()\n\n  const api = useAmmpoolAPI()\n\n  const fetchData = () => {\n    if (!api) {\n      return undefined\n    }\n    return api.getAmmPoolBalances()\n  }\n\n  usePromiseJob(fetchData, setAmmPoolsBalances, undefined, 'useGetAmmPoolsBalances', [api])\n\n  return { ammPoolsBalances }\n\n}\n","import { useCallback, useMemo, useState, useRef, useEffect } from 'react'\n\nimport { useWsAPI, } from './useApi'\n\nimport { ChainId, getAccountArg, getCandlestickArg, getAmmpoolArg, \n    getTickerArg, WsProps } from 'loopring-sdk'\nimport store from 'stores'\n\nconst stateArr = [\n    { key: 0, value: 'Connecting' },\n    { key: 1, value: 'Connected' },\n    { key: 2, value: 'Closing' },\n    { key: 3, value: 'Closed' }\n]\n\nexport const useWebsocket = ({ topics, verify, needApiKey, apiKey, }: { topics: any, needApiKey: boolean, apiKey: string|undefined, verify: boolean, }) => {\n    const ws = useRef<WebSocket | null>(null)\n    const [wsData, setMessage] = useState<any>(undefined)\n    const [readyState, setReadyState] = useState({ key: 0, value: 'Connecting' })\n\n    const chainId = store.getState().trading.chainId\n\n    const api = useWsAPI()\n\n    const creatWebSocket = () => {\n\n        if (!api || !chainId) {\n            return\n        }\n\n        api.getWsKey().then((wsApiKey: any) => {\n            let basePath: string = 'wss://ws.'\n            switch (chainId) {\n                case ChainId.MAINNET:\n                    basePath += process.env.REACT_APP_API_URL\n                    break\n                default:\n                    basePath += process.env.REACT_APP_API_URL_UAT\n                    basePath = 'wss://ws.uat2.loopring.io'\n            }\n\n            basePath += '/v3/ws?wsApiKey=' + wsApiKey\n    \n            try {\n                ws.current = new WebSocket(basePath)\n\n                const subTopics = (topics: any) => {\n                    let data: any = {\n                        op: 'sub',\n                        unsubscribeAll: 'true',\n                        topics: topics,\n                    }\n            \n                    if (needApiKey && apiKey) {\n                        data.apiKey = apiKey\n                    }\n            \n                    const flat_txt = JSON.stringify(data)\n                    sendMessage(flat_txt)\n                }\n    \n                ws.current.onopen = (_e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                    subTopics(topics)\n                }\n                \n                ws.current.onclose = (e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                }\n                \n                ws.current.onerror = (e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                }\n    \n                ws.current.onmessage = (e) => {\n                    setMessage(e.data)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n\n        })\n\n    }\n\n    const webSocketInit = () => {\n        if (!ws.current || ws.current.readyState === 3) {\n            creatWebSocket()\n        }\n    }\n\n    const closeWebSocket = () => {\n        ws.current?.close()\n    }\n\n    const sendMessage = (msg: any) => {\n        ws.current?.send(msg)\n    }\n\n    const reconnect = () => {\n        try {\n            closeWebSocket()\n            ws.current = null\n            creatWebSocket()\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n\n        verify && webSocketInit()\n        return () => {\n            ws.current?.close()\n        }\n    }, [ws, verify, webSocketInit])\n\n    return {\n        wsData,\n        readyState,\n        sendMessage,\n        closeWebSocket,\n        reconnect,\n    }\n}\n\nexport function useWs(topics: any, needApiKey: boolean, apiKey?: string, verify: boolean = true) {\n    const [socketData, setSocketData] = useState({})\n\n    const [isLocalPage, setIsLocalPage] = useState<boolean>(true)\n\n    useEffect(() => {\n\n        let mounted = true\n\n        const checkIsLocalPage = () => {\n            console.log('enter checkIsLocalPage')\n            document.addEventListener('visibilitychange', function () {\n                // page invisible trigger!\n                let isLocalPage = true\n                if (document.visibilityState === 'hidden') {\n                    isLocalPage = false\n                }\n                if (mounted) {\n                    setIsLocalPage(isLocalPage)\n                } else {\n                    console.log('unmounted! dont setIsLocalPage!')\n                }\n            })\n        }\n\n        checkIsLocalPage()\n\n        return () => {\n            mounted = false\n        }\n\n    }, [])\n\n    const { wsData, readyState, closeWebSocket, reconnect, sendMessage, } = useWebsocket({\n        topics,\n        apiKey,\n        needApiKey,\n        verify,\n    })\n\n    useEffect(() => {\n    \n        if (needApiKey && !apiKey) {\n            return\n        }\n\n        if (!verify) {\n            return\n        }\n\n        if (wsData === 'ping') {\n            try {\n                sendMessage('pong')\n            } catch (err) {\n                console.log(err)\n            }\n        } else {\n            if (wsData) {\n                setSocketData(JSON.parse(wsData))\n            }\n        }\n        \n        // if closed and is currente page then, reconnect.\n        if (readyState.key === 3 && isLocalPage) {\n            reconnect()\n        }\n        // if not current page, close it.\n        if (!isLocalPage) {\n            closeWebSocket()\n        }\n\n    }, [wsData, readyState, isLocalPage, verify, apiKey])\n\n    return {\n        socketData,\n    }\n}\n\nexport function useAmmpoolWs(apiKey: string) {\n\n    let topics: any[] = []\n\n    topics.push(getTickerArg('LRC-ETH'))\n\n    topics.push(getAmmpoolArg('0x18920d6E6Fb7EbE057a4DD9260D6D95845c95036'))\n\n    const needApiKey = false\n\n    const { socketData } = useWs(topics, needApiKey, apiKey)\n\n    return {\n        socketData,\n    }\n\n}\n","import { useState, } from 'react'\n\nimport { getAccountArg, getCandlestickArg, \n  getAmmpoolArg, getTickerArg, getOrderArg, WsTopicType, } from 'loopring-sdk'\n\nimport { useWs } from './useWebsocketApi'\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport { useGetMarkets } from \"hooks/exchange/useExchangeAPI\"\n\nfunction useHandleSocketData(data: any) {\n  const [account, setAccount] = useState<any>()\n  const [ammPool, setAmmPool] = useState<any>()\n  const [order, setOrder] = useState<any>()\n  const [ticker, setTicker] = useState<any>()\n\n  useCustomDCEffect(() => {\n\n      // console.log('useCustomDCEffect ws!~ data:', data)\n\n      if (!data) {\n        return\n      }\n\n      if (data.op) {\n        return\n      }\n\n      if (!data.topic || !data.topic.topic) {\n        return\n      }\n\n      switch(data.topic.topic) {\n        case WsTopicType.Account:\n          // console.log(',data.data:', data.data)\n          setAccount(data.data)\n          break\n        case WsTopicType.Ammpool:\n          let ammPool = {\n            baseAmt: data.data[0][0],\n            quoteAmt: data.data[0][1],\n            timestamp: data.data[1],\n          }\n          // console.log(',ammPool:', ammPool)\n          setAmmPool(ammPool)\n          break\n        case WsTopicType.Candlestick:\n          break\n        case WsTopicType.Order:\n          setOrder(data.data)\n          break\n        case WsTopicType.OrderBook:\n          break\n        case WsTopicType.Ticker:\n          setTicker(data.data)\n          break\n        case WsTopicType.Trade:\n          break\n        default:\n          throw Error('Unknown WsTopicType:' + data.topic.topic)\n      }\n  }, [data])\n\n  return {\n    account,\n    ammPool,\n    order,\n    ticker,\n  }\n}\n\nexport function useSwapPageWs(poolAddress: string, market: string, apiKey: string) {\n\n  let topics: any[] = []\n\n  topics.push(getAccountArg())\n  topics.push(getOrderArg(market))\n  topics.push(getAmmpoolArg(poolAddress))\n\n  const { socketData } = useWs(topics, true, apiKey, !!poolAddress && !!market && !!apiKey)\n\n  return useHandleSocketData(socketData)\n\n}\n\nexport function useQuotePageWs() {\n\n  const { markets } = useGetMarkets()\n\n  let topics: any[] = []\n\n  if (markets) {\n\n    const keys = Reflect.ownKeys(markets.markets)\n\n    let c = 0\n  \n    keys.every((item: any) => {\n      c += 1\n      topics.push(getTickerArg(item))\n      if (c >= 20) {\n        return false\n      }\n\n      return true\n    })\n\n  }\n\n  const { socketData } = useWs(topics, false)\n\n  return useHandleSocketData(socketData)\n\n}\n","export enum OrderHandling {\n    processed = 'processed',\n    no_such_order = 'no_such_order',\n    too_many_times = 'too_many_times',\n}\n\n// export enum PriceChartType {\n//     h24 = '24hrs',\n//     w1 = '1week',\n//     all = 'all',\n// }\n","import { useCallback, useState, } from 'react'\n\nimport BigNumber from 'bignumber.js'\n\nimport { useGetAmmPools, useGetAmmPoolsBalances } from 'hooks/exchange/useAmmpoolAPI'\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\nimport { useGetMixMarkets, useGetTokens } from 'hooks/exchange/useExchangeAPI'\n\nimport { getBaseQuote } from 'loopring-sdk'\n\nimport { useGetExchangeInfo } from 'hooks/exchange/useExchangeAPI'\n\nimport { useGetUserBalances } from 'hooks/exchange/useUserAPI'\n\nimport { useAccount } from 'stores/account/hook'\nimport { useUserAPI } from 'hooks/exchange/useApi'\n\nimport { useSwapPageWs } from 'hooks/exchange/useWsAPI'\n\nimport {\n  applySlippageTolerance,\n  checkStatus,\n  fromWEI,\n  getAmmInfo,\n  getAmountOut,\n  getAmountOut_Reverse,\n  getBalances,\n  getLeft,\n  getRight,\n  getToken,\n  toWEI,\n} from 'utils/swap_calc_utils'\n\nimport {\n  CoinInfo,\n  CoinMap,\n  IBData,\n  TradeCalcData,\n  WalletCoin,\n  WalletMap,\n} from '@loopring-web/component-lib/static-resource'\n\nimport { AccountStatus } from 'state_machine/account_machine_spec'\n\nimport { deepClone } from 'utils/obj_tools'\n\nimport * as fm from 'loopring-sdk'\n\nimport { UserStorage } from 'storage'\nimport { OrderType, SubmitOrderRequestV3, TxStatus, dumpError400, getExistedMarket, } from 'loopring-sdk'\n\nimport { OrderHandling } from 'defs/swap_defs'\n\nimport { SwapProps, SwapTradeData, } from '@loopring-web/component-lib'\nimport { SwapType } from '@loopring-web/component-lib/components/panel/Interface'\nimport { useRouteMatch } from 'react-router'\n\nexport function useCoinMap(base: string) {\n\n  const { ammpools } = useGetAmmPools()\n\n  const { tokens } = useGetTokens()\n\n  const [left, setLeft] = useState<CoinMap<any, CoinInfo<any>>>({})\n\n  const [right, setRight] = useState<CoinMap<any, CoinInfo<any>>>({})\n\n  useCustomDCEffect(() => {\n  \n    if (!ammpools || !tokens) {\n        return\n    }\n  \n    const left = getLeft(ammpools.pairs, tokens)\n  \n    if (left) {\n        setLeft(left.coinMapLeft)\n  \n        const right = getRight(ammpools.pairs, base, tokens)\n  \n        if (right) {\n            setRight(right.coinMapRight)\n        }\n  \n    }\n  \n  }, [ammpools, tokens, base])\n\n  return {\n      left,\n      right,\n      setLeft,\n      setRight,\n  }\n\n}\n\nexport function useSwapNew() {\n\n  // get trading pair from url path.\n  const match: any = useRouteMatch(\":symbol\")\n\n  //const symbol =  ad?.hasOwnProperty()?'':undefined;\n   const symbol =  match?.params.symbol ?? undefined;\n\n  // user info\n  const { apiKey, eddsaKey, accountId, account: globalAcc, } = useAccount()\n\n  // total info of exchange/tokens/markets/ammpools\n  const { markets } = useGetMixMarkets()\n\n  const { tokens } = useGetTokens()\n\n  const { exchangeInfo } = useGetExchangeInfo()\n\n  const { ammpools } = useGetAmmPools()\n\n  const { ammPoolsBalances } = useGetAmmPoolsBalances()\n\n  // state for shown elements\n  const [base, setBase] = useState<any>('')\n\n  const [quote, setQuote] = useState<any>('')\n\n  const {\n      left,\n      right,\n      setRight,\n  } = useCoinMap(base)\n\n  const [market, setMarket] = useState<any>()\n\n  const [poolAddress, setPoolAddress] = useState<string>('')\n\n  const { balances, setBalances } = useGetUserBalances(tokens?.tokenSymbolMap)\n\n  const [balance, setBalance] = useState<any>(0)\n  const [availToShow, setAvailToShow] = useState<any>(0)\n\n  const [fee, setFee] = useState(0)\n  const [takerRate, setTakerRate] = useState(10)\n\n  const [currentPrice, setCurrentPrice] = useState<number>(0)\n\n  const [ammOrder, setAmmOrder] = useState<string>(UserStorage.getAmmOrder())\n\n  const [slippageTolerance, setSlippageTolerance] = useState(0.01)\n\n  const [priceImpact, setPriceImpact] = useState(0)\n\n  const [baseAmt, setBaseAmt] = useState<string | number>()\n\n  const [quoteAmt, setQuoteAmt] = useState<number>(0)\n\n  const [amount1ApplyOrderFee, setAmount1ApplyOrderFee] = useState(0)\n\n  const minimumReceived = quoteAmt ? quoteAmt * (1 - slippageTolerance) : 0\n\n  // const quoteUserBalance = useGetUserBalances(tokens, quote)\n  const [quoteBalance, setQuoteBalance] = useState<any>(0)\n  const [quoteToShow, setQuoteToShow] = useState<any>(0)\n\n  const [swapProps, setSwapProps] = useState<any>({})\n\n  // apis\n  const userApi = useUserAPI()\n\n  const [walletMap, setWalletMap] = useState<WalletMap<any, WalletCoin<any>>>({})\n  \n  //websocket update\n\n  const {\n    account,\n    ammPool,\n    order,\n  } = useSwapPageWs(poolAddress, market, apiKey)\n\n  // set base and quote according to the url matcher.\n  // e.g. /trading/lite/LRC-USDT base => LRC quote => USDT\n  useCustomDCEffect(() => {\n    console.log('----------------!!!!!!!!!!!', symbol)\n\n    if (!symbol) {\n\n    console.log('----------------getBaseQuote LRC_ETH')\n      setBase('LRC')\n      setQuote('ETH')\n    } else {\n      const { base, quote } = getBaseQuote(symbol)\n\n      if (base && quote) {\n\n        console.log('getBaseQuote base:', base, ' quote:', quote)\n\n        setBase(base)\n        setQuote(quote)\n      }\n    }\n\n  }, [symbol, markets, setBase, setQuote, setMarket])\n\n  // setMarket when base or quote changed.\n  useCustomDCEffect(() => {\n\n    if (!markets) {\n      return\n    }\n\n    const { marketArr } = markets\n\n    setMarket(getExistedMarket(marketArr, base, quote))\n\n  }, [markets, setMarket, base, quote])\n\n  // update pooladdress\n  useCustomDCEffect(() => {\n  \n    if (!base || !quote || !ammpools || !ammPoolsBalances) {\n      return\n    }\n  \n    const { ammInfo, } = getAmmInfo(ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, base, quote)\n  \n    console.log('ammInfo.market:', ammInfo.market)\n  \n    // setMarket(ammInfo.market)\n    setPoolAddress(ammInfo.address)\n  \n  }, [base, quote, ammpools, ammPoolsBalances,])\n\n  useCustomDCEffect(() => {\n\n      if (!balances || !base || !tokens) {\n          return\n      }\n\n      if (globalAcc.status === AccountStatus.ACTIVATED) {\n\n          const balance = balances.symbol[base]\n          setBalance(balance)\n          setAvailToShow(fromWEI(tokens.tokenSymbolMap, base, balance))\n\n          // const quoteBalance = balances.symbol[quote]\n          // setQuoteBalance(quoteBalance)\n          // setQuoteToShow(fromWEI(tokens, quote, quoteBalance))\n\n      } else {\n\n          setBalance(0)\n          setAvailToShow(0)\n\n          // setQuoteBalance(0)\n          // setQuoteToShow(0)\n\n      }\n\n  }, [balances, base, tokens, globalAcc.status])\n\n\n  useCustomDCEffect(() => {\n    if (!account || !tokens || !base) {\n        return\n    }\n\n    if (globalAcc.status === AccountStatus.ACTIVATED) {\n\n        const currentBalance = balances.tokenId[account.tokenId]\n        const totalAmount = fm.toBig(account.totalAmount)\n        const amountLocked = fm.toBig(account.amountLocked)\n        const newAvailable = totalAmount.minus(amountLocked)\n\n        if (!newAvailable.eq(fm.toBig(currentBalance))) {\n            const avail = fromWEI(tokens.tokenSymbolMap, base, newAvailable.toString())\n\n            const balancesTmp = deepClone(balances)\n            balancesTmp.tokenId[account.tokenId] = newAvailable.toString()\n            const token = balancesTmp.map[account.tokenId]\n            balancesTmp.symbol[token.symbol] = newAvailable.toString()\n            setBalances(balancesTmp)\n        }\n\n    } else {\n        setBalances(undefined)\n    }\n\n}, [account, tokens, base, globalAcc.status])\n\nuseCustomDCEffect(() => {\n\n    if (!tokens) {\n        return\n    }\n\n    let walletMap: WalletMap<any, WalletCoin<any>> = {}\n\n    if (globalAcc.status === AccountStatus.ACTIVATED) {\n        if (balances && balances.symbol) {\n            const keys = Reflect.ownKeys(balances.symbol)\n\n            keys.forEach((item: any) => {\n                const balance = balances.symbol[item]\n                walletMap[item] = {\n                    belong: item,\n                    count: fromWEI(tokens.tokenSymbolMap, item, balance) as number,\n                }\n            })\n        }\n\n    }\n\n    setWalletMap(walletMap)\n\n}, [balances, tokens, globalAcc.status])\n\nuseCustomDCEffect(() => {\n\n  if (!base || !quote || !ammpools || !ammPoolsBalances || !tokens) {\n      console.log('return!!! --->setQuoteBalance')\n      return\n  }\n\n  const {\n      ammInfo,\n      baseBalance,\n      quoteBalance,\n  } = getBalances(ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, base, quote, tokens.tokenSymbolMap)\n\n  setFee(ammInfo.feeBips)\n  // setQuoteBalance(quoteBalance.volume)\n  // setQuoteToShow(quoteShow)\n\n  if (baseBalance.volume > 0) {\n      setCurrentPrice(quoteBalance.volume / baseBalance.volume)\n  } else {\n      setCurrentPrice(0)\n  }\n\n}, [tokens, base, quote, ammpools, ammPoolsBalances,])\n\nuseCustomDCEffect(async () => {\n\n  if (!apiKey && !accountId && !userApi && !ammOrder) {\n      return\n  }\n\n  const fn = (accountId: number, orderHash: string, apiKey: string, count = 0) => {\n      // console.log('orderHash:', orderHash, ' count:', count)\n      return new Promise((resolve, reject) => {\n          if (orderHash) {\n              userApi.getOrderDetails({\n                  accountId,\n                  orderHash\n              }, apiKey).then((order) => {\n                  console.log('order.status:', order.status)\n                  if (order.status === TxStatus.processed) {\n                      UserStorage.clearAmmOrder()\n                      return resolve(OrderHandling.processed)\n                  } else {\n                      if (count < 10) {\n                          setTimeout(() => {\n                              fn(accountId, UserStorage.getAmmOrder(), apiKey, count++)\n                          }, 1000)\n                      } else {\n                          reject(OrderHandling.too_many_times)\n                      }\n                  }\n              }).catch(() => {\n                  UserStorage.clearAmmOrder()\n                  return reject(OrderHandling.no_such_order)\n              })\n          }\n      })\n  }\n\n  fn(accountId, UserStorage.getAmmOrder(), apiKey).then((result) => {\n      console.log('then:', result)\n  }).catch((reason) => {\n      dumpError400(reason)\n  })\n\n  return () => {\n  }\n\n}, [apiKey, accountId, ammOrder, userApi])\n\nuseCustomDCEffect(() => {\n\n  if (!userApi || !accountId || !apiKey || !base || !quote || !ammpools || !ammPoolsBalances || !tokens) {\n      return\n  }\n\n  let mounted = true\n\n  const { ammInfo, } = getBalances(ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, base, quote, tokens.tokenSymbolMap)\n\n  userApi.getUserFeeRate({\n      accountId,\n      markets: ammInfo.market\n  }, apiKey).then((response) => {\n      if (mounted) {\n          setTakerRate(response[0].takerRate)\n      } else {\n          console.log('setTakerRate unmounted!')\n      }\n  }).catch((reason) => {\n      dumpError400(reason, 'after getUserFeeRate')\n  })\n\n  return () => {\n      mounted = false\n  }\n\n}, [tokens, userApi, accountId, apiKey, base, quote, ammpools, ammPoolsBalances, globalAcc.status])\n\nconst onBaseAmtInputChange = useCallback((event: any) => {\n\n  if (!ammpools || !ammPoolsBalances || !tokens) {\n      return\n  }\n\n  let baseAmtVal = event.tradeValue as number\n\n  // console.log('onBaseAmtInputChange baseAmtVal:', baseAmtVal, ' baseAmt:', baseAmt)\n  if (baseAmtVal !== undefined && baseAmtVal === baseAmt) {\n      console.log('return directly')\n      return\n  } else if (baseAmtVal === undefined) {\n      baseAmtVal = 0\n  }\n\n  const {\n      quoteAmt: quoteAmtVal,\n      _amount1ApplyOrderFee,\n      priceImpact,\n  } = getAmountOut(baseAmtVal, ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, \n    tokens.tokenSymbolMap, base, quote, takerRate, currentPrice)\n\n  const { isNormal, } = checkStatus(baseAmtVal, balance, quoteAmtVal, fromWEI(tokens.tokenSymbolMap, quote, quoteBalance))\n\n  if (isNormal) {\n      setBaseAmt(baseAmtVal)\n      setQuoteAmt(quoteAmtVal)\n      setAmount1ApplyOrderFee(_amount1ApplyOrderFee)\n      setPriceImpact(priceImpact)\n  } else {\n      setQuoteAmt(0)\n      setAmount1ApplyOrderFee(0)\n      setPriceImpact(0)\n  }\n\n  return quoteAmtVal\n\n}, [tokens, baseAmt, balance, quoteBalance, ammpools, ammPoolsBalances, base, quote, takerRate, currentPrice])\n\nconst onQuoteAmtInputChange = useCallback((event: any) => {\n\n  if (!ammpools || !ammPoolsBalances || !tokens) {\n      return\n  }\n\n  let quoteAmtVal = event.tradeValue as number\n\n  // console.log('onQuoteAmtInputChange quoteAmtVal:', quoteAmtVal, ' quoteAmt:', quoteAmt)\n  if (quoteAmtVal !== undefined && quoteAmtVal === quoteAmt) {\n      // console.log('return directly')\n      return\n  } else if (quoteAmtVal === undefined) {\n      quoteAmtVal = 0\n  }\n\n  const {\n      baseAmt: baseAmtVal,\n      _amount1ApplyOrderFee,\n      priceImpact,\n      hasError,\n  } = getAmountOut_Reverse(quoteAmtVal, ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, \n    tokens.tokenSymbolMap, base, quote, takerRate, currentPrice)\n\n  const { isNormal, } = checkStatus(baseAmtVal, balance, quoteAmtVal, fromWEI(tokens.tokenSymbolMap, quote, quoteBalance))\n\n  if (!hasError && isNormal) {\n      setBaseAmt(baseAmtVal)\n      setQuoteAmt(quoteAmtVal)\n      setAmount1ApplyOrderFee(_amount1ApplyOrderFee)\n      setPriceImpact(priceImpact)\n  } else {\n      setBaseAmt(0)\n      setAmount1ApplyOrderFee(0)\n      setPriceImpact(0)\n  }\n\n  return baseAmtVal\n\n}, [tokens, quoteAmt, balance, quoteBalance, ammpools, ammPoolsBalances, base, quote, takerRate, currentPrice])\n\nconst onSwap = useCallback(() => {\n  console.log('try to swap ', baseAmt, base, ' -> ', quoteAmt, quote)\n\n  const swap = async () => {\n\n      if (!exchangeInfo?.exchangeAddress) {\n          throw Error('no exchangeAddress!')\n      }\n\n      if (!baseAmt || !quoteAmt || !ammpools || !tokens) {\n          // throw Error('no baseAmt or quoteAmt!')\n          console.log('no baseAmt or quoteAmt!')\n          return\n      }\n\n      const {\n          ammInfo,\n          feeBips,\n      } = getAmmInfo(ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, base, quote)\n\n      const allOrNone = false\n\n      const baseToken = getToken(tokens.tokenSymbolMap, base)\n\n      const quoteToken = getToken(tokens.tokenSymbolMap, quote)\n\n      // const storageId = await authKeyApi.getNextStorageId(accountId, baseToken.tokenId, apiKey)\n\n      let orderId: number\n      try {\n\n          const storageId = await userApi.getNextStorageId({\n              accountId,\n              sellTokenId: baseToken.tokenId\n          }, apiKey\n          )\n          // console.log('storageId:', storageId)\n\n          orderId = storageId.orderId\n\n      } catch (reason) {\n          dumpError400(reason, 'getNextStorageId')\n          throw Error('getNextStorageId failed')\n      }\n\n      // const validUntil = Math.ceil(new Date().getTime() / 1000) + 3600 * 1000\n      const validUntil = 1700000000\n\n      const amount0InBigNumber = toWEI(tokens.tokenSymbolMap, base, baseAmt)\n      const amount1WithSlippage = applySlippageTolerance(\n          tokens.tokenSymbolMap,\n          quote,\n          amount1ApplyOrderFee,\n          slippageTolerance,\n      )\n\n      const amount1InBigNumber = new BigNumber(amount1WithSlippage.outInWei).toFixed()\n\n      try {\n\n          console.log('amount0InBigNumber:', amount0InBigNumber, ' amount1InBigNumber:', amount1InBigNumber)\n\n          const request: SubmitOrderRequestV3 = {\n              exchange: exchangeInfo?.exchangeAddress,\n              accountId,\n              storageId: orderId,\n              sellToken: {\n                  tokenId: baseToken.tokenId,\n                  volume: amount0InBigNumber.toString()\n              },\n              buyToken: {\n                  tokenId: quoteToken.tokenId,\n                  volume: amount1InBigNumber.toString()\n              },\n              allOrNone,\n              validUntil,\n              maxFeeBips: 60,\n              fillAmountBOrS: false,\n              orderType: OrderType.ClassAmm,\n              eddsaSignature: '',\n          }\n\n          const response = await userApi.submitOrder(request, eddsaKey, apiKey)\n\n          console.log('response:', response)\n\n          UserStorage.setAmmOrder(response.hash)\n          setAmmOrder(response.hash)\n\n      } catch (reason) {\n          dumpError400(reason, 'submitOrderV3')\n      }\n\n  }\n\n  swap()\n\n}, [accountId, ammPoolsBalances, ammpools, amount1ApplyOrderFee, apiKey,\n  base, baseAmt, eddsaKey, exchangeInfo?.exchangeAddress,\n  quote, quoteAmt, slippageTolerance, tokens, userApi])\n\nuseCustomDCEffect(() => {\n\n  const tradeCalcData: TradeCalcData<any> = {\n      coinSell: base, //name\n      coinBuy: quote,\n      StoB: parseFloat(currentPrice?.toFixed(4)),\n      BtoS: 0,\n      sellCoinInfoMap: left,\n      buyCoinInfoMap: right,\n      walletMap: walletMap,\n      slippage: slippageTolerance * 100,   //TODO which number is selected, from localstorage;\n      slippageTolerance: [0.1, 0.5, 1, 'slippage:N'],    //TODO getLocalstorage Customer slippage\n      priceImpact: `${(Math.abs(priceImpact) * 100).toFixed(2)}%`,\n      minimumReceived: minimumReceived.toFixed(7),\n      fee: `${(Math.abs(fee + takerRate) / 100).toFixed(2)}%`,\n  }\n\n  const swapProps: SwapProps<IBData<any>, string, any> = {\n      swapTradeData: {\n          sell: {\n              belong: base,\n              balance: availToShow,\n              tradeValue: baseAmt as any,\n          }, buy: {\n              belong: quote,\n              balance: quoteToShow,\n              tradeValue: quoteAmt,\n          },\n          slippage: slippageTolerance,\n          __cache__: {}\n      },\n      tradeCalcData,\n\n      onSwapClick: (tradeData: SwapTradeData<any>) => {\n          onSwap()\n      },\n\n      handleSwapPanelEvent: async (swapData, switchType) => {\n          return new Promise((res) => {\n\n              console.log('swapData:', swapData)\n\n              const { type, tradeData, to, } = swapData\n              let right = undefined\n              switch (switchType) {\n                  case SwapType.SEll_CLICK:\n                      break\n                  case SwapType.BUY_CLICK:\n                      break\n                  case SwapType.SELL_SELECTED:\n                      const quoteAmtVal = onBaseAmtInputChange(tradeData?.sell);\n                      if (quoteAmtVal !== undefined) {\n                          tradeData.buy = { ...tradeData.buy, tradeValue: quoteAmtVal }\n                      }\n                      setBase(tradeData.sell.belong)\n                      right = getRight(ammpools?.pairs, tradeData.sell.belong, tokens?.tokenSymbolMap)\n\n                      console.log('right:', right)\n\n                      if (right) {\n                          setRight(right.coinMapRight)\n                          setQuote(right.right[0])\n                      } else {\n                          setQuote(undefined)\n                      }\n                      break\n                  case SwapType.BUY_SELECTED:\n                      console.log()\n                      onQuoteAmtInputChange(tradeData?.buy)\n                      setQuote(tradeData.buy.belong)\n                      break\n                  case SwapType.EXCHANGE_CLICK:\n                      setBaseAmt(0)\n                      setQuoteAmt(0)\n\n                      tradeData.buy = { ...tradeData.buy, balance: availToShow, tradeValue: 0 }\n                      tradeData.sell = { ...tradeData.sell, balance: quoteToShow, tradeValue: 0 }\n\n                      // console.log('balances:', balances.symbol)\n                      console.log('sell:', tradeData.sell)\n                      console.log('buy:', tradeData.buy)\n\n                      console.log('availToShow:', availToShow)\n                      console.log('quoteToShow:', quoteToShow)\n\n                      setBase(tradeData.sell?.belong)\n                      right = getRight(ammpools?.pairs, tradeData.sell.belong, tokens?.tokenSymbolMap)\n                      if (right) {\n                          console.log('right:', right.right[0])\n                          setRight(right.coinMapRight)\n                          setQuote(right.right[0])\n                      } else {\n                          setQuote(tradeData.buy?.belong)\n                      }\n                      break\n                  default:\n                      break\n              }\n\n              res()\n          })\n      },\n  }\n\n  setSwapProps(swapProps)\n\n}, [slippageTolerance,\n  priceImpact,\n  fee,\n  takerRate,\n  left,\n  right,\n  walletMap,\n  minimumReceived, availToShow, quoteToShow, baseAmt, quoteAmt, currentPrice,\n  onBaseAmtInputChange,\n  onQuoteAmtInputChange,\n  onSwap])\n\n  // return-----\n  return {\n    base,\n    quote,\n    tokens,\n    markets,\n    market,\n    poolAddress,\n    swapProps,\n  }\n\n}\n","import { useCallback, useState } from 'react'\n\nimport { useExchangeAPI } from 'hooks/exchange/useApi'\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport { TradingInterval, Candlestick, GetCandlestickRequest, GetDepthRequest, GetTickerRequest, dumpError400 } from 'loopring-sdk'\nimport { fromWEI } from 'utils/swap_calc_utils'\n\nimport { ChartUnit } from '@loopring-web/component-lib/static-resource'\n\nimport { ChartType } from '@loopring-web/component-lib'\n\nimport { TGItemData, TGItemJSXInterface, } from '@loopring-web/component-lib'\n\nimport { IGetDepthDataParams } from '@loopring-web/component-lib/components/charts/scaleAreaChart/data'\n\nconst toggleData: TGItemData[] = [\n  {\n    value: ChartType.Trend,\n    key: ChartType.Trend,\n    label: 'label' + ChartType.Trend\n  },\n  {\n    value: ChartType.Depth,\n    key: ChartType.Depth,\n    label: 'label' + ChartType.Depth\n  },\n]\n\nexport function useBasicInfo(props: any, t: any) {\n  const tgItemJSXs: TGItemJSXInterface[] = toggleData.map(({ value, label, key }) => {\n    return { value, tlabel: t(label), key, JSX: <>{t(label)}</> }\n  })\n\n  // console.log('useBasicInfo: ', props)\n\n  const { base, quote, market, tokens } = props\n\n  const [chartType, setChartType] = useState<ChartType>(ChartType.Trend)\n\n  const [change, setChange] = useState(0)\n\n  const [volume, setVolume] = useState('')\n\n  const [chartUnit, setChartUnit] = useState(ChartUnit.D1)\n\n  const [originData, setOriginData] = useState<any>(undefined)\n\n  const handleChange = useCallback((_e: React.MouseEvent, value: any) => {\n    // Settings.setChartType(value)\n    console.log('handleChange:', value)\n    setOriginData(undefined)\n    setChartType(value)\n  }, [setOriginData, setChartType])\n\n  const exchangeApi = useExchangeAPI()\n\n  useCustomDCEffect(async () => {\n\n    if (!exchangeApi || !market || !tokens || !quote) {\n      return\n    }\n\n    let mounted = true\n\n    try {\n\n      const request: GetTickerRequest = {\n        market: market.market,\n      }\n\n      const ticker = await exchangeApi.getTicker(request)\n      if (mounted) {\n\n        if (ticker.tickList[0].change) {\n          setChange(ticker.tickList[0].change)\n        }\n\n        if (ticker.tickList[0].base_token_volume) {\n          const baseVol = fromWEI(tokens.tokenSymbolMap, base, ticker.tickList[0].base_token_volume) as string\n          setVolume(baseVol)\n        }\n      }\n    }\n    catch (reason) {\n      dumpError400(reason, 'ChartPanel getCandlestick')\n    }\n\n    return () => {\n      mounted = false\n    }\n\n  }, [exchangeApi, market, tokens, base,])\n\n  const tgItemJSXsPriceChart: TGItemJSXInterface[] = Object.keys(ChartUnit).reduce((pre, item) => {\n    // @ts-ignore\n    const tGItemData: TGItemData = { value: ChartUnit[item], key: ChartUnit[item], label: 'label' + ChartUnit[item] };\n    pre.push({ value: tGItemData.value, tlabel: t(tGItemData.label ? tGItemData.label : tGItemData.key), key: tGItemData.key, JSX: <>{t(tGItemData.label ? tGItemData.label : tGItemData.key)}</> })\n    return pre\n  }, [] as TGItemJSXInterface[])\n\n  useCustomDCEffect(async () => {\n\n    let mounted = true\n\n    if (!exchangeApi || !market) {\n      return\n    }\n\n    if (chartType === ChartType.Trend) {\n      const request: GetCandlestickRequest = {\n        market: market.market,\n        interval: TradingInterval.min15,\n        limit: 96\n      }\n\n      try {\n        const candlesticks = await exchangeApi.getCandlestick(request)\n\n        if (mounted) {\n          const originData = candlesticks.candlesticks.map((item: Candlestick) => {\n            return {\n              timeStamp: item.timeStamp,\n              low: item.low,\n              high: item.high,\n              open: item.open,\n              close: item.close,\n              volume: item.quoteVol,\n            }\n          })\n          // console.log('candlesticks originData: ', originData)\n          setOriginData(originData)\n        }\n      }\n      catch (reason) {\n        dumpError400(reason, 'ChartPanel getCandlestick')\n      }\n\n    } else {\n      const request: GetDepthRequest = {\n        market: [market.market],\n      }\n\n      try {\n\n        const depth = await exchangeApi.getDepth(request)\n        console.log('depth:', depth)\n        if (mounted) {\n          const originData: IGetDepthDataParams = {\n            bidsPrices: depth.depth.bids_prices,\n            bidsAmtTotals: depth.depth.bids_amtTotals,\n            asksPrices: depth.depth.asks_prices,\n            asksAmtTotals: depth.depth.asks_amtTotals,\n          }\n          setOriginData(originData)\n        }\n\n      } catch (reason) {\n        dumpError400(reason)\n      }\n\n    }\n\n    return () => {\n      mounted = false\n    }\n\n  }, [exchangeApi, market, chartType])\n\n  return {\n    change,\n    volume,\n    chartUnit,\n    chartType,\n    tgItemJSXs,\n    tgItemJSXsPriceChart,\n    handleChange,\n    originData,\n  }\n}","import { ChartUnit } from '@loopring-web/component-lib/static-resource'\n\nimport { ScaleAreaChart } from '@loopring-web/component-lib'\nimport { Box, Grid } from \"@material-ui/core\"\n\nimport { ToggleButtonGroup, useSettings } from '@loopring-web/component-lib'\nimport { WithTranslation } from 'react-i18next'\nimport { TradeTitle } from '@loopring-web/component-lib/components/block'\nimport { getThousandFormattedNumbers, UpColor } from '@loopring-web/component-lib/src/static-resource';\nimport { useBasicInfo } from './hook'\n\nconst BasicInfoPanel = ({ props, swapProps, t, ...rest }: any & WithTranslation) => {\n\n  const {\n    change,\n    chartType,\n    tgItemJSXs,\n    tgItemJSXsPriceChart,\n    handleChange,\n    originData,\n  } = useBasicInfo(props, t)\n  const {upColor} = useSettings();\n  return <>{swapProps.swapTradeData ?\n          <>\n                <Grid item xs={8}>\n                  <TradeTitle {...{\n                    ...rest, t, tradeCalcData:swapProps.tradeCalcData, tradeFloat: {\n                      priceDollar: getThousandFormattedNumbers(change,8),\n                      percent: '+15%',\n                      timeUnit: \"24h\",\n                      volume:'',\n                    }\n                  }}></TradeTitle>\n                </Grid>\n                <Grid item xs={4} display={'flex'} justifyContent={'flex-end'} alignItems={'flex-end'}>\n                  <ToggleButtonGroup exclusive {...{ ...rest, t, tgItemJSXs, value: chartType }}\n                                                 handleChange={handleChange} />\n                </Grid>\n            </> : undefined}\n\n\n            <Grid item xs={12} >\n              <Box minHeight={256} maxHeight={256} display={'block'} style={{ height: '100%', width: '100%' }} >\n                <ScaleAreaChart type={chartType} data={originData ?? []} riseColor={upColor as keyof typeof UpColor}  handleMove={() => { }} />\n              </Box>\n            </Grid>\n            <Grid item xs={12} height={24} display={'flex'} justifyContent={'flex-end'}>\n              <ToggleButtonGroup exclusive {...{ ...rest, t, tgItemJSXs: tgItemJSXsPriceChart,\n                value: ChartUnit.D1, size: 'small' }}\n                                 handleChange={() => undefined} />\n            </Grid>\n       </>\n\n};\n\nexport default BasicInfoPanel\n","import { useState } from 'react'\n\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport styled from '@emotion/styled'\n\nimport {\n  TradeTable,\n  FormControlLabel,\n} from '@loopring-web/component-lib'\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { CheckedIcon, CheckBoxIcon } from '@loopring-web/component-lib/static-resource'\nimport { withRouter, RouteComponentProps } from 'react-router'\nimport { Box, Paper } from '@material-ui/core';\n\nconst StylePaper = styled(Box)`\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    background-color: ${({ theme }) => theme.colorBase.background().default};\n    border-radius: ${({ theme }) => theme.unit}px;\n    padding: 20px;\n    .tableWrapper {\n        margin-top: ${({ theme }) => theme.unit * 1.5}px;\n        border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n        border-radius: ${({ theme }) => theme.unit}px;\n        padding: 26px;\n    }\n` as typeof Box;\n\n\nconst applyProps = (index: number) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\n\nconst TradePanel = withTranslation('common')(withRouter(({ trades, isAllTrade, setIsAllTrade, t, location }:\n  { trades: any, isAllTrade: boolean, setIsAllTrade: any } & WithTranslation & RouteComponentProps) => {\n\n  const [value, setValue] = useState(0)\n  const handleChange = (event: any, newValue: any) => {\n    setValue(newValue)\n  }\n\n  const StyledTabsWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: ${({ theme }) => theme.unit * 4}px;\n  `\n\n  const StyledFormControlLabel = styled(FormControlLabel)`\n    position: absolute;\n    top: 0;\n    right: ${({ theme }) => theme.unit}px;\n    margin: ${({ theme }) => theme.unit}px 0 0 0;\n  `\n\n  const handleCheckboxChange = () => {\n    setIsAllTrade((flag: boolean) => !flag)\n  }\n\n  return (\n    <StyledTabsWrapper>\n      <StyledFormControlLabel\n        control={<Checkbox checked={isAllTrade} size={'small'} checkedIcon={<CheckedIcon />}\n          icon={<CheckBoxIcon />} color={'default'} onChange={handleCheckboxChange} />}\n        label={t('labelTradePanelHideOtherPairs')} />\n\n      <Tabs value={value}\n        onChange={handleChange}\n        aria-label=\"tabs switch\">\n        <Tab label={t('labelMyTrade')} {...applyProps(0)} />\n        <Tab label={t('labelRecent')}   {...applyProps(1)} />\n      </Tabs>\n\n     <StylePaper marginTop={2}>\n       <TradeTable rawData={trades} />\n     </StylePaper>\n\n    </StyledTabsWrapper>\n  )\n}))\n\nexport default TradePanel\n","import { useState } from 'react'\n\nimport TradePanelUi from './TradePanel'\nimport { useGetMyTrades, useGetRecentTrades, } from './hooks'\n\nconst TradePanel = (props: any) => {\n\n  const { market, poolAddress, base, quote } = props\n\n  console.log('TradePanel market:', market)\n\n  const { myTrades } = useGetMyTrades(market)\n\n  const { recentTrades } = useGetRecentTrades(poolAddress)\n\n  const [isAllTrade, setIsAllTrade] = useState(false)\n\n  return (\n    <TradePanelUi trades={isAllTrade? recentTrades: myTrades} isAllTrade={isAllTrade} \n    setIsAllTrade={setIsAllTrade} />\n  )\n\n}\n\nexport default TradePanel\n","import { useState } from 'react'\n\nimport { useAmmpoolAPI, useUserAPI } from 'hooks/exchange/useApi'\nimport { useAccount } from 'stores/account/hook'\n\nimport { AmmTrade, FilledType, dumpError400 } from 'loopring-sdk'\n\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport { AccountStatus } from 'state_machine/account_machine_spec'\n\nimport { RawDataTradeItem } from '@loopring-web/component-lib'\n\nexport function useGetMyTrades(market: any) {\n\n  const { apiKey, accountId, account, } = useAccount()\n\n  const userApi = useUserAPI()\n\n  const [myTrades, setMyTrades] = useState<any>([])\n\n  useCustomDCEffect(async () => {\n    if (!userApi || !accountId || !apiKey || !market) {\n      return\n    }\n\n    let tradesNew: any = []\n\n    if (account.status === AccountStatus.ACTIVATED) {\n\n      try {\n\n        const trades = await userApi.getUserTrades({\n          accountId,\n          market: market.amm,\n          fillTypes: FilledType.amm,\n        }, apiKey)\n\n        trades.trades.forEach((item: any) => {\n          const itemTmp: RawDataTradeItem = {\n\n            side: item[2],\n            amount: {\n              from: {\n                key: market?.baseShow,\n                value: item[2]\n              },\n              to: {\n                key: market?.quoteShow,\n                value: item[3]\n              }\n            },\n            price: {\n              key: market?.baseShow,\n              value: item[4]\n            },\n            fee: {\n              key: market?.baseShow,\n              value: item[6]\n            },\n            time: item[0]\n          }\n          tradesNew.push(itemTmp)\n          // tradesNew.push([item[2], item[3], item[4], item[6], item[0]])\n        })\n\n        console.log('market:', market, ' trades:', trades.trades, ' tradesNew:', tradesNew)\n\n      } catch (reason) {\n        dumpError400(reason)\n      }\n\n    }\n\n    setMyTrades(tradesNew)\n\n  }, [userApi, accountId, apiKey, market, account.status])\n\n  return {\n    myTrades,\n  }\n}\n\nexport function useGetRecentTrades(ammPoolAddress: string) {\n\n  const ammPoolApi = useAmmpoolAPI()\n\n  const [recentTrades, setRecentTrades] = useState<any>([])\n\n  useCustomDCEffect(() => {\n    if (!ammPoolApi || !ammPoolAddress) {\n      return\n    }\n\n    ammPoolApi.getAmmPoolTrades({\n      ammPoolAddress\n    }).then((trades) => {\n      let tradesNew: any = []\n      trades.trades.forEach((item: AmmTrade) => {\n        // tradesNew.push([item.side, item.price, item.feeAmount, item.createdAt])\n      })\n\n      console.log('useGetRecentTrades trades:', trades.trades, ' tradesNew:', tradesNew)\n      setRecentTrades(tradesNew)\n    }).catch((reason) => {\n      dumpError400(reason)\n    })\n\n  }, [ammPoolApi, ammPoolAddress])\n\n  return {\n    recentTrades,\n  }\n}\n","import { Box, Grid, } from '@material-ui/core'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport SwapPanel from './panel/SwapPanel'\nimport { useSwapNew, } from './hook'\nimport BasicInfoPanel from './panel/BasicInfoPanel'\nimport TradePanel from './panel/TradePanel'\nimport styled from 'styled-components'\n\nconst FixedStyle = styled(Box)`\n  @media only screen and (min-height: 680px ) and (min-width:1024px){\n    position: fixed;\n  }\n`\n\nconst SwapPage = withTranslation('common')(({ ...rest }: WithTranslation) => {\n\n    const { base, quote, tokens, market, poolAddress, swapProps } = useSwapNew()\n\n    const props = { base, quote, tokens, market }\n\n    return <>\n        <Grid container marginRight={3} alignContent={'flex-start'} >\n            <BasicInfoPanel {...{ ...rest, swapProps, props }} />\n            <TradePanel market={market} poolAddress={poolAddress} />\n        </Grid>\n\n        <Box display={'flex'} style={{ minWidth: 'var(--swap-box-width)' }} >\n            <FixedStyle>\n                <SwapPanel {...{\n                    ...rest, swapProps\n                }} />\n            </FixedStyle>\n\n        </Box>\n\n    </>\n});\n\n\nexport default SwapPage\n","import { useMemo, } from \"react\"\n\nimport { useActiveWeb3React } from \"../web3/useWeb3\"\n\nimport { WsAPI, ExchangeAPI, AmmpoolAPI, UserAPI, DEFAULT_TIMEOUT, } from 'loopring-sdk'\n\nfunction useApi(ApiClass: any, timeout = DEFAULT_TIMEOUT) {\n\n  const { chainId, active, } = useActiveWeb3React()\n\n    const genApi = () => {\n        if (!active || !chainId) {\n            return undefined\n        }\n\n        return new ApiClass(chainId, timeout)\n    }\n\n    const api = useMemo(genApi, [ApiClass, chainId, active])\n\n    return api\n}\n\nexport function useWsAPI() {\n    return useApi(WsAPI) as WsAPI\n}\n\nexport function useExchangeAPI() {\n    return useApi(ExchangeAPI) as ExchangeAPI\n}\n\nexport function useAmmpoolAPI() {\n    return useApi(AmmpoolAPI) as AmmpoolAPI\n}\n\nexport function useUserAPI() {\n    return useApi(UserAPI) as UserAPI\n}\n","import { useCallback, useMemo, useState, useRef, useEffect } from 'react'\n\nimport { useActiveWeb3React } from '../web3/useWeb3'\nimport { useWsAPI, } from './useApi2'\n\nimport { ChainId, getAccountArg, getCandlestickArg, \n    getAmmpoolArg, getTickerArg, WsProps } from 'loopring-sdk'\n\nconst stateArr = [\n    { key: 0, value: 'Connecting' },\n    { key: 1, value: 'Connected' },\n    { key: 2, value: 'Closing' },\n    { key: 3, value: 'Closed' }\n]\n\nexport const useWebsocket = ({ topics, verify, needApiKey, apiKey, }: { topics: any, needApiKey: boolean, apiKey: string|undefined, verify: boolean, }) => {\n    const ws = useRef<WebSocket | null>(null)\n    const [wsData, setMessage] = useState<any>(undefined)\n    const [readyState, setReadyState] = useState({ key: 0, value: 'Connecting' })\n\n    const { chainId, } = useActiveWeb3React()\n\n    const api = useWsAPI()\n\n    const creatWebSocket = () => {\n\n        if (!api || !chainId) {\n            return\n        }\n\n        api.getWsKey().then((wsApiKey: any) => {\n            let basePath: string = 'wss://ws.'\n            switch (chainId) {\n                case ChainId.MAINNET:\n                    basePath += process.env.REACT_APP_API_URL\n                    break\n                default:\n                    basePath += process.env.REACT_APP_API_URL_UAT\n                    basePath = 'wss://ws.uat2.loopring.io'\n            }\n\n            basePath += '/v3/ws?wsApiKey=' + wsApiKey\n    \n            try {\n                ws.current = new WebSocket(basePath)\n\n                const subTopics = (topics: any) => {\n                    let data: any = {\n                        op: 'sub',\n                        unsubscribeAll: 'true',\n                        topics: topics,\n                    }\n            \n                    if (needApiKey && apiKey) {\n                        data.apiKey = apiKey\n                    }\n            \n                    const flat_txt = JSON.stringify(data)\n                    sendMessage(flat_txt)\n                }\n    \n                ws.current.onopen = (_e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                    subTopics(topics)\n                }\n                \n                ws.current.onclose = (e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                }\n                \n                ws.current.onerror = (e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                }\n    \n                ws.current.onmessage = (e) => {\n                    setMessage(e.data)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n\n        })\n\n        \n    }\n\n    const webSocketInit = () => {\n        if (!ws.current || ws.current.readyState === 3) {\n            creatWebSocket()\n        }\n    }\n\n    const closeWebSocket = () => {\n        ws.current?.close()\n    }\n\n    const sendMessage = (msg: any) => {\n        ws.current?.send(msg)\n    }\n\n    const reconnect = () => {\n        try {\n            closeWebSocket()\n            ws.current = null\n            creatWebSocket()\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n\n        verify && webSocketInit()\n        return () => {\n            ws.current?.close()\n        }\n    }, [ws, verify])\n\n    return {\n        wsData,\n        readyState,\n        sendMessage,\n        closeWebSocket,\n        reconnect,\n    }\n}\n\nexport function useWs(topics: any, needApiKey: boolean, apiKey?: string, verify: boolean = true) {\n    const [socketData, setSocketData] = useState({})\n\n    const [isLocalPage, setIsLocalPage] = useState<boolean>(true)\n\n    useEffect(() => {\n\n        let mounted = true\n\n        const checkIsLocalPage = () => {\n            console.log('enter checkIsLocalPage')\n            document.addEventListener('visibilitychange', function () {\n                // page invisible trigger!\n                let isLocalPage = true\n                if (document.visibilityState === 'hidden') {\n                    isLocalPage = false\n                }\n                if (mounted) {\n                    setIsLocalPage(isLocalPage)\n                } else {\n                    console.log('unmounted! dont setIsLocalPage!')\n                }\n            })\n        }\n\n        checkIsLocalPage()\n\n        return () => {\n            mounted = false\n        }\n\n    }, [])\n\n    const { wsData, readyState, closeWebSocket, reconnect, sendMessage, } = useWebsocket({\n        topics,\n        apiKey,\n        needApiKey,\n        verify,\n    })\n\n    useEffect(() => {\n    \n        if (needApiKey && !apiKey) {\n            return\n        }\n\n        if (!verify) {\n            return\n        }\n\n        if (wsData === 'ping') {\n            try {\n                sendMessage('pong')\n            } catch (err) {\n                console.log(err)\n            }\n        } else {\n            if (wsData) {\n                setSocketData(JSON.parse(wsData))\n            }\n        }\n        \n        // if closed and is currente page then, reconnect.\n        if (readyState.key === 3 && isLocalPage) {\n            reconnect()\n        }\n        // if not current page, close it.\n        if (!isLocalPage) {\n            closeWebSocket()\n        }\n\n    }, [wsData, readyState, isLocalPage, verify, apiKey])\n\n    return {\n        socketData,\n    }\n}\n\nexport function useAmmpoolWs(apiKey: string) {\n\n    let topics: any[] = []\n\n    topics.push(getTickerArg('LRC-ETH'))\n\n    topics.push(getAmmpoolArg('0x18920d6E6Fb7EbE057a4DD9260D6D95845c95036'))\n\n    const needApiKey = false\n\n    const { socketData } = useWs(topics, needApiKey, apiKey)\n\n    return {\n        socketData,\n    }\n\n}\n","import { useRef } from 'react'\n\n// import Qrcode from 'components/qrcodes/Qrcode'\n\n\nimport { useAccount } from 'stores/account/hook'\n\nimport { useGetExchangeInfo, useGetGas, useGetMarkets, useGetTokens } from 'hooks/exchange/useExchangeAPI'\n\nimport { useAmmpoolWs } from 'hooks/common/useWebsocketApi'\n\nconst DebugPage = () => {\n\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const { account, isNoAccount, apiKey } = useAccount()\n\n  const {socketData} = useAmmpoolWs(apiKey)\n\n  const { markets } = useGetMarkets()\n\n  const { exchangeInfo } = useGetExchangeInfo()\n\n  const { tokens } = useGetTokens()\n\n  const { gas } = useGetGas()\n\n  const gasPrice = gas?.data\n\n  console.log('account:', account)\n  console.log('exchangeInfo:', exchangeInfo)\n  console.log('tokens:', tokens)\n\n  const showAddr = account.accAddr ? account.accAddr : ''\n\n  return (\n    <div>\n      Debug\n      <div>account:{JSON.stringify(account)}</div>\n      <div>eddsaKey:{account.eddsaKey}</div>\n      <div>wsdata: {JSON.stringify(socketData)}</div>\n      <div>----------------------------</div>\n      <div>markets:{JSON.stringify(markets)}</div>\n      <div>----------------------------</div>\n      <div>depositAddress:{exchangeInfo?.depositAddress}</div>\n      <div>exchangeAddress:{exchangeInfo?.exchangeAddress}</div>\n      <div>----------------------------</div>\n      {/*<div>exchangeInfo:{JSON.stringify(exchangeInfo)}</div>\n      <div>----------------------------</div>*/}\n      <div>tokens:{JSON.stringify(tokens)}</div>\n      <div>----------------------------</div>\n\n      {/*{isNoAccount() && <Qrcode value={showAddr} size={300} />}*/}\n      {/*<input type='input' ref={inputRef} width=\"150px\" />*/}\n      {/*<DepositBtn onClick={deposit} />*/}\n    </div>\n  )\n\n}\n\nexport default DebugPage\n","import React from 'react'\nimport { TransactionTable } from '@loopring-web/component-lib'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { Box, Paper } from '@material-ui/core'\nimport styled from '@emotion/styled'\nimport { useGetTxs } from './hooks'\n\nconst StylePaper = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  flex: 1;\n  background-color: ${({ theme }) => theme.colorBase.background().default};\n  border-radius: ${({ theme }) => theme.unit}px;\n  padding: 20px;\n\n  .title {\n    font-family: Gilroy-Medium;\n    font-size: ${({ theme }) => theme.unit * 3}px;\n    line-height: 19px;\n  }\n\n  .tableWrapper {\n    display: flex;\n    margin-top: 20px;\n    border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n    border-radius: ${({ theme }) => theme.unit}px;\n    padding: 26px;\n    flex: 1;\n    \n    .rdg {\n      flex: 1;\n    }\n  }\n` as typeof Paper;\n\nconst TxPanel = withTranslation('common')((rest:WithTranslation<'common'>) => {\n    const container = React.useRef(null);\n    const [pageSize, setPageSize] = React.useState(10);\n    React.useEffect(() => {\n        // @ts-ignore\n        let height = container?.current?.offsetHeight;\n        if (height) {\n            setPageSize(Math.floor((height - 120) / 44) - 2);\n        }\n    }, [container, pageSize]);\n    const { txs } = useGetTxs()\n\n    const txList = txs !== undefined ? txs: []\n    \n    return (\n        <StylePaper ref={container}>\n            <div className=\"title\">Transactions</div>\n            <div className=\"tableWrapper\">\n                <TransactionTable {...{\n                  rawData: txList,\n                  pagination: {\n                    pageSize: pageSize\n                  },\n                  ...rest\n                }} />\n            </div>\n        </StylePaper>\n    )\n})\n\nexport default TxPanel\n","import { useState } from 'react'\n\nimport { useAmmpoolAPI, useUserAPI } from \"hooks/exchange/useApi\"\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\nimport { useAccount } from 'stores/account/hook'\nimport { TransactionStatus, RawDataTransactionItem } from '@loopring-web/component-lib'\n\nimport { TxStatus } from 'loopring-sdk'\nimport { TransactionTradeTypes } from '@loopring-web/component-lib/components/tableList/transactionsTable/Interface';\n\nexport function useGetTxs() {\n\n    const { accountId, apiKey } = useAccount()\n\n    const userApi = useUserAPI()\n\n    const [txs, setTxs] = useState<RawDataTransactionItem[]>()\n\n    useCustomDCEffect(async() => {\n\n        if (!userApi || !accountId || !apiKey) {\n            return\n        }\n\n        const txs = await userApi.getUserTranferList({ accountId }, apiKey)\n\n        let tmpTx: RawDataTransactionItem[] = []\n\n        txs.transactions.forEach((item: any, index: number) => {\n            tmpTx.push({from: {\n                    address: item.senderAddress,\n                    env: ''\n                },\n                to: {\n                    address: item.receiverAddress,\n                    env: ''\n                },\n                amount: item.amount,\n                fee: {\n                    unit: item.feeTokenSymbol,\n                    value: item.feeAmount\n                },\n                memo: item.symbol,\n                time: item.timestamp,\n                txnHash: item.hash,\n                status: item.status,\n                token:item.token,\n                tradeType:TransactionTradeTypes.allTypes,\n            })\n        })\n\n        setTxs(tmpTx)\n\n    }, [accountId, apiKey, userApi])\n\n    return {\n        txs,\n    }\n}\n","import { useState, useEffect, useRef } from 'react'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { PriceTag } from '@loopring-web/component-lib/static-resource'\nimport { Box, Paper, Typography } from '@material-ui/core'\nimport styled from '@emotion/styled'\nimport { AssetTitleProps, AssetTitle, AssetsTable, DoughnutChart, ScaleAreaChart, ChartType, ToggleButtonGroup } from '@loopring-web/component-lib'\nimport { useModals } from 'hooks/modal/useModals'\nimport { useGetUserBalances } from 'hooks/exchange/useUserAPI'\nimport { useGetTokens } from 'hooks/exchange/useExchangeAPI'\n\nconst StylePaper = styled(Box)`\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    background-color: ${({ theme }) => theme.colorBase.background().default};\n    border-radius: ${({ theme }) => theme.unit}px;\n    padding: 20px;\n\n    .title {\n        font-family: Gilroy-Medium;\n        font-size: ${({ theme }) => theme.unit * 3}px;\n        line-height: 19px;\n    }\n\n    .tableWrapper {\n        margin-top: ${({ theme }) => theme.unit * 1.5}px;\n        border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n        border-radius: ${({ theme }) => theme.unit}px;\n        padding: 26px;\n    }\n` as typeof Box;\n\nconst StyledChartWrapper = styled(Box)`\n    height: 225px;\n    > div {\n        position: relative;\n        width: calc(50% - 6px);\n        height: 100%;\n        background-color: ${({ theme }) => theme.colorBase.background().default};\n        border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n        border-radius: ${({ theme }) => theme.unit}px;\n        padding: ${({ theme }) => theme.unit * 2.5}px ${({ theme }) => theme.unit * 3}px;\n    }\n`\n\nconst StyledBtnGroupWrapper = styled(Box)`\n    position: absolute;\n    z-index: 10000;\n    right: ${({ theme }) => theme.unit * 3}px;\n    bottom: ${({ theme }) => theme.unit * 2.5}px;\n`\n\nconst toggleData = [\n    {value: '24 H', key: '24 H'},\n    {value: '1 W', key: '1 W'},\n    {value: 'ALL', key: 'ALL'},\n]\n\nconst DoughnutData = [\n    {\n        name: 'LP Token',\n        value: 12898.0\n    },\n    {\n        name: 'LRC',\n        value: 12898.50\n    },\n    {\n        name: 'ETH',\n        value: 36547.00\n    },\n    {\n        name: 'DOT',\n        value: 23898.09\n    },\n    {\n        name: 'BTC',\n        value: 3489\n    },\n    {\n        name: 'CRV',\n        value: 180.09\n    },\n    {\n        name: 'ALICE',\n        value: 150.7\n    },\n    {\n        name: 'LINA',\n        value: 230.5\n    },\n]\n\nconst testTrendData:any = [\n    {\n        timeStamp: 150,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 160,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 170,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 180,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 190,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 200,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 210,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 220,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 230,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 240,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n]\n\nconst AssetPanel = withTranslation('common')(({t,...rest}: WithTranslation) => {\n    const container = useRef(null);\n    const [pageSize, setPageSize] = useState(10);\n    \n    const [chartPeriod, setChartPeriod] = useState('24 H')\n\n    useEffect(() => {\n        // @ts-ignore\n        let height = container?.current?.offsetHeight;\n        if (height) {\n            setPageSize(Math.floor((height - 120) / 44) - 1);\n        }\n    }, [container, pageSize]);\n\n    const {\n        ShowDeposit,\n        ShowTransfer,\n        ShowWithdraw,\n        ShowResetAccount,\n    } = useModals()\n\n    const onShowDeposit = () => {\n        ShowDeposit(true)\n    }\n\n    const onShowTransfer = () => {\n        ShowTransfer(true)\n    }\n\n    const onShowWithdraw = () => {\n        ShowWithdraw(true)\n    }\n\n    const AssetTitleProps: AssetTitleProps = {\n        assetInfo: {\n            totalAsset: 123456.789,\n            priceTag: PriceTag.Dollar,\n        },\n        onShowDeposit,\n        onShowTransfer,\n        onShowWithdraw,\n    }\n\n    const { tokens: tokensAll } = useGetTokens()\n\n    const tokens = tokensAll?.tokenSymbolMap\n\n    const { balances } = useGetUserBalances(tokens)\n\n    return (\n        <>\n            <Box>\n                <AssetTitle  {...{\n                    t,\n                    ...rest,\n                    ...AssetTitleProps\n                }} />\n            </Box>\n\n            {/*<div className=\"title\">{t('labelAssetsTitle')}</div>*/}\n\n            <StyledChartWrapper display={'flex'} justifyContent={'space-between'} alignItems={'center'} marginTop={2}>\n                <Paper component={'div'}>\n                    <Typography component=\"span\" color=\"textSecondary\" variant=\"body1\">Asset Distribution</Typography>\n                    <DoughnutChart data={DoughnutData} />\n                </Paper>\n                <Paper component={'div'}>\n                    <Typography component=\"span\" color=\"textSecondary\" variant=\"body1\">Total Assets</Typography>\n                    <ScaleAreaChart type={ChartType.Trend} data={testTrendData} />\n                    <StyledBtnGroupWrapper>\n                        <ToggleButtonGroup exclusive size=\"small\" {...{...rest, t, data: toggleData, value: chartPeriod, setValue: setChartPeriod}} />\n                    </StyledBtnGroupWrapper>\n                </Paper>\n            </StyledChartWrapper>\n            <StylePaper marginTop={2}>\n                <div className=\"tableWrapper\" ref={container}>\n                    <AssetsTable {...{\n                        rawData: [],\n                        pagination: {\n                            pageSize: pageSize\n                        }\n                    }} />\n                </div>\n            </StylePaper>\n        </>\n    )\n})\n\nexport default AssetPanel\n","import React from 'react'\nimport { TradeTable } from '@loopring-web/component-lib'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport styled from '@emotion/styled'\nimport { Box, Paper } from '@material-ui/core'\nimport { useGetTxs } from './hooks'\n\nconst StylePaper = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  flex: 1;\n  background-color: ${({ theme }) => theme.colorBase.background().default};\n  border-radius: ${({ theme }) => theme.unit}px;\n  padding: 20px;\n\n  .title {\n    font-family: Gilroy-Medium;\n    font-size: ${({ theme }) => theme.unit * 3}px;\n    line-height: 19px;\n  }\n\n  .tableWrapper {\n    display: flex;\n    flex: 1;\n    margin-top: 20px;\n    border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n    border-radius: ${({ theme }) => theme.unit}px;\n    padding: 26px;\n\n    .rdg {\n      flex: 1;\n    }\n  }\n` as typeof Paper;\n\nconst TradePanel = withTranslation('common')((rest:WithTranslation<'common'>) => {\n    const container = React.useRef(null);\n    const [pageSize, setPageSize] = React.useState(10);\n    React.useEffect(() => {\n        // @ts-ignore\n        let height = container?.current?.offsetHeight;\n        if (height) {\n            setPageSize(Math.floor((height - 120) / 44) - 2);\n        }\n    }, [container, pageSize]);\n\n    const { txs } = useGetTxs()\n\n    const txList = txs !== undefined ? txs: []\n\n    return (\n        <>\n            <StylePaper ref={container}>\n                <div className=\"title\">Trades</div>\n                <div className=\"tableWrapper\">\n                    <TradeTable {...{\n                      // rawData: txList,\n                      rawData: [],\n                      pagination: {\n                        pageSize: pageSize\n                      },\n                      ...rest}}/>\n                </div>\n            </StylePaper>\n        </>\n    )\n})\n\nexport default TradePanel\n","import { useState } from 'react'\n\nimport { useAmmpoolAPI, useUserAPI } from \"hooks/exchange/useApi\"\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\nimport { useAccount } from 'stores/account/hook'\nimport { TransactionStatus, RawDataTransactionItem } from '@loopring-web/component-lib'\n\nimport { TxStatus } from 'loopring-sdk'\nimport { TransactionTradeTypes } from '@loopring-web/component-lib/components/tableList/transactionsTable/Interface';\n\n/*\n    {\n        from: {\n            address: '0x5e8cxxxxxe741',\n            env: 'Ethereum'\n        },\n        to: 'My Loopring',\n        amount: 25987.09324,\n        fee: {\n            unit: 'ETH',\n            value: 0.0993\n        },\n        memo: 'NoteNoteNoteNoteNoteNoteNote',\n        time: 3,\n        txnHash: '0x2b21xxxxxxx02',\n        status: TransactionStatus.success\n    },\n */\n\nexport function useGetTxs() {\n\n    const { accountId, apiKey } = useAccount()\n\n    const userApi = useUserAPI()\n\n    const [txs, setTxs] = useState<RawDataTransactionItem[]>()\n\n    useCustomDCEffect(async() => {\n\n        if (!userApi || !accountId || !apiKey) {\n            return\n        }\n\n        const txs = await userApi.getUserTranferList({ accountId }, apiKey)\n\n        let tmpTx: RawDataTransactionItem[] = []\n\n        txs.transactions.forEach((item: any, index: number) => {\n            tmpTx.push({from: {\n                    address: item.senderAddress,\n                    env: ''\n                },\n                to: {\n                    address: item.receiverAddress,\n                    env: ''\n                },\n                amount: item.amount,\n                fee: {\n                    unit: item.feeTokenSymbol,\n                    value: item.feeAmount\n                },\n                memo: item.symbol,\n                time: item.timestamp,\n                txnHash: item.hash,\n                status: item.status,\n                token:item.token,\n                tradeType:TransactionTradeTypes.allTypes,\n            })\n        })\n\n        setTxs(tmpTx)\n\n    }, [accountId, apiKey, userApi])\n\n    return {\n        txs,\n    }\n}\n","\nimport React from 'react'\nimport { OrderHistoryTable } from '@loopring-web/component-lib'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { Box, Paper } from '@material-ui/core'\nimport styled from '@emotion/styled'\n\n// const rawDataOrderHistory: any[] = [\n//     ['Sell', [{type: 'out', key: 'ETH', value: 25}, {type: 'in', key: 'LRC', value: 100}], 0.12, [{\n//         type: 'out',\n//         key: 'ETH',\n//         value: 25\n//     }, {type: 'in', key: 'LRC', value: 100}], 0.0054, 3, 'Filled'],\n//     ['Buy', [{type: 'out', key: 'ETH', value: 25}, {type: 'in', key: 'LRC', value: 100}], 0.12, [{\n//         type: 'out',\n//         key: 'ETH',\n//         value: 25\n//     }, {type: 'in', key: 'LRC', value: 100}], 0.0054, 3, 'Filled'],\n//     ['Buy', [{type: 'out', key: 'ETH', value: 25}, {type: 'in', key: 'LRC', value: 100}], 0.12, [{\n//         type: 'out',\n//         key: 'ETH',\n//         value: 25\n//     }, {type: 'in', key: 'LRC', value: 100}], 0.0054, 3, 'Cancelled'],\n//     ['Sell', [{type: 'out', key: 'ETH', value: 25}, {type: 'in', key: 'LRC', value: 100}], 0.12, [{\n//         type: 'out',\n//         key: 'ETH',\n//         value: 25\n//     }, {type: 'in', key: 'LRC', value: 100}], 0.0054, 3, 'Filled'],\n//     ['Sell', [{type: 'out', key: 'ETH', value: 25}, {type: 'in', key: 'LRC', value: 100}], 0.12, [{\n//         type: 'out',\n//         key: 'ETH',\n//         value: 25\n//     }, {type: 'in', key: 'LRC', value: 100}], 0.0054, 3, 'Cancelled'],\n// ]\n\nconst StylePaper = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    background-color: ${({ theme }) => theme.colorBase.background().default};\n    border-radius: ${({ theme }) => theme.unit}px;\n    padding: 20px;\n\n    .title {\n        font-family: Gilroy-Medium;\n        font-size: ${({ theme }) => theme.unit * 3}px;\n        line-height: 19px;\n    }\n\n    .tableWrapper {\n        display: flex;\n        flex: 1;\n        margin-top: 20px;\n        border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n        border-radius: ${({ theme }) => theme.unit}px;\n        padding: 26px;\n\n        .rdg {\n            flex: 1;\n        }\n    }\n` as typeof Paper;\n\nconst OrderPanel = withTranslation('common')((rest: WithTranslation) => {\n    const container = React.useRef(null);\n    const [pageSize, setPageSize] = React.useState(10);\n    React.useEffect(() => {\n        // @ts-ignore\n        let height = container?.current?.offsetHeight;\n        if (height) {\n            setPageSize(Math.floor((height - 120) / 44) - 2);\n        }\n    }, [container, pageSize]);\n\n    return (\n        <>\n            <StylePaper ref={container}>\n                <div className=\"title\">Order History</div>\n                <div className=\"tableWrapper\">\n                    <OrderHistoryTable {...{\n                        pagination: {\n                            pageSize: pageSize\n                        },\n                        rawData: [],\n                        ...rest\n                    }} />\n                </div>\n            </StylePaper>\n        </>\n    )\n})\n\nexport default OrderPanel\n","import styled from '@emotion/styled';\nimport { Box, Button, Divider, Grid, Switch, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { UpColor, Currency, DropDownIcon } from '@loopring-web/component-lib/src/static-resource';\nimport {\n    BtnLanguage,\n    OutlineSelect,\n    OutlineSelectItem, QRCodePanel,\n    TypographyStrong, useSettings\n} from '@loopring-web/component-lib';\nimport { Trans, useTranslation, WithTranslation, withTranslation } from 'react-i18next';\nimport { useTheme } from '@emotion/react';\nimport { LanguageKeys } from '@loopring-web/component-lib/static-resource';\n\n// const MuiModalStyled = styled(MuiModal)`\n//   //background: ${({theme}) => theme.colorBase.background().secondary};\n//   // .MuiBackdrop-root{\n//   //   z-index: -1;\n//   //   background-color: ${({theme}) => theme.colorBase.background().outline};\n//   // }\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n// ` as typeof MuiModal;\n// const BlockStyled = styled(Box)`\n//   ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\n//   background: ${({theme}) => theme.colorBase.background().secondary};\n//   max-height: var(--panel-setting-height);\n//   max-width: var(--panel-setting-width);\n//   display: flex;\n//   justify-content: space-around;\n//   align-items: center;\n//   overflow: scroll;\n//   padding: ${({theme}) => theme.unit*8}px\n// `;\n\nconst StyledPaper = styled(Grid)`\n  width: 100%;\n  height: 100%;\n  background-color: ${({theme}) => theme.colorBase.background().default};\n  ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\n`\n\nconst StyledSwitch = styled(Switch)(({theme}) => ({\n    \"& .Mui-checked\": {\n        color: theme.colorBase.textPrimary,\n        '& + .MuiSwitch-track.MuiSwitch-track': {\n            border: `solid ${theme.colorBase.success}`,\n        },\n        '& .MuiSwitch-thumb': {\n            backgroundColor: theme.colorBase.success,\n        }\n    },\n    '& .MuiSwitch-track': {\n        border: `solid ${theme.colorBase.error}`,\n        opacity: 1\n    },\n    '& .MuiSwitch-thumb': {\n        backgroundColor: theme.colorBase.error,\n    }\n}));\n\nexport const BtnCurrency = ({t, currency, label, handleChange}: any) => {\n    const [state, setState] = React.useState<string>(currency ? currency : Currency.dollar);\n    const _handleChange = React.useCallback((event: React.ChangeEvent<any>) => {\n        setState(event.target.value);\n        if (handleChange) {\n\n            handleChange(event.target.value)\n        }\n    }, [handleChange])\n    return <OutlineSelect aria-label={t(label)} IconComponent={DropDownIcon}\n                          labelId=\"language-selected\"\n                          id=\"language-selected\"\n                          value={state} autoWidth\n                          onChange={_handleChange}>\n        <OutlineSelectItem value={Currency.dollar}>$ {t('labelUSDollar')}</OutlineSelectItem>\n            <OutlineSelectItem value={Currency.yen}>¥ {t('labelCNYYuan')}</OutlineSelectItem>\n    </OutlineSelect>\n}\n\nconst StyledDivider = styled(Divider)`\n  margin: ${({theme}) => theme.unit}px 0 ${({theme}) => theme.unit}px 0px;\n`\nconst DividerBlock = styled(Divider)`\n  margin: 0;\n  flex: 1;\n  width: 1px;\n  height: ${({theme}) => theme.unit * 3}px;\n  background: ${({theme}) => theme.colorBase.focus};\n`\n\n\n\nexport const SettingPanel = withTranslation(['common', 'layout'])(({t,i18n, ...rest}: & WithTranslation) => {\n    const theme = useTheme();\n    const {setUpColor,setLanguage,setCurrency,currency,upColor} = useSettings()\n    const language = i18n.language;\n    const handleOnLanguageChange = (lang: LanguageKeys) => {\n        setLanguage(lang);\n        i18n.changeLanguage(lang);\n    }\n    const handleOnCurrencyChange = (value: any) => {\n        setCurrency(value);\n    }\n    const handleColorChange = (e:any) => {\n        if(e.target.checked){\n            setUpColor(UpColor.green) ;\n        }else{\n            setUpColor(UpColor.red);\n        }\n    }\n    return <Grid container direction={'column'} justifyContent={'space-between'} alignItems={'stretch'} flexWrap={'nowrap'}>\n        <Typography variant={'h4'} component={'h3'} marginY={1} paddingLeft={2}>{t('labelTitleSecurity')}</Typography>\n        <StyledPaper item xs={12} display={'flex'} flexDirection={'column'} marginBottom={2} paddingY={2}>\n            <Box component={'section'} display={'flex'} flexDirection={'column'}>\n                <Typography variant={'h5'} component={'h4'} paddingX={2}>{t('labelTitleResetL2Keypair')}</Typography>\n                <StyledDivider/>\n                <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n                      alignItems={'flex-start'} paddingX={2} marginBottom={2}>\n                    <Grid item xs={8} display={'flex'} flexDirection={'column'}>\n                        <Typography variant={'body1'} component={'p'}>\n                            <Trans i18nKey=\"resetDescription\">\n                                Create a new signing key for layer-2 authentication (no backup needed). This will\n                                <TypographyStrong component={'span'}>cancel all your pending orders</TypographyStrong>.\n                            </Trans>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} display={'flex'} flexDirection={'column'} justifyContent={'space-evenly'}\n                          alignItems={'flex-end'} alignSelf={'stretch'}>\n                        <Button variant={'outlined'} size={'medium'} color={'primary'}>{t('labelBtnReset')}</Button>\n                    </Grid>\n                    <Grid item xs={12} display={'flex'} flexDirection={'row'} justifyContent={'flex-end'}\n                          alignItems={'center'} alignSelf={'stretch'}>\n                        <Typography variant={'body2'} component={'p'}\n                                    paddingTop={1}>{t('labelHadChangPassword', {passDay: '14 hours'})}</Typography>\n                    </Grid>\n\n                </Grid>\n            </Box>\n            <Box component={'section'} display={'flex'} flexDirection={'column'}>\n                <Typography variant={'h5'} component={'h4'} paddingX={2}>{t('labelTitleExportAccount')}</Typography>\n                <StyledDivider/>\n                <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n                      alignItems={'flex-start'} paddingX={2} marginBottom={2}>\n                    <Grid item xs={7} display={'flex'} flexDirection={'column'}>\n                        <Typography variant={'body1'} component={'p'}>{t('descriptionExportAccount')}</Typography>\n                    </Grid>\n                    <Grid item xs={5} display={'flex'} flexDirection={'column'} justifyContent={'space-evenly'}\n                          alignItems={'flex-end'} alignSelf={'stretch'}>\n                        <Grid item> <Button variant={'outlined'} size={'medium'}\n                                            color={'primary'}>{t('labelBtnExportAccount')}</Button></Grid>\n                    </Grid>\n                </Grid>\n            </Box>\n        </StyledPaper>\n\n        <Typography variant={'h4'} component={'h3'} marginY={1} paddingLeft={2}>{t('labelTitlePreferences')}</Typography>\n        <StyledPaper item xs={12} display={'flex'} flexDirection={'column'} marginBottom={2} paddingY={2}>\n            <Box component={'section'} display={'flex'} flexDirection={'column'}>\n                {/*<Typography variant={'h5'} component={'h4'} paddingX={2}>{t('labelTitleLayout')}</Typography>*/}\n                {/*<StyledDivider/>*/}\n                <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n                      alignItems={'flex-start'} paddingX={2} marginBottom={2}>\n                    <Grid item xs={7} display={'flex'} flexDirection={'column'}>\n                        <Typography variant={'body1'} component={'p'}>{t('labelLanguage')}</Typography>\n                    </Grid>\n                    <Grid item xs={5} display={'flex'} flexDirection={'column'} justifyContent={'space-evenly'}\n                          alignItems={'flex-end'} alignSelf={'stretch'}>\n                        <Grid item>\n                            <BtnLanguage {...{\n                                t, ...rest,\n                                language,\n                                label: 'languageSetting',\n                                handleChange: handleOnLanguageChange\n                            }}></BtnLanguage>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n                      alignItems={'flex-start'} paddingX={2} marginBottom={2}>\n                    <Grid item xs={7} display={'flex'} flexDirection={'column'}>\n                        <Typography variant={'body1'} component={'p'}>{t('labelCurrency')}</Typography>\n                    </Grid>\n                    <Grid item xs={5} display={'flex'} flexDirection={'column'} justifyContent={'space-evenly'}\n                          alignItems={'flex-end'} alignSelf={'stretch'}>\n                        <Grid item>\n                            <BtnCurrency {...{\n                                t, ...rest,\n                                currency,\n                                label: 'currencySetting',\n                                handleChange: handleOnCurrencyChange\n                            }}></BtnCurrency>\n\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n                      alignItems={'flex-start'} paddingX={2}>\n                    <Grid item xs={7} display={'flex'} flexDirection={'column'}>\n                        <Typography variant={'body1'} component={'p'}>{t('labelColors')}</Typography>\n                    </Grid>\n                    <Grid item xs={5} display={'flex'} flexDirection={'row'} justifyContent={'flex-end'}\n                          alignItems={'center'} alignSelf={'stretch'}>\n                        <Typography variant={'body1'} component={'span'} paddingX={2}>\n                            <Trans i18nKey=\"whichColorIsUp\">\n                                <span style={{\n                                    textTransform: 'capitalize',\n                                    color: upColor === UpColor.green ? theme.colorBase.success : theme.colorBase.error\n                                }}>{{up: upColor === UpColor.green ? t('labelgreen') : t('labelred')}} up</span>\n                                and <span style={{\n                                textTransform: 'capitalize',\n                                color: upColor === UpColor.green ? theme.colorBase.error : theme.colorBase.success\n                            }}>{{down: upColor === UpColor.green ? t('labelred') : t('labelgreen')}} down</span>\n                            </Trans>\n                        </Typography>\n                        <StyledSwitch checked={upColor === UpColor.green} color=\"default\"\n                                      onChange={handleColorChange}/>\n                    </Grid>\n                </Grid>\n            </Box>\n\n        </StyledPaper>\n\n    </Grid>\n})\n\n// export const SettingPage = ({open,onClose}: { open:boolean, onClose:(e:any)=>void})=>{\n//     return  <MuiModalStyled\n//         open={open}\n//         onClose={onClose}\n//         aria-labelledby=\"modal-modal-title\"\n//         aria-describedby=\"modal-modal-description\"\n//     >\n//         <BlockStyled >\n//            <SettingPanel/>\n//         </BlockStyled>\n//     </MuiModalStyled>\n// }\n\n\n","import { useRouteMatch } from 'react-router'\n\nimport { Box, Paper } from '@material-ui/core'\nimport {\n    DepositPanel,\n    SubMenu,\n    SubMenuList as BasicSubMenuList,\n} from '@loopring-web/component-lib'\nimport { useTranslation, withTranslation } from 'react-i18next'\nimport styled from '@emotion/styled'\nimport { subMenuLayer2 } from '@loopring-web/component-lib/src/static-resource'\n\nimport TxPanel from './TxPanel'\nimport AssetPanel from './AssetPanel'\nimport TradePanel from './TradePanel'\nimport OrderPanel from './OrderPanel'\nimport { SettingPanel } from '../SettingPage';\nimport store from '../../stores';\nimport { AccountStatus } from '../../state_machine/account_machine_spec';\nimport { useModalProps } from '../../layouts/header/hook';\n\nexport const subMenu = subMenuLayer2;\nconst BoxStyle = styled(Box)`\n  ${({theme})=>`\n    background-color: ${theme.colorBase.background().default};\n    width: 100%;\n    min-width:auto;\n    ${theme.border.defaultFrame({c_key: 'blur'})};\n    & > div{\n      background-color:initial;\n      border:0;\n      width:auto;\n      min-width: var(--swap-box-width);\n      max-width: 520px;\n    }\n    `\n  }\n   \n` as typeof Box\n\nconst SubMenuList = withTranslation(['layout','common'], { withRef: true })(BasicSubMenuList);\nexport const Layer2Page = () => {\n\n    let match: any = useRouteMatch(\"/layer2/:item\")\n    const {status: accStatus} = store.getState().account;\n    const {t,...rest} = useTranslation()\n    const selected = match?.params.item ?? 'assets';\n    const {depositProps} = useModalProps()\n\n    return <>  { accStatus === AccountStatus.NOACCOUNT\n    || accStatus === AccountStatus.DEPOSITING\n    || accStatus === AccountStatus.DEPOSIT_TO_CONFIREM ?\n        <BoxStyle display={'flex'} flexWrap={'wrap'} alignItems={'center'} justifyContent={'center'} alignContent={'flex-start'}>\n            <DepositPanel  {...{\n                ...rest, ...depositProps,\n                title: t('depositTitleAndActive'),\n                description: 'depositAndActiveDescription'\n            }} > </DepositPanel>\n        </BoxStyle>: <>\n            <Box width={'200px'} display={'flex'} justifyContent={'stretch'} marginRight={3}>\n                <SubMenu>\n                    <SubMenuList selected={selected} subMenu={subMenu as any} />\n                </SubMenu>\n            </Box>\n            <Box minHeight={420} display={'flex'} alignItems={'stretch'} flexDirection={'column'} marginTop={0} flex={1}>\n                {selected === 'assets' && <AssetPanel />}\n                {selected === 'transactions' && <TxPanel />}\n                {selected === 'trades' && <TradePanel />}\n                {selected === 'orders' && <OrderPanel />}\n                {selected === 'setting' && <SettingPanel />}\n            </Box>\n        </>\n    }\n        </>\n\n\n\n}\n","import React from 'react';\nimport { useAmmMap } from '../../../stores/Amm/AmmMap';\nimport {\n    AmmDetail,\n    CustomError,\n    ErrorMap,\n\n} from '@loopring-web/component-lib/src/static-resource';\nimport {  useTicker } from '../../../stores/ticker';\nimport { PoolsRow } from '@loopring-web/component-lib';\nimport { deepClone } from '../../../utils/obj_tools';\nimport { STATUS } from '../../../stores/constant';\n\nexport function useAmmMapUI<R extends Object,I extends Object>({pageSize}:{pageSize:number}) {\n    const [rawData,setRawData] = React.useState<Array<AmmDetail<any>>|[]>([]);\n    const [page,setPage] = React.useState<number>(1);\n    // const [_ammTradeMap,setAmmTradeMap]  = React.useState<{[key in keyof R]?:PoolsRow<I>}>({});\n    const {\n        ammMap,\n        status: ammMapStatus,\n        errorMessage: errorAmmMap,\n        statusUnset:ammMapStatusUnset,\n        updateAmmMap,\n    } = useAmmMap();\n    const {\n        tickerMap,\n        status: tickerStatus,\n        errorMessage: errorTickerMap,\n        statusUnset: tickerStatusUnset ,\n        updateTickers,\n    } = useTicker();\n    const updateRawData = ()=>{\n        try {\n            const _ammMap:PoolsRow<I>  = deepClone(ammMap);\n            for (let tickerMapKey in tickerMap) {\n                _ammMap[tickerMapKey].tradeFloat =  tickerMap[tickerMapKey]\n            }\n            let data = (ammMap && ammMap !== {}) ? Object.keys(ammMap).map((ammKey:string) => {\n                // @ts-ignore\n                return _ammMap[ammKey]\n            }):[]\n            setRawData(data)\n        }catch (error){\n            throw new CustomError({...ErrorMap.NO_TOKEN_MAP,options:error})\n        }\n\n    }\n\n\n\n    const updateTickersUI = React.useCallback((_page)=>  {\n        // if(page !== _page)  {\n            setPage(_page);\n            if(ammMap && Object.keys(ammMap).length>0){\n                // console.log('page get ticker',Object.keys(ammMap).length,page - 1 , page - 1 * pageSize + pageSize);\n                const keys = []\n                for (let i =  ( page - 1) * pageSize; i<Object.keys(ammMap).length && i <  (page - 1) * pageSize + pageSize   ;i++ ){\n                    keys.push(Object.keys(ammMap)[i]);\n                }\n                updateTickers(keys);\n            }\n        // }\n        // else{\n        //\n        // }\n    },[ammMap,page,pageSize,updateTickers])\n    React.useEffect(() => {\n        switch (tickerStatus) {\n            case \"ERROR\":\n                console.log(\"ERROR\",'get ticker error,ui');\n                tickerStatusUnset()\n                break;\n            case \"PENDING\":\n                break;\n            case \"DONE\":\n                tickerStatusUnset()\n                updateRawData()\n                break;\n            default:\n                break;\n        }\n    }, [tickerStatus, tickerStatusUnset]);\n\n    // init AmmMap at begin\n    React.useEffect(() => {\n        if (!ammMap || Object.keys(ammMap).length === 0) {\n            updateAmmMap();\n        } else{\n            updateTickersUI(page)\n        }\n    },[]);\n\n\n\n    React.useEffect(() => {\n        switch (ammMapStatus) {\n            case \"ERROR\":\n                console.log(\"ERROR\",'get ammMap error,ui');\n                ammMapStatusUnset();\n                break;\n            case STATUS.PENDING:\n                console.log(\"PENDING\",'get ammMap error,ui');\n                // ammMapStatusUnset();\n                break;\n            case STATUS.DONE:\n                ammMapStatusUnset();\n                updateTickersUI(1)\n                break;\n            default :\n                break;\n        }\n    }, [ammMapStatus,ammMapStatusUnset,updateTickersUI]);\n    return {\n        page,\n        rawData,\n        updateTickersUI,\n    }\n}\n\n// export function useTickerUI({pageState:number,pageSize:}) {\n//\n//     React.useEffect(() => {\n//         if (!tickerMap || Object.keys(tickerMap).length === 0) {\n//             updateAmmMap();\n//         }else{\n//\n//         }\n//     }, [ammMap, updateAmmMap]);\n//     React.useEffect(() => {\n//         switch (ammMapStatus) {\n//             case \"ERROR\":\n//                 console.log(\"ERROR\");\n//                 ammMapStatusUnset()\n//                 break;\n//             case \"PENDING\":\n//                 ammMapStatusUnset()\n//                 break;\n//             default:\n//                 break;\n//         }\n//     }, [ammMapStatus, ammMapStatusUnset]);\n//     return {\n//         ammMapObj: {\n//             ammMap,\n//             status: ammMapStatus,\n//             errorMessage: errorAmmMap\n//         }\n//     }\n// }","import { WithTranslation, withTranslation } from 'react-i18next'\nimport { Box, } from '@material-ui/core'\nimport styled from '@emotion/styled'\n\nimport React from 'react';\nimport { useAmmMapUI } from './hook';\n\nimport { PoolsTable } from '@loopring-web/component-lib';\n\nconst StylePaper = styled(Box)`\n  width: 100%;\n  height: 100%;\n  flex: 1;\n  background-color: ${({theme}) => theme.colorBase.background().default};\n  border-radius: ${({theme}) => theme.unit}px;\n\n  .rdg {\n    flex: 1;\n  }\n\n` as typeof Box;\n\n\nexport const PoolsPanel = withTranslation('common')(<R, I>({t, ...rest}: WithTranslation) => {\n    const container = React.useRef(null);\n    const [pageSize, setPageSize] = React.useState(10);\n    const {updateTickersUI,rawData, page} = useAmmMapUI({pageSize});\n\n    React.useEffect(() => {\n        // @ts-ignore\n        let height = container?.current?.offsetHeight;\n        if (height) {\n            setPageSize(Math.floor((height - 120) / 44) - 1);\n        }\n    }, [container, pageSize]);\n\n    const handlePageChange = React.useCallback((page) =>{\n        updateTickersUI(page)\n    },[updateTickersUI]);\n    return (\n        <>\n            <StylePaper display={'flex'} flexDirection={'column'} ref={container}>\n                <PoolsTable {...{\n                    rawData,\n                    handlePageChange,\n                    page,\n                    pagination: {\n                        pageSize\n                    }\n                }} />\n            </StylePaper>\n        </>\n    )\n})\n\n","import { AmmPanel, AmmPanelType, AmmProps } from '@loopring-web/component-lib';\nimport { AmmData, AmmInData, IBData } from '@loopring-web/component-lib/static-resource';\n\nexport const AmmPanelView = <T extends AmmData<C extends IBData<I> ? C : IBData<I>>, I,\n    ACD extends AmmInData<I>,\n    C = IBData<I>>({ammProps,...rest}: { ammProps:AmmProps<T ,I,ACD> } & any) => {\n    return <>\n        <AmmPanel {...{...rest,...ammProps, tabSelected: AmmPanelType.Deposit}} > 123</AmmPanel>\n    </>\n\n}","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    AmmProps,\n    ButtonListRightStyled,\n    TradeBtnStatus,\n    TradeTitle,\n    useSettings,\n    Button,\n    TradeTable, AmmTradeType, AmmRecordTableProps, AmmRecordTable\n} from '@loopring-web/component-lib';\nimport {\n    AmmData,\n    AmmInData,\n    CoinInfo,\n    FloatTag,\n    getThousandFormattedNumbers,\n    IBData,\n    LinkedIcon,\n    AmmDetailExtendProps,\n    PriceTag,\n    Currency, CheckedIcon, CheckBoxIcon\n} from '@loopring-web/component-lib/static-resource';\nimport { Box, Breadcrumbs, Grid, Hidden, Link, Typography, } from '@material-ui/core';\nimport { AmmPanelView } from '../AmmPanel';\nimport { useSwapNew } from '../../SwapPage/hook';\nimport { useBasicInfo } from '../../SwapPage/panel/BasicInfoPanel/hook';\nimport moment from 'moment';\nimport styled from '@emotion/styled/';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { MyAmmLP } from '@loopring-web/component-lib/src/static-resource';\nimport { AmmRecordRow } from '@loopring-web/component-lib/components/tableList/ammRecordTable/Interface';\n\nconst Style = styled.div`\n  color: #fff;\n`\n//TODO: FIXED:  demo data\nconst tradeData: any = {\n    coinA: {belong: 'ETH', balance: 0.3, tradeValue: 0},\n    coinB: {belong: 'LRC', balance: 1000, tradeValue: 0}\n};\nconst coinMap = {\n    ETH: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'ETH',\n        simpleName: 'ETH',\n        description: '',\n        company: 'ETH'\n    },\n    LRC: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'LRC',\n        simpleName: 'LRC',\n        description: '',\n        company: 'LRC'\n    },\n    USTD: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'USTD',\n        simpleName: 'USTD',\n        description: '',\n        company: 'USTD'\n    }\n}\nconst ammCalcData = {\n    myCoinA: {belong: 'ETH', balance: 1000, tradeValue: 0},\n    myCoinB: {belong: 'LRC', balance: 1000, tradeValue: 0},\n    AtoB: 50,\n    coinInfoMap: coinMap,\n    slippage: 0.5,\n    slippageTolerance: [0.1, 0.5, 1, 'slippage:N'],\n    fee: '1%'\n};\n\n//TODO: FIXED:  demo data end\nlet ammProps: AmmProps<AmmData<IBData<any>>, any, AmmInData<any>> = {\n    ammDepositData: tradeData,\n    ammWithdrawData: tradeData,\n    // tradeCalcData,\n    ammCalcData,\n    handleDepositEvent: (data, type) => {\n        console.log('handleDepositEvent', data, type);\n    },\n    handleWithDrawEvent: (data, type) => {\n        console.log('handleWithDrawEvent', data, type);\n    },\n    onAmmWithdrawClick: (data) => {\n        console.log('onAmmWithdrawClick', data);\n    },\n    onAmmDepositClick: (data) => {\n        console.log('onAmmDepositClick', data);\n    }\n}\n\nlet btnShowTradeStatus: keyof typeof TradeBtnStatus = TradeBtnStatus.AVAILABLE;\nconst onShowTrade = () => {\n};\n\nconst coinPairInfo: AmmDetailExtendProps<AmmInData<any>, any> = {\n    // tradeCalcData:,\n    ammCalcData: ammCalcData,\n    activity: {\n        totalRewards:1232141,\n        myRewards:122,\n        rewardToken:coinMap.USTD  as CoinInfo<any>,\n        duration: {\n            from: new Date('2021-1-1'),\n            to: new Date()\n        }\n    },\n    coinAInfo: coinMap[ 'ETH' ] as CoinInfo<any>,\n    coinBInfo: coinMap[ 'LRC' ] as CoinInfo<any>,\n    tradeFloat: {\n        percent: 1000,\n        timeUnit: '24h',\n        priceYuan: 100,\n        priceDollar: 1.23123,\n        floatTag: FloatTag.increase,\n        // tagNew: false,\n    },\n    amountDollar: 197764.89,\n    amountYuan: 194.89,\n    totalLPToken: 12132131,\n    totalA: 0.002,\n    totalB: 12344,\n    rewardToken: 'LRC',\n    rewardValue: 13,\n    feeA:121,\n    feeB:1232,\n    isNew: true,\n    isActivity: false,\n}\nconst myAmm: MyAmmLP<any> = {\n    feeA:122,\n    feeB:21,\n    feeDollar: 0.0012,\n    feeYuan:  0.0312,\n    reward:123,\n    rewardToken: coinMap.USTD as CoinInfo<any>,\n    balanceA:12131,\n    balanceB:0.0012,\n    balanceYuan: 1232131,\n    balanceDollar:232,\n}\nconst ammRecordArray:AmmRecordRow<any>[] = [\n    {\n        type: AmmTradeType.add,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-1, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.remove,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-100, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-15, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-3, 'hours').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-75, 'second').toDate().getTime()\n    }\n]\n\n\n\n\n//******************** page code ************************//\nconst BoxStyled = styled(Box)`\n  ${({theme}) => theme.border.defaultFrame({c_key: 'blur'})};\n  background-color: ${({theme}) => theme.colorBase.background().default};\n`;\nconst StylePaper = styled(Box)`\n  width: 100%;\n  height: 100%;\n  flex: 1;\n  background-color: ${({theme}) => theme.colorBase.background().default};\n  border-radius: ${({theme}) => theme.unit}px;\n\n  .rdg {\n    flex: 1;\n  }\n\n` as typeof Box;\n\nconst applyProps = (index: number) => {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `tabpanel-${index}`,\n    }\n}\n\nexport const CoinPairPanel = withTranslation('common')(({t, ...rest}: any) => {\n    //TODO: checkRouter\n\n    const { currency } = useSettings();\n    const { base, quote, tokens, market, swapProps } = useSwapNew();\n\n    console.log('CoinPairPanel base:', base, ' quote:', quote)\n\n    const { change } = useBasicInfo({base, quote, tokens, market}, t);\n    const [value,setValue] = React.useState<0|1>(0);\n    const [page, setPage] = React.useState(rest?.page ? rest.page : 1);\n    const handleChange = (event: any, newValue: 0|1) => {\n        setValue(newValue);\n        setPage(1);\n    }\n    const _handlePageChange = React.useCallback((page: number) => {\n        setPage(page);\n        // updateData({actionType: ActionType.page, currPage: page})\n    }, [])\n\n    return <>\n\n        <Grid container >\n            <Grid item xs={8}>\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link color=\"textSecondary\" href=\"/#/liquidity/pools\">\n                        {t('labelAmmList')}\n                    </Link>\n                    <Typography color={'textSecondary'} display={'flex'} alignItems={'center'}\n                                justifyContent={'center'}\n                    >{tradeData.coinA.belong}-{tradeData.coinB.belong}</Typography>\n                </Breadcrumbs>\n            </Grid>\n            <Grid item xs={4} alignItems={'center'} justifyContent={'flex-end'} display={'flex'}>\n                <Link href=\"/#/liquidity/pools\" variant={'h5'}>\n                    {t('labelBack')}\n                </Link>\n            </Grid>\n        </Grid>\n        <Grid container marginTop={3}>\n            <Grid item xs={7}>\n                \n            <TradeTitle {...{\n                    ...rest, t, tradeCalcData: swapProps.tradeCalcData, tradeFloat: {\n                      priceDollar: getThousandFormattedNumbers(change,8),\n                      percent: '+15%',\n                      timeUnit: \"24h\",\n                      volume:'',\n                    },\n                    isNew: false\n                  }}></TradeTitle>\n            </Grid>\n        </Grid>\n        <Box flex={1} display={'flex'} alignItems={'stretch'} flexDirection=\"row\" marginTop={3}>\n            <Box flex={1} display={'flex'}>\n                <Grid container spacing={2} wrap={'nowrap'}>\n                    <Grid item md={5} xs={12} paddingRight={2} display={'flex'} flexDirection={'column'}\n                          alignItems={'stretch'} justifyContent={'space-between'}>\n                        <BoxStyled paddingY={3} paddingX={1 / 2 * 5} display={'flex'} flexDirection={'column'}>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'}>\n                                <Typography component={'span'}\n                                            style={{textTransform: 'capitalize'}}>{t('labelLiquidity')}</Typography>\n                                <Typography component={'span'}\n                                            style={{textTransform: 'uppercase'}}>{t('labelAPY')}</Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textPrimary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1}>\n                                <>\n                                    <Typography component={'span'}> {typeof coinPairInfo.amountDollar === 'undefined' ? 'N/A' :\n                                        currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(coinPairInfo.amountDollar) : PriceTag.Yuan + getThousandFormattedNumbers(coinPairInfo.amountYuan?coinPairInfo.amountYuan:0)}\n                                    </Typography>\n                                    <Typography\n                                        component={'span'}> {coinPairInfo.tradeFloat ? coinPairInfo.tradeFloat.APY : 'N/A'}%\n                                    </Typography>\n                                </>\n\n\n                            </Typography>\n\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={2}>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>\n                                    <Hidden mdDown>{t('labelLPTotal')}</Hidden>{t('labelLPTokens')}</Typography>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>{coinPairInfo.totalLPToken}</Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1}>\n\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>\n                                    <Hidden\n                                        mdDown>{t('labelLPTotal')}</Hidden>{coinPairInfo.ammCalcData?.myCoinA.belong}\n                                </Typography>\n\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>{coinPairInfo.totalA}</Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1}>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>\n                                    <Hidden\n                                        mdDown>{t('labelLPTotal')}</Hidden>{coinPairInfo.ammCalcData?.myCoinB.belong}\n                                </Typography>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>{coinPairInfo.totalB}</Typography>\n                            </Typography>\n\n                        </BoxStyled>\n                        <BoxStyled paddingY={3} paddingX={1 / 2 * 5} display={'flex'} flexDirection={'column'}>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} alignItems={'center'}>\n                                <Typography component={'span'} color={'textSecondary'} variant={'body2'}>\n                                    {coinPairInfo.tradeFloat.timeUnit} {t('labelVolume')}\n                                </Typography>\n                                <Typography component={'span'} color={'textSecondary'}>\n                                    {t('labelFee')} {/* ' : '*/}\n                                </Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1} alignItems={'center'}>\n                                <Typography component={'span'} variant={'h4'} color={'textPrimary'}>\n                                    {currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(coinPairInfo.tradeFloat.priceDollar)\n                                        : PriceTag.Yuan + getThousandFormattedNumbers(coinPairInfo.tradeFloat.priceYuan)}\n                                </Typography>\n                                <Typography noWrap textAlign={'center'} component={'span'} color={'textSecondary'}\n                                            variant={'body2'} textOverflow={'ellipsis'} display={'flex'}\n                                            alignItems={'center'}>\n                                    <Typography component={'span'} color={'inherit'} variant={'inherit'}\n                                                display={'flex'} flexDirection={'column'}>\n                                        <Typography component={'span'} color={'inherit'} variant={'inherit'}>\n                                            {coinPairInfo.ammCalcData?.myCoinA.belong}\n                                        </Typography>\n                                        <Typography component={'span'} color={'inherit'} variant={'inherit'}>\n                                            {coinPairInfo.feeA}\n                                        </Typography>\n                                    </Typography>\n                                    <Typography component={'span'} color={'inherit'} variant={'h5'}\n                                                paddingX={1}>{' + '}</Typography>\n                                    <Typography component={'span'} color={'inherit'} variant={'inherit'}\n                                                display={'flex'} flexDirection={'column'}>\n                                        <Typography component={'span'} color={'inherit'} variant={'inherit'}>\n                                            {coinPairInfo.ammCalcData?.myCoinB.belong}\n                                        </Typography>\n                                        <Typography component={'span'} color={'inherit'} variant={'inherit'}>\n                                            {coinPairInfo.feeB}\n                                        </Typography>\n                                    </Typography>\n                                </Typography>\n                            </Typography>\n                        </BoxStyled>\n                        <BoxStyled paddingY={3} paddingX={1 / 2 * 5} display={'flex'} flexDirection={'column'}>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'}>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}> {t('labelMyPoolShare')}</Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1}>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}> {myAmm.balanceA? myAmm.balanceA : 'N/A' } {coinPairInfo.ammCalcData?.myCoinA.belong} </Typography>\n                                <Typography component={'span'} color={'textSecondary'}\n                                            variant={'h5'}> -- </Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1}>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}> {myAmm.balanceB? myAmm.balanceA : 'N/A'} {coinPairInfo.ammCalcData?.myCoinB.belong}</Typography>\n                                <Typography component={'span'} color={'textSecondary'}\n                                            variant={'h5'}> -- </Typography>\n                            </Typography>\n                        </BoxStyled>\n                        <BoxStyled paddingY={3} paddingX={1 / 2 * 5} display={'flex'}\n                                   flexDirection={'column'}>\n\n                            <Box display={'flex'} flexDirection={'row'} justifyContent={'space-between'}>\n                                <Typography display={'flex'} flexDirection={'column'} component={'div'}>\n                                    <Typography variant={'body2'} component={'h5'} color={'textSecondary'}>\n                                        {t('labelReward')}\n                                    </Typography>\n                                    <Typography variant={'body1'} component={'span'} color={'textPrimary'}>\n                                        {typeof coinPairInfo.activity === 'undefined'? 'N/A': <>\n                                            <Typography component={'span'}>{coinPairInfo.activity.totalRewards} </Typography>\n                                            <Typography component={'span'}>{coinPairInfo.activity.rewardToken.simpleName}</Typography>\n                                        </> }\n                                    </Typography>\n                                </Typography>\n                                <Typography display={'flex'} flexDirection={'column'} alignItems={'flex-end'}\n                                            component={'div'}>\n                                    <Typography variant={'body2'} component={'h5'} color={'textSecondary'}>\n                                        {t('labelMyReward')}\n                                    </Typography>\n                                    <Typography variant={'body1'} component={'span'} color={'textPrimary'}>\n                                        {typeof coinPairInfo.activity === 'undefined'? 'N/A':<>\n                                            <Typography component={'span'}> {myAmm.reward} </Typography>\n                                            <Typography component={'span'}> {coinPairInfo.activity.rewardToken.simpleName}</Typography></>}\n\n                                    </Typography>\n                                </Typography>\n                            </Box>\n                            <Typography alignSelf={'flex-start'} variant={'body2'} color={'textSecondary'}\n                                        component=\"span\" marginTop={1}>\n                                {t('labelDate')}:\n                                {typeof coinPairInfo.activity === 'undefined'? 'N/A': moment(coinPairInfo.activity.duration.from).format('L') + ' - ' + moment(coinPairInfo.activity.duration.to).format('L')}\n                            </Typography>\n\n                        </BoxStyled>\n                    </Grid>\n                    <Hidden mdDown>\n                        <Grid item md={7} paddingRight={2}>\n\n\n                        </Grid>\n                    </Hidden>\n                </Grid>\n            </Box>\n            <Box display={'flex'}>\n                <AmmPanelView ammProps={ammProps}></AmmPanelView>\n            </Box>\n        </Box>\n        <Grid container marginTop={3} >\n            <Grid item xs={12}>\n                <Tabs value={value}\n                      onChange={handleChange}\n                      aria-label=\"tabs switch\">\n                    <Tab label={t('labelAll')} {...applyProps(0)} />\n                    <Tab label={t('labelMe')} {...applyProps(1)} />\n                </Tabs>\n\n                <StylePaper marginTop={2}>\n                    <AmmRecordTable rawData={ammRecordArray} handlePageChange={_handlePageChange} page={page} />\n                </StylePaper>\n            </Grid>\n\n        </Grid>\n\n    </>\n})\n\n\n\n","import { AmmProps } from '@loopring-web/component-lib';\nimport React from 'react';\nimport { AmmData, AmmInData, IBData, AmmCardProps } from '@loopring-web/component-lib/static-resource';\nimport { AmmCard } from '@loopring-web/component-lib/components/block/AmmCard';\nimport { ButtonProps, Grid } from '@material-ui/core';\nimport { AmmDetail, FloatTag } from '@loopring-web/component-lib/src/static-resource';\nimport { useAmmMiningUI } from './hook';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { withTranslation } from 'react-i18next';\n\nconst AmmCardWrap = React.memo(React.forwardRef((props,ref) => {\n    return <AmmCard ref={ref} {...props} ></AmmCard>\n}))  as React.ComponentType<AmmDetail<IBData<any>>>;\n\nexport const AmmMiningView =  withTranslation('common')(<T extends AmmData<C extends IBData<I> ? C : IBData<I>>, I,\n    ACD extends AmmInData<I>,\n    C = IBData<I>>({ammProps,t,...rest}: { ammProps:AmmProps<T ,I,ACD> } & any) => {\n    const {ammActivities} = useAmmMiningUI();\n    const [value,setValue] = React.useState<0|1>(0);\n    const handleChange = (event: any, newValue: 0|1) => {\n        setValue(newValue);\n    }\n    return <Grid container spacing={2}>\n       <Grid item xs={12}>\n           <Tabs value={value}\n                 onChange={handleChange}\n                 aria-label=\"tabs switch\">\n               <Tab label={t('labelCurrentActivities')}  />\n               <Tab label={t('labelPastActivities')}  />\n           </Tabs>\n       </Grid>\n\n        {ammActivities.map((item,index)=>{\n            return  <Grid item xs={12} sm={6} lg={4}  key={index}>\n                <AmmCardWrap {...item}/>\n            </Grid>\n        }) }\n\n    </Grid>\n})\n\n\n// const ref = React.createRef();\n// const ammInfo: AmmCardProps<any> = {\n//     // ammCalcData,\n//\n//     coinAInfo:  {\n//         icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n//         name: 'ETH',\n//         simpleName: 'ETH',\n//         description: '',\n//         company: 'ETH'\n//     },\n//     coinBInfo: {\n//         icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n//         name: 'LRC',\n//         simpleName: 'LRC',\n//         description: '',\n//         company: 'LRC'\n//     },\n//     activity:{\n//         totalRewards:241232132,\n//         myRewards:1232.123,\n//         rewardToken: {\n//             icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n//             name: 'LRC',\n//             simpleName: 'LRC',\n//             description: '',\n//             company: 'LRC'\n//         },\n//         duration: {\n//             from: new Date('2021-1-1'),\n//             to: new Date()\n//         },\n//     },\n//     amountDollar: 197764.89,\n//     amountYuan: 194.89,\n//     tradeFloat:{\n//         APY: 56,\n//         priceDollar: 123,\n//         priceYuan: 2343232,\n//         percent: '0%',\n//         chartUnit: \"24h\",\n//         volume: Number('112312312'),\n//         floatTag: FloatTag.none\n//     },\n//     totalLPToken: 12132131,\n//     totalA: 0.002,\n//     totalB: 12344,\n//     myRewardA: 11,\n//     myRewardB: 13,\n//     PoolSharedA: 10,\n//     PoolSharedB: 12,\n//     isNew:false,\n//     isActivity:true,\n// }","import React from 'react';\nimport { useAmmMap } from '../../../stores/Amm/AmmMap';\nimport {\n    CustomError,\n    ErrorMap,\n} from '@loopring-web/component-lib/src/static-resource';\nimport {  useTicker } from '../../../stores/ticker';\nimport { PoolsRow } from '@loopring-web/component-lib';\nimport { deepClone } from '../../../utils/obj_tools';\nimport { STATUS } from '../../../stores/constant';\nimport { useAmmActivityMap } from '../../../stores/Amm/AmmActivityMap';\nimport { AmmCardProps } from '@loopring-web/component-lib/static-resource';\n\nexport function useAmmMiningUI<R extends object,I>():{ammActivities:Array<AmmCardProps<I>>} {\n    const [data,setData] = React.useState<Array<AmmCardProps<I>>>([]);\n    const {\n        ammMap,\n        status: ammMapStatus,\n        errorMessage: errorAmmMap,\n        statusUnset:ammMapStatusUnset,\n        updateAmmMap,\n    } = useAmmMap();\n    const {\n        ammActivityMap,\n        status:  ammActivityStatus,\n        errorMessage: errorAmmActivityMap,\n        statusUnset:  ammActivityStatusUnset ,\n        updateAmmActivityMap,\n    } = useAmmActivityMap();\n    const {\n        tickerMap,\n        status: tickerStatus,\n        errorMessage: errorTickerMap,\n        statusUnset: tickerStatusUnset ,\n        updateTickers,\n    } = useTicker();\n    const updateRawData = React.useCallback(()=>{\n        try {\n            const _ammActivityMap:PoolsRow<I>  = deepClone(ammActivityMap);\n            let mapArray = [];\n            for (let key in  ammActivityMap) {\n                _ammActivityMap[key] =  {\n                    // @ts-ignore\n                    ...deepClone(ammMap[key]),\n                    activity:  _ammActivityMap[key],\n                    tradeFloat:tickerMap && tickerMap[key]\n                }\n                mapArray.push(_ammActivityMap[key])\n            }\n            setData(mapArray);\n        }catch (error){\n            throw new CustomError({...ErrorMap.NO_TOKEN_MAP,options:error})\n        }\n    }, [ammActivityMap, tickerMap, ammMap])\n\n    const updateTickersUI = React.useCallback(()=>  {\n            if(ammActivityMap && Object.keys(ammActivityMap).length>0){\n                updateTickers(Object.keys(ammActivityMap));\n            }\n    },[ammActivityMap,updateTickers])\n    React.useEffect(() => {\n        switch (tickerStatus) {\n            case \"ERROR\":\n                console.log(\"ERROR\",'get ticker error,ui');\n                tickerStatusUnset()\n                break;\n            case \"PENDING\":\n                break;\n            case \"DONE\":\n                tickerStatusUnset()\n                updateRawData()\n                break;\n            default:\n                break;\n        }\n    }, [tickerStatus, tickerStatusUnset, updateRawData]);\n    React.useEffect(() => {\n        switch (ammActivityStatus) {\n            case \"ERROR\":\n                console.log(\"ERROR\",'get ammMap error,ui');\n                ammActivityStatusUnset();\n                break;\n            case STATUS.PENDING:\n                console.log(\"PENDING\",'get ammMap error,ui');\n                // ammMapStatusUnset();\n                break;\n            case STATUS.DONE:\n                if(ammMapStatus !== STATUS.PENDING) {\n                    ammActivityStatusUnset();\n                    ammMapStatusUnset();\n                    updateTickersUI();\n                }\n                break;\n            default :\n                break;\n        }\n    }, [ammMapStatus, ammActivityStatus, ammActivityStatusUnset, ammMapStatusUnset, updateTickersUI]);\n    // init AmmMap at begin\n    React.useEffect(() => {\n        if (!ammMap || Object.keys(ammMap).length === 0) {\n            updateAmmMap();\n        }\n        if(!ammActivityMap || Object.keys(ammActivityMap).length === 0){\n            updateAmmActivityMap();\n        } else {\n            updateTickersUI();\n        }\n    },[]);\n\n\n\n\n    return {\n        ammActivities:data,\n        // updateTickersUI,\n    }\n}\n\n// export function useTickerUI({pageState:number,pageSize:}) {\n//\n//     React.useEffect(() => {\n//         if (!tickerMap || Object.keys(tickerMap).length === 0) {\n//             updateAmmMap();\n//         }else{\n//\n//         }\n//     }, [ammMap, updateAmmMap]);\n//     React.useEffect(() => {\n//         switch (ammMapStatus) {\n//             case \"ERROR\":\n//                 console.log(\"ERROR\");\n//                 ammMapStatusUnset()\n//                 break;\n//             case \"PENDING\":\n//                 ammMapStatusUnset()\n//                 break;\n//             default:\n//                 break;\n//         }\n//     }, [ammMapStatus, ammMapStatusUnset]);\n//     return {\n//         ammMapObj: {\n//             ammMap,\n//             status: ammMapStatus,\n//             errorMessage: errorAmmMap\n//         }\n//     }\n// }","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Grid, Typography } from '@material-ui/core'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport {\n    AmmRecordTable,\n    AmmTradeType,\n    ChartType,\n    ScaleAreaChart,\n    TablePaddingX,\n    ToggleButtonGroup,\n    useSettings\n} from '@loopring-web/component-lib'\nimport { MyPoolRow as Row, MyPoolTable } from '@loopring-web/component-lib/components/tableList/myPoolTable';\nimport {\n    CoinInfo,\n    Currency,\n    getThousandFormattedNumbers,\n    PriceTag\n} from '@loopring-web/component-lib/src/static-resource';\nimport { AmmRecordRow } from '@loopring-web/component-lib/components/tableList/ammRecordTable/Interface';\nimport moment from 'moment';\n\n\n//TODO: FIXED:  demo data\nconst coinMap = {\n    ETH: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'ETH',\n        simpleName: 'ETH',\n        description: '',\n        company: 'ETH'\n    },\n    LRC: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'LRC',\n        simpleName: 'LRC',\n        description: '',\n        company: 'LRC'\n    },\n    USTD: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'USTD',\n        simpleName: 'USTD',\n        description: '',\n        company: 'USTD'\n    }\n}\nconst ammRecordArray:AmmRecordRow<any>[] = [\n    {\n        type: AmmTradeType.add,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-1, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.remove,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-100, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-15, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-3, 'hours').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-75, 'second').toDate().getTime()\n    }\n]\nconst rawData: Row<any>[] = [\n    {\n        feeA:122,\n        feeB:21,\n        feeDollar: 0.0012,\n        feeYuan:  0.0312,\n        reward:123,\n        rewardToken:{\n            icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n            name: 'USDT',\n            simpleName: 'USDT',\n            description: '',\n            company: 'USDT'\n        },\n        balanceA:12131,\n        balanceB:0.0012,\n        balanceYuan: 1232131,\n        balanceDollar: 232,\n        ammDetail:  {\n            coinAInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'ETH',\n                simpleName: 'ETH',\n                description: '',\n                company: 'ETH'\n            },\n            coinBInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'LRC',\n                simpleName: 'LRC',\n                description: '',\n                company: 'LRC'\n            },\n            amountDollar: 12,\n            amountYuan: 194.89,\n            totalLPToken: 12132131,\n            totalA: 0.002,\n            totalB: 12344,\n            isNew: true,\n            isActivity: false,\n        }\n    },\n    {\n        feeA:122,\n        feeB:21,\n        feeDollar: 0.0012,\n        feeYuan:  0.0312,\n        reward:123,\n        rewardToken:{\n            icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n            name: 'USDT',\n            simpleName: 'USDT',\n            description: '',\n            company: 'USDT'\n        },\n        balanceA:12131,\n        balanceB:0.0012,\n        balanceYuan: 1232131,\n        balanceDollar: 232,\n        ammDetail:  {\n            coinAInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'ETH',\n                simpleName: 'ETH',\n                description: '',\n                company: 'ETH'\n            },\n            coinBInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'LRC',\n                simpleName: 'LRC',\n                description: '',\n                company: 'LRC'\n            },\n            amountDollar: 12,\n            amountYuan: 194.89,\n            totalLPToken: 12132131,\n            totalA: 0.002,\n            totalB: 12344,\n            isNew: true,\n            isActivity: false,\n        }\n    },\n    {\n        feeA:122,\n        feeB:21,\n        feeDollar: 0.0012,\n        feeYuan:  0.0312,\n        reward:123,\n        rewardToken:{\n            icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n            name: 'USDT',\n            simpleName: 'USDT',\n            description: '',\n            company: 'USDT'\n        },\n        balanceA:12131,\n        balanceB:0.0012,\n        balanceYuan: 1232131,\n        balanceDollar: 232,\n        ammDetail:  {\n            coinAInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'ETH',\n                simpleName: 'ETH',\n                description: '',\n                company: 'ETH'\n            },\n            coinBInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'LRC',\n                simpleName: 'LRC',\n                description: '',\n                company: 'LRC'\n            },\n            amountDollar: 12,\n            amountYuan: 194.89,\n            totalLPToken: 12132131,\n            totalA: 0.002,\n            totalB: 12344,\n            isNew: true,\n            isActivity: false,\n        }\n    },\n    {\n        feeA:122,\n        feeB:21,\n        feeDollar: 0.0012,\n        feeYuan:  0.0312,\n        reward:123,\n        rewardToken:{\n            icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n            name: 'USDT',\n            simpleName: 'USDT',\n            description: '',\n            company: 'USDT'\n        },\n        balanceA:12131,\n        balanceB:0.0012,\n        balanceYuan: 1232131,\n        balanceDollar: 232,\n        ammDetail:  {\n            coinAInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'ETH',\n                simpleName: 'ETH',\n                description: '',\n                company: 'ETH'\n            },\n            coinBInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'LRC',\n                simpleName: 'LRC',\n                description: '',\n                company: 'LRC'\n            },\n            amountDollar: 12,\n            amountYuan: 194.89,\n            totalLPToken: 12132131,\n            totalA: 0.002,\n            totalB: 12344,\n            isNew: true,\n            isActivity: false,\n        }\n    },\n    {\n        feeA:122,\n        feeB:21,\n        feeDollar: 0.0012,\n        feeYuan:  0.0312,\n        reward:123,\n        rewardToken:{\n            icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n            name: 'USDT',\n            simpleName: 'USDT',\n            description: '',\n            company: 'USDT'\n        },\n        balanceA:12131,\n        balanceB:0.0012,\n        balanceYuan: 1232131,\n        balanceDollar: 232,\n        ammDetail:  {\n            coinAInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'ETH',\n                simpleName: 'ETH',\n                description: '',\n                company: 'ETH'\n            },\n            coinBInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'LRC',\n                simpleName: 'LRC',\n                description: '',\n                company: 'LRC'\n            },\n            amountDollar: 12,\n            amountYuan: 194.89,\n            totalLPToken: 12132131,\n            totalA: 0.002,\n            totalB: 12344,\n            isNew: true,\n            isActivity: false,\n        }\n    },\n]\n\n\nconst toggleData = [\n    {value: '24 H', key: '24 H'},\n    {value: '1 W', key: '1 W'},\n    {value: 'ALL', key: 'ALL'},\n]\n\nconst StylePaper = styled(Box)`\n    width: 100%;\n    height: 100%;\n    flex: 1;\n` as typeof Box;\n\nconst StyleWrapper = styled(Grid)`\n  position: relative;\n  width: 100%;\n  background-color: ${({theme}) => theme.colorBase.background().default};\n  border-radius: ${({theme}) => theme.unit}px;\n` as typeof Grid\n\n\n\n// const StyleGrid = styled(Grid)`\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: space-around;\n// ` as typeof Grid\n\n\n\n\nconst StyledBtnGroupWrapper = styled(Box)`\n    position: absolute;\n    z-index: 99;\n    top: ${({ theme }) => theme.unit}px;\n    width: 100%;\n` as typeof Box\n\nconst  TableWrapStyled = styled(Grid)`\n  &{\n    background-color: ${({theme}) => theme.colorBase.background().default};\n    ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\n  }\n \n  ${({theme}) => TablePaddingX({pLeft:theme.unit * 3,pRight:theme.unit * 3})}\n` as typeof Grid\n\nexport const LiquidityOverview = withTranslation('common')(({ t, ...rest }: WithTranslation) => {\n    const [chartPeriod, setChartPeriod] = React.useState('ALL');\n    const [page, setPage] = React.useState(  1);\n    const {currency} = useSettings();\n    const {totalDollar,totalYuan,totalFeeDollar,totalFeeYuan, totalMiningDollar, totalMiningYuan} = {\n        totalDollar :1000,\n        totalYuan:33,\n        totalFeeDollar:323,totalFeeYuan:12, totalMiningDollar:232, totalMiningYuan:35}\n\n    const _handlePageChange = React.useCallback((page: number) => {\n        setPage(page);\n        // updateData({actionType: ActionType.page, currPage: page})\n    }, [])\n    return (\n        <>\n            <StyleWrapper container  spacing={1} padding={3} margin={0} >\n                <Grid display={'flex'} flexDirection={'column'} justifyContent={'space-around'} item sm={3}>\n                    <Typography variant={'body1'} component={'h5'} color={'textSecondary'}>{t('labelTotalPositionValue')}</Typography>\n                    <Typography variant={'h4'} marginTop={1}>\n                        {totalDollar === undefined ? 'N/A' : currency === Currency.dollar ?  PriceTag.Dollar + getThousandFormattedNumbers(totalDollar)\n                            :  PriceTag.Yuan + getThousandFormattedNumbers(totalYuan as number)}\n                    </Typography>\n                </Grid>\n                <Grid display={'flex'} flexDirection={'column'} justifyContent={'space-around'} item sm={3}>\n                    <Typography variant={'body1'} component={'h5'} color={'textSecondary'}>{t('labelFeeRewards')}</Typography>\n                    <Typography variant={'h4'} marginTop={1}>\n                        {totalFeeDollar === undefined ? 'N/A' : currency === Currency.dollar ?  PriceTag.Dollar + getThousandFormattedNumbers(totalFeeDollar)\n                            :  PriceTag.Yuan + getThousandFormattedNumbers(totalFeeYuan as number)}\n                    </Typography>\n                </Grid>\n                <Grid display={'flex'} flexDirection={'column'} justifyContent={'space-around'} item sm={3}>\n                    <Typography variant={'body1'} component={'h5'} color={'textSecondary'}>{t('labelMiningRewards')}</Typography>\n                    <Typography variant={'h4'} marginTop={1}>\n                        {totalMiningDollar === undefined ? 'N/A' : currency === Currency.dollar ?  PriceTag.Dollar + getThousandFormattedNumbers(totalMiningDollar)\n                            :  PriceTag.Yuan + getThousandFormattedNumbers(totalMiningYuan as number)}\n                    </Typography>\n                </Grid>\n            </StyleWrapper>\n            <StyleWrapper container marginY={2} height={340} >\n                    <StyledBtnGroupWrapper display={'flex'} padding={3} justifyContent={'space-between'}>\n                        <Typography variant={'body1'} component={'h5'} color={'textSecondary'}>{t('labelLiquidityValue')}</Typography>\n                        <Box marginRight={-1}>\n                            <ToggleButtonGroup  exclusive size=\"small\" {...{ ...rest, t, data: toggleData, value: chartPeriod, setValue: setChartPeriod}} />\n                        </Box>\n                    </StyledBtnGroupWrapper>\n                    <ScaleAreaChart type={ChartType.Trend} data={[]} />\n            </StyleWrapper>\n            <Typography paddingLeft={2} variant={'h4'} >{t('labelMyAmm')}</Typography>\n            <TableWrapStyled container marginY={2} paddingY={2} flex={1} height={568}>\n                <Grid item xs={12} display={'flex'} flexDirection={'column'} >\n                    <MyPoolTable\n\n                        rawData={rawData}\n                        pagination= {{pageSize: 5}}\n                        handleDeposit={(row:any)=>{console.log()}}\n                        handleWithdraw={(row:any)=>{console.log()}}\n                        handlePageChange={()=>{}}\n                    />\n                </Grid>\n            </TableWrapStyled>\n            <Typography paddingLeft={2} variant={'h4'} >{t('labelMyAmmRecord')}</Typography>\n            <TableWrapStyled container marginY={2} paddingY={2} flex={1}>\n                <Grid item xs={12} display={'flex'} flexDirection={'column'}>\n                    <AmmRecordTable rawData={ammRecordArray} handlePageChange={_handlePageChange} page={page} />\n                </Grid>\n            </TableWrapStyled>\n        </>\n    )\n})","import { useRouteMatch } from 'react-router'\n\nimport { Box } from '@material-ui/core'\nimport {\n    SubMenu,\n    SubMenuList as BasicSubMenuList,\n} from '@loopring-web/component-lib'\nimport { withTranslation } from 'react-i18next'\nimport { subMenuLiquidity } from '@loopring-web/component-lib/src/static-resource'\nimport { PoolsPanel } from './PoolsPanel'\nimport { CoinPairPanel } from './CoinPairPanel';\nimport { AmmMiningView } from './AmmMining';\nimport { LiquidityOverview } from './LiquidityOverview'\n// import { useAmmPool } from './hook'\n\nexport const subMenu = subMenuLiquidity\n\nconst SubMenuList = withTranslation(['layout','common'], { withRef: true })(BasicSubMenuList);\nexport const LiquidityPage = () => {\n\n    // const { ammFee } = useAmmPool('LRC', 'ETH')\n    //\n    // console.log('--- > ammFee:', ammFee)\n    //\n    let match: any = useRouteMatch(['/liquidity/:item',':next/']);\n    const selected = match?.params.item ?? 'pools'\n    let matchPair: any = useRouteMatch(['/liquidity/:item/:next/:symbol']);\n    let symbol:any = undefined\n    if (matchPair && matchPair?.params?.next && matchPair.params.item === 'pools') {\n       if(!matchPair.params.symbol){\n           symbol='LRC-ETH';\n       }else{\n           symbol=matchPair.params.symbol;\n       }\n    }\n    \n    return (\n        <>\n            { symbol && <Box display={'flex'} flexDirection={'column'}  flex={1} alignSelf={'flex-start'}>\n              <CoinPairPanel />\n            </Box>\n            }\n            {!symbol && <>  <Box width={'200px'} display={'flex'} justifyContent={'stretch'} marginRight={3}>\n                    <SubMenu>\n                        <SubMenuList selected={selected} subMenu={subMenu as any} />\n                    </SubMenu>\n                </Box>\n                <Box  minHeight={420}  display={'flex'} alignItems={'stretch'} justifyContent={'stretch'} flexDirection=\"column\" marginTop={0} flex={1}>\n                    {(selected === 'pools' && !symbol ) && <PoolsPanel />}\n                    {(selected === 'amm-mining' && !symbol ) && <AmmMiningView />}\n                    {(selected === 'my-liquidity' && !symbol ) && <LiquidityOverview />}\n                    {selected === 'orderBook-Mining' && <AmmMiningView />}\n                    {/*{selected === 'orders' && <OrderPanel />}*/}\n                </Box>\n             </>\n            }\n        </>\n    )\n\n}\n","import { HashRouter as Router, Route, Switch, } from 'react-router-dom'\n\nimport Header from 'layouts/header'\n\nimport QuotePage from 'pages/QuotePage'\nimport SwapPage from 'pages/SwapPage'\n\nimport DebugPage from 'pages/DebugPage'\n\nimport Container from '@material-ui/core/Container'\nimport { Box } from '@material-ui/core'\nimport { DevWrapper } from '../provider/'\nimport { Layer2Page } from '../pages/Layer2Page'\nimport { LiquidityPage } from '../pages/LiquidityPage'\n\nconst RouterView = () => {\n    // const SwapPageWrap = ()=> <SwapPage />\n    // const QuotePageWrap = ()=> <SwapPage />\n    return <Router>\n        <Header/>\n\n        {/*<Box style={{marginTop: `var(--header-height)`}} flex={1} display={'flex'}>*/}\n        <Container maxWidth=\"lg\" style={{minHeight:'calc(100% - 64px - 32px)',display:'flex',flexDirection:'column'}}>\n            {/*style={{height: '100%' }}*/}\n            <Box display={'flex'} flex={1} alignItems={'stretch'} flexDirection={'row'} marginTop={3}  >\n                <Switch>\n                    <Route exact component={SwapPage} path='/'/>\n                    <Route exact component={QuotePage} path='/markets'/>\n                    <Route component={SwapPage} path='/trading/lite'/>\n                    <Route component={SwapPage} path='/trading/lite(/:symbol)'/>\n\n                    <Route exact component={Layer2Page} path='/layer2'/>\n                    <Route exact component={Layer2Page} path='/layer2/assets'/>\n                    <Route exact component={Layer2Page} path='/layer2/transactions'/>\n                    <Route exact component={Layer2Page} path='/layer2/trades'/>\n                    <Route exact component={Layer2Page} path='/layer2/orders'/>\n                    <Route exact component={Layer2Page} path='/layer2/setting'/>\n\n                    <Route exact component={LiquidityPage} path='/liquidity'/>\n                    <Route exact component={LiquidityPage} path='/liquidity/pools/*'/>\n                    <Route exact component={LiquidityPage} path='/liquidity/pools'/>\n                    {/*<Route exact component={LiquidityPage} path='/liquidity/pools/coinPair(/:symbol)'/>*/}\n                    <Route exact component={LiquidityPage} path='/liquidity/amm-mining'/>\n                    <Route exact component={LiquidityPage} path='/liquidity/my-liquidity'/>\n                    <Route exact component={LiquidityPage} path='/liquidity/orderBook-Mining'/>\n                    <Route exact component={LiquidityPage} path='/liquidity/maker-rebates'/>\n\n                    <DevWrapper>\n                        <Route exact path='/debug'>\n                            <DebugPage/>\n                        </Route>\n                    </DevWrapper>\n\n                </Switch>\n            </Box>\n        </Container>\n        {/*</Box>*/}\n\n    </Router>\n}\n\nexport default RouterView\n"],"sourceRoot":""}