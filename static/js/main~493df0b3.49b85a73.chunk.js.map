{"version":3,"sources":["../node_modules/@loopring-web/component-lib/components/block/AmmCard.tsx","../node_modules/@loopring-web/component-lib/components/styled.ts","../node_modules/@loopring-web/component-lib/components/panel/Interface.ts","../node_modules/@loopring-web/component-lib/components/tableList/orderHistoryTable/components/Filter.tsx","../node_modules/@loopring-web/component-lib/components/tableList/QuoteTable/QuoteTable.tsx","../node_modules/@loopring-web/component-lib/components/tableList/orderHistoryTable/SingleOrderHistoryTable.tsx","../node_modules/@loopring-web/component-lib/components/tableList/transactionsTable/Interface.ts","../node_modules/@loopring-web/component-lib/components/tableList/orderHistoryTable/OrderHistoryTable.tsx","../node_modules/@loopring-web/component-lib/components/tableList/transactionsTable/components/Filter.tsx","../node_modules/@loopring-web/component-lib/components/tableList/assetsTable/components/Filter.tsx","../node_modules/@loopring-web/component-lib/components/tableList/transactionsTable/TransactionTable.tsx","../node_modules/@loopring-web/component-lib/components/tableList/assetsTable/AssetsTable.tsx","../node_modules/@loopring-web/component-lib/components/tableList/tradeTable/components/Filter.tsx","../node_modules/@loopring-web/component-lib/components/tableList/ammRecordTable/Interface.ts","../node_modules/@loopring-web/component-lib/components/tableList/tradeTable/TradeTable.tsx","../node_modules/@loopring-web/component-lib/components/tableList/ammRecordTable/AmmReordTable.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/tables/table.stories.tsx","../node_modules/@loopring-web/component-lib/components/tableList/tradeFilterTable/componnents/HeaderCell.tsx","../node_modules/@loopring-web/component-lib/components/tableList/ammTable/components/Filter.tsx","../node_modules/@loopring-web/component-lib/components/tableList/tradeFilterTable/TradeFilterTable.tsx","../node_modules/@loopring-web/component-lib/components/tableList/ammTable/interface.ts","../node_modules/@loopring-web/component-lib/components/tableList/ammTable/AmmTable.tsx","../node_modules/@loopring-web/component-lib/components/header/toolbar/Interface.ts","../../common-resources/assets/svg/logo.svg","../node_modules/@loopring-web/component-lib/components/modal/QRCode/QRCode.tsx","../node_modules/@loopring-web/component-lib/components/modal/WalletConnect/WalletConnect.tsx","../node_modules/@loopring-web/component-lib/components/charts/constant.ts","../node_modules/@loopring-web/component-lib/components/header/toolbar/WalletConnect.tsx","../node_modules/@loopring-web/component-lib/components/header/toolbar/index.tsx","../node_modules/@loopring-web/component-lib/components/header/Header.tsx","../node_modules/@loopring-web/component-lib/components/block/TradeTitle.tsx","../node_modules/@loopring-web/component-lib/components/block/AccountInfo.tsx","../node_modules/@loopring-web/component-lib/components/block/AssetTitle.tsx","../node_modules/@loopring-web/component-lib/components/charts/doughnutChart/DoughnutChart.tsx","../node_modules/@loopring-web/component-lib/components/charts/scaleAreaChart/data.tsx","../node_modules/@loopring-web/component-lib/components/charts/scaleAreaChart/KlineChart/KlineChart.tsx","../node_modules/@loopring-web/component-lib/components/charts/scaleAreaChart/TrendChart/index.tsx","../node_modules/@loopring-web/component-lib/components/charts/scaleAreaChart/DepthChart/index.tsx","../node_modules/@loopring-web/component-lib/components/charts/scaleAreaChart/ScaleAreaChart.tsx","../node_modules/@loopring-web/component-lib/components/block/MarketBlock.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/empty/Empty.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/tables/Table.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/tables/components/HeaderRenderers/SortableHeaderCell.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/btns/Button.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/btns/BtnPercentage.tsx","../node_modules/@loopring-web/component-lib/stores/reducer/settings/interface.ts","../node_modules/@loopring-web/component-lib/stores/reducer/settings/reducer.ts","../node_modules/@loopring-web/component-lib/stores/reducer/settings/hook.ts","../node_modules/@loopring-web/component-lib/stores/reducer/modals/reducer.ts","../node_modules/@loopring-web/component-lib/stores/reducer/modals/interface.ts","../node_modules/@loopring-web/component-lib/stores/reducer/modals/hook.ts","../node_modules/@loopring-web/component-lib/components/panel/Amm/Interface.tsx","../../common-resources/assets/svg/clock-loading.svg","../node_modules/@loopring-web/component-lib/components/panel/components/tool/SlippagePanel.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/tool/ToolBarItems.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/tool/TradeMenuList.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/panel/SwapWrap/SwapMenuList.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/hook/BasicACoinPanelHook.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/panel/BasicACoinTrade.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/Styled.ts","../node_modules/@loopring-web/component-lib/components/panel/components/panel/DepositWrap.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/panel/ResetWrap.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/panel/WithdrawWrap.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/panel/TransferWrap.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/panel/SwapWrap/SwapTradeWrap.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/panel/AmmWrap/styled.ts","../node_modules/@loopring-web/component-lib/components/panel/components/panel/AmmWrap/AmmDeposit.tsx","../node_modules/@loopring-web/component-lib/components/panel/components/panel/AmmWrap/AmmWithDraw.tsx","../node_modules/@loopring-web/component-lib/components/panel/Swap/SwapPanel.tsx","../node_modules/@loopring-web/component-lib/components/panel/Deposit/DepositPanel.tsx","../node_modules/@loopring-web/component-lib/components/panel/Reset/ResetPanel.tsx","../node_modules/@loopring-web/component-lib/components/panel/Withdraw/WithdrawPanel.tsx","../node_modules/@loopring-web/component-lib/components/panel/Transfer/TransferPanel.tsx","../node_modules/@loopring-web/component-lib/components/panel/ModalPanel.tsx","../node_modules/@loopring-web/component-lib/components/panel/Amm/AmmPanel.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/form/input/InputSelect.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/form/input/InputButton.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/form/input/DatePicker.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/form/input/Default.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/form/input/InputCoin.tsx","../node_modules/@loopring-web/component-lib/index.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/form/hooks/useFocusRef.ts","../node_modules/@loopring-web/component-lib/components/basic-lib/form/hooks/usePanelRef.ts","../../component-lib/src/static-resource/src/i18n/index.ts","../../component-lib/src/static-resource/src/i18n/en_US/index.ts","../../component-lib/src/static-resource/src/i18n/en_US/common.ts","../../component-lib/src/static-resource/src/i18n/en_US/layout.ts","../../component-lib/src/static-resource/src/i18n/en_US/tables.ts","../../component-lib/src/static-resource/src/i18n/en_US/error.ts","../../component-lib/src/static-resource/src/i18n/zh_CN/index.ts","../../component-lib/src/static-resource/src/i18n/zh_CN/common.ts","../../component-lib/src/static-resource/src/i18n/zh_CN/layout.ts","../../component-lib/src/static-resource/src/i18n/zh_CN/tables.ts","../../component-lib/src/static-resource/src/i18n/zh_CN/error.ts","../../component-lib/src/static-resource/src/themes/interface.ts","../../component-lib/src/static-resource/src/svg/Icon.tsx","../../component-lib/src/static-resource/src/themes/css/color-lib.ts","../../component-lib/src/static-resource/src/themes/overrides/utils.ts","../../component-lib/src/static-resource/src/themes/css/reset.tsx","../../component-lib/src/static-resource/src/themes/fonts/english/Inter-Medium.ttf","../../component-lib/src/static-resource/src/themes/fonts/english/Gilroy-Medium.ttf","../../component-lib/src/static-resource/src/themes/globalSetup.ts","../../component-lib/src/static-resource/src/loopring-interface/HeaderInterface.ts","../../component-lib/src/static-resource/src/loopring-interface/WallectInterface.ts","../../component-lib/src/static-resource/src/constant/walletConnector.ts","../../component-lib/src/static-resource/src/constant/setting.ts","../../component-lib/src/static-resource/src/constant/market.ts","../../component-lib/src/static-resource/src/constant/chart.ts","../../component-lib/src/static-resource/src/constant/trade.ts","../../component-lib/src/static-resource/src/constant/router.tsx","../../component-lib/src/static-resource/src/constant/table.ts","../../component-lib/src/static-resource/src/utils/util.ts","../../component-lib/src/static-resource/src/error/errorMap.ts","../../component-lib/src/static-resource/src/error/index.ts","../node_modules/@loopring-web/component-lib/components/basic-lib/resource/hook/useImage.ts","../node_modules/@loopring-web/component-lib/components/basic-lib/lists/HeadMenuItem.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/lists/CoinList.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/lists/HeadToolbar.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/lists/SubMenuList.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/lists/index.ts","../node_modules/@loopring-web/component-lib/components/basic-lib/lists/Notification.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/panel/SwitchPanel.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/panel/SubMenu.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/table-pagination/TablePagination.tsx","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/index.ts","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/en_US/index.ts","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/en_US/common.ts","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/en_US/layout.ts","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/en_US/tables.ts","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/en_US/error.ts","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/zh_CN/index.ts","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/zh_CN/common.ts","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/zh_CN/layout.ts","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/zh_CN/tables.ts","../node_modules/@loopring-web/component-lib/static-resource/src/i18n/zh_CN/error.ts","../node_modules/@loopring-web/component-lib/components/basic-lib/tables/components/RowRenders/RowDepthFormatter.tsx","../node_modules/@loopring-web/component-lib/static.ts","../node_modules/@loopring-web/component-lib/static-resource/src/themes/globalSetup.ts","../node_modules/@loopring-web/component-lib/components/basic-lib/popover/Interface.ts","../node_modules/@loopring-web/component-lib/components/basic-lib/popover/Popover.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/Tags/index.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/tables/components/Formatters/ImageFormatter.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/tables/components/Formatters/CellExpanderFormatter.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/tables/components/Formatters/ChildRowDeleteButton.tsx","../node_modules/@loopring-web/component-lib/components/basic-lib/tables/components/Formatters/CellDepthFormatter.tsx","../node_modules/@loopring-web/component-lib/components/tableList/myPoolTable/MyPoolTable.tsx","../node_modules/@loopring-web/component-lib/components/tableList/poolsTable/PoolsTable.tsx","../../common-resources/assets/svg/loading.svg","../node_modules/@loopring-web/component-lib/static-resource/src/themes/interface.ts","../node_modules/@loopring-web/component-lib/static-resource/src/svg/Icon.tsx","../node_modules/@loopring-web/component-lib/static-resource/src/themes/css/color-lib.ts","../node_modules/@loopring-web/component-lib/static-resource/src/themes/css/reset.tsx","../node_modules/@loopring-web/component-lib/static-resource/src/themes/fonts/english/Inter-Medium.ttf","../node_modules/@loopring-web/component-lib/static-resource/src/themes/fonts/english/Gilroy-Medium.ttf","../node_modules/@loopring-web/component-lib/static-resource/src/themes/css/global.tsx","../node_modules/@loopring-web/component-lib/static-resource/src/themes/overrides/utils.ts","../node_modules/@loopring-web/component-lib/static-resource/src/themes/overrides/overrides-mui.ts","../node_modules/@loopring-web/component-lib/static-resource/src/themes/overrides/overrides-date-pick.ts","../node_modules/@loopring-web/component-lib/static-resource/src/themes/overrides/muTheme.ts","../node_modules/@loopring-web/component-lib/static-resource/src/loopring-interface/HeaderInterface.ts","../node_modules/@loopring-web/component-lib/static-resource/src/loopring-interface/WallectInterface.ts","../node_modules/@loopring-web/component-lib/static-resource/src/constant/walletConnector.ts","../node_modules/@loopring-web/component-lib/static-resource/src/constant/setting.ts","../node_modules/@loopring-web/component-lib/static-resource/src/constant/market.ts","../node_modules/@loopring-web/component-lib/static-resource/src/constant/chart.ts","../node_modules/@loopring-web/component-lib/static-resource/src/constant/trade.ts","../node_modules/@loopring-web/component-lib/static-resource/src/constant/router.tsx","../node_modules/@loopring-web/component-lib/static-resource/src/constant/table.ts","../node_modules/@loopring-web/component-lib/static-resource/src/utils/util.ts","../node_modules/@loopring-web/component-lib/static-resource/provider.tsx","../node_modules/@loopring-web/component-lib/static-resource/src/error/errorMap.ts","../node_modules/@loopring-web/component-lib/static-resource/src/error/index.ts","App.tsx"],"names":["BoxStyled","styled","Box","theme","AvatarIconPair","BoxBg","colorBase","background","outline","border","defaultFrame","c_key","d_R","AmmCard","withTranslation","withRef","React","memo","forwardRef","ref","t","coinAInfo","coinBInfo","amountDollar","amountYuan","APY","activity","duration","totalRewards","myRewards","rewardToken","isPass","coinAIconHasLoaded","useImage","icon","hasLoaded","coinBIconHasLoaded","currency","useSettings","display","flexDirection","justifyContent","alignItems","variant","alt","simpleName","src","className","marginLeft","component","color","title","undefined","EmptyValueTag","Currency","dollar","PriceTag","Dollar","getThousandFormattedNumbers","Yuan","style","textTransform","marginTop","padding","alignSelf","moment","from","format","to","fullWidth","size","disabled","TablePaddingX","pLeft","pRight","css","VipStyled","Typography","unit","vipBgColor","secondaryDark","floatTag","custom","chg","UpColor","green","success","error","textPrimary","baseTitleCss","textSecondary","ButtonListRightStyled","Grid","ModalContentStyled","secondary","TradeBtnStatus","SwitchType","SwapType","FilterTradeTypes","TableStyled","QuoteTableChangedCell","span","props","value","columnMode","history","key","name","formatter","row","coinA","coinB","change","FloatTag","increase","column","tradePair","Button","onClick","push","pathname","QuoteTable","withRouter","rowHeight","onVisibleRowsChange","rawData","rest","getScrollIndex","useCallback","e","startIndex","parseInt","String","target","scrollTop","defaultArgs","generateRows","generateColumns","columnsRaw","onScroll","SingleOrderHistoryTable","keyFrom","valueFrom","keyTo","valueTo","renderValue","Number","isFinite","toFixed","formattedRawData","map","o","Object","values","TransactionTradeTypes","TransactionStatus","StyledTextFiled","TextField","StyledDatePicker","DatePicker","StyledBtnBox","Filter","handleFilterChange","FilterTradeTypeList","label","useState","allTypes","filterType","setFilterType","filterDate","setFilterDate","handleReset","handleSearch","container","spacing","item","xs","id","select","onChange","event","inputProps","IconComponent","DropDownIcon","MenuItem","newValue","LastDayPriceChangedCell","TradeTypes","Buy","getColumnModeOrderHistory","Date","fromNow","rowIdx","hidden","CellStatus","popupId","isOpen","setIsOpen","RenderValue","TradeStatus","Processed","Expired","RenderPopover","div","actualValue","Processing","Cancelling","Cancelled","Waiting","triggerContent","width","popoverContent","amount","tradingPrice","filledPrice","time","total","type","PopoverType","click","handleStateChange","anchorOrigin","vertical","horizontal","transformOrigin","arrowHorizon","right","OrderHistoryTable","pagination","showFilter","filter","actionColumns","backgroundColor","backgroundBox","Array","isArray","page","setPage","totalData","setTotalData","useEffect","pageSize","getRenderData","slice","updateData","actionType","currFilterType","currFilterDate","resultData","diff","TableType","handlePageChange","currPage","FilterStyled","length","onPageChange","CheckboxType","originalData","transactionTypeList","filterToken","setFilterToken","tokenTypeList","Set","val","TYPE_COLOR_MAPPING","pending","failed","status","find","svg","RenderValueWrapper","hover","getColumnModeTransaction","minWidth","primaryLight","address","env","minFractionDigits","toLocaleString","minimumFractionDigits","fee","Wrapper","path","_rawData","Link","href","TransactionTable","currFilterToken","TokenType","tokenType","setTokenType","hideSmallBalance","setHideSmallBalance","hideLPToken","setHideLPToken","refTokenType","useRef","refHideSmallBalance","refHideLPToken","handleCheckboxChange","smallBalance","checked","handleFilterData","valueTokenType","current","valueHideSmallBalance","valueHideLPToken","currHideSmallBalance","currHideLPToken","token","marginRight","control","Checkbox","checkedIcon","lp","getColumnModeAssets","StyledToken","isLp","tradePairs","popupState","bindTrigger","Menu","bindMenu","first","last","close","AssetsTable","showFiliter","filterTokenType","setFilterTokenType","currFilterTokenType","single","viewportRows","AmmTradeType","TxStatus","StyledSideCell","_currency","tradeType","TradeTable","useDeepCompareEffect","sortable","add","Trans","i18nKey","swap","totalDollar","totalYuan","amountA","amountB","headerCellClass","cellClass","timeString","textAlign","AmmRecordTable","i18n","tReady","wait","globalSetup","_handlePageChange","Style","bg","columnModeDefault","Template","Table","args","useTranslation","Default","bind","Empty","FormatCell","FormatRow","SortColumn","columnModeCellDepth","volume","price","depthKey","rowRenderer","p","rowBeforeRender","columnModeSort","sortDefaultKey","frozeSort","sortMethod","sortedRows","sortColumn","sort","a","b","localeCompare","HeaderCell","sortDirection","priority","onSort","children","setFilterBy","headerSortCell","ctrlKey","Styled","_rest","filterBy","headerRenderer","paddingTop","sellData","buyData","showTag","priceDollar","priceYuan","change24","AmmSideTypes","setFilterItems","handleChange","console","log","WalletNotificationStatus","Join","Exit","AmmTable","side","QRCodePanel","description","url","marginBottom","aria-label","ModalQRCode","onClose","open","Modal","aria-labelledby","aria-describedby","paddingBottom","IconWrapperStyled","WalletConnectPanelStyled","WalletConnectPanel","gatewayList","handleSelect","flex","imgSrc","ModalWalletConnect","boxShadow","ChartType","timeUnit","BtnWalletConnectStyled","fontDefault","h5","BtnWalletConnect","handleClick","loading","connect","accountPending","unlock","noAccount","noNetwork","WalletStatus","debounceCount","debounce","usePopupState","bindHover","height","loadingSvg","BtnDownload","i18nTitle","i18nDescription","Description","IconButton","bindPopper","margin","BtnNotification","BtnTheme","themeMode","_handleClick","ThemeType","dark","BtnLanguage","_handleChange","labelId","language","autoWidth","LanguageType","en_US","zh_CN","ToolBarStyled","Toolbar","StyledDiv","HeaderStyled","AppBar","mode","borderConfig","d_W","LogoStyle","primary","logoSVG","LoopringLogo","edge","RouterLink","ToolBarItem","buttonComponent","ButtonComponentsMap","Download","Notification","Theme","Language","WalletConnect","render","HideOnScroll","setClassName","handleScroll","position","window","pageYOffset","addEventListener","passive","removeEventListener","Slide","appear","adirection","forwardedRef","in","Header","headerMenuData","headerToolBarData","selected","getMenuButtons","toolbarList","ToolBarAvailableItem","index","getDrawerChoices","menuList","layer","nodeMenuItem","router","child","selectedFlag","RegExp","test","split","Memoized","renderList","handleListKeyDown","HeaderMenuTabStatus","Fragment","textDecoration","Container","maxWidth","alignContent","TradeTitleStyled","TradeTitle","tradeFloat","none","isNew","sellIconHasLoaded","buyIconHasLoaded","tradeFloatType","decrease","NaN","Avatar","paddingRight","AccountInfo","addressShort","level","connectBy","etherscanLink","onDisconnect","onSwitch","onLock","mainBtn","onCopy","paddingX","marginY","data-clipboard-text","startIcon","fontSize","AssetTitle","assetInfo","onShowWithdraw","onShowTransfer","onShowDeposit","btnShowDepositStatus","btnShowTransferStatus","btnShowWithdrawStatus","isShow","setIsShow","priceTag","totalAsset","LOADING","DISABLED","colors","StyledLegendItem","renderActiveShape","cx","cy","innerRadius","outerRadius","startAngle","endAngle","fill","Sector","renderLegend","payload","entry","StyledColoredRect","DoughnutChart","data","activeIndex","setActiveIndex","onPieEnter","_","onPieLeave","getFormattedData","others","reduce","concat","ResponsiveContainer","PieChart","Pie","dataKey","activeShape","stroke","radius","paddingAngle","minAngle","animationEasing","animationDuration","onMouseEnter","onMouseLeave","Cell","Tooltip","contentStyle","itemStyle","Legend","layout","align","verticalAlign","content","CandleStickFill","getSign","dataIndex","closeDimIdx","Trend","UP_COLOR","DOWN_COLOR","TrendChart","yAxisDomainPercent","handleMove","riseColor","showTooltip","showArea","priceTrend","setPriceTrend","currentIndex","setCurrentIndex","renderData","sign","trendColor","hasData","handleMousemove","activeTooltipIndex","isUpdate","renderTooltipContent","timeStamp","ComposedChart","onMouseMove","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","hide","YAxis","domain","dataMin","dataMax","y","Line","strokeLinecap","strokeWidth","dot","legendType","Area","fillOpacity","isAnimationActive","ASKS_COLOR","BIDS_COLOR","DepthChart","asksColor","bidsColor","bids","asks","activePayload","formattedData","bidsPrices","asksPrices","bidsAmtTotals","asksAmtTotals","formattedBidsPrices","formattedAsksPrices","jointPrices","getDepthData","allowDuplicatedCategory","StockChart","left","top","bottom","pricesDisplayFormat","xScaleProvider","discontinuousTimeScaleProviderBuilder","inputDateAccessor","d","date","macdAppearance","fillStyle","divergence","strokeStyle","macd","signal","zero","barChartExtents","candleChartExtents","high","low","yEdgeIndicator","candleStickColor","up","down","volumeColor","volumeSeries","openCloseColor","this","initialData","dateTimeFormat","ratio","macdCalculator","options","fast","slow","merge","c","accessor","sma5","sma","windowSize","sma10","sma30","sma60","bollinger","bollingerBand","bb","ema26","ema","ema12","macdYAccessor","macdOptions","calculatedData","xScale","xAccessor","displayXAccessor","max","xExtents","Math","chartHeight","timeDisplayFormat","timeFormat","ChartCanvas","seriesName","zoomAnchor","lastVisibleItemBasedZoomAnchor","Chart","yExtents","showGridLines","gridLinesStrokeStyle","showTicks","showTickLabel","tickLabelFill","tickFormat","CandlestickSeries","LineSeries","yAccessor","CurrentCoordinate","MouseCoordinateY","rectWidth","displayFormat","EdgeIndicator","itemType","lineStroke","MovingAverageTooltip","origin","textFill","OHLCTooltip","BollingerSeries","middle","BollingerBandTooltip","w","h","axisAt","orient","ticks","MouseCoordinateX","MACDSeries","MACDTooltip","appearance","CrossHairCursor","DayilyStockChart","withSize","minHeight","withDeviceRatio","ScaleAreaChart","Depth","Kline","MarketBlockStyled","default","MarketBlock","chartData","upColor","isAbbreviate","textOverflow","EmptyDefault","defaultPic","message","WrapStyled","renderPic","DataGridStyled","DataGrid","backgroundHeader","prev","isHidden","cell","EmptyRowsRenderer","sortInitDirection","rowClassFn","rowKeyGetter","columns","rows","setRows","columnKey","direction","sortColumns","setSortColumns","useMemo","reverse","onSortColumnsChange","loopringColumns","SortableHeaderCell","RenderPic","RenderEmptyMsg","rowClass","onRowsChange","emptyRowsRenderer","headerSortName","ArrowSort","StyledArrowSort","MuButton","primaryDark","ToggleButtonGroup","setValue","tgItemJSXs","exclusive","_e","JSX","tlabel","ToggleButton","ModalCloseButton","PointOnStyled","PointStyled","Track","Thumb","BtnPercentage","handleChanged","anchors","_anchors","_handleChanged","boxSizing","paddingY","zIndex","PlatFormType","initialState","platform","desktop","slippage","settingsSlice","createSlice","reducers","setTheme","state","action","setLanguage","changeLanguage","locale","toLocaleLowerCase","setPlatform","setCurrency","setUpColor","setSlippage","actions","settings","useSelector","dispatch","useDispatch","dSetTheme","dSetLanguage","dSetPlatform","dSetCurrency","dSetUpColor","dSetSlippage","ModalType","modalsSlice","isShowTransfer","isShowWithdraw","isShowDeposit","isShowResetAccount","isShowSwap","isShowAmm","isShowConnect","isShowAccountInfo","setShowAmm","keys","setShowSwap","setShowTransfer","setShowWithdraw","setShowDeposit","setShowResetAccount","setShowConnect","setShowAccountInfo","useOpenModals","modals","AmmPanelType","InputStyled","CurrencyInput","h6","SlippagePanel","slippageList","cValue","setcValue","inputEle","useFocusRef","shouldFocusOn","handleContChange","_name","toggleData","pre","toString","replace","isNaN","placeholder","allowDecimals","decimalsLimit","onValueChange","maxLength","suffix","ToolBarItemBack","onChangeEvent","tradeData","IconButtonStyled","sx","transform","TradeMenuList","walletMap","coinMap","inputSelectProps","focusOnInput","allowScroll","panelRender","coinInfo","filterString","_event","itemKey","belong","SwapMenuList","tradeCalcData","swapData","sellCoinInfoMap","buyCoinInfoMap","handleOnChangeIndex","useBasicTrade","handlePanelEvent","switchData","setSwitchData","setIndex","_index","count","balance","toolBarItemBack","BasicACoinTrade","inputButtonDefaultProps","handleError","inputBtnRef","inputButtonProps","handleOnClick","_ref","handleCountChange","_tradeData","tradeValue","inputBtnProps","subLabel","emptyText","placeholderText","maxAllow","inputData","TypographyStrong","TypographyGood","LinearProgress","borderRadius","linearProgressClasses","colorPrimary","bar","h4","textDisable","DepositWrap","depositBtnStatus","onDepositClick","getDisabled","paddingLeft","ResetWrap","resetBtnStatus","onResetClick","WithdrawWrap","addressDefault","withdrawTypes","WithdrawTypes","withdrawType","chargeFeeTokenList","chargeFeeToken","onWithdrawClick","withdrawBtnStatus","handleFeeChange","handleWithdrawTypeChange","handleOnAddressChange","handleAddressError","_withdrawType","setWithdrawType","feeIndex","setFeeIndex","setAddress","addressError","setAddressError","_handleWithdrawTypeChange","_handleFeeChange","debounceAddress","_handleOnAddressChange","flexWrap","required","SelectProps","helperText","RadioGroup","FormControlLabel","Radio","withNoCheckIcon","ListItemText","TransferWrap","onTransferClick","transferBtnStatus","SwapTradeWrap","swapBtnStatus","onSwapClick","swapBtnI18nKey","tokenSellProps","tokenBuyProps","sellRef","buyRef","slippageArray","SlippageTolerance","focus","ibData","covertOnClick","sell","buy","_onSlippageChange","customSlippage","__cache__","propsSell","propsBuy","lineHeight","StoB","bindPopover","priceImpact","minimumReceived","SvgStyled","AmmDepositWrap","ammDepositBtnStatus","ammCalcData","ammDepositBtnI18nKey","onAmmDepositClick","tokenAProps","tokenBProps","ammData","coinARef","coinBRef","coinInfoMap","propsA","propsB","order","AtoB","AmmWithdrawWrap","ammWithdrawBtnStatus","onAmmWithdrawClick","ammWithdrawBtnI18nKey","selectedPercentage","_selectedPercentage","setSelectedPercentage","flag","SwapPanel","swapTradeData","handleSwapPanelEvent","coinSell","coinBuy","setSwapData","countBuy","countSell","panelList","element","toolBarItem","clockLoading","DepositPanel","ResetPanel","WithdrawPanel","TransferPanel","SwitchPanelStyled","_width","_height","ModalPanel","transferProps","withDrawProps","depositProps","resetProps","ammProps","swapProps","AmmPanelTypeMap","TabPanelBtn","Tabs","Tab","AmmPanel","tabSelected","Deposit","ammDepositData","ammWithdrawData","disableDeposit","handleDepositEvent","disableWithdraw","handleWithDrawEvent","tokenDepositAProps","tokenDepositBProps","tokenWithDrawAProps","tokenWithDrawBProps","ammChgDepositData","setAmmChgDepositData","ammChgWithdrawData","setAmmChgWithdrawData","_onChangeDepositEvent","_onChangeWithdrawEvent","percentage","handleTabChange","useTheme","axis","panel","_InputSelect","handleContentChange","debounceContentChange","_handleContentChange","panelRef","usePanelRef","OutlinedInput","startAdornment","InputAdornment","InputSelect","IWrap","ISBtn","logoColor","IInput","_InputButton","sValue","setsValue","_handleError","_error","setError","inputCallback","callback","_handleContChange","FormLabel","wrap","endIcon","align-items","allowNegativeValue","aria-placeholder","FormHelperText","InputButton","DateTextField","experimentalStyled","calendars","mask","inputFormat","openPickerIcon","OpenPickerButtonProps","renderInput","startProps","endProps","InputProps","endAdornment","readOnly","disableFuture","openTo","views","MuFormControlLabel","MuTextField","CoinWrap","_InputCoin","InputCoin","common","tokenEnter","tokenEnterPaymentToken","tokenMax","tokenHave","tokenEnterReceiveToken","tokenSelectToken","tokenExchange","tokenNotEnough","tokenSearchCoin","swapTolerance","swapPriceImpact","swapMinReceive","swapFee","swapBtn","goBack","resetTitle","restLabelEnterToken","resetDescription","resetFee","resetLabelBtn","depositTitle","depositTitleAndActive","depositLabelEnterToken","depositDescription","depositAndActiveDescription","depositLabelBtn","depositLabelLinkRecent","withdrawTitle","withdrawLabelEnterToken","withdrawDescription","withdrawLabelBtn","withdrawLabelAddress","withdrawLabelAddressInput","withdrawLabelFee","withdrawTypeLabelFast","withdrawTypeLabelStandard","withdrawLabelLinkRecent","transferTitle","transferLabelEnterToken","transferDescription","transferLabelBtn","transferLabelAddress","transferLabelAddressInput","transferLabelFee","transferLabelLinkRecent","labelConnectWallet","labelCustomer","labelChange24h","labelDepth","labelTrend","label1W","label1H","label1D","labelCopyAddress","labelDisconnect","labelLockLayer2","labelUnLockLayer2","labelActiveLayer2","labelSwitchAccount","labelViewEth","labelQRCode","labelShowAccountInfo","labelAssetTitle","labelShowAccount","labelBtnDeposit","labelBtnTransfer","labelBtnWithdraw","labelLevel","labelOrderbook","labelDeposit","labelWithdraw","labelSetPublicKey","labelTitleSecurity","labelTitleResetL2Keypair","labelBtnReset","labelHadChangPassword","labelTitleForceWithdraw","descriptionForceWithdraw","labelBtnForceWithdraw","labelTitleExportAccount","descriptionExportAccount","labelBtnExportAccount","labelTitlePreferences","labelTitleLayout","whichColorIsUp","labelTradeFeeLevel","labelLanguage","labelCurrency","currencySetting","labelColors","labelthemeLight","labelthemeDark","labelgreen","labelred","langZH","langEN","labelUSDollar","labelCNYYuan","labelMaker","labelTaker","labelAssetsTitle","labelVolume","labelLiquidityDeposit","labelLiquidityWithdraw","labelAvailable","labelTokenAmount","labelRemoveLiquidityBtn","labelAddLiquidityBtn","labelTradePanelHideOtherPairs","labelLPTokens","labelTrade","labelAmmList","labelMyPoolShare","labelFee","labelLPTotal","labelLiquidity","labelReward","labelMyReward","labelDate","labelBack","labelAPY","labelNew","labelAccount","labelAll","labelMe","labelMyTrade","labelRecent","labelMyAmm","labelMyAmmRecord","labelCurrentActivities","labelPastActivities","labelTotalPositionValue","labelFeeRewards","labelMiningRewards","labelLiquidityValue","labelCopyAddClip","labelPleaseInputWalletAddress","labelMarkets","labelLayer2","loopringDomain","labelClassic","labelClassicDescription","labelAdvanced","labelAdvancedDescription","labelDownloadApp","labelDownloadAppTitle","labelDownloadBtn","labelNotification","themeSetting","languageSetting","notificationApprove","notificationPending","labelMyTrades","labelRecentTrades","labelAssets","labelTransactions","labelTrades","labelAmmRecords","labelAmmRecordsDes","rewards","labelOrders","selectLanguage","labelPools","labelAmmMining","labelMyLiquidity","labelOrderBookMining","labelMakerRebates","labelSetting","tables","labelStatus","labelAMM","labelTransfer","labelToken","labelAmount","labelLocked","labelActions","labelAllToken","labelHideSmallBalances","labelHideLPToken","labelOrderFilterAllTypes","labelOrderFilterBuy","labelOrderFilterSell","labelFilterReset","labelFilterSearch","labelOrderSide","labelOrderAmount","labelOrderAverage","labelOrderFilledAmount","labelOrderFilledPrice","labelOrderTime","labelOrderStatus","labelOrderTradingPrice","labelOrderTotal","labelQuotaPair","labelQuotaLastPrice","labelQuota24hChange","labelQuota24hHigh","labelQuota24hLow","labelQuota24Volume","labelTradeFilterAllTypes","labelTradeFilterBuy","labelTradeFilterSell","labelTradeSide","labelTradeAmount","labelTradePrice","labelTradeFee","labelTradeTime","labelTxFilterAllTypes","labelTxFilterDeposit","labelTxFilterWithdraw","labelTxFilterTransfer","labelTxFilterAllTokens","labelTxToken","labelTxFrom","labelTxTo","labelTxAmount","labelTxFee","labelTxMemo","labelTxTime","labelTxTxnHash","labelTxStatus","labelTradePair","labelPool","label24TradeVolume","label24Reward","labelTradePool","labelAction","labelFilter","valueAddTOAMM","valueSwapForAMM","valueRemoveTOAMM","labelAmmTotalValue","labelAmmTokenAmount","labelAmmTime","labelFeeEarned","labelBuy","labelSell","labelAmmSide","labelAmmAmount","labelAmmLpTokenAmount","labelAmmFee","labelAmmRecordTime","labelAmmExit","labelAmmJoin","labelAmmFilterTypes","labelAmmFilterJoin","labelAmmFilterExit","labelConnectUs","errorBase","errorLoading","error404","resources","enUS","zhCN","use","initReactI18next","init","ns","defaultNS","lng","load","fallbackLng","supportedLngs","keySeparator","interpolation","escapeValue","react","bindI18n","transEmptyNodeValue","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","useSuspense","SvgIcon","viewBox","fillRule","clipRule","LockIcon","aria-hidden","data-testid","UnLockIcon","ColorDarkDefault","freeze","secondaryLight","textPrimaryLight","textHint","backgroundGlobal","backgroundSecondary","backgroundHover","blur","borderColor","shadowBox","active","backDrop","ChartUnit","WithdrawType","HeadMenuTabKey","NavListIndex","notificationList","subMenuLayer2","assetsGroup","transactionsGroup","countInfoGroup","settingGroup","subMenuLiquidity","poolsGroup","headerRoot","option","result","abbreviateNumber","suffixNum","toPrecision","ErrorMap","LOADING_WHOLE_SITE","messageKey","NO_SUPPORT_PAIR","NO_SDK","NO_NETWORK_ERROR","NO_TOKEN_MAP","NO_ENOUGH_BALANCE","NO_TOKEN_KEY_LIST","GET_X_TOKEN_TICKER_ERROR","BUILD_AMM_MAP_WITH_TICKER","TRADE_LITE_SET_PAIR_ERROR","SOCKET_ERROR","TRADE_404","CustomError","_options","_date","_messageKey","Error","captureStackTrace","now","setHasLoaded","hasError","setHasError","hasStartedInitialFetch","setHasStartedInitialFetch","image","Image","handleLoad","hr","MenuTab","StyledHeadMenuItem","StyledLayer2Item","StyledHeaderMenuSub","StyledTabBtn","HeadMenuItem","clsx","Layer2Item","HeaderMenuSub","getContentAnchorEl","_CoinMenu","ele","listProps","setSelect","virtuoso","rowIndex","list","walletCoin","handleListItemClick","initialTopMostItemIndex","itemContent","CoinItem","CoinMenu","StyledCoinItem","ListItem","button","ListItemIcon","TabItemPlus","SubMenuItem","SubMenuList","subMenu","subList","ListItemAvatar","Divider","MuiMenuItem","OutlineSelect","Select","OutlineSelectItem","SwipeableViews","_SwitchPanel","SwitchPanel","SubMenu","List","StyledPaginationWrapper","StyledPagination","Pagination","TablePagination","getCount","RowDepthStyled","_DepthRow","cellRenderer","CellRenderer","isRowSelected","copiedCellIdx","draggedOverCellIdx","viewportColumns","selectedCellProps","onRowClick","setDraggedOverRowIdx","onRowChange","selectCell","selectRow","ariaRowIndex","ariaSelected","idx","role","aria-rowindex","aria-selected","isCellSelected","colSpan","isCopied","isDraggedOver","dragHandleProps","onFocus","onKeyDown","DepthRow","RowBefore","ETH","company","LRC","USDT","USDC","LRCA","LRCB","DPR","CCB","OKB","CRV","TEST","TEST2","TEST3","DEFAULT_ANCHOR_ORIGIN","DEFAULT_TRANSFORM_ORIGIN","Popover","popoverStyle","popoverTop","arrowLeft","arrowRight","isHover","bindAction","bindContent","CustomPopover","HoverMenu","MuiPopover","getRenderChild","popoverChildren","isValidElement","Children","cloneElement","anchorReference","overflow","PopoverPure","HoverPopover","NewTagIcon","xmlns","StyleDepth","CellDepthFormatter","PoolTradeType","TypogStyle","body1","PoolStyle","handleWithdraw","handleDeposit","ammDetail","balanceA","balanceB","balanceYuan","balanceDollar","feeA","feeB","feeYuan","feeDollar","MyPoolTable","headerRowHeight","IconColumn","isActivity","PoolsTable","useHistory","newData","doUpdate","currentTarget","_rowIdx","CalendarIcon","SearchIcon","DownloadIcon","NotificationIcon","ThemeDarkIcon","ThemeLightIcon","focusable","CheckIcon","CheckBoxIcon","CheckedIcon","PendingIcon","AlertIcon","CloseIcon","ActiveIcon","ReverseIcon","ProToLiteIcon","RefreshIcon","ExchangeIcon","EmptyIcon","ViewIcon","HideIcon","CopyIcon","LinkIcon","LinkedIcon","MiningIcon","NoNetWorkIcon","PowerIcon","ColorLightDefault","h1","h2","h3","globalCss","scrollbarDefault","reset","InterMedium","GilroyMedium","pxToRem","px","oneRemPx","borderFunc","defaultBorder","defaultRadius","FontDefault","MuiCheckbox","styleOverrides","root","MuiModal","MuiSwitch","opacity","borderWidth","track","thumb","MuiButton","fontWeight","contained","sizeLarge","sizeSmall","outlinedSizeSmall","outlined","backgroundImage","MuiPaper","MuiRadio","MuiIconButton","MuiInputLabel","MuiInputBase","pointerEvents","input","MuiToggleButton","rgba","MuiButtonBase","defaultProps","disableRipple","MuiPaginationItem","MuiListItem","borderLeft","borderLeftColor","encodeURIComponent","MuiTab","MuiDivider","MuPickDate","MuiPickersBasePicker","MuiPicker","MuiDateRangePickerViewDesktop","borderBottomColor","maxHeight","MuiPickersDesktopDateRangeCalendar","MuiPickersDateRangeDay","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","MuiDateRangePickerDay","MuiPickersToolbarButton","MuiPickersToolbar","MuiPickersDay","MuiPickersCalendar","MuiPickersCalendarHeader","MuiPickersYear","MuiPickersModalDialog","dialogAction","getTheme","createMuiTheme","palette","light","main","contrastText","contrastThreshold","tonalOffset","paper","text","hoverOpacity","typography","fontFamily","subtitle1","fontColor","body2","components","MuiCard","MuiLink","MuiToolbar","MuiSvgIcon","MuiTabs","MuiTextField","MuiListItemAvatar","shape","provider","Provider","ProviderComposer","providers","App","useInit","setStatus","STATUS","PENDING","ERROR","styles"],"mappings":"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","file":"static/js/main~493df0b3.49b85a73.chunk.js","sourcesContent":["import { Avatar, Box, Card, CardActions, CardContent } from '@material-ui/core';\nimport { Typography } from '@material-ui/core/';\nimport { AvatarIconPair, Button, useImage } from '../';\nimport React from 'react';\nimport moment from 'moment';\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport { AmmCardProps, Currency, EmptyValueTag, getThousandFormattedNumbers, PriceTag } from 'static-resource';\nimport { useSettings } from '../../stores';\nimport styled from '@emotion/styled';\n\n// const BoxStyled = styled(Card)`\n//\n// `\n\nconst BoxStyled = styled(Box)`\n  ${({theme}) => AvatarIconPair({theme})}\n` as typeof Box\nconst BoxBg = styled(Box)`\n  background-color: ${({theme}) => theme.colorBase.background().outline};\n  ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1/2})};\n` as typeof Box\n\n\nexport const AmmCard = withTranslation('common', {withRef: true})(\n    React.memo(React.forwardRef(<T extends {[key:string]:any}>(\n        {\n            t,\n            coinAInfo,\n            coinBInfo,\n            amountDollar,\n            amountYuan,\n            // isNew,\n            APY,\n            activity:{duration,totalRewards,myRewards,rewardToken,isPass},\n\n            // ...rest\n        }: AmmCardProps<T> & WithTranslation, ref: React.ForwardedRef<any>) => {\n\n        const coinAIconHasLoaded = useImage(coinAInfo?.icon ? coinAInfo?.icon : '').hasLoaded;\n        const coinBIconHasLoaded = useImage(coinBInfo?.icon ? coinBInfo?.icon : '').hasLoaded;\n        const {currency} = useSettings();\n\n        return <Card ref={ref}>\n            <CardContent>\n                <BoxStyled display={'flex'} flexDirection={'row'} justifyContent={'space-between'} alignItems={'center'}>\n                    <Box display={'flex'} flexDirection={'row'} justifyContent={'flex-start'} alignItems={'center'} >\n                        <Avatar variant=\"square\" alt={coinAInfo?.simpleName}\n                            // src={sellData?.icon}\n                                src={coinAIconHasLoaded ? coinAInfo?.icon : 'static/images/icon-default.png'}/>\n                        <Avatar variant=\"square\" alt={coinBInfo?.simpleName} className={'icon-next'}\n                            // src={buyData?.icon}\n                                src={coinBIconHasLoaded ? coinBInfo?.icon : 'static/images/icon-default.png'}/>\n\n                        <Typography display={'flex'} flexDirection={'column'} marginLeft={1} component={'div'}>\n                            <Typography variant={'body1'} component={'h3'} color={'textPrimary'} title={'sell'}>\n                                <Typography component={'span'} className={'next-coin'}>\n                                    {coinAInfo?.simpleName}\n                                </Typography>\n                                <Typography component={'i'}>/</Typography>\n                                <Typography component={'span'} title={'buy'}>\n                                    {coinBInfo?.simpleName}\n                                </Typography>\n                            </Typography>\n                            <Typography variant={'body2'} component={'span'} color={'textSecondary'}>\n                                {t('labelLiquidity') + ' ' +\n                                amountDollar === undefined? EmptyValueTag: currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(amountDollar as number)\n                                    : PriceTag.Yuan + getThousandFormattedNumbers(amountYuan as number)}\n                            </Typography>\n                        </Typography>\n                        {/*{isNew ? <NewTagIcon/> : undefined}*/}\n                    </Box>\n                    <Typography display={'flex'} flexDirection={'column'} component={'span'} alignItems={'flex-end'} >\n                        <Typography component={'span'}  color={'textSecondary'}  variant={'body2'}\n                                    style={{textTransform: 'uppercase'}}>{t('labelAPY')}</Typography>\n                        <Typography component={'span'}  variant={'body1'}> {APY}%\n                        </Typography>\n                    </Typography>\n                </BoxStyled>\n\n                <BoxBg display={'flex'} flexDirection={'column'} alignItems={'stretch'} marginTop={2} padding={1}>\n                    <Box display={'flex'} flexDirection={'row'} justifyContent={'space-between'}>\n                        <Typography display={'flex'}  flexDirection={'column'} component={'div'}>\n                            <Typography variant={'body2'} component={'h5'} color={'textSecondary'}>\n                                {t('labelReward')}\n                            </Typography>\n                            <Typography variant={'body1'} component={'span'} color={'textPrimary'}>\n                                {getThousandFormattedNumbers(totalRewards, 2)}\n                                {rewardToken?.simpleName}\n                            </Typography>\n                        </Typography>\n                        <Typography display={'flex'} flexDirection={'column'} alignItems={'flex-end'} component={'div'} >\n                            <Typography variant={'body2'} component={'h5'} color={'textSecondary'}>\n                                {t('labelMyReward')}\n                            </Typography>\n                            <Typography variant={'body1'} component={'span'} color={'textPrimary'}>\n                                {getThousandFormattedNumbers(myRewards, 6)}\n                                {rewardToken?.simpleName}\n                            </Typography>\n                        </Typography>\n                    </Box>\n                    <Typography alignSelf={'flex-start'} variant={'body2'}  color={'textSecondary'} component=\"span\" marginTop={1}>\n                        {t('labelDate')}:\n                        {moment(duration.from).format('L')} - {moment(duration.to).format('L')}\n                    </Typography>\n                </BoxBg>\n            </CardContent>\n            <CardActions>\n                <Button fullWidth variant={'contained'} size={'medium'}  disabled={isPass?true:false}\n                        color={'primary'}>{t('labelDeposit')}</Button>\n            </CardActions>\n        </Card>\n    }))) as <T>(props: AmmCardProps<T> & React.RefAttributes<any>) => JSX.Element;\n","import styled from '@emotion/styled';\nimport { Grid, Typography } from '@material-ui/core';\nimport { css } from '@emotion/react';\nimport { UpColor } from 'static-resource';\nimport { Box } from '@material-ui/core/';\n\n\n\nexport const TablePaddingX = ({pLeft=24,pRight=24}: {pLeft:number,pRight:number}) => css`\n  .rdg-row,.rdg-header-row {\n    .rdg-cell:first-of-type {\n      padding-left: ${pLeft}px;\n    }\n\n    .rdg-cell:last-of-type {\n      padding-right: ${pRight}px;\n    }\n  }\n`\nexport const VipStyled = styled(Typography)`\n  margin-left: ${({theme}) => theme.unit}px;\n  padding: ${({theme}) => theme.unit / 4}px ${({theme}) => theme.unit}px;\n  ${({theme}) => theme.border.defaultFrame({c_key: 'rgba(0,0,0,0)', d_R: 0.25})};\n  background-color: ${({theme}) => theme.colorBase.vipBgColor};\n  height: 2rem;\n  //line-height: 2rem;\n  color: ${({theme}) => theme.colorBase.secondaryDark};\n` as typeof Typography\nexport const floatTag = ({theme, custom}: any) => css`\n  .float-group {\n    font-weight: lighter;\n\n    .float-tag.float-increase {\n      color: ${custom.chg === UpColor.green ? theme.colorBase.success : theme.colorBase.error}\n    }\n\n    .float-tag.float-decrease {\n      color: ${custom.chg === UpColor.green ? theme.colorBase.error : theme.colorBase.success};\n    }\n\n    .float-tag.float-none {\n      color: ${theme.colorBase.textPrimary};\n    }\n  }\n`\nexport const AvatarIconPair =  ({theme}: any)=>css`\n  .MuiAvatar-root {\n    width: var(--chart-title-coin-size);\n    height: var(--chart-title-coin-size);\n  }\n  .icon-next {\n    margin-left: -${ theme.unit}px;\n  }`\nexport const baseTitleCss = ({theme, custom}: any)=> css`\n  height: 72px;\n  ${AvatarIconPair({theme})}\n\n  h3.MuiTypography-root {\n    font-size: 1.6rem;\n    margin-left: ${theme.unit}px;\n    color: ${theme.colorBase.textSecondary};\n\n    .MuiTypography-root {\n      margin: 0 ${theme.unit / 4}px;\n    }\n\n    .next-coin {\n      color: ${theme.colorBase.textPrimary};\n    }\n  }\n\n  ${floatTag({theme, custom})};\n\n  .float-chart {\n    margin-left: ${theme.unit}px;\n\n    .chart-change {\n      color: ${ theme.colorBase.textSecondary};\n    }\n  }\n`\nexport const ButtonListRightStyled = styled(Grid)`\n  .MuiButton-root:not(:last-child) {\n    margin-right: ${({theme}) => theme.unit}px;\n  }\n`\n\nexport const ModalContentStyled = styled(Box)`\n    & > div {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: center;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        background-color: ${({theme}) => theme.colorBase.background().secondary};\n        transform: translate(-50%, -50%);\n       \n        padding: 36px 0;\n        border: 1px solid #252842;\n        box-shadow: 0px 4px 38px rgba(0, 0, 0, 0.16);\n        border-radius: 8px;\n    }\n` as typeof Box\n// export const TwoIconBoxStyled = styled(Box)`\n//   ${({theme}) => AvatarIconPair({theme})}\n// ` as typeof Box","import { CoinKey, IBData } from 'static-resource';\nimport {\n    BasicACoinTradeHookProps,\n    DefaultProps,\n    DepositExtendProps,\n    DepositInfoProps as _DepositInfoProps,\n    ResetExtendProps,\n    ResetInfoProps as _ResetInfoProps,\n    TransferExtendProps,\n    TransferInfoProps as _TransferInfoProps,\n    WithdrawExtendProps,\n    WithdrawInfoProps as _WithdrawInfoProps,\n} from './components/Interface';\nimport {\n    SwapData,\n    SwapTradeBaseEventProps,\n    SwapTradeBaseProps,\n} from './components/panel/SwapWrap/Interface';\nimport { AmmPanelBaseProps } from './Amm';\nexport type SwapTradeData<T> = {\n    sell: T,\n    buy: T,\n    slippage: number | string,\n    __cache__?: {\n        [ key: string ]: any\n    }\n}\n\n\n\nexport type ModalProps = {\n    open: boolean,\n    onClose: { bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void; }['bivarianceHack'];\n    btnDisable?: boolean\n}\n\nexport type ResetProps<T, I> = BasicACoinTradeHookProps<T, I> & Required<ResetExtendProps<T>>\nexport type DepositProps<T, I> = BasicACoinTradeHookProps<T, I> & DepositExtendProps<T>;\nexport type WithdrawProps<T, I> = BasicACoinTradeHookProps<T, I> & WithdrawExtendProps<T, I, CoinKey<I>>;\nexport type TransferProps<T, I> = BasicACoinTradeHookProps<T, I> & TransferExtendProps<T, I, CoinKey<I>>;\n\n\nexport  type  ResetInfoProps<T, I> = DefaultProps<T, I> & _ResetInfoProps;\nexport  type  DepositInfoProps<T, I> = DefaultProps<T, I> & _DepositInfoProps;\nexport  type  WithdrawInfoProps<T, I> = DefaultProps<T, I> & _WithdrawInfoProps<CoinKey<I>>;\nexport  type  TransferInfoProps<T, I> = DefaultProps<T, I> & _TransferInfoProps<CoinKey<I>>;\n\nexport  type  SwapInfoProps<T, I, TCD> =  SwapTradeBaseProps<T, I, TCD> ;\nexport  type  AmmInfoProps<T, I, ACD, C = IBData<I>> =  AmmPanelBaseProps<T, I, ACD, C>;\n\n\n/**\n *  @type SwapProps\n *  @param swapTradeData: SwapTradeData<T>\n *  @callback handleSwapPanelEvent {\n *      @param type='buy'|'sell'|'exchange'\n *      @param to='menu'|'button' to the view of list for select item\n *      @param SwapData<T>\n *  }\n *  @callback onSwapClick :(\n *      @param SwapData<T>\n *  )  => void {\n *  @param tradeCalcData TradeCalcData<I>\n *  @param swapBtnStatus='disable'|'loading'\n *  @param tokenSellProps i18n done string\n *  @param tokenBuyProps i18n done string\n *  @callback onChangeEvent?: (\n *      @param index=0|1  0：when view on type button, 1: when view on type menu\n *      @param data: SwapData<T>\n *  ) => SwapData<T>\n */\n\n\nexport type SwapProps<T, I, TCD> = {\n    tradeData: SwapTradeData<T> | undefined,\n    handleSwapPanelEvent: (data: SwapData<SwapTradeData<T>>, switchType: 'buyTomenu' | 'sellTomenu' | 'exchange' | 'buyTobutton' | 'sellTobutton') => Promise<void>,\n    onChangeEvent?: (index: 0 | 1, data: SwapData<SwapTradeData<T>>) => SwapData<SwapTradeData<T>>,\n} & SwapInfoProps<T, I, TCD> & SwapTradeBaseEventProps<T, I> & SwapTradeBaseProps<T, I, TCD>\n\n\nexport type SwitchData<T> = {\n    to: 'menu' | 'button'\n    tradeData: T,\n}\n\nexport enum TradeBtnStatus {\n    AVAILABLE = 'AVAILABLE',\n    DISABLED = 'DISABLED',\n    LOADING = 'LOADING',\n}\n\nexport enum SwitchType {\n    TO_MENU = 'Tomenu',\n    TO_BTN = 'Tobutton',\n}\n\nexport enum SwapType {\n    BUY_CLICK = 'buyTomenu',\n    SEll_CLICK = 'sellTomenu',\n    EXCHANGE_CLICK = 'exchange',\n    BUY_SELECTED = 'buyTobutton',\n    SELL_SELECTED = 'sellTobutton',\n}\n\nexport type  ModalPanelProps = {\n    open: boolean,\n    onClose: { bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void; }['bivarianceHack'];\n    content: React.ElementType<any> | JSX.Element,\n    height?: number|string,\n    width?: number|string,\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Grid, MenuItem } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { DatePicker, TextField } from '../../../'\nimport { Button } from '../../../basic-lib/btns'\nimport { DropDownIcon } from 'static-resource'\n\nexport interface FilterProps {\n    handleFilterChange: ({ filterType, filterDate, filterToken }: any) => void\n}\n\nexport enum FilterTradeTypes {\n    allTypes = 'All Types',\n    buy = 'Buy',\n    sell = 'Sell'\n}\n\nconst StyledTextFiled = styled(TextField)`\n    &.MuiTextField-root {\n        max-width: initial;\n    }\n    .MuiInputBase-root {\n        width: initial;\n        max-width: initial;\n    }\n`\n\nconst StyledDatePicker = styled(DatePicker)`\n\n`\n\nconst StyledBtnBox = styled(Box)`\n    display: flex;\n    margin-left: 40%;\n\n    button:first-of-type {\n        margin-right: 8px;\n    }\n`\n\nexport const Filter = withTranslation('tables', {withRef: true})(({\n                                                                                t,\n                                                                                handleFilterChange\n                                                                            }: FilterProps & WithTranslation) => {\n    const FilterTradeTypeList = [\n        {\n            label: t('labelOrderFilterAllTypes'),\n            value: 'All Types'\n        },\n        {\n            label: t('labelOrderFilterBuy'),\n            value: 'Buy'\n        },\n        {\n            label: t('labelOrderFilterSell'),\n            value: 'Sell'\n        },\n    ]\n    const [filterType, setFilterType] = React.useState<FilterTradeTypes>(FilterTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = React.useState<Date | any>(null);\n\n    const handleReset = React.useCallback(() => {\n        setFilterType(FilterTradeTypes.allTypes)\n        setFilterDate(null)\n        handleFilterChange({\n            filterType: FilterTradeTypes.allTypes,\n            filterDate: null,\n        })\n    }, [handleFilterChange])\n\n    const handleSearch = React.useCallback(() => {\n        handleFilterChange({\n            filterType,\n            filterDate,\n        })\n    }, [handleFilterChange, filterDate, filterType])\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-order-filter-types\"\n                    select\n                    fullWidth\n                    value={filterType}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                        setFilterType(event.target.value as FilterTradeTypes);\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                // > {Object.values(FilterTradeTypes).map(type => <MenuItem key={type} value={type}>{t(type)}</MenuItem>)}\n                > {FilterTradeTypeList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <StyledDatePicker value={filterDate} onChange={(newValue: any) => setFilterDate(newValue)}/>\n            </Grid>\n            <Grid item>\n                <StyledBtnBox>\n                    <Button variant={'outlined'} size={'medium'} color={'primary'}\n                            onClick={handleReset}>{t('labelFilterReset')}</Button>\n                    <Button variant={'contained'} size={'small'} color={'primary'}\n                            onClick={handleSearch}>{t('labelFilterSearch')}</Button>\n                </StyledBtnBox>\n            </Grid>\n        </Grid>\n    )\n})\n","import {  useCallback } from 'react'\nimport styled from '@emotion/styled'\nimport { Button, Box } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from 'react-i18next'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { EmptyValueTag, FloatTag, getThousandFormattedNumbers } from 'static-resource'\nimport { Column, Table } from '../../basic-lib/tables/index'\nimport { TablePaddingX } from '../../styled'\nimport { Typography } from '@material-ui/core/';\n\n\n\nconst TableStyled = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    .rdg{\n        height: 750px;\n        --template-columns: 240px auto auto auto auto auto 92px !important;\n        .rdg-cell.action{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        }\n    }\n    ${({theme}) => TablePaddingX({pLeft:theme.unit * 3,pRight:theme.unit * 3})}\n` as typeof Box\n\n// interface Row {\n//     price: string\n//     size: string\n//     volume: string\n//     number: string\n//     sortColumn: string\n//     filterColumn: string\n//     cellExpend: {\n//         value: string\n//         children: []\n//         isExpanded: boolean\n//     }\n//     children?: Row[]\n//     isExpanded?: boolean\n//     format?: any\n// }\n\n// export type QuoteTableRawDataItem = (string | number | string[] | number[])[]\nexport type QuoteTableRawDataItem = {\n    pair: {\n        coinA: string;\n        coinB: string;\n    }\n    close: number;\n    change: number;\n    high: number;\n    low: number;\n    floatTag:keyof typeof FloatTag\n    volume: number;\n}\n\n// const CoinPairCell: any = styled.span`\n// \tdisplay: flex;\n// \talign-items: center;\n// `\n\nconst QuoteTableChangedCell: any = styled.span`\n\tcolor: ${(props: any) => {\n        const {theme: {colorBase}} = props\n        return props.value > 0\n            ? colorBase.success\n            : props.value < 0\n                ? colorBase.error\n                : colorBase.textSecondary\n    }\n}\n`\n\n// const getColumnModelQuoteTable = (t: TFunction, history: any): Column<Row, unknown>[] => [\nconst  columnMode = ({t}: WithTranslation,history: any): Column<QuoteTableRawDataItem, unknown>[] => [\n    {\n        key: 'pair',\n        name: t('labelQuotaPair'),\n        // sortable: true,\n        formatter: ({row}) => {\n            // const RenderValue = styled.span`\n\t\t\t// \tcolor: ${({theme}) => theme.colorBase.textSecondary}\n\t\t\t// `\n            const {coinA, coinB} = row['pair']\n            return (\n                <Box className=\"rdg-cell-value\" >\n                        {/* <StarIcon/> */}\n                        <Typography component={'span'}> {coinA}<Typography component={'span'} color={'textSecondary'}> / {coinB}</Typography>\n                        </Typography>\n\n                </Box>\n            )\n        },\n    },\n    {\n        key: 'close',\n        name: t('labelQuotaLastPrice'),\n        // sortable: true,\n        formatter: ({row}) => {\n            const value = row[ 'close' ]\n            // const [valueFirst, valueLast] = value\n            // const getRenderValue = (value: number) => {\n            //     return Number.isFinite(value) ? value.toFixed(2) : EmptyValueTag;\n            // }\n            // const RenderValue = styled.span`\n\t\t\t// \tcolor: ${({theme}) => theme.colorBase.textSecondary}\n\t\t\t// `\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{typeof value !== 'undefined'? getThousandFormattedNumbers(value):EmptyValueTag}</span>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'change',\n        name: t('labelQuota24hChange'),\n        // sortable: true,\n        formatter: ({row}) => {\n            const value = row.change\n\n            // const hasValue = Number.isFinite(value)\n            // const isPositive = value > 0\n            // const sign = isPositive ? '+' : ''\n            // const renderValue = hasValue ? `${sign}${value.toFixed(2)}%` : 'N/A%'\n            return (\n                <div className=\"rdg-cell-value\">\n                    <QuoteTableChangedCell value={value}>\n                        {typeof value !== 'undefined'? (\n                            (row.floatTag === FloatTag.increase?'+': '') + getThousandFormattedNumbers(value) + '%'):EmptyValueTag}\n                    </QuoteTableChangedCell>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'high',\n        name: t('labelQuota24hHigh'),\n        // sortable: true,\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            // const hasValue = Number.isFinite(value)\n            // const renderValue = hasValue ? value.toFixed(2) : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{typeof value !== 'undefined'? getThousandFormattedNumbers(value):EmptyValueTag}</span>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'low',\n        name: t('labelQuota24hLow'),\n        // sortable: true,\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            // const hasValue = Number.isFinite(value)\n            // const renderValue = hasValue ? value.toFixed(2) : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{typeof value !== 'undefined'? getThousandFormattedNumbers(value):EmptyValueTag}</span>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'volume',\n        name: t('labelQuota24Volume'),\n        // sortable: true,\n        formatter: ({row}) => {\n            const value = row[ 'volume' ]\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{typeof value !== 'undefined'? getThousandFormattedNumbers(value):EmptyValueTag}</span>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'trade',\n        name: '',\n        formatter: ({row}) => {\n            const {coinA, coinB} = row['pair']\n            const tradePair = `${coinA}-${coinB}`\n            return (\n                <div className=\"rdg-cell-value\">\n                    <Button variant=\"outlined\" onClick={() => history.push({\n                        pathname: `/trading/lite/${tradePair}`\n                    })}>Trade</Button>\n                </div>\n            )\n        }\n    }\n]\n\nexport interface QuoteTableProps {\n    rawData: QuoteTableRawDataItem[],\n    rowHeight?: number\n    onVisibleRowsChange?: (startIndex: number) => void,\n    // generateColumns: ({\n    //                       columnsRaw,\n    //                       t,\n    //                       ...rest\n    //                   }: { columnsRaw: readonly Column<R,unknown>[], [ key: string ]: any } & WithT) => Array<RdgColumns<R>>;\n}\n\nexport type VisibleDataItem = {\n    coinA: string;\n    coinB: string;\n}\n\nexport const QuoteTable = withTranslation('tables')(withRouter(({ t, rowHeight = 44,onVisibleRowsChange, rawData, history, ...rest } : QuoteTableProps & WithTranslation & RouteComponentProps) => {\n    //const formattedRawData = rawData && Array.isArray(rawData) ? rawData : []\n    const getScrollIndex = useCallback((e) => {\n        const startIndex =  parseInt(String(e.target.scrollTop / rowHeight))\n        // const data = rawData && Array.isArray(rawData) ? rawData : []\n        // const viewportRows = data.slice(startIndex, startIndex + 10).map(o => ({\n        //     coinA: o.pair.coinA,\n        //     coinB: o.pair.coinB\n        // }))\n        if (onVisibleRowsChange) {\n            onVisibleRowsChange(startIndex)\n        }\n    }, [onVisibleRowsChange, rawData])\n\n   // const finalData = formattedRawData.map(o => Object.values(o))\n    const defaultArgs: any = {\n        rawData: [],\n        columnMode: columnMode({t, ...rest}, history),//getColumnModelQuoteTable(t, history),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}:any) => columnsRaw as Column<QuoteTableRawDataItem, unknown>[],\n    }\n\n    return (\n        <TableStyled>\n            <Table className={'scrollable'} {...{...defaultArgs, ...rest,onVisibleRowsChange , rawData , rowHeight}} onScroll={getScrollIndex} />\n        </TableStyled>\n    )\n}))\n","import { Column, generateColumns, generateRows, Table, } from '../../basic-lib'\nimport { OrderHistoryTableDetailItem, OrderPair } from './OrderHistoryTable'\nimport { WithTranslation, withTranslation, TFunction } from 'react-i18next';\nimport { EmptyValueTag } from '../../../static-resource';\n\ninterface Row {\n    amount: OrderPair\n    tradingPrice: number\n    filledPrice: number\n    time: number\n    total: {\n        key: string;\n        value: number;\n    }\n    sortColumn: string\n    filterColumn: string\n    actionsStatus: object\n}\n\nconst getColumnModeSingleHistory = (t: TFunction): Column<Row, unknown>[] => {\n    return [\n        {\n            key: 'amount',\n            name: t('labelOrderAmount'),\n            formatter: ({row, column}) => {\n                const {from, to} = row[ column.key ]\n                const {key: keyFrom, value: valueFrom} = from\n                const {key: keyTo, value: valueTo} = to\n                const renderValue = `${valueFrom} ${keyFrom}->${valueTo} ${keyTo}`\n                return <div className=\"rdg-cell-value\">{renderValue}</div>\n            },\n        },\n        {\n            key: 'tradingPrice',\n            name: t('labelOrderTradingPrice'),\n            formatter: ({row, column}) => {\n                const value = row[ column.key ]\n                const hasValue = Number.isFinite(value)\n                const renderValue = hasValue ? value.toFixed(5) : EmptyValueTag\n                return <div className=\"rdg-cell-value\">{renderValue}</div>\n            },\n        },\n        {\n            key: 'filledPrice',\n            name: t('labelOrderFilledPrice'),\n            formatter: ({row, column}) => {\n                const value = row[ column.key ]\n                const hasValue = Number.isFinite(value)\n                const renderValue = hasValue ? value.toFixed(5) : EmptyValueTag\n                return <div className=\"rdg-cell-value\">{renderValue}</div>\n            },\n        },\n        {\n            key: 'time',\n            name: t('labelOrderTime'),\n            formatter: ({row, column}) => {\n                const value = row[ column.key ]\n                const renderValue = Number.isFinite(value)\n                    ? `${value} Days`\n                    : EmptyValueTag\n                return (\n                    <div className=\"rdg-cell-value\">\n                        <span>{renderValue}</span>\n                    </div>\n                )\n            },\n        },\n        {\n            key: 'total',\n            name: t('labelOrderTotal'),\n            formatter: ({row, column}) => {\n                const {key, value} = row[ column.key ]\n                const hasValue = Number.isFinite(value)\n                const renderValue = hasValue ? `${value.toFixed(4)} ${key}` : EmptyValueTag\n                return (\n                    <div className=\"rdg-cell-value\">\n                        <span>{renderValue}</span>\n                    </div>\n                )\n            },\n        },\n    ];\n}\n\nexport interface SingleOrderHistoryTableProps {\n    rawData: OrderHistoryTableDetailItem[]\n}\n\nexport const SingleOrderHistoryTable = withTranslation()((props: SingleOrderHistoryTableProps & WithTranslation) => {\n    const defaultArgs: any = {\n        rawData: [],\n        columnMode: getColumnModeSingleHistory(props.t),\n        generateRows,\n        generateColumns,\n    }\n    const formattedRawData = props.rawData.map(o => Object.values(o))\n    return <Table {...{...defaultArgs, ...props, rawData: formattedRawData}} />\n})\n","export enum TransactionTradeTypes {\n    allTypes = 'All Types',\n    deposit = 'Deposit',\n    withdraw = 'Withdraw',\n    transfer = 'Transfer'\n}\n\nexport type TransactionSide = {\n    address: string;\n    env: string;\n}\n\nexport enum TransactionStatus {\n    processing = \"processing\",\n    processed = \"processed\",\n    received = \"received\",\n    failed = \"failed\"\n}\n\nexport type RawDataTransactionItem = {\n    token?: string,\n    tradeType: TransactionTradeTypes,\n    from: string | TransactionSide;\n    to: string | TransactionSide;\n    amount: number;\n    fee: {\n        unit: string;\n        value: number;\n    };\n    memo?: string;\n    time: number;\n    txnHash: string;\n    status: TransactionStatus;\n    path?: string;\n}","import { useState, useCallback, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport { Box } from '@material-ui/core'\nimport { withTranslation, WithTranslation, TFunction } from 'react-i18next';\nimport moment from 'moment'\nimport { DropDownIcon, EmptyValueTag, TableType, TradeStatus, TradeTypes } from 'static-resource'\nimport { Column, generateColumns, generateRows, Table, Popover, PopoverType, TablePagination } from '../../basic-lib'\nimport { SingleOrderHistoryTable } from './SingleOrderHistoryTable'\nimport { Filter, FilterTradeTypes } from './components/Filter'\nimport { TablePaddingX } from '../../styled'\n\n// export enum OrderSide {\n//     sell = 'Sell',\n//     buy = 'Buy'\n// }\n\n\n\n// enum ActionType {\n//     filter = 'filter',\n//     page = 'page'\n// }\n\nexport type OrderPair = {\n    from: {\n        key: string;\n        value: number;\n    };\n    to: {\n        key: string;\n        value: number;\n    }\n}\n\nexport interface OrderHistoryRow {\n    side: keyof typeof TradeTypes\n    amount: OrderPair\n    average: number\n    filledAmount: OrderPair\n    filledPrice: number\n    time: number\n    status: keyof typeof TradeStatus;\n    sortColumn: string\n    filterColumn: string\n    actionsStatus: object\n}\n\nexport type OrderHistoryTableDetailItem = {\n    amount: OrderPair;\n    tradingPrice: number;\n    filledPrice: number;\n    time: number;\n    total: {\n        key: string;\n        value: number;\n    }\n}\n\nexport type OrderHistoryRawDataItem = {\n    side: TradeTypes;\n    amount: OrderPair;\n    average: number;\n    filledAmount: OrderPair;\n    filledPrice: {\n        key: string;\n        value: number;\n    }\n    time: number;\n    status: TradeStatus;\n    detailTable: OrderHistoryTableDetailItem[]\n}\n\nconst LastDayPriceChangedCell: any = styled(Box)`\n\tcolor: ${(props: any) => {\n    const {\n        value,\n        theme: {colorBase},\n    } = props\n    return value === TradeTypes.Buy ? colorBase.success : colorBase.error\n}};\n`\n\nconst TableStyled = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    .rdg{\n        --template-columns: 240px auto auto auto 68px 120px !important;\n        .rdg-cell.action{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        }\n    }\n    ${({theme}) => TablePaddingX({pLeft:theme.unit * 3,pRight:theme.unit * 3})}\n` as typeof Box\n\nexport interface OrderHistoryTableProps {\n    rawData: OrderHistoryRawDataItem[];\n    pagination?: {\n        pageSize: number;\n    }\n    showFilter?: boolean\n}\n\nconst getColumnModeOrderHistory = (t: TFunction): Column<OrderHistoryRow, unknown>[] => [\n    {\n        key: 'side',\n        name: t('labelOrderSide'),\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            return (\n                <div className=\"rdg-cell-value\">\n                    <LastDayPriceChangedCell value={value}>\n                        {value}\n                    </LastDayPriceChangedCell>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'amount',\n        name: t('labelOrderAmount'),\n        formatter: ({row, column}) => {\n            const {from, to} = row[ column.key ]\n            const {key: keyFrom, value: valueFrom} = from\n            const {key: keyTo, value: valueTo} = to\n            const renderValue = `${valueFrom} ${keyFrom}->${valueTo} ${keyTo}`\n            return <div className=\"rdg-cell-value\">{renderValue}</div>\n        },\n    },\n    {\n        key: 'average',\n        name: t('labelOrderAverage'),\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            const hasValue = Number.isFinite(value)\n            const renderValue = hasValue ? value.toFixed(6) : EmptyValueTag\n            return <div className=\"rdg-cell-value\">{renderValue}</div>\n        },\n    },\n    {\n        key: 'filledAmount',\n        name: t('labelOrderFilledAmount'),\n        formatter: ({row, column}) => {\n            const {from, to} = row[ column.key ]\n            const {key: keyFrom, value: valueFrom} = from\n            const {key: keyTo, value: valueTo} = to\n            const renderValue = `${valueFrom} ${keyFrom}->${valueTo} ${keyTo}`\n            return <div className=\"rdg-cell-value\">{renderValue}</div>\n        },\n    },\n    {\n        key: 'filledPrice',\n        name: t('labelOrderFilledPrice'),\n        formatter: ({row, column}) => {\n            const {value, key} = row[ column.key ]\n            // const unit = (row as any).amount[ 0 ].key;\n            const hasValue = Number.isFinite(value)\n            const renderValue = hasValue ? `${value.toFixed(6)} ${key}` : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{renderValue}</span>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'time',\n        name: t('labelOrderTime'),\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            const renderValue = Number.isFinite(value)\n                ? moment(new Date(row['time']), \"YYYYMMDDHHMM\").fromNow()\n                : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{renderValue}</span>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'status',\n        name: t('labelOrderStatus'),\n        formatter: ({row, column, rowIdx}) => <>\n            <CellStatus {...{row, column, rowIdx}} />\n        </>\n    },{\n        key: 'detail',\n        name: '',\n        hidden: true\n    }\n]\n\nconst CellStatus = ({row, column, rowIdx}: any) => {\n    const value = row[ column.key ]\n    const popupId = `${column.key}-${rowIdx}`\n    const [isOpen, setIsOpen] = useState(false)\n    const RenderValue: any = styled.span`\n        position: relative;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\t\tcolor: ${({theme}) => {\n            const {colorBase} = theme\n            return value === TradeStatus.Processed\n                ? colorBase.success\n                : value === TradeStatus.Expired ? colorBase.textSecondary\n                : colorBase.textPrimary\n        }};\n\t\twidth: 110px;\n        padding-right: 10px;\n\n\t\t& svg {\n\t\t\tfont-size: 14px;\n\t\t\ttransition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\t\t\ttransform: ${() => isOpen ? 'rotate(180deg)' : ''};\n\t\t}\n\t`\n    const popupContent = [\n        {\n            amount: {\n                from: {\n                    key: 'ETH',\n                    value: 1.05\n                },\n                to: {\n                    key: 'LRC',\n                    value: 2454.33\n                }\n            },\n            tradingPrice: 2934.07,\n            filledPrice: 2935.00,\n            time: 1,\n            total: {\n                key: 'LRC',\n                value: 850\n            }\n        },\n        {\n            amount: {\n                from: {\n                    key: 'ETH',\n                    value: 1.05\n                },\n                to: {\n                    key: 'LRC',\n                    value: 2454.33\n                }\n            },\n            tradingPrice: 2934.07,\n            filledPrice: 2935.00,\n            time: 1,\n            total: {\n                key: 'LRC',\n                value: 850\n            }\n        },\n        {\n            amount: {\n                from: {\n                    key: 'ETH',\n                    value: 1.05\n                },\n                to: {\n                    key: 'LRC',\n                    value: 2454.33\n                }\n            },\n            tradingPrice: 2934.07,\n            filledPrice: 2935.00,\n            time: 1,\n            total: {\n                key: 'LRC',\n                value: 850\n            }\n        },\n    ]\n\n    const RenderPopover = styled.div`\n\t\twidth: 700px;\n\t\tmargin: 12px;\n\t\tmax-height: 250px;\n\n\t\t.contentWrapper {\n\t\t\tmax-height: 250px;\n\t\t\toverflow: scroll;\n\t\t}\n\t`\n    let actualValue = ''\n    switch (value) {\n        case TradeStatus.Processing:\n            actualValue = 'Processing';\n            break;\n        case TradeStatus.Processed:\n            actualValue = 'Processed';\n            break;\n        case TradeStatus.Cancelling:\n            actualValue = 'Cancelling';\n            break;\n        case TradeStatus.Cancelled:\n            actualValue = 'Cancelled';\n            break;\n        case TradeStatus.Expired:\n            actualValue = 'Expired'\n            break;\n        case TradeStatus.Waiting:\n            actualValue = 'Waiting'\n            break;\n        default:\n            actualValue = ''\n    }\n    const triggerContent =\n        <div style={{width: 110}}>\n            <RenderValue>\n                {actualValue}\n                <DropDownIcon/>\n            </RenderValue>\n        </div>\n\n    const popoverContent =\n        <RenderPopover>\n            <div className=\"arrowPopover\"/>\n            <div className=\"contentWrapper\">\n                <SingleOrderHistoryTable rawData={popupContent}/>\n            </div>\n        </RenderPopover>\n\n    return <div className=\"rdg-cell-value\">\n        <Popover\n            type={PopoverType.click}\n            popupId={popupId}\n            // children={triggerContent}\n            popoverContent={popoverContent}\n            handleStateChange={setIsOpen}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            arrowHorizon={{\n                right: 10\n            }}\n        >\n            {triggerContent}\n        </Popover>\n    </div>\n}\n\nexport const OrderHistoryTable = withTranslation('tables')((props: OrderHistoryTableProps & WithTranslation) => {\n    const { t, rawData, pagination, showFilter } = props\n    const actionColumns = ['status']\n    const defaultArgs: any = {\n        rawData: [],\n        columnMode: getColumnModeOrderHistory(t).filter(o => !o.hidden),\n        generateRows,\n        generateColumns,\n        actionColumns,\n        style: {\n            backgroundColor: ({colorBase}: any) => `${colorBase.backgroundBox}`\n        }\n    }\n\n    const formattedRawData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n    const [filterType, setFilterType] = useState(FilterTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = useState(null)\n    const [page, setPage] = useState(1)\n    const [totalData, setTotalData] = useState(formattedRawData)\n\n    useEffect(() => {\n        setTotalData(rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : [])\n    }, [rawData])\n\n    const pageSize = pagination ? pagination.pageSize : 10\n\n    const getRenderData = useCallback(() => pagination\n            ? totalData.slice((page - 1) * pageSize, page * pageSize)\n            : totalData\n    , [page, pageSize, pagination, totalData])\n\n    const updateData = useCallback(({ \n        actionType,\n        currFilterType = filterType,\n        currFilterDate = filterDate,\n    }) => {\n        // let resultData = cloneDeep(formattedRawData)\n        let resultData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n        // o[0]: tradeType\n        if (currFilterType !== FilterTradeTypes.allTypes) {\n            resultData = resultData.filter(o => o[ 0 ] === currFilterType)\n        }\n        if (currFilterDate) {\n            const diff = moment(moment()).diff(currFilterDate, 'days')\n            // o[5]: date\n            resultData = resultData.filter(o => o[ 5 ] === diff)\n        }\n        if (actionType === 'filter') {\n            setPage(1)\n        }\n        setTotalData(resultData)\n    }, [rawData, filterDate, filterType])\n\n    const handleFilterChange = useCallback(({ filterType, filterDate }) => {\n        setFilterType(filterType)\n        setFilterDate(filterDate)\n        updateData({ actionType: TableType.filter, currFilterType: filterType, currFilterDate: filterDate })\n    }, [updateData])\n\n    const handlePageChange = useCallback((page: number) => {\n        setPage(page)\n        updateData({ actionType: TableType.page, currPage: page })\n    }, [updateData])\n\n    const FilterStyled = styled(Box)`\n        margin-left: 26px;\n    `\n\n    return <TableStyled>\n        {showFilter && (\n            <FilterStyled>\n                <Filter handleFilterChange={handleFilterChange} />\n            </FilterStyled>\n        )}\n        <Table {...{...defaultArgs, ...props, rawData: getRenderData()}} />\n        {\n            pagination && (\n                <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={handlePageChange} />\n            )\n        }\n    </TableStyled>\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Grid, MenuItem } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { DatePicker, TextField } from '../../../basic-lib/form'\nimport { Button } from '../../../basic-lib/btns'\nimport { DropDownIcon } from 'static-resource'\nimport { TransactionSide, TransactionTradeTypes } from '../Interface'\n\nexport interface FilterProps {\n    originalData: (string | number | TransactionSide | {\n        unit: string;\n        value: number;\n    } | undefined)[][];\n    handleFilterChange: ({ filterType, filterDate, filterToken }: any) => void\n}\n\nconst StyledTextFiled = styled(TextField)`\n    &.MuiTextField-root {\n        max-width: initial;\n    }\n    .MuiInputBase-root {\n        width: initial;\n        max-width: initial;\n    }\n`\n\nconst StyledDatePicker = styled(DatePicker)`\n\n`\n\nconst StyledBtnBox = styled(Box)`\n    display: flex;\n    margin-left: 40%;\n\n    button:first-of-type {\n        margin-right: 8px;\n    }\n`\n\nexport const Filter = withTranslation('tables', {withRef: true})(({\n                                                                                t,\n                                                                                originalData,\n                                                                                handleFilterChange\n                                                                            }: FilterProps & WithTranslation) => {\n    const transactionTypeList = [\n        {\n            label: t('labelTxFilterAllTypes'),\n            value: 'All Types',\n        },\n        {\n            label: t('labelTxFilterDeposit'),\n            value: 'Deposit',\n        },\n        {\n            label: t('labelTxFilterWithdraw'),\n            value: 'Withdraw',\n        },\n        {\n            label: t('labelTxFilterTransfer'),\n            value: 'Transfer',\n        },\n    ]\n    const [filterType, setFilterType] = React.useState<TransactionTradeTypes>(TransactionTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = React.useState<Date | any>(null);\n    const [filterToken, setFilterToken] = React.useState('All Tokens')\n\n    // de-duplicate\n    const tokenTypeList = [{\n        label: t('labelTxFilterAllTokens'),\n        value: 'All Tokens'\n    }, ...Array.from(new Set(originalData.map(o => o[ 0 ] as string))).map(val => ({\n        label: val,\n        value: val\n    }))]\n\n    const handleReset = React.useCallback(() => {\n        setFilterType(TransactionTradeTypes.allTypes)\n        setFilterDate(null)\n        setFilterToken('All Tokens')\n        handleFilterChange({\n            filterType: TransactionTradeTypes.allTypes,\n            filterDate: null,\n            filterToken: 'All Tokens'\n        })\n    }, [handleFilterChange])\n\n    const handleSearch = React.useCallback(() => {\n        handleFilterChange({\n            filterType,\n            filterDate,\n            filterToken\n        })\n    }, [handleFilterChange, filterDate, filterType, filterToken])\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-transaction-trade-types\"\n                    select\n                    fullWidth\n                    value={filterType}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                        setFilterType(event.target.value as TransactionTradeTypes);\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {transactionTypeList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <StyledDatePicker value={filterDate} onChange={(newValue: any) => setFilterDate(newValue)}/>\n            </Grid>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-transaction-token-types\"\n                    select\n                    fullWidth\n                    value={filterToken}\n                    onChange={(event: React.ChangeEvent<{ value: string }>) => {\n                        setFilterToken(event.target.value);\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {tokenTypeList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <StyledBtnBox>\n                    <Button variant={'outlined'} size={'medium'} color={'primary'}\n                            onClick={handleReset}>{t('Reset')}</Button>\n                    <Button variant={'contained'} size={'small'} color={'primary'}\n                            onClick={handleSearch}>{t('Search')}</Button>\n                </StyledBtnBox>\n            </Grid>\n        </Grid>\n    )\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Grid, MenuItem, Checkbox } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { TextField, FormControlLabel } from '../../../'\nimport { DropDownIcon, CheckBoxIcon, CheckedIcon } from 'static-resource'\nimport { TokenType, TradePairItem } from '../AssetsTable'\n\nexport type TokenTypeCol = {\n    type: TokenType,\n    value: string\n}\n\nexport type OriginalDataItem = string | number | TokenTypeCol | TradePairItem[] | boolean | undefined\n\nexport interface FilterProps {\n    originalData: OriginalDataItem[][];\n    handleFilterChange: ({ tokenType, hideSmallBalance, hideLPToken }: any) => void;\n}\n\nconst StyledTextFiled = styled(TextField)`\n    &.MuiTextField-root {\n        max-width: initial;\n    }\n    .MuiInputBase-root {\n        width: initial;\n        max-width: initial;\n    }\n`\n\nexport enum CheckboxType {\n    smallBalance = 'smallBalance',\n    lp = 'lp'\n}\n\nexport const Filter = withTranslation('tables', {withRef: true})(({\n                                                                            t,\n                                                                            originalData,\n                                                                            handleFilterChange\n                                                                        }: FilterProps & WithTranslation) => {\n    // de-duplicate\n    const tokenTypeList = [{\n        label: t('labelAllToken'),\n        value: 'All Tokens'\n    }, ...Array.from(new Set(originalData.map(o => (o[ 0 ] as TokenTypeCol).value))).map(val => ({\n        label: val,\n        value: val\n    }))]\n    const [tokenType, setTokenType] = React.useState<string>('All Tokens')\n    const [hideSmallBalance, setHideSmallBalance] = React.useState(false)\n    const [hideLPToken, setHideLPToken] = React.useState(false)\n    const refTokenType = React.useRef(tokenType)\n    const refHideSmallBalance = React.useRef(hideSmallBalance)\n    const refHideLPToken = React.useRef(hideLPToken)\n\n    const handleCheckboxChange = React.useCallback((type: CheckboxType, event: any) => {\n        if (type === CheckboxType.smallBalance) {\n            setHideSmallBalance(event.target.checked)\n        } else {\n            setHideLPToken(event.target.checked)\n        }\n    }, [])\n\n    const handleFilterData = React.useCallback(() => {\n        const valueTokenType = refTokenType.current;\n        const valueHideSmallBalance = refHideSmallBalance.current;\n        const valueHideLPToken = refHideLPToken.current;\n        handleFilterChange({ tokenType: valueTokenType, currHideSmallBalance: valueHideSmallBalance, currHideLPToken: valueHideLPToken })\n    }, [handleFilterChange])\n\n    return (\n        <Grid container spacing={4}>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-assets-trade-types\"\n                    select\n                    fullWidth\n                    value={tokenType}\n                    onChange={(event: React.ChangeEvent<{ value: string }>) => {\n                        setTokenType(event.target.value);\n                        refTokenType.current = event.target.value;\n                        handleFilterData();\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {tokenTypeList.map(token => <MenuItem key={token.value}\n                    value={token.value}>{token.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n\n            <Grid item>\n                <FormControlLabel style={{ marginRight: 0 }} control={<Checkbox checked={hideSmallBalance} checkedIcon={<CheckedIcon/>} icon={<CheckBoxIcon/>}\n                color=\"default\" onChange={(event) => {\n                    handleCheckboxChange(CheckboxType.smallBalance, event);\n                    refHideSmallBalance.current = event.target.checked;\n                    handleFilterData();\n                }} />} label={t('labelHideSmallBalances')} />\n            </Grid>\n\n            <Grid item>\n                <FormControlLabel control={<Checkbox checked={hideLPToken} checkedIcon={<CheckedIcon/>} icon={<CheckBoxIcon/>}\n                color=\"default\" onChange={(event) => {\n                    handleCheckboxChange(CheckboxType.lp, event);\n                    refHideLPToken.current = event.target.checked;\n                    handleFilterData();\n                }} />} label={t('labelHideLPToken')} />\n            </Grid>\n        </Grid>\n    )\n})\n","import React, { useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport { Link, Box } from '@material-ui/core'\nimport { withTranslation, WithTranslation, TFunction } from 'react-i18next';\nimport moment from 'moment'\nimport { Popover, PopoverType, TablePagination } from '../../basic-lib'\nimport { Column, generateColumns, generateRows, Table, } from '../../basic-lib/tables/index'\nimport { AlertIcon, CheckIcon, EmptyValueTag, PendingIcon, TableType } from 'static-resource'\nimport { Filter } from './components/Filter'\nimport { TablePaddingX } from '../../styled';\nimport { RawDataTransactionItem, TransactionStatus, TransactionTradeTypes } from './Interface'\n\ninterface Row {\n    from: string\n    to: string\n    amount: string\n    fee: string\n    memo: string\n    time: number\n    txnHash: string\n    status: string\n    filterColumn: string\n    cellExpend: {\n        value: string\n        children: []\n        isExpanded: boolean\n    }\n    children?: Row[]\n    isExpanded?: boolean\n    format?: any\n}\n\n/**\n *\n * @param value\n * @param minFractionDigits\n * @returns\n */\nconst getThousandFormattedNumbers = (value: number, minFractionDigits: number = 2) => {\n    if (!Number.isFinite(value)) return value\n    return value.toLocaleString('en', {\n        minimumFractionDigits: minFractionDigits\n    })\n}\n\nconst TYPE_COLOR_MAPPING = [\n    {type: TransactionStatus.success, color: 'success'},\n    {type: TransactionStatus.pending, color: 'pending'},\n    {type: TransactionStatus.failed, color: 'error'},\n]\n\nconst CellStatus = ({row, column, rowIdx}: any) => {\n    const status = row[ column.key ]\n    const popupId = `${column.key}-${rowIdx}`\n    const popoverContent = <div style={{padding: 12}}>\n        Because the pool price changes dynamically, the price you see when placing an order may be inconsistent with the\n        final transaction price.\n    </div>\n    const RenderValue = styled.div`\n        display: flex;\n        align-items: center;\n\t\tcursor: pointer;\n\t\tcolor: ${({theme}) => theme.colorBase[ `${TYPE_COLOR_MAPPING.find(o => o.type === status)?.color}` ]};\n        width: 150px;\n\n\t\t& svg {\n\t\t\tfont-size: 14px;\n\t\t\tmargin: 0 5px 3px 0;\n\t\t}\n\t`\n    const svg = status === 'success' ? <CheckIcon/> : status === 'pending' ? <PendingIcon/> : <AlertIcon/>\n    const RenderValueWrapper = <div style={{width: 150}}>\n        <RenderValue>\n            {svg}{status}\n        </RenderValue>\n    </div>\n\n    return <div className=\"rdg-cell-value\">\n        <Popover\n            type={PopoverType.hover}\n            popupId={popupId}\n            popoverContent={popoverContent}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            arrowHorizon={{\n                right: 10\n            }}\n        >\n            {RenderValueWrapper}\n        </Popover>\n    </div>\n}\n\nconst getColumnModeTransaction = (t: TFunction): Column<Row, unknown>[] => [\n    {\n        key: 'token',\n        name: t('labelTxToken'),\n        minWidth: 100\n    },\n    {\n        key: 'from',\n        name: t('labelTxFrom'),\n        formatter: ({row, column}) => {\n            const from = row[ column.key ]\n            const RenderValue = styled.div`\n\t\t\t\theight: 100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tjustify-content: center;\n\t\t\t\tcolor: ${({theme}) => theme.colorBase.primaryLight};\n\n\t\t\t\t& p:last-child {\n\t\t\t\t\tcolor: ${({theme}) => theme.colorBase.textPrimary};\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\tline-height: 100%;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t`\n            const value = typeof from === 'string'\n                ? <p>{from}</p>\n                : <>\n                    <p>{from.address}</p><p>/ {from.env}</p>\n                </>\n            return (\n                <>\n                    <RenderValue>\n                        {value}\n                    </RenderValue>\n                </>\n            )\n        },\n    },\n    {\n        key: 'to',\n        name: t('labelTxTo'),\n        formatter: ({row, column}) => {\n            const to = row[ column.key ]\n            const RenderValue = styled.div`\n\t\t\t\theight: 100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tjustify-content: center;\n\t\t\t\tcolor: ${({theme}) => theme.colorBase.primaryLight};\n\n\t\t\t\t& p:last-child {\n\t\t\t\t\tcolor: ${({theme}) => theme.colorBase.textPrimary};\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\tline-height: 100%;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t`\n            const value = typeof to === 'string'\n                ? <p>{to}</p>\n                : <>\n                    <p>{to.address}</p>\n                    <p>/ {to.env}</p>\n                </>\n            return (\n                <>\n                    <RenderValue>\n                        {value}\n                    </RenderValue>\n                </>\n            )\n        },\n    },\n    {\n        key: 'amount',\n        name: t('labelTxAmount'),\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            const hasValue = Number.isFinite(value)\n            const renderValue = hasValue ? `${getThousandFormattedNumbers(value, 5)}` : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    {renderValue}\n                </div>\n            )\n        },\n    },\n    {\n        key: 'fee',\n        name: t('labelTxFee'),\n        formatter: ({row, column}) => {\n            const fee = row[ column.key ]\n            const hasValue = Number.isFinite(fee.value)\n            const renderValue = hasValue ? `${fee.value.toFixed(4)} ${fee.unit}` : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{renderValue}</span>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'memo',\n        name: t('labelTxMemo'),\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            const renderValue = value || EmptyValueTag\n            const Wrapper = styled.div`\n                color: ${({theme}) => theme.colorBase.textSecondary};\n                max-width: 60%;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            `\n            return (\n                <div className=\"rdg-cell-value\">\n                    <Wrapper title={renderValue}>{renderValue}</Wrapper>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'time',\n        name: t('labelTxTime'),\n        formatter: ({row, column}) => {\n            const value = row[ column.key ]\n            const hasValue = Number.isFinite(value)\n            const renderValue = hasValue\n                ? moment(new Date(row['time']), \"YYYYMMDDHHMM\").fromNow()\n                : EmptyValueTag\n            return (\n                <div className=\"rdg-cell-value\">\n                    <span>{renderValue}</span>\n                </div>\n            )\n        },\n    },\n    {\n        key: 'txnHash',\n        name: t('labelTxTxnHash'),\n        minWidth: 130,\n        formatter: ({row, column}) => {\n            let path = ''\n            if ((row as any)._rawData.length === 9) {\n                path = ((row as any)._rawData[ 8 ])\n            }\n            const value = row[ column.key ]\n            const RenderValue = styled.div`\n\t\t\t\tcolor: ${({theme}) => theme.colorBase[ value ? 'primaryLight' : 'textSecondary' ]};\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tmax-width: 90%;\n\t\t\t`\n            return (\n                <div className=\"rdg-cell-value\">\n                    {path ? <Link href={path}>\n                        <RenderValue title={value}>{value || EmptyValueTag}</RenderValue>\n                    </Link> : <RenderValue title={value}>{value || EmptyValueTag}</RenderValue>}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'status',\n        name: t('labelTxStatus'),\n        minWidth: 150,\n        formatter: ({row, column, rowIdx}) => (\n            <div className=\"rdg-cell-value\">\n                <CellStatus {...{row, column, rowIdx}} />\n            </div>\n        )\n    },\n    {\n        key: 'tradeType',\n        name: 'TradeType',\n        hidden: true\n    },\n]\n\nconst TableStyled = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    .rdg{\n        // --template-columns: 100px auto auto auto 68px 120px !important;\n        .rdg-cell.action{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        }\n    }\n    ${({theme}) => TablePaddingX({pLeft:theme.unit * 3,pRight:theme.unit * 3})}\n` as typeof Box\n\nexport interface TransactionTableProps {\n    rawData: RawDataTransactionItem[];\n    pagination?: {\n        pageSize: number;\n    }\n    showFilter?: boolean;\n}\n\n\nexport const TransactionTable = withTranslation('tables')((props: TransactionTableProps & WithTranslation) => {\n    const defaultArgs: any = {\n        rawData: [],\n        columnMode: getColumnModeTransaction(props.t).filter(o => !o.hidden),\n        generateRows,\n        generateColumns,\n    }\n    const { rawData, pagination, showFilter } = props\n    const [page, setPage] = React.useState(1)\n    const formattedRawData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n    // const [totalData, setTotalData] = React.useState(formattedRawData)\n    const [totalData, setTotalData] = React.useState([])\n    const [filterType, setFilterType] = React.useState(TransactionTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = React.useState(null)\n    const [filterToken, setFilterToken] = React.useState('All Tokens')\n    \n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    useEffect(() => {\n        setTotalData(rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : [])\n    }, [rawData])\n\n    const getRenderData = React.useCallback(() => pagination\n            ? totalData.slice((page - 1) * pageSize, page * pageSize)\n            : totalData\n    , [page, pagination, pageSize, totalData])\n\n    const updateData = React.useCallback(({ \n            TableType,\n            currFilterType = filterType,\n            currFilterDate = filterDate,\n            currFilterToken = filterToken,\n            // currPage = page\n        }) => {\n        // let resultData = cloneDeep(formattedRawData)\n        let resultData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n        // o[10]: tradeType\n        if (currFilterType !== TransactionTradeTypes.allTypes) {\n            resultData = resultData.filter(o => o[ 10 ] === currFilterType)\n        }\n        if (currFilterDate) {\n            const diff = moment(moment()).diff(currFilterDate, 'days')\n            // o[6]: date\n            resultData = resultData.filter(o => o[ 6 ] === diff)\n        }\n        // o[0]: token\n        if (currFilterToken !== 'All Tokens') {\n            resultData = resultData.filter(o => o[ 0 ] === currFilterToken)\n        }\n        if (TableType === 'filter') {\n            setPage(1)\n        }\n        setTotalData(resultData)\n    }, [rawData, filterDate, filterToken, filterType])\n\n    const handleFilterChange = React.useCallback(({ filterType, filterDate, filterToken }) => {\n        setFilterType(filterType)\n        setFilterDate(filterDate)\n        setFilterToken(filterToken)\n        updateData({ TableType: TableType.filter, currFilterType: filterType, currFilterDate: filterDate, currFilterToken: filterToken })\n    }, [updateData])\n\n    const handlePageChange = React.useCallback((page: number) => {\n        setPage(page)\n        updateData({ TableType: TableType.page, currPage: page })\n    }, [updateData])\n\n    const FilterStyled = styled(Box)`\n        margin-left: 26px;\n    `\n\n    return <TableStyled>\n        {showFilter && (\n            <FilterStyled>\n                <Filter originalData={formattedRawData} handleFilterChange={handleFilterChange} />\n            </FilterStyled>\n        )}\n        <Table {...{...defaultArgs, ...props, rawData: getRenderData()}}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import { useState, useCallback, useEffect } from 'react'\nimport { Box, Grid, MenuItem, Menu } from '@material-ui/core'\nimport styled from '@emotion/styled'\nimport { WithTranslation, withTranslation, TFunction } from 'react-i18next'\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state'\nimport { Button } from '../../basic-lib/btns'\nimport { Table, generateColumns, generateRows, Column } from '../../basic-lib/tables'\nimport { TablePagination } from '../../basic-lib'\nimport { Filter, TokenTypeCol } from './components/Filter'\nimport { TablePaddingX } from '../../styled'\nimport { TableType } from 'static-resource';\n\nconst TableStyled = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    .rdg{\n        flex: 1;\n        // --template-columns: 240px auto auto auto 68px 120px !important;\n        .rdg-cell.action{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n    }\n    ${({theme}) => TablePaddingX({pLeft:theme.unit * 3,pRight:theme.unit * 3})}\n` as typeof Box\n\ninterface Row {\n    token: {\n        type: TokenType;\n        value: string;\n    };\n    amount: string;\n    available: string;\n    locked: string;\n    filterColumn?: string\n    tradePairList?: {\n        first: string;\n        last: string;\n    }[]\n    cellExpend?: {\n        value: string\n        children: []\n        isExpanded: boolean\n    }\n    children?: Row[]\n    isExpanded?: boolean\n    format?: any\n}\n\nexport enum TokenType {\n    single = 'single',\n    lp = 'lp'\n}\n\nexport type TradePairItem = {\n    first: string;\n    last: string;\n}\n\nexport type RawDataAssetsItem = {\n    token: {\n        type: TokenType,\n        value: string\n    }\n    amount: string;\n    available: string;\n    locked: string;\n    tradePairList?: TradePairItem[];\n    smallBalance: boolean;\n}\n\nexport interface AssetsTableProps {\n    rawData: RawDataAssetsItem[];\n    pagination?: {\n        pageSize: number\n    }\n    onVisibleRowsChange?: (props: any) => void\n    showFiliter?: boolean\n}\n\n\nconst getColumnModeAssets = (t: TFunction): Column<Row, unknown>[] => [\n    {\n        key: 'token',\n        name: t('labelToken'),\n        formatter: ({row, column}) => {\n            const token = row[column.key]\n            const StyledToken = styled(Box)`\n                font-size: 13px;\n            `\n            return <StyledToken>{token.value}</StyledToken>\n        }\n    },\n    {\n        key: 'amount',\n        name: t('labelAmount'),\n        minWidth: 120,\n    },\n    {\n        key: 'available',\n        name: t('labelAvailable'),\n    },\n    {\n        key: 'locked',\n        name: t('labelLocked'),\n        minWidth: 120,\n    },\n    {\n        key: 'actions',\n        name: t('labelActions'),\n        minWidth: 280,\n        formatter: ({ row }) => {\n            const token = row['token']\n            const isLp = token.type === TokenType.lp\n            const tradePairs: TradePairItem[] = row['_rawData'][4] || []\n            \n            return (\n                <Grid container spacing={1} alignItems={'center'}>\n                    <Grid item>\n                        <Button variant={'outlined'} size={'medium'} color={'primary'}>{t('labelDeposit')}</Button>\n                    </Grid>\n                    <Grid item>\n                        <Button variant={'outlined'} size={'medium'} color={'primary'}>{t('labelTransfer')}</Button>\n                    </Grid>\n                    <Grid item>\n                        <Button variant={'outlined'} size={'medium'} color={'primary'}>{t('labelWithdraw')}</Button>\n                    </Grid>\n                    <Grid item>\n                        {isLp\n                            ? <Button variant={'outlined'} color={'primary'} disabled>{t('labelAMM')} </Button>\n                            : <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                                {(popupState) => (\n                                    <>\n                                        <Button variant={'outlined'} size={'medium'} color=\"primary\" {...bindTrigger(popupState)}>\n                                            Trade\n                                        </Button>\n                                        <Menu {...bindMenu(popupState)}>\n                                            {tradePairs.map(({first, last}) => {\n                                                const value = `${first}/${last}`;\n                                                return  (\n                                                    <MenuItem onClick={popupState.close} key={value} value={value}>{value}</MenuItem>\n                                                )\n                                            })}\n                                        </Menu>\n                                    </>\n                                )}\n                            </PopupState>\n                        }\n                    </Grid>\n                </Grid>\n            )\n        }\n    },\n    {\n        key: 'tradePairList',\n        name: 'tradePairList',\n        hidden: true\n    }\n]\n\nexport const AssetsTable = withTranslation('tables')((props: WithTranslation & AssetsTableProps) => {\n    const { t, pagination, rawData, onVisibleRowsChange, showFiliter } = props\n    const formattedRawData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n    const [filterTokenType, setFilterTokenType] = useState('All Tokens')\n    const [hideSmallBalance, setHideSmallBalance] = useState(false)\n    const [hideLPToken, setHideLPToken] = useState(false)\n    const [totalData, setTotalData] = useState(formattedRawData)\n    const [page, setPage] = useState(1)\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    useEffect(() => {\n        setTotalData(rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : [])\n    }, [rawData])\n\n    const defaultArgs: any = {\n        rawData: [],\n        columnMode: getColumnModeAssets(t).filter(o => !o.hidden),\n        generateRows,\n        generateColumns,\n    }\n\n    const getRenderData = useCallback(() => pagination\n            ? totalData.slice((page - 1) * pageSize, page * pageSize)\n            : totalData\n    , [page, pageSize, pagination, totalData])\n\n    const updateData = useCallback(({ \n        TableType,\n        currFilterTokenType = filterTokenType,\n        currHideSmallBalance = hideSmallBalance,\n        currHideLPToken = hideLPToken\n    }) => {\n        // let resultData = cloneDeep(formattedRawData)\n        let resultData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n        // o[0]: token type\n        if (currFilterTokenType !== 'All Tokens') {\n            resultData = resultData.filter(o => \n                (o[0] as TokenTypeCol).value === currFilterTokenType\n            )\n        }\n        if (currHideSmallBalance) {\n            resultData = resultData.filter(o => !o[5])\n        }\n        if (currHideLPToken) {\n            resultData = resultData.filter(o => (o[0] as TokenTypeCol).type === TokenType.single)\n        }\n        if (TableType === 'filter') {\n            setPage(1)\n        }\n        setTotalData(resultData)\n    }, [rawData, filterTokenType, hideSmallBalance, hideLPToken])\n\n    const handleFilterChange = useCallback(({ tokenType, currHideSmallBalance, currHideLPToken }) => {\n        setFilterTokenType(tokenType)\n        setHideSmallBalance(currHideSmallBalance)\n        setHideLPToken(currHideLPToken)\n        updateData({ TableType: TableType.filter, currFilterTokenType: tokenType, currHideSmallBalance, currHideLPToken })\n    }, [updateData])\n\n    const handlePageChange = useCallback((page: number) => {\n        setPage(page)\n        updateData({ TableType: TableType.page })\n    }, [updateData])\n\n    const getScrollIndex = useCallback((e) => {\n        const startIndex =  parseInt(String(e.target.scrollTop / 44))\n        const viewportRows = rawData && Array.isArray(rawData) ? rawData.slice(startIndex, startIndex + 10).map(o => o.token.value) : []\n        if (onVisibleRowsChange) {\n            onVisibleRowsChange(viewportRows)\n        }\n    }, [onVisibleRowsChange, rawData])\n\n    const FilterStyled = styled(Box)`\n        margin-left: 26px;\n    `\n\n    return <TableStyled>\n        {showFiliter && (\n            <FilterStyled>\n                <Filter originalData={formattedRawData} handleFilterChange={handleFilterChange} />\n            </FilterStyled>\n        )}\n        <Table {...{...defaultArgs, ...props, rawData: getRenderData()}} onScroll={getScrollIndex} />\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={handlePageChange} />\n        )}\n    </TableStyled>\n})\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Grid, MenuItem } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { DatePicker, TextField } from '../../../basic-lib/form'\nimport { Button } from '../../../basic-lib/btns'\nimport { DropDownIcon } from 'static-resource'\n\nexport interface FilterProps {\n    handleFilterChange: ({ filterType, filterDate, filterToken }: any) => void\n}\n\nconst StyledTextFiled = styled(TextField)`\n    &.MuiTextField-root {\n        max-width: initial;\n    }\n    .MuiInputBase-root {\n        width: initial;\n        max-width: initial;\n    }\n`\n\nconst StyledDatePicker = styled(DatePicker)`\n\n`\n\nconst StyledBtnBox = styled(Box)`\n    display: flex;\n    margin-left: 40%;\n\n    button:first-of-type {\n        margin-right: 8px;\n    }\n`\n\nexport enum FilterTradeTypes {\n    buy = 'Buy',\n    sell = 'Sell',\n    allTypes = 'All Types'\n}\n\nexport const Filter = withTranslation('tables', {withRef: true})(({\n                                                                                t,\n                                                                                handleFilterChange\n                                                                            }: FilterProps & WithTranslation) => {\n    const FilterTradeTypeList = [\n        {\n            label: t('labelOrderFilterAllTypes'),\n            value: 'All Types'\n        },\n        {\n            label: t('labelOrderFilterBuy'),\n            value: 'Buy'\n        },\n        {\n            label: t('labelOrderFilterSell'),\n            value: 'Sell'\n        },\n    ]\n    const [filterType, setFilterType] = React.useState<FilterTradeTypes>(FilterTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = React.useState<Date | any>(null);\n\n    const handleReset = React.useCallback(() => {\n        setFilterType(FilterTradeTypes.allTypes)\n        setFilterDate(null)\n        handleFilterChange({\n            filterType: FilterTradeTypes.allTypes,\n            filterDate: null,\n        })\n    }, [handleFilterChange])\n\n    const handleSearch = React.useCallback(() => {\n        handleFilterChange({\n            filterType,\n            filterDate,\n        })\n    }, [handleFilterChange, filterDate, filterType])\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-trade-filter-types\"\n                    select\n                    fullWidth\n                    value={filterType}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                        setFilterType(event.target.value as FilterTradeTypes);\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {FilterTradeTypeList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                <StyledDatePicker value={filterDate} onChange={(newValue: any) => setFilterDate(newValue)}/>\n            </Grid>\n            <Grid item>\n                <StyledBtnBox>\n                    <Button variant={'outlined'} size={'medium'} color={'primary'}\n                            onClick={handleReset}>{t('Reset')}</Button>\n                    <Button variant={'contained'} size={'small'} color={'primary'}\n                            onClick={handleSearch}>{t('Search')}</Button>\n                </StyledBtnBox>\n            </Grid>\n        </Grid>\n    )\n})\n","import { CoinInfo } from '../../../static-resource';\n\n\nexport enum AmmTradeType {\n    add='add',\n    swap='swap',\n    remove='remove'\n}\nenum TxStatus {\n    processing = \"processing\",\n    processed = \"processed\",\n    received = \"received\",\n    failed = \"failed\"\n}\n\nexport interface AmmRecordRow<C> {\n    totalDollar: number;\n    totalYuan: number;\n    amountA: number;\n    amountB: number;\n    time: number;\n    type: keyof typeof AmmTradeType;\n    coinA: CoinInfo<C>;\n    coinB: CoinInfo<C>;\n    status?: keyof typeof TxStatus;\n}\n\nexport type AmmRecordTableProps<T,R = AmmRecordRow<T>> = {\n    rawData: R[];\n    pagination?: {\n        pageSize: number\n    },\n    page?: number,\n    handlePageChange: (page: number) => void,\n    showFilter?: boolean,\n    wait?: number\n}\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport styled from '@emotion/styled'\nimport { WithTranslation, withTranslation, TFunction } from 'react-i18next'\nimport moment from 'moment'\nimport { Table, Column } from '../../basic-lib/tables'\nimport { TablePagination } from '../../basic-lib'\nimport { TablePaddingX } from '../../styled';\nimport { Filter, FilterTradeTypes } from './components/Filter'\nimport { TableType, TradeTypes } from 'static-resource';\nimport { useSettings } from '../../../stores';\nimport { useDeepCompareEffect } from 'react-use';\nimport { Row } from '../poolsTable/Interface';\n\n// interface Row {\n//     side: TradeTypes;\n//     amount: {\n//         from: {\n//             key: string;\n//             value: number;\n//         },\n//         to: {\n//             key: string;\n//             value: number\n//         }\n//     };\n//     price: number;\n//     fee: number;\n//     time: number;\n//     cellExpend?: {\n//         value: string\n//         children: []\n//         isExpanded: boolean\n//     };\n//     children?: Row[];\n//     isExpanded?: boolean;\n//     formatter?: any;\n// }\n\n\n\nexport type RawDataTradeItem = {\n    side: keyof typeof TradeTypes;\n    amount: {\n        from: {\n            key: string;\n            value: number|undefined;\n        },\n        to: {\n            key: string;\n            value: number|undefined;\n        }\n    };\n    price:{\n        key:string\n        value:number|undefined,\n    }\n    // priceDollar: number;\n    // priceYuan: number;\n    fee: {\n        key: string;\n        value: number|undefined;\n    };\n    time: number;\n}\n\nexport type TradeTableProps = {\n    rawData: RawDataTradeItem[];\n    pagination?: {\n        pageSize: number\n    }\n    showFilter?: boolean\n}\n\n// enum TableType {\n//     filter = 'filter',\n//     page = 'page'\n// }\n\nconst TableStyled = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    .rdg{\n        // --template-columns: 240px auto auto auto 68px 120px !important;\n        .rdg-cell.action{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n    }\n    ${({theme}) => TablePaddingX({pLeft:theme.unit * 3,pRight:theme.unit * 3})}\n` as typeof Box\n\nconst StyledSideCell: any = styled(Box)`\n    color: ${(props: any) => {\n        const {\n            value,\n            theme: {colorBase},\n        } = props\n        return value === TradeTypes.Buy ? colorBase.success : colorBase.error\n    }}\n`\n\nconst getColumnModeAssets = (t: TFunction, _currency: 'USD'|'CYN'): Column<RawDataTradeItem, unknown>[] => [\n    {\n        key: 'side',\n        name: t('labelTradeSide'),\n        formatter: ({row}) => {\n            const tradeType = row['side'] === TradeTypes.Buy?t('labelBuy'): t('labelSell')\n            return (\n                <div className=\"rdg-cell-value\">\n                    <StyledSideCell value={row['side']}>\n                        {tradeType}\n                    </StyledSideCell>\n                </div>\n            )\n        }\n    },\n    {\n        key: 'amount',\n        name: t('labelTradeAmount'),\n        formatter: ({row}) => {\n            const {from, to} = row['amount']\n            return (\n                <div className=\"rdg-cell-value\">\n                    {`${from.value} ${from.key} -> ${to.value} ${to.key}`}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'price',\n        name: t('labelTradePrice'),\n        formatter: ({row}) => {\n            const {value} = row['price']\n            return (\n                <div className=\"rdg-cell-value\">\n                    {value}\n                    {/*{currency === Currency.dollar ?*/}\n                    {/*    PriceTag.Dollar + getThousandFormattedNumbers(priceDollar)*/}\n                    {/*    : PriceTag.Yuan + getThousandFormattedNumbers(priceYuan)}*/}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'fee',\n        name: t('labelTradeFee'),\n        formatter: ({row}) => {\n            const {key, value} = row['fee']\n            return (\n                <div className=\"rdg-cell-value\">\n                    {`${value} ${key}`}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'time',\n        name: t('labelTradeTime'),\n        // minWidth: 400,\n        formatter: ({ row }) => {\n            const time = moment(new Date(row['time']), \"YYYYMMDDHHMM\").fromNow()\n            return (\n                <div className=\"rdg-cell-value\">\n                    {time}\n                </div>\n            )\n        }\n    },\n]\n\nexport const TradeTable = withTranslation('tables')((props: WithTranslation & TradeTableProps) => {\n    const { t, pagination, showFilter, rawData } = props\n    // const formattedRawData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n    const [filterType, setFilterType] = React.useState(FilterTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = React.useState(null)\n    const [page, setPage] = React.useState(1)\n    const [totalData, setTotalData] = React.useState<RawDataTradeItem[]>(rawData)\n    const {currency} = useSettings();\n    const defaultArgs: any = {\n        // rawData: rawData,\n        columnMode: getColumnModeAssets(t,currency).filter(o => !o.hidden),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}:any) => columnsRaw as Column<Row<any>, unknown>[],\n        style: {\n            backgroundColor: ({colorBase}: any) => `${colorBase.backgroundBox}`\n        }\n    }\n    useDeepCompareEffect(()=>{\n        setTotalData(rawData);\n    },[rawData])\n\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    const getRenderData = React.useCallback(() => pagination\n            ? totalData.slice((page - 1) * pageSize, page * pageSize)\n            : totalData\n    , [page, pageSize, pagination, totalData])\n\n    const updateData = React.useCallback(({ \n        TableType,\n        currFilterType = filterType,\n        currFilterDate = filterDate,\n    }) => {\n        let resultData = rawData ?rawData: []\n        // o[0]: tradeType\n        if (currFilterType !== FilterTradeTypes.allTypes) {\n            resultData = resultData.filter(o => o[ 0 ] === currFilterType)\n        }\n        if (currFilterDate) {\n            const diff = moment(moment()).diff(currFilterDate, 'days')\n            // o[4]: date\n            resultData = resultData.filter(o => o[ 4 ] === diff)\n        }\n        if (TableType === 'filter') {\n            setPage(1)\n        }\n        setTotalData(resultData)\n    }, [rawData, filterDate, filterType])\n\n    const handleFilterChange = React.useCallback(({ filterType, filterDate }) => {\n        setFilterType(filterType)\n        setFilterDate(filterDate)\n        updateData({ TableType: TableType.filter, currFilterType: filterType, currFilterDate: filterDate })\n    }, [updateData])\n\n    const handlePageChange = React.useCallback((page: number) => {\n        setPage(page)\n        updateData({ TableType: TableType.page, currPage: page })\n    }, [updateData])\n\n    const FilterStyled = styled(Box)`\n        margin-left: 26px;\n    `\n\n    return <TableStyled>\n        {showFilter && (\n            <FilterStyled>\n                <Filter handleFilterChange={handleFilterChange} />\n            </FilterStyled>\n        )}\n        <Table {...{...defaultArgs, ...props, rawData: getRenderData() }}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\nimport { Trans, withTranslation, WithTranslation } from 'react-i18next';\nimport moment from 'moment'\nimport {  TablePagination, TableProps } from '../../basic-lib'\nimport { Column,  Table, } from '../../basic-lib/'\nimport { Currency, EmptyValueTag, getThousandFormattedNumbers, globalSetup, PriceTag } from 'static-resource'\nimport { AmmRecordRow as Row, AmmRecordTableProps, AmmTradeType } from './Interface'\nimport { FormatterProps } from 'react-data-grid';\nimport styled from '@emotion/styled';\nimport { TablePaddingX } from '../../styled';\nimport { useDeepCompareEffect } from 'react-use';\n\n\n// enum ActionType {\n//     // filter = 'filter',\n//     page = 'page'\n// }\n\nconst TableStyled = styled(Box)`\n  .rdg {\n    --template-columns: 280px 240px auto auto  !important;\n\n    .rdg-cell.action {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n  .textAlignRight{\n    text-align: right;\n  }\n  ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as typeof Box\n\nconst columnMode = ({t}: WithTranslation, currency: 'USD'|'CYN'): Column<Row<any>,unknown>[] => [\n    {\n        key: 'style',\n        sortable: false,\n        width: 'auto',\n        minWidth: 240,\n        name: t('labelPool'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            const {type,coinA,coinB} = row\n            if(type === AmmTradeType.add){\n                return <Trans i18nKey={'valueAddTOAMM'}>\n                    Add &nbsp;\n                    <Typography component={'span'} >\n                        {coinA.simpleName}\n                    </Typography>\n                    &nbsp;  and  &nbsp;\n                    <Typography component={'span'} >\n                        {coinB.simpleName}\n                    </Typography>\n                </Trans>\n            }else if(type === AmmTradeType.swap){\n                return <Trans i18nKey={'valueSwapForAMM'}>\n                    Swap &nbsp;\n                    <Typography component={'span'} >\n                        {coinA.simpleName}\n                    </Typography>\n                    &nbsp; for &nbsp;\n                    <Typography component={'span'} >\n                        {coinB.simpleName}\n                    </Typography>\n                </Trans>\n            } else {\n                return <Trans i18nKey={'valueRemoveTOAMM'}>\n                    Swap &nbsp;\n                    <Typography component={'span'} >\n                        {coinA.simpleName}\n                    </Typography>\n                    &nbsp; remove  &nbsp;\n                    <Typography component={'span'} >\n                        {coinB.simpleName}\n                    </Typography>\n                </Trans>\n            }\n\n        }\n    },\n    {\n        key: 'totalValue',\n        sortable: false,\n        width: 'auto',\n        name: t('labelAmmTotalValue'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            const {totalDollar, totalYuan} = row\n            return <Typography\n                component={'span'}> {\n                typeof totalDollar === 'undefined'?EmptyValueTag:\n                    currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(totalDollar) : PriceTag.Yuan + getThousandFormattedNumbers(totalYuan)}\n            </Typography>\n\n        }\n    },\n    {\n        key: 'tokenAmount',\n        sortable: false,\n        width: 'auto',\n        name: t('labelAmmTokenAmount'),\n        formatter: ({row}:FormatterProps<Row<any>, unknown>) => {\n            const {amountA, amountB, coinA, coinB} = row;\n            return <Typography component={'span'}>\n                { typeof amountA === 'undefined'? EmptyValueTag : amountA } {coinA.simpleName} + { typeof amountB === 'undefined'? EmptyValueTag : amountA } {coinB.simpleName}\n            </Typography>\n        }\n    },\n    {\n        key: 'status',\n        sortable: false,\n        width: 'auto',\n        name: t('labelStatus'),\n        formatter: ({row}:FormatterProps<Row<any>, unknown>) => {\n            // const {amountA, amountB, coinA, coinB} = row;\n            return <Typography component={'span'}>\n                {row.status}\n                {/*{ typeof amountA === 'undefined'? EmptyValueTag : amountA } {coinA.simpleName} + { typeof amountB === 'undefined'? EmptyValueTag : amountA } {coinB.simpleName}*/}\n            </Typography>\n        }\n    },\n    {\n        key: 'time',\n        sortable: false,\n        width: 'auto',\n        headerCellClass:'textAlignRight',\n        cellClass:'textAlignRight',\n        name: t('labelAmmTime'),\n        formatter: ({row}:FormatterProps<Row<any>, unknown>) => {\n            const {time} = row;\n            let timeString;\n            if(typeof time === 'undefined'){\n                timeString = EmptyValueTag\n            }else{\n                timeString = moment(new Date(time), \"YYYYMMDDHHMM\").fromNow();\n            }\n            return <Typography component={'span'} textAlign={'right'}>\n                {timeString}\n            </Typography>\n            // 10 年前\n\n        }\n    },\n]\n\n\nexport const AmmRecordTable = withTranslation('tables')(<T extends {[key:string]:any}>({\n                                                                                    t, i18n,\n                                                                                    tReady,\n                                                                                    handlePageChange,\n                                                                                    pagination,\n                                                                                    showFilter = true,\n                                                                                    rawData,\n                                                                                    wait = globalSetup.wait,\n                                                                                    ...rest\n                                                                                }: AmmRecordTableProps<T> & WithTranslation) => {\n    const [page, setPage] = React.useState(rest?.page ? rest.page : 1);\n    const [totalData, setTotalData] = React.useState<Row<T>[]>(rawData && Array.isArray(rawData) ? rawData : []);\n    useDeepCompareEffect(() => {\n        setTotalData(rawData)\n    }, [rawData])\n\n    const defaultArgs: TableProps<any, any> = {\n        rawData,\n        columnMode: columnMode({t, i18n, tReady}, Currency.dollar),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}) => columnsRaw as Column<Row<any>, unknown>[],\n    }\n\n\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    const getRenderData = React.useCallback(() => pagination\n        ? totalData.slice((page - 1) * pageSize, page * pageSize)\n        : totalData\n        , [page, pageSize, pagination, totalData])\n\n    const _handlePageChange = React.useCallback((page: number) => {\n        setPage(page);\n        // updateData({actionType: ActionType.page, currPage: page})\n        handlePageChange(page);\n    }, [handlePageChange])\n\n    return <TableStyled>\n        <Table {...{ ...defaultArgs, t, i18n, tReady, ...rest,\n            rawData: getRenderData()}}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={_handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import { Meta, Story } from '@storybook/react/types-6-0';\nimport { CellDepthFormatter } from './components/Formatters';\nimport { Column, DataGridProps, generateColumns, generateRows, Table } from './index';\n\nimport styled from \"@emotion/styled\";\nimport { RowRendererProps } from 'react-data-grid';\n\nimport { DepthRow, RowBefore } from \"./components/RowRenders\";\nimport { useTranslation } from 'react-i18next';\n\nconst Style = styled.div`\n  background: ${({theme}) => theme.colorBase.background().bg};\n`\n\ninterface Row {\n    price: string;\n    size: string;\n    volume: string;\n    number: string;\n    sortColumn: string;\n    filterColumn: string;\n    cellExpend: {\n        value: string;\n        children: [];\n        isExpanded: boolean;\n    }\n    children?: Row[];\n    isExpanded?: boolean;\n    format?: any;\n}\n\nconst rawData: Array<Array<any>> = [\n    ['1.2', 'big', '0.12', '123', 'abc', 'start_a'],\n    ['1.3', 'big', '0.99', '1293', 'abc', 'start_a'],\n    ['1.5', 'small', '0.42', '23', 'abc', 'start_a'],\n    ['1.2', 'big', '0.32', '123', 'abc', 'end_a'],\n    ['1.6', 'big', '0.52', '123', 'abc', 'start_a'],\n    ['1.3', 'middle', '0.852', '5', 'abc', 'before_a'],\n    ['1.2', 'big', '0.12', '123', 'abc', 'start_a']\n]\nconst columnModeDefault: Column<Row, unknown>[] = [\n    {key: 'price', name: 'price'},\n    {key: 'size', name: 'size'},\n    {key: 'volume', name: 'volume'},\n    {key: 'number', name: 'size'},\n    {key: 'string', name: 'volume'},\n    {key: 'filter', name: 'number'}\n];\n\n/**\n * Table StoryBook\n */\nexport default {\n    component: Table,\n    title: 'basic-lib/Table',\n    argTypes: {},\n} as Meta;\n\nconst Template: Story<DataGridProps<Row, unknown>> = (args: DataGridProps<Row, unknown> & any) => {\n    let rest = useTranslation()\n    return <Style><Table {...{...args, ...rest}}  /></Style>\n}\nexport const Default = Template.bind({});\nexport const Empty = Template.bind({});\nexport const FormatCell = Template.bind({});\nexport const FormatRow = Template.bind({});\nexport const SortColumn = Template.bind({});\nexport const ExpendRowDemo = Template.bind({});\nDefault.args = {\n    rawData: rawData,\n    columnMode: columnModeDefault,\n    generateRows: generateRows,\n    generateColumns: generateColumns,\n};\nEmpty.args = {\n    ...Default.args,\n    rawData: [],\n    columnMode: columnModeDefault,\n};\nconst columnModeCellDepth: Column<Row, unknown>[] = [\n    {key: 'price', name: 'price', cellClass: (row: Row) => Number(row.volume) > 0.4 ? 'success' : 'error'},\n    {\n        key: 'size', name: 'size', formatter: ({row, column, ...props}: any) => {\n            return (<>\n                <CellDepthFormatter  {...props} row={row} column={column}\n                                     className={row.price > .4 ? 'rgb-depth-success' : 'rgb-depth-error'}\n                                     depthKey={'price'}/>\n                <div className=\"rdg-cell-value\">\n                    <div>{row[ column.key ]}</div>\n                </div>\n            </>);\n        }\n    },\n    {key: 'volume', name: 'volume', sortable: true},\n];\nFormatCell.args = {\n    ...Default.args,\n    ...{\n        columnMode: columnModeCellDepth\n    }\n};\nFormatRow.args = {\n    ...Default.args,\n    ...{\n        columnMode: columnModeDefault,\n        rowRenderer: (p: RowRendererProps<Row, any>) => {\n            const {row} = p;\n            return <DepthRow depthKey={'volume'} rowBeforeRender={(p: any) => {\n                const width = `${Number(row.volume) * 100}%`;\n                return <RowBefore {...p} width={width} className={Number(row.volume) > .4 ? 'rgb-depth-red' : ''}/>\n            }} {...p}/>\n        }\n    }\n};\n\nconst columnModeSort: Column<Row, unknown>[] = [\n    {key: 'price', name: 'price', cellClass: (row: Row) => Number(row.price) > 100 ? 'upper' : 'row'},\n    {key: 'size', name: 'size', sortable: true,},\n    {key: 'volume', name: 'volume', sortable: true},\n    {key: 'sortColumn', name: 'value', sortable: true}\n];\nSortColumn.args = {\n    ...Default.args,\n    columnMode: columnModeSort,\n    sortDefaultKey: 'sortColumn',\n    frozeSort: false,\n    sortMethod: (sortedRows: Row[], sortColumn) => {\n        switch (sortColumn) {\n            case 'size':\n                sortedRows = sortedRows.sort((a, b) => a[ sortColumn ].localeCompare(b[ sortColumn ]));\n                break;\n            case 'sortColumn':\n            case 'volume':\n                sortedRows = sortedRows.sort((a: Row, b: Row) => Number(a[ sortColumn ]) - Number(b[ sortColumn ]));\n                break;\n            default:\n        }\n        return sortedRows;\n    }\n};\n","import React, { Dispatch } from 'react';\nimport { ArrowSort, headerSortCell, SortableHeaderCellProps } from '../../../basic-lib';\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport { Box } from '@material-ui/core';\n\n// type SharedHeaderCellProps<R, SR> = Pick<\n//     HeaderRendererProps<R, SR>,\n//     'sortDirection' | 'onSort' | 'priority'\n//     >;\nexport type HeaderCellProps<R, SR> = SortableHeaderCellProps<R, SR> & {\n    filterBy:string,\n    setFilterBy:Dispatch<any>,\n}\n\nexport const  HeaderCell = withTranslation('tables')(<R extends any, SR>({\n                                                                             t,\n                                                                             column,\n                                                                             sortDirection,\n                                                                             priority,\n                                                                             onSort,\n                                                                             children ,\n                                                                             setFilterBy\n                                                                         }: HeaderCellProps<R, SR> & WithTranslation) =>{\n    if (column.sortable) {\n\n        return (<Box component={'span'} display={'flex'} alignItems={'center'} className={`rdg-header-sort-cell ${headerSortCell}`}>\n                <Box  component={'a'} display={'flex'} alignItems={'center'} onClick={(e:React.MouseEvent) =>{\n                    onSort(e.ctrlKey);\n                    setFilterBy('tradePair');\n                }}>\n                    {t('labelTradePair')}\n                    <ArrowSort {...{sortDirection}}/>\n                </Box>\n                <Box  component={'a'} display={'flex'} alignItems={'center'} onClick={(e:React.MouseEvent) =>{\n                    onSort(e.ctrlKey);\n                    setFilterBy('Volume');\n                }}>\n                    {t('labelVolume')}\n                    <ArrowSort {...{sortDirection}}/>\n                </Box>\n                {priority}\n            </Box>\n        );\n    } else{\n        return <>{children?children:column.name}</>;\n    }\n\n\n});\n\n\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Grid, MenuItem } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { DatePicker, TextField } from '../../../basic-lib/form'\nimport { Button } from '../../../basic-lib/btns'\nimport { DropDownIcon } from 'static-resource'\n\nexport interface FilterProps {\n    filterType: string;\n    filterDate: string | null;\n    setFilterItems: ({ filterType, filterDate }: any) => void;\n    handleFilterChange: ({ filterType, filterDate, filterToken }: any) => void\n}\n\nconst StyledTextFiled = styled(TextField)`\n    &.MuiTextField-root {\n        max-width: initial;\n    }\n    .MuiInputBase-root {\n        width: initial;\n        max-width: initial;\n    }\n`\n\nconst StyledDatePicker = styled(DatePicker)`\n\n`\n\nconst StyledBtnBox = styled(Box)`\n    display: flex;\n    margin-left: 40%;\n\n    button:first-of-type {\n        margin-right: 8px;\n    }\n`\n\nexport enum FilterTradeTypes {\n    join = 'Join',\n    exit = 'Exit',\n    allTypes = 'All Types'\n}\n\nexport const Filter = withTranslation('tables', {withRef: true})(({\n                                                                                t,\n                                                                                filterType,\n                                                                                filterDate,\n                                                                                setFilterItems,\n                                                                                handleFilterChange\n                                                                            }: FilterProps & WithTranslation) => {\n    const FilterTradeTypeList = [\n        {\n            label: t('labelAmmFilterTypes'),\n            value: 'All Types'\n        },\n        {\n            label: t('labelAmmFilterJoin'),\n            value: 'Join'\n        },\n        {\n            label: t('labelAmmFilterExit'),\n            value: 'Exit'\n        },\n    ]\n    // const [filterType, setFilterType] = React.useState<FilterTradeTypes>(FilterTradeTypes.allTypes)\n    // const [filterDate, setFilterDate] = React.useState<Date | any>(null);\n\n    const handleChange = React.useCallback((filterType: any, filterDate: any) => {\n        setFilterItems({\n            filterType,\n            filterDate\n        })\n    }, [setFilterItems])\n\n    const handleReset = React.useCallback(() => {\n        // setFilterType(FilterTradeTypes.allTypes)\n        // setFilterDate(null)\n        handleFilterChange({\n            filterType: FilterTradeTypes.allTypes,\n            filterDate: null,\n        })\n    }, [handleFilterChange])\n\n    const handleSearch = React.useCallback(() => {\n        console.log(filterType, filterDate)\n        handleFilterChange({\n            filterType,\n            filterDate,\n        })\n    }, [handleFilterChange, filterDate, filterType])\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={2}>\n                <StyledTextFiled\n                    id=\"table-amm-filter-types\"\n                    select\n                    fullWidth\n                    value={filterType}\n                    // onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                    //     setFilterType(event.target.value as FilterTradeTypes);\n                    // }}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                        handleChange(event.target.value as FilterTradeTypes, filterDate)\n                    }}\n                    inputProps={{IconComponent: DropDownIcon}}\n                > {FilterTradeTypeList.map(o => <MenuItem key={o.value} value={o.value}>{o.label}</MenuItem>)}\n                </StyledTextFiled>\n            </Grid>\n            <Grid item>\n                {/* <StyledDatePicker value={filterDate} onChange={(newValue: any) => setFilterDate(newValue)}/> */}\n                <StyledDatePicker value={filterDate} onChange={(newValue: any) => handleChange(filterType, newValue)}/>\n            </Grid>\n            <Grid item>\n                <StyledBtnBox>\n                    <Button variant={'outlined'} size={'medium'} color={'primary'}\n                            onClick={handleReset}>{t('Reset')}</Button>\n                    <Button variant={'contained'} size={'small'} color={'primary'}\n                            onClick={handleSearch}>{t('Search')}</Button>\n                </StyledBtnBox>\n            </Grid>\n        </Grid>\n    )\n})\n","import { WithTranslation, withTranslation } from 'react-i18next'\nimport {\n    Table,\n    generateColumns,\n    TableProps,\n    Button, Column,\n} from '../../basic-lib/'\nimport { Default } from '../../basic-lib/tables/table.stories';\nimport { FormatterProps } from 'react-data-grid';\nimport { Typography } from '@material-ui/core/';\nimport { Currency, FloatTag, PriceTag } from 'static-resource';\nimport { HeaderCell } from './componnents/HeaderCell';\nimport React from 'react';\nimport styled from '@emotion/styled';\n\ninterface Row {\n    sellData: string,\n    buyData: string,\n    volume: number,\n    price: number,\n    priceYuan: number,\n    priceDollar: number,\n    change24: string,\n    showTag: 'USD'|'CYN',\n    floatTag: keyof typeof FloatTag,\n}\n\nconst Styled = styled.div`\n  ${({theme})=> `\n  & .rdg{\n    .rdg-cell.float-decrease {\n      .btn-change24 {\n        background-color: ${theme.colorBase.error};\n      }\n      .color-price {\n        color: ${theme.colorBase.error};\n      }\n    }\n    .rdg-cell.float-increase{\n      .btn-change24{\n        background-color: ${theme.colorBase.success};\n      }\n      .color-price {\n        color: ${ theme.colorBase.success};\n      }\n\n    }\n  }`\n}\n`\n\n\nconst generateRows =  <Row,SR=unknown>(rawData: Row[], _rest: TableProps<Row,SR>): Row[] => {\n    // const {columnMode,filterWord} = rest;\n    //TODO Filter\n    // return rawData;\n    return rawData && Array.isArray(rawData) ? rawData : [];\n}\nexport type TradeFilterTableProps<R> = {\n    rawData:R,\n} & Partial<TableProps<R, unknown>>\n\n\nexport const TradeFilterTable = withTranslation('tables')(({t,rawData,...rest}: WithTranslation & TradeFilterTableProps<Row>) => {\n    // const formattedRawData = props.rawData.map(o => Object.values(o))\n    // const [filterType, setFilterType] = React.useState(FilterTradeTypes.allTypes)\n    // const [filterDate, setFilterDate] = React.useState(null)\n    // const [page, setPage] = React.useState(1)\n    // const [totalData, setTotalData] = React.useState(formattedRawData)\n    // {\n    //     key: 'county',\n    //     name: 'County',\n    //     width: 200,\n    //     formatter({ row }) {\n    //         if (row.id === 'id_0') {\n    //             const actions = [\n    //                 {\n    //                     icon: '🗑️',\n    //                     callback() {\n    //                         alert('Deleting');\n    //                     }\n    //                 },\n    //                 {\n    //                     icon: '🔗',\n    //                     actions: [\n    //                         {\n    //                             text: '✍️ Edit Cell',\n    //                             callback() {\n    //                                 alert('Edit Cell');\n    //                             }\n    //                         },\n    //                         {\n    //                             text: '📋 Copy Cell',\n    //                             callback() {\n    //                                 alert('Copied');\n    //                             }\n    //                         }\n    //                     ]\n    //                 }\n    //             ];\n    //\n    //             return (\n    //                 <>\n    //                     <CellActionsFormatter actions={actions} />\n    //                     <div>{row.county}</div>\n    //                 </>\n    //             );\n    //         }\n    //\n    //         return <>{row.county}</>;\n    //     }\n    // },\n    const [filterBy,setFilterBy] = React.useState('');\n    const columnMode:readonly Column<Row, unknown>[] = [\n        {key: 'tradePair', name: 'tradePair',sortable: true,\n            cellClass: (row: Row) => `${row.floatTag}`,\n            headerRenderer: (props: any) => <HeaderCell {...props} filterBy={filterBy} setFilterBy={setFilterBy} />  ,\n            formatter: ({row}:FormatterProps<Row, unknown>) => <>\n                <Typography component={'p'} paddingTop={1/2}>\n                    <Typography component={'span'} title={'sell'} className={'next-coin'}>\n                        {row.sellData}\n                    </Typography>\n                    <Typography component={'i'}>/</Typography>\n                    <Typography component={'span'} title={'buy'}  variant={'body2'} color={'textSecondary'} >\n                        {row.buyData}\n                    </Typography>\n                </Typography>\n                <Typography component={'p'} variant={'body2'}>{t('labelVolume')} {row.volume}</Typography>\n            </>\n        },\n            {key: 'price', name: 'labelTradePrice', sortable: true,\n                cellClass: (row: Row) => `float-${row.floatTag}`,\n                formatter: ({row}:FormatterProps<Row, unknown>) => <>\n                    <Typography component={'p'} className={'color-price'}  paddingTop={1/2}>\n                        {row.price}\n                    </Typography>\n                    <Typography component={'p'} variant={'body2'}>{row.showTag ===  Currency.dollar ? PriceTag.Dollar + row.priceDollar: PriceTag.Yuan + row.priceYuan}</Typography>\n                </>\n            },\n            {key: 'change24', name: 'labelQuota24hChange', sortable: true,\n                cellClass: (row: Row) => `float-${row.floatTag}`,\n                formatter: ({row}:FormatterProps<Row, unknown>) =>{\n                    return <Button className={'btn-change24'} variant={'contained'} size={'small'} color={'primary'}>\n                        {row.change24}</Button>\n                }\n            },\n        ]\n    const defaultArgs = {\n        ...Default.args,\n        generateRows,\n        generateColumns,\n        columnMode,\n        sortDefaultKey: 'sortColumn',\n        frozeSort: false,\n        sortMethod: (sortedRows: Row[], sortColumn:any) => {\n            switch (sortColumn) {\n                case 'tokenInfo':\n                    sortedRows = sortedRows.sort((a, b) => a[ sortColumn ].localeCompare(b[ sortColumn ]));\n                    break;\n                case 'price':\n                case 'change24':\n                    sortedRows = sortedRows.sort((a: any, b: any) => Number(a[ sortColumn ]) - Number(b[ sortColumn ]));\n                    break;\n                default:\n            }\n            return sortedRows;\n        }\n    };\n    return <Styled>\n        <Table<any, unknown>  {...{t,...rest,...defaultArgs, rawData }}/>\n    </Styled>\n\n})\n","export enum AmmSideTypes {\n    Exit = 'Exit',\n    Join = 'Join'\n}\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport styled from '@emotion/styled'\nimport { WithTranslation, withTranslation, TFunction } from 'react-i18next'\nimport moment from 'moment'\nimport { Table, Column } from '../../basic-lib/tables'\nimport { TablePagination } from '../../basic-lib'\nimport { TablePaddingX } from '../../styled';\nimport { Filter, FilterTradeTypes } from './components/Filter'\nimport { TableType, getThousandFormattedNumbers } from 'static-resource';\nimport { useSettings } from '../../../stores';\nimport { useDeepCompareEffect } from 'react-use';\nimport { Row } from '../poolsTable/Interface';\nimport { AmmSideTypes } from './interface'\n\n// interface Row {\n//     side: TradeTypes;\n//     amount: {\n//         from: {\n//             key: string;\n//             value: number;\n//         },\n//         to: {\n//             key: string;\n//             value: number\n//         }\n//     };\n//     price: number;\n//     fee: number;\n//     time: number;\n//     cellExpend?: {\n//         value: string\n//         children: []\n//         isExpanded: boolean\n//     };\n//     children?: Row[];\n//     isExpanded?: boolean;\n//     formatter?: any;\n// }\n\nexport type RawDataAmmItem = {\n    side: AmmSideTypes;\n    amount: {\n        from: {\n            key: string;\n            value?: string;\n        },\n        to: {\n            key: string;\n            value?: string;\n        }\n    };\n    lpTokenAmount?: string;\n    fee: {\n        key: string;\n        value?: string;\n    };\n    time: number;\n}\n\nexport type AmmTableProps = {\n    rawData: RawDataAmmItem[];\n    pagination?: {\n        pageSize: number\n    }\n    showFilter?: boolean\n}\n\n// enum TableType {\n//     filter = 'filter',\n//     page = 'page'\n// }\n\nconst TableStyled = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    .rdg{\n        // --template-columns: 240px auto auto auto 68px 120px !important;\n        .rdg-cell.action{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n    }\n    ${({theme}) => TablePaddingX({pLeft:theme.unit * 3,pRight:theme.unit * 3})}\n` as typeof Box\n\nconst StyledSideCell: any = styled(Box)`\n    color: ${(props: any) => {\n        const {\n            value,\n            theme: {colorBase},\n        } = props\n        return value === AmmSideTypes.Join ? colorBase.success : colorBase.error\n    }}\n`\n\nconst getColumnModeAssets = (t: TFunction, _currency: 'USD'|'CYN'): Column<RawDataAmmItem, unknown>[] => [\n    {\n        key: 'side',\n        name: t('labelAmmSide'),\n        formatter: ({row}) => {\n            const tradeType = row['side'] === AmmSideTypes.Exit ? t('labelAmmExit'): t('labelAmmJoin')\n            return (\n                <div className=\"rdg-cell-value\">\n                    <StyledSideCell value={row['side']}>\n                        {tradeType}\n                    </StyledSideCell>\n                </div>\n            )\n        }\n    },\n    {\n        key: 'amount',\n        name: t('labelAmmAmount'),\n        formatter: ({row}) => {\n            const {from, to} = row['amount']\n            return (\n                <div className=\"rdg-cell-value\">\n                    {`${from.value} ${from.key} + ${to.value} ${to.key}`}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'lpTokenAmount',\n        name: t('labelAmmLpTokenAmount'),\n        formatter: ({row}) => {\n            const amount = row['lpTokenAmount']\n            const renderValue = row['side'] === AmmSideTypes.Join\n                ? `+${getThousandFormattedNumbers(Number(amount))}`\n                : `-${getThousandFormattedNumbers(Number(amount))}`\n            return (\n                <div className=\"rdg-cell-value\">\n                    {renderValue}\n                    {/*{currency === Currency.dollar ?*/}\n                    {/*    PriceTag.Dollar + getThousandFormattedNumbers(priceDollar)*/}\n                    {/*    : PriceTag.Yuan + getThousandFormattedNumbers(priceYuan)}*/}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'fee',\n        name: t('labelAmmFee'),\n        formatter: ({row}) => {\n            const {key, value} = row['fee']\n            return (\n                <div className=\"rdg-cell-value\">\n                    {`${value} ${key}`}\n                </div>\n            )\n        }\n    },\n    {\n        key: 'time',\n        name: t('labelAmmRecordTime'),\n        // minWidth: 400,\n        formatter: ({ row }) => {\n            const time = moment(new Date(row['time']), \"YYYYMMDDHHMM\").fromNow()\n            return (\n                <div className=\"rdg-cell-value\">\n                    {time}\n                </div>\n            )\n        }\n    },\n]\n\nexport const AmmTable = withTranslation('tables')((props: WithTranslation & AmmTableProps) => {\n    const { t, pagination, showFilter, rawData } = props\n    // const formattedRawData = rawData && Array.isArray(rawData) ? rawData.map(o => Object.values(o)) : []\n    const [filterType, setFilterType] = React.useState(FilterTradeTypes.allTypes)\n    const [filterDate, setFilterDate] = React.useState(null)\n    const [page, setPage] = React.useState(1)\n    const [totalData, setTotalData] = React.useState<RawDataAmmItem[]>(rawData)\n    const {currency} = useSettings();\n    const defaultArgs: any = {\n        // rawData: rawData,\n        columnMode: getColumnModeAssets(t,currency).filter(o => !o.hidden),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}:any) => columnsRaw as Column<Row<any>, unknown>[],\n        style: {\n            backgroundColor: ({colorBase}: any) => `${colorBase.backgroundBox}`\n        }\n    }\n    useDeepCompareEffect(()=>{\n        setTotalData(rawData);\n    },[rawData])\n\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    const getRenderData = React.useCallback(() => pagination\n            ? totalData.slice((page - 1) * pageSize, page * pageSize)\n            : totalData\n    , [page, pageSize, pagination, totalData])\n\n    const updateData = React.useCallback(({ \n        TableType,\n        currFilterType = filterType,\n        currFilterDate = filterDate,\n    }) => {\n        console.log(filterType, filterDate)\n        let resultData = rawData ? rawData: []\n        if (currFilterType !== FilterTradeTypes.allTypes) {\n            resultData = resultData.filter(o => o.side === currFilterType)\n        }\n        if (currFilterDate) {\n            // TODO: time filter\n            const diff = moment(moment()).diff(currFilterDate, 'days')\n            resultData = resultData.filter(o => o.time)\n        }\n        if (TableType === 'filter') {\n            setPage(1)\n        }\n        setTotalData(resultData)\n    }, [rawData, filterDate, filterType])\n\n    const setFilterItems = React.useCallback(({ filterType, filterDate }) => {\n        setFilterType(filterType)\n        setFilterDate(filterDate)\n    }, [])\n\n    const handleFilterChange = React.useCallback(({ filterType, filterDate }) => {\n        setFilterItems({ filterType, filterDate })\n        updateData({ TableType: TableType.filter, currFilterType: filterType, currFilterDate: filterDate })\n    }, [updateData, setFilterItems])\n\n    const handlePageChange = React.useCallback((page: number) => {\n        setPage(page)\n        updateData({ TableType: TableType.page, currPage: page })\n    }, [updateData])\n\n    const FilterStyled = styled(Box)`\n        margin-left: 26px;\n    `\n\n    return <TableStyled>\n        {showFilter && (\n            <FilterStyled>\n                <Filter \n                    handleFilterChange={handleFilterChange} \n                    setFilterItems={setFilterItems}\n                    filterType={filterType} \n                    filterDate={filterDate}\n                />\n            </FilterStyled>\n        )}\n        <Table {...{...defaultArgs, ...props, rawData: getRenderData() }}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import React from 'react';\nimport { WalletStatus } from 'static-resource';\n\nexport enum WalletNotificationStatus {\n    none = 'none',\n    error = 'error',\n    pending = 'pending',\n    success = 'success',\n}\n\nexport type  WalletNotificationInterface = {\n    status: keyof typeof WalletNotificationStatus\n    message: string,\n    handleClick?: (event: React.MouseEvent) => void,\n}\n\n\nexport type WalletConnectBtnProps = {\n    handleClick: (_e: React.MouseEvent) => {},\n    // notificationList: WalletNotificationInterface[],\n    status?: keyof typeof WalletStatus | undefined,\n    label: string,\n    wait: number\n}","export default __webpack_public_path__ + \"static/media/logo.3f0a262d.svg\";","import { WithTranslation, withTranslation } from 'react-i18next';\nimport QRCode from 'qrcode.react';\nimport styled from '@emotion/styled';\nimport { Box, Typography,Modal } from '@material-ui/core';\nimport { ModalQRCodeProps, QRCodeProps } from './Interface';\nimport { ModalCloseButton } from '../../basic-lib';\n\nconst ModalContentStyled = styled(Box)`\n  & > div {\n    background-color: ${({theme}) => theme.colorBase.background().secondary};\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: var(--modal-width);\n  }\n         //.modalClose {\n         //    width: 100%;\n         //    display: flex;\n         //    justify-content: flex-end;\n         //    margin: -16px 32px 16px 0;\n         // }\n \n`\n\n// export interface ModalQRCodeProps {\n//     // open: boolean;\n//     // onClose: { bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void; }['bivarianceHack'] | any;\n//     address: string;\n//     url: string;\n//     btnAction?: (props?: any) => void;\n// }\n\n\nexport const QRCodePanel = ((\n    {\n        // open,\n        // onClose,\n        // t,\n        title,\n        description,\n        url = 'https://exchange.loopring.io/',\n        // handleClick\n    }: QRCodeProps) => {\n    return <Box display={'flex'} justifyContent={'space-between'} alignItems={'center'} flexDirection={'column'}>\n        {title && (\n            <Typography variant={'h3'} component='h3' className=\"modalTitle\" marginBottom={3}>{title}</Typography>)}\n        <QRCode value={url} size={160} style={{padding: 5, backgroundColor: '#fff'}} aria-label={`link:${url}`}/>\n        {description && (<Typography variant={'body1'} marginBottom={3} marginTop={1}>{description}</Typography>)}\n\n    </Box>\n    {/* </div> */\n    }\n});\n\nexport const ModalQRCode = withTranslation('common')(({\n                                                          onClose,\n                                                          open,\n                                                          t,\n                                                          ...rest\n                                                      }: ModalQRCodeProps & WithTranslation) => {\n\n\n    return <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n    >\n        <ModalContentStyled display={'flex'} alignItems={'center'} justifyContent={'center'}>\n            <Box paddingTop={3} paddingBottom={3} display={'flex'} flexDirection={'column'}>\n                <ModalCloseButton onClose={onClose} {...{...rest, t}} />\n                <QRCodePanel {...{...rest, t}} />\n            </Box>\n\n        </ModalContentStyled>\n    </Modal>\n})\n\n","import { Box, Modal } from '@material-ui/core';\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport styled from '@emotion/styled';\nimport { ModalWalletConnectProps, WalletConnectPanelProps } from './Interface';\nimport { Typography } from '@material-ui/core/';\nimport { GatewayItem } from 'static-resource';\nimport { ModalContentStyled } from '../../styled';\n\n\nconst IconWrapperStyled = styled(Box)`\n    background-color: ${({theme}) => theme.colorBase.textPrimary};\n    width: var(--gateway-icon-size);\n    height: var(--gateway-icon-size);\n    border-radius: 50%;\n` as typeof Box;\n\n\n\nconst WalletConnectPanelStyled = styled(Box)`\n  width: var(--transfer-modal-width);\n` as typeof Box;\n\nexport const WalletConnectPanel = ({\n                                       t, gatewayList,\n                                       handleSelect,\n\n                                   }: WalletConnectPanelProps & WithTranslation) => {\n    return <WalletConnectPanelStyled display={'flex'} justifyContent={'space-between'} alignItems={'center'}\n                                     flexDirection={'column'}>\n        <Typography variant={'h3'} component='h3' className=\"modalTitle\" marginBottom={3}>Connect Wallet</Typography>\n        <Box display={'flex'} justifyContent={'space-evenly'} flex={1} alignItems={'center'} alignSelf={'stretch'}\n             className=\"modalContent\">\n            {gatewayList.map((item: GatewayItem) => (\n                <Box component={'a'} display={'flex'} flexDirection={'column'} justifyContent={''} alignItems={'center'}\n                     minWidth={84}\n                     key={item.key} onClick={item.handleSelect ? item.handleSelect : (event: React.MouseEvent) => {\n                    if (handleSelect) {\n                        handleSelect(event, item.key);\n                    }\n                }}>\n                    <IconWrapperStyled display={'flex'} justifyContent={'center'} alignItems={'center'}>\n                        <img src={item.imgSrc} alt={item.key}/>\n                    </IconWrapperStyled>\n                    <Typography variant={'body2'} component={'span'} marginTop={2}>{t(item.key)}</Typography>\n                </Box>\n            ))}\n        </Box>\n    </WalletConnectPanelStyled>\n}\n\nexport const ModalWalletConnect = withTranslation('swap', {withRef: true})((\n    {\n        t,\n        open,\n        onClose,\n        ...rest\n    }: ModalWalletConnectProps & WithTranslation) => {\n\n    return <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n    >\n        <ModalContentStyled style={{boxShadow: '24'}}>\n            <WalletConnectPanel {...{...rest, t}} />\n        </ModalContentStyled>\n    </Modal>\n})\n","export enum ChartType {\n    Kline = 'Kline',\n    Depth = 'Depth',\n    Trend = 'Trend'\n}\nexport enum timeUnit {\n    W1 = '1W',\n    H1 = '1H',\n    D1 = '1D',\n}\n","import { WalletConnectBtnProps} from './Interface';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { globalSetup, LockIcon, NoNetWorkIcon, WalletStatus } from 'static-resource';\nimport { debounce } from 'lodash';\nimport { Typography } from '@material-ui/core';\n\nimport loadingSvg from 'common-resources/assets/svg/loading.svg';\nimport styled from '@emotion/styled';\nimport { Button} from '../../basic-lib';\nimport { bindHover, usePopupState } from 'material-ui-popup-state/hooks';\n// import Popover from 'material-ui-popup-state/HoverPopover';\nconst BtnWalletConnectStyled = styled(Button)`\n  text-transform: none;\n\n  i {\n    padding-right: ${({theme}) => theme.unit}px;\n    display: flex;\n    justify-content: center;\n    align-content: space-between;\n\n    svg {\n      height: auto;\n      font-size: ${({theme}) => theme.fontDefault.h5};\n    }\n  }\n\n  // .icon-build{\n    //   color: ${({theme}) => theme.colorBase.secondary};\n  // }\n  .icon-no-network{\n    color: ${({theme}) => theme.colorBase.error};\n  }\n  .icon-pending, .icon-progressing {\n    color: ${({theme}) => theme.colorBase.secondary};\n  }\n\n  .icon-error, .icon-no-account {\n    color: ${({theme}) => theme.colorBase.error};\n  }\n  \n\n  .icon-success {\n    color: ${({theme}) => theme.colorBase.success};\n  }\n\n`\n// const ListStyled = styled(List)`\n//   margin: 0;\n//   width: 240px;\n// `\n\nexport const BtnWalletConnect = ({\n                                     t,\n                                     label,\n                                     status = undefined,\n                                     // notificationList,\n                                     wait = globalSetup.wait,\n                                     handleClick,\n                                 }: WalletConnectBtnProps & WithTranslation) => {\n    let disabled = undefined, loading = undefined, connect = false, accountPending = false, unlock = false,\n        noAccount = false, noNetwork = false;\n    // const [notificationStatus, setNotificationStatus] = React.useState(WalletNotificationStatus.none)\n    switch (status) {\n        case WalletStatus.disabled:\n            disabled = true;\n            break;\n        case WalletStatus.loading:\n            loading = true;\n            break;\n        case WalletStatus.noAccount:\n            noAccount = true;\n            break;\n        case WalletStatus.accountPending:\n            accountPending = true;\n            break;\n        case WalletStatus.unlock:\n            unlock = true;\n            break;\n        case WalletStatus.noNetwork:\n            noNetwork = true;\n            break;\n        default:\n            connect = false;\n            break;\n    }\n    const debounceCount = React.useCallback(debounce(({...props}: any) => {\n        if (handleClick) {\n            handleClick(props)\n        }\n    }, wait), [handleClick])\n    const _handleClick = (event: React.MouseEvent) => {\n        debounceCount(event)\n    }\n    // const notificationRender = React.useMemo(() => {\n    //     let error = 0, pending = 0, success = 0;\n    //     const jsx = notificationList.map(({status, message, handleClick}: WalletNotificationInterface, index) => {\n    //         let startIcon: { iconItem: any, className: any } = {iconItem: undefined, className: ''};\n    //         switch (status) {\n    //             case 'error':\n    //                 error++;\n    //                 startIcon = {\n    //                     iconItem: <AlertIcon/>,\n    //                     className: 'alert-error error',\n    //                 }\n    //\n    //                 break;\n    //             case 'pending':\n    //                 pending++;\n    //                 startIcon = {\n    //                     iconItem: <PendingIcon/>,\n    //                     className: 'alert-pending pending',\n    //                 }\n    //\n    //                 break;\n    //             case 'success':\n    //                 success++;\n    //                 startIcon = {\n    //                     iconItem: <CheckIcon/>,\n    //                     className: 'alert-success success',\n    //                 }\n    //                 break;\n    //             default:\n    //                 break\n    //         }\n    //         //TODO fill the router\n    //         return <WalletNotificationListItem  {...{\n    //             ...rest,\n    //             t,\n    //             handleClick,\n    //             startIcon: startIcon,\n    //             label: {id: message}\n    //         }} key={index}></WalletNotificationListItem>\n    //\n    //\n    //     })\n    //\n    //     setNotificationStatus(error ? WalletNotificationStatus.error : pending ?\n    //         WalletNotificationStatus.pending : success ? WalletNotificationStatus.success : WalletNotificationStatus.none)\n    //     return jsx;\n    // }, [notificationList, setNotificationStatus, t])\n    const popupState = usePopupState({variant: 'popover', popupId: `popupId: 'wallet-connect-notification'`});\n    return <>\n        <BtnWalletConnectStyled variant={'outlined'} size={'medium'} color={'primary'}\n                                className={'wallet-btn'}\n                                disabled={disabled} onClick={_handleClick} {...bindHover(popupState)} >\n\n            {   noNetwork?  <Typography component={'i'} height={20} className={'icon-no-network icon-error'}><NoNetWorkIcon/></Typography> :\n                loading ? <Typography component={'i'} height={20}><img width={20} height={20} src={loadingSvg}\n                                                                    alt={'loading'}/></Typography>\n                                 : unlock ?  <></>\n                    // <Typography component={'i'} height={20}\n                    //                        className={`icon-notification icon-success`}></Typography>\n                    : connect || accountPending || noAccount ? <Typography component={'i'} height={20}\n                        // icon-${notificationStatus}\n                                                                           className={`icon-notification icon-error`}><LockIcon/></Typography> : ''\n            }\n\n            <Typography component={'span'}> {t(label)}  </Typography>\n        </BtnWalletConnectStyled>\n    </>\n\n}","import { Box, IconButton, Link } from '@material-ui/core';\nimport {\n    DownloadIcon,\n    DropDownIcon,\n    LanguageType,\n    NotificationIcon, ThemeDarkIcon, ThemeLightIcon,\n    ThemeType,\n} from 'static-resource';\nimport React from 'react';\nimport { QRCodePanel } from '../../modal';\nimport { WithTranslation } from 'react-i18next';\nimport { bindHover, usePopupState } from 'material-ui-popup-state/hooks';\nimport { bindPopper } from 'material-ui-popup-state/es';\nimport { OutlineSelect, OutlineSelectItem, PopoverPure } from '../../basic-lib';\nimport i18n from '../../../static-resource/src/i18n';\nimport { useSettings } from '../../../stores';\n\n\nexport const BtnDownload = ({\n                                t,\n                                url,\n                                i18nTitle,\n                                i18nDescription,\n                                ...rest\n                            }: & { i18nTitle: string, i18nDescription: string, url: string } & WithTranslation) => {\n    const popupState = usePopupState({variant: 'popover', popupId: 'download-QRcode'});\n    const Description = () => <Link\n        href='https://apps.apple.com/us/app/loopring-smart-wallet/id1550921126'>{t(i18nDescription)}</Link>\n    return <div>\n        <IconButton aria-label={t('labeldownloadApp')} {...bindHover(popupState)}><DownloadIcon/></IconButton>\n        <PopoverPure\n            // type={PopoverType.hover}\n            {...bindPopper(popupState)}\n            //popupId=\"wallet-connect-notification\"\n            // popoverContent={}\n            //arrowHorizon={{right: 98}}\n            className={'arrow-center'}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <Box margin={3}><QRCodePanel {...{\n                ...rest, title: t(i18nTitle), description: <Description/>,\n                url, t\n            }} /></Box>\n        </PopoverPure>\n    </div>\n}\n\n\nexport const BtnNotification = ({t}: any) => <IconButton\n    aria-label={t('alert message')}><NotificationIcon/></IconButton>\nexport const BtnTheme = ({t, handleClick}: any) => {\n    const {themeMode} = useSettings()\n    //const [mode, setMode] = React.useState(themeMode)\n    const _handleClick = React.useCallback(() => {\n        // setMode(mode === ThemeType.dark ? ThemeType.light : ThemeType.dark)\n        if (handleClick) {\n            handleClick(themeMode)\n        }\n    }, [themeMode, handleClick])\n    return <IconButton aria-label={t('change theme')} onClick={_handleClick}>\n        {themeMode === ThemeType.dark ? <ThemeDarkIcon/> : <ThemeLightIcon/>}</IconButton>\n}\n\n\nexport const BtnLanguage = ({t, label, handleChange}: any) => {\n    const _handleChange = React.useCallback((event: React.ChangeEvent<any>) => {\n        if (handleChange) {\n            handleChange(event.target.value);\n        }\n    }, [handleChange]);\n    return <OutlineSelect aria-label={t(label)} IconComponent={DropDownIcon}\n                          labelId=\"language-selected\"\n                          id=\"language-selected\"\n                          value={i18n.language} autoWidth\n                          onChange={_handleChange}>\n        <OutlineSelectItem value={LanguageType.en_US}>EN</OutlineSelectItem>\n        <OutlineSelectItem value={LanguageType.zh_CN}>中文</OutlineSelectItem>\n    </OutlineSelect>\n}\n\n\nexport * from './Interface';\nexport * from './WalletConnect';","import styled from '@emotion/styled';\nimport { AppBar, Box, Container, IconButton, Slide, Toolbar } from '@material-ui/core';\nimport { Typography } from '@material-ui/core/';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport logoSVG from 'common-resources/assets/svg/logo.svg'\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport { HeaderMenuSub, HeadMenuItem, Layer2Item, MenuTab, TabItemPlus } from '../basic-lib';\nimport { HeaderProps, HeaderToolBarInterface } from './Interface';\nimport {\n    ButtonComponentsMap,\n    HeaderMenuItemInterface,\n    HeaderMenuTabStatus,\n    ToolBarAvailableItem\n} from 'static-resource';\nimport { BtnDownload, BtnLanguage, BtnNotification, BtnTheme, BtnWalletConnect } from './toolbar';\nimport React from 'react';\nimport { useSettings } from '../../stores';\n\nconst ToolBarStyled = styled(Toolbar)`\n  && {\n    display: flex;\n    justify-content: space-between;\n    align-items: stretch;\n    padding: 0;\n  }\n`\nconst StyledDiv = styled.div`\n  &.item-scrolled .MuiAppBar-root.MuiAppBar-positionFixed{\n    background: ${({theme}) => theme.colorBase.background().bg};\n  }\n`\nconst HeaderStyled = styled(AppBar)`\n  && {\n    .wrap {\n      height: var(--header-height);\n      margin: 0 auto;   \n      //min-width: 800px;\n    }\n    background-image: linear-gradient(rgba(255, 255, 255, 0.04), rgba(255, 255, 255, 0.04));\n    background-color: ${({theme}) => theme.mode === 'dark' ? 'transparent' : ''};\n    box-shadow: inherit;\n    box-sizing: border-box;\n    border-bottom: ${({theme}) => theme.border.borderConfig({d_W: 1, c_key: 'blur'})};\n    border-radius: 0;\n    &.item-scrolled.MuiAppBar-root.MuiAppBar-positionFixed{\n      background-color: ${({theme}) => theme.colorBase.background().secondary};\n\n    }\n  }\n`\n\nconst LogoStyle = styled(Typography)`\n  a.MuiButtonBase-root {\n    height: auto;\n    width: auto;\n    min-width: auto;\n    border-radius: 0;\n    &:hover{\n      background-color: inherit;\n      span.MuiIconButton-label {\n        background: ${({theme}) => theme.colorBase.primary}; \n      }\n    }\n    span.MuiIconButton-label {\n      background: ${({theme}) => theme.colorBase.textPrimary};\n      mask: url(${logoSVG}) space;\n      mask-size: contain;\n      mask-position: center;\n      mask-size: contain;\n      width: 105px;\n      height: 40px;\n      margin-top: -6px;\n      color:transparent;\n    }\n  }\n` as typeof Typography\n\n\n\nexport const LoopringLogo = (<LogoStyle variant=\"h6\" component=\"h1\">\n    <IconButton edge=\"start\" aria-label=\"menu\" component={RouterLink} to=\"/#\" color={\"inherit\"}>\n    Loopring 路印\n{/*/!*<SvgIcon>*!/*/}\n{/*    <img src={logoSVG} alt=\"\" width=\"104\" height=\"40\" />*/}\n{/*</SvgIcon>*/}\n</IconButton>\n</LogoStyle>\n);\n\n\nconst ToolBarItem = ({buttonComponent, ...props}: any) => {\n    const { themeMode, language} = useSettings()\n    const render = (buttonComponent: number, props: any) => {\n\n        switch (buttonComponent) {\n            case  ButtonComponentsMap.Download:\n                return <BtnDownload {...props} />;\n            // @ts-ignore\n            case  ButtonComponentsMap.Notification:\n                return <BtnNotification {...props} />;\n            case  ButtonComponentsMap.Theme:\n                return <BtnTheme {...{...props,themeMode}} />;\n            case  ButtonComponentsMap.Language:\n                return <BtnLanguage {...{...props,language}} />;\n            case  ButtonComponentsMap.WalletConnect:\n                return <BtnWalletConnect {...props} />;\n            default:\n                return undefined;\n        }\n    }\n    return <TabItemPlus>{render(buttonComponent, props)}</TabItemPlus>;\n}\n\nexport const HideOnScroll = React.forwardRef(({children, ...rest}: any, ref) => {\n    const [className, setClassName] = React.useState('');\n    const handleScroll = React.useCallback(() => {\n        const position = window.pageYOffset;\n        if (position > 20) {\n            setClassName('item-scrolled');\n        } else {\n            setClassName('');\n        }\n    }, [setClassName]);\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', handleScroll, {passive: true});\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, [handleScroll]);\n    //className = {_className}\n    return <Slide  {...rest} appear={false} adirection=\"down\" forwardedRef={ref} in={!ref}>\n        <StyledDiv className={className}>{children}</StyledDiv>\n    </Slide>\n})\n\nexport const Header = withTranslation(['layout', 'common'], {withRef: true})(React.forwardRef(({\n                                                                                                   headerMenuData,\n                                                                                                   headerToolBarData,\n                                                                                                   selected,\n                                                                                                   i18n,\n                                                                                                   ...rest\n                                                                                               }: HeaderProps & WithTranslation, ref: React.ForwardedRef<any>) => {\n\n    const displayDesktop = () => {\n        return (\n            <ToolBarStyled>\n                <Box display=\"flex\" alignContent=\"center\" justifyContent={\"flex-start\"}\n                     alignItems={\"stretch\"}>\n                    {LoopringLogo}\n                    {getDrawerChoices({menuList: headerMenuData, i18n, ...rest})}\n                </Box>\n                <Box component={'ul'} display=\"flex\" alignItems=\"center\" justifyContent={\"flex-end\"}\n                     color={'textColorSecondary'}>\n                    {getMenuButtons({toolbarList: headerToolBarData, i18n, ...rest})}\n                </Box>\n            </ToolBarStyled>\n        );\n    };\n\n    const getMenuButtons = ({\n                                toolbarList,\n                                ...rest\n                            }: { toolbarList: HeaderToolBarInterface[] } & WithTranslation) => {\n        return ToolBarAvailableItem.map((index:number) =>{\n            return <ToolBarItem {...{...toolbarList[index], ...rest}} key={index}/>\n        })\n        // toolbarList.map((item, index) =>);\n    };\n    // const Layer2Tab = ({label1,iconBtn,...rest}: any)=>{\n    //     return <Box display={'flex'} justifyContent={'space-around'} justifyItems={'center'} paddingX={2}>\n    //        <Typography variant={'body1'} component={'span'} role={'label'} display={'inline-flex'} alignItems={'center'}>\n    //            {rest.t(label1.id)}\n    //        </Typography>\n    //\n    //     </Box>\n    // }\n    const getDrawerChoices = ({\n                                  menuList,\n                                  layer = 0,\n                                  ...rest\n                              }: { menuList: HeaderMenuItemInterface[], layer?: number, handleListKeyDown?: any } & WithTranslation) => {\n        const nodeMenuItem = ({label, router, layer, child, ...rest}: HeaderMenuItemInterface & any) => {\n            const selectedFlag = new RegExp(label.id, 'ig').test(selected.split('/')[1]?selected.split('/')[1]:selected)\n            return <>{layer >= 1 ? <Layer2Item {...{...rest, label, router, child, layer}} /> : //key={label.id+ '-layer2Item'}/> :\n                // label.id === 'Layer2' ? <Box display={'flex'} justifyContent={'space-around'} alignItems={'center'}>\n                //     <MenuTab component='div' label={rest.t(label.i18nKey)} key={label.id}\n                //              className={ selectedFlag ? 'Mui-selected' : ''}/>\n                //     {rest.extender ? rest.extender : undefined}\n                // </Box> :\n                    <MenuTab component='div' label={rest.t(label.i18nKey)} key={label.id}\n                                  className={selectedFlag ? 'Mui-selected' : ''}/>\n            }\n            </>\n        }\n\n        const Memoized = ({label, router, child, layer, ref, ...rest}: any) => (<HeaderMenuSub {...{\n            ...rest,\n            label,\n            router,\n            child,\n            layer,\n            className: new RegExp(label.id, 'ig').test(selected.split('/')[1]?selected.split('/')[1]:selected) ? 'Mui-selected' : '',\n            renderList: ({handleListKeyDown}: { handleListKeyDown: ({...rest}) => any }) => {\n                return getDrawerChoices({menuList: child, layer: layer + 1, handleListKeyDown, ...rest})\n            },\n        }} />);\n\n        return menuList.map((props: HeaderMenuItemInterface) => {\n            // @ts-ignore\n            const {label, child, router, status} = props;\n            if (status === HeaderMenuTabStatus.hidden) {\n                // return <React.Fragment key={label.id + '-' + layer}></React.Fragment>\n                return <React.Fragment key={label.id + '-' + layer}></React.Fragment>\n            } else {\n                if (child) {\n                    return <Memoized {...{...props, layer, ...rest}} key={label.id + '-' + layer}/>\n                } else {\n                    return <HeadMenuItem  {...{\n                        ...props,\n                        layer,\n                        children: nodeMenuItem({...props, layer, child, ...rest}),\n                        style: {textDecoration: \"none\"},\n                        key: label.id + '-' + layer,\n                    }} onClick={rest?.handleListKeyDown ? rest.handleListKeyDown : undefined}/>\n                }\n            }\n        });\n    };\n\n    return (\n        <HeaderStyled ref={ref} className={rest?.className}>\n            <Container className={'wrap'} maxWidth='lg'>\n                {displayDesktop()}\n            </Container>\n        </HeaderStyled>\n\n    );\n}));","import { WithTranslation } from 'react-i18next';\nimport { CoinInfo, FloatTag, TradeFloat } from 'static-resource';\nimport { Box, Grid } from '@material-ui/core';\nimport { Avatar, Typography } from '@material-ui/core/';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { baseTitleCss, useImage, useSettings } from '../../index';\nimport { NewTagIcon } from '../basic-lib/Tags';\n\ntype StyledProps = {\n    custom: any\n}\nconst TradeTitleStyled = styled(Box)<StyledProps>`\n  ${({theme, custom}) =>baseTitleCss({theme, custom})}\n` as React.ElementType<StyledProps>;\n\nexport const TradeTitle = <I extends object>({  coinAInfo,coinBInfo, t,\n                                      tradeFloat = {\n                                          change: 0,\n                                          timeUnit: '24h',\n                                          priceYuan: 0,\n                                          priceDollar: 0,\n                                          floatTag: FloatTag.none\n                                      }\n                                      , isNew\n                                  }:  WithTranslation & {coinAInfo:CoinInfo<I>,coinBInfo:CoinInfo<I>,  tradeFloat: TradeFloat, isNew:boolean }) => {\n    // const {} = tradeCalcData;\n    // coinSell: keyof T, //namecoinBuy: keyof T\n    // const coinBInfo = tradeCalcData.buyCoinInfoMap[ coinBuy ];\n    // const coinAInfo = tradeCalcData.sellCoinInfoMap[ coinSell ];\n    const sellIconHasLoaded = useImage(coinAInfo?.icon ? coinAInfo?.icon : '').hasLoaded;\n    const buyIconHasLoaded = useImage(coinBInfo?.icon ? coinBInfo?.icon : '').hasLoaded;\n    const tradeFloatType = tradeFloat?.priceDollar === 0 ? FloatTag.none : tradeFloat?.priceDollar < 0 ? FloatTag.decrease : FloatTag.increase;\n    const {currency} = useSettings();\n    const change = (tradeFloat?.change && tradeFloat?.change !== Number.NaN) ? (tradeFloat.change*100).toFixed(2) + ' %' : '0.00%'\n    return <TradeTitleStyled custom={{chg: currency}}>{coinBInfo && coinAInfo ?\n        <Grid container  height={72}>\n            <Grid item xs={12} height={28}>\n                <Box display={'flex'} flexDirection={'row'} justifyContent={'flex-start'} alignItems={'center'}>\n                    {/*//TODO:*/}\n                    {/* src={tradeCalcData.sellCoinInfoMap[ sell.belong ].icon} />*/}\n                    {/*<Avatar alt={coinBInfo?.simpleName}  className={'icon-next'}*/}\n                    {/*   src=\"https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png\"/>*/}\n                    <Avatar variant=\"square\" alt={coinAInfo?.simpleName}\n                        // src={coinAInfo?.icon}\n                            src={sellIconHasLoaded ? coinAInfo?.icon : 'static/images/icon-default.png'}/>\n                    <Avatar variant=\"square\" alt={coinBInfo?.simpleName} className={'icon-next'}\n                        // src={coinBInfo?.icon}\n                            src={buyIconHasLoaded ? coinBInfo?.icon : 'static/images/icon-default.png'}/>\n                    <Typography variant={'h3'} component={'h3'} paddingRight={1}>\n                        <Typography component={'span'} title={'sell'} className={'next-coin'}>\n                            {coinAInfo?.simpleName}\n                        </Typography>\n                        <Typography component={'i'}>/</Typography>\n                        <Typography component={'span'} title={'buy'}>\n                            {coinBInfo.simpleName}\n                        </Typography>\n                    </Typography>\n                    {isNew ? <NewTagIcon/> : undefined}\n                </Box>\n            </Grid>\n            <Grid item xs={12} height={36} display={'flex'} flexDirection={'row'} justifyContent={'flex-start'}\n                  alignItems={'center'} className={'float-group'}>\n                {/*//TODO:*/}\n\n                <Typography variant={'h2'}>   {tradeFloat.priceDollar} {coinBInfo.simpleName}    </Typography>\n                <Box display={'flex'} flexDirection={'column'} alignItems={'flex-start'} justifyContent={'center'}\n                     className={'float-chart'}>\n                    <Typography variant={'body2'} component={'span'}\n                                className={'chart-change'}>{t('labelChange24h', {timeUnit: tradeFloat.timeUnit})}</Typography>\n                    <Typography variant={'h3'} component={'span'} className={`float-tag float-${tradeFloatType}`}>\n                        {`${(tradeFloat.priceDollar > 0 ? '+' : '') + tradeFloat.priceDollar} (${change})`}</Typography>\n                </Box>\n            </Grid>\n        </Grid> : <></>\n    } </TradeTitleStyled>\n}","import { Box, Grid, IconButton, Typography } from '@material-ui/core/';\nimport { ActiveIcon, CopyIcon, LinkIcon, PowerIcon, ReverseIcon } from 'static-resource';\nimport { Trans, withTranslation, WithTranslation } from 'react-i18next';\nimport styled from '@emotion/styled';\nimport { AccountInfoProps, Button, VipStyled, TypographyStrong } from './../';\nimport QRCode from 'qrcode.react';\n\n\nconst BoxStyled = styled(Box)`\n  // .MuiLink-root {\n  //   height: 2rem;\n  //   line-height: 2rem;\n  //   color: ${({theme}) => theme.colorBase.textSecondary};\n  //\n  //  \n  // }                                                               \n  &  .MuiButton-root{\n        width: var(--account-button-fixed-width);\n        height: var(--account-button-fixed-height);\n        text-overflow: ellipsis;\n        align-items: flex-end;\n        position: relative;\n        svg{\n          position: absolute;\n          top: ${({theme}) => theme.unit}px;\n          left: 50%;\n          margin-left: calc(var(--svg-size-large) / -2) ;\n        }\n  }\n  & .active{\n   \n  }\n  & .unlock{\n    svg{\n      color:  ${({theme}) => theme.colorBase.error};;\n    }\n  }\n  & .lock{\n    svg{\n      color: ${({theme}) => theme.colorBase.success};;\n    }\n  }\n` as typeof Box\n\nexport const AccountInfo = withTranslation('common')(({\n                                                          address,\n                                                          addressShort,\n                                                          level,\n                                                          connectBy,\n                                                          etherscanLink,\n                                                          onDisconnect,\n                                                          onSwitch,\n                                                          onLock,\n                                                          mainBtn,\n                                                          onCopy,\n                                                          // onViewQRCode,\n                                                          t\n                                                      }: AccountInfoProps & WithTranslation) => {\n\n    return <Grid container justifyContent={'space-between'} alignItems={'center'} >\n        <Grid item xs={12} display={'flex'} flexDirection={'column'} alignItems={'flex-start'} paddingX={3} >\n            <Typography component={'p'} display={'flex'} alignItems={'center'} justifyContent={'flex-start'}>\n                <Typography component={'span'} variant={'h4'}>{addressShort}</Typography>\n                {level ? <VipStyled component={'span'} variant={'body2'}\n                                    alignSelf={'flex-start'}>{level}</VipStyled> : undefined}\n            </Typography>\n            <Typography component={'h6'} variant={'body2'} marginTop={1}>\n                <Trans i18nKey=\"labelConnectBy\">\n                    Connected with <TypographyStrong component={'span'}>{connectBy}</TypographyStrong>.\n                </Trans>\n            </Typography>\n            <Box alignSelf={'center'} marginY={2} display={'flex'} alignItems={'center'} flexDirection={'column'}>\n                <QRCode value={address} size={160} style={{padding: 5, backgroundColor: '#fff'}} aria-label={`link:${address}`}/>\n                <Typography component={'span'} variant={'body2'} >\n                    <Typography variant={'body2'} marginBottom={3} marginTop={1}>\n                        {address}\n                        <IconButton size={'small'} data-clipboard-text={address} onClick={() => { if (onCopy) onCopy()} }><CopyIcon/></IconButton>\n                    </Typography>\n                </Typography>\n            </Box>\n            <BoxStyled component={'div'} display={'flex'} alignItems={'center'} justifyContent={'space-between'}\n                       marginTop={1} alignSelf={'stretch'}>\n                <Button href={etherscanLink} variant={'outlined'}  startIcon={<LinkIcon fontSize={'large'}/>}>\n                    <Typography variant={'body2'} marginTop={1/2} > {'Etherscan'} </Typography>\n                </Button>\n                <Button startIcon={<ReverseIcon fontSize={'large'}/>} onClick={()=>{\n                    if (onSwitch) onSwitch()}} variant={'outlined'} >\n                    <Typography variant={'body2'} marginTop={1/2}>  {t('labelSwitchAccount')} </Typography>\n                </Button>\n                <Button startIcon={<PowerIcon fontSize={'large'}/>} onClick={()=>{\n                    if (onDisconnect) onDisconnect()}} variant={'outlined'} >\n                    <Typography variant={'body2'} marginTop={1/2}>  {t('labelDisconnect')} </Typography>\n                </Button>\n                {mainBtn ? mainBtn : <Button className={'active'} variant={'contained'} startIcon={<ActiveIcon fontSize={'large'}/>}   onClick={() => {\n                    if (onLock) onLock()\n                }}  >\n                    <Typography variant={'body2'} marginTop={1/2}>  {t('labelActiveLayer2')} </Typography>\n                </Button>}\n            </BoxStyled>\n        </Grid>\n    </Grid>;\n\n})\n\n","import { Box, Grid, IconButton, Typography } from '@material-ui/core/';\nimport { getThousandFormattedNumbers, HideIcon, ViewIcon } from 'static-resource';\nimport React from 'react';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { AssetTitleProps } from './Interface';\nimport styled from '@emotion/styled';\nimport { TradeBtnStatus } from '../panel';\nimport { ButtonListRightStyled, Button} from './../';\n\nconst BoxStyled = styled(Box)`\n  color: ${({theme}) => theme.colorBase.textSecondary};\n\n  .MuiButtonBase-root {\n    color: ${({theme}) => theme.colorBase.textSecondary};\n  }\n` as typeof Box\n\nexport const AssetTitle = withTranslation('common')(({\n                                                         t,\n                                                         assetInfo,\n                                                         onShowWithdraw,\n                                                         onShowTransfer,\n                                                         onShowDeposit,\n                                                         btnShowDepositStatus,\n                                                         btnShowTransferStatus,\n                                                         btnShowWithdrawStatus,\n                                                     }: AssetTitleProps & WithTranslation) => {\n\n    const [isShow, setIsShow] = React.useState<boolean>(assetInfo.isShow ? assetInfo.isShow : true);\n    return <Grid container spacing={2} justifyContent={'space-between'} alignItems={'flex-start'}>\n        <Grid item xs={7} display={'flex'} flexDirection={'column'}>\n            <BoxStyled component={'p'} display={'flex'} alignItems={'center'} justifyContent={'flex-start'}\n                       marginTop={1} marginBottom={'16px'}>\n                <Typography component={'span'} variant={'body1'} paddingRight={3} color={'textSecondary'}>\n                    {t('labelAssetTitle')}\n                    {' '}\n                    <IconButton\n                        size={'small'}\n                        // color={'secondary'}\n                        onClick={() => setIsShow(!isShow)}\n                        aria-label={t('labelShowAccountInfo')}>\n                        {isShow ? <HideIcon/> : <ViewIcon/>}\n                    </IconButton>\n                </Typography>\n\n            </BoxStyled>\n\n            <Typography component={'p'} display={'flex'} alignItems={'center'} justifyContent={'flex-start'} marginTop={1}>\n                <Typography component={'span'} paddingRight={1} variant={'h1'}> {assetInfo.priceTag} </Typography>\n                {isShow ? <Typography component={'span'}\n                                      variant={'h1'}>{getThousandFormattedNumbers(assetInfo.totalAsset)}</Typography> :\n                    <Typography component={'span'}\n                                variant={'h1'}>&#10033;&#10033;&#10033;&#10033;.&#10033;&#10033;&#10033;</Typography>}\n            </Typography>\n        </Grid>\n        <ButtonListRightStyled item xs={5} display={'flex'} flexDirection={'row'} justifyContent={'flex-end'}>\n            <Button variant={'contained'} size={'small'} color={'primary'}\n                    loading={btnShowDepositStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={btnShowDepositStatus === TradeBtnStatus.DISABLED ? true : false}\n                    onClick={onShowDeposit}>{t('labelBtnDeposit')}</Button>\n            <Button variant={'outlined'} size={'medium'} color={'primary'}\n                    loading={btnShowTransferStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={btnShowTransferStatus === TradeBtnStatus.DISABLED ? true : false}\n                    onClick={onShowTransfer}>{t('labelBtnTransfer')}</Button>\n            <Button variant={'outlined'} size={'medium'} color={'secondary'}\n                    loading={btnShowWithdrawStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={btnShowWithdrawStatus === TradeBtnStatus.DISABLED ? true : false}\n                    onClick={onShowWithdraw}>{t('labelBtnWithdraw')}</Button>\n        </ButtonListRightStyled>\n    </Grid>\n})\n\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nimport { PieChart, Pie, Sector, Tooltip, ResponsiveContainer, Legend, Cell } from 'recharts';\n\nconst colors = [\n    \"#00BBA8\",\n    \"#ED9526\",\n    \"#1C60FF\",\n    \"#FFCA28\",\n    \"#63992D\",\n    \"#FF5677\",\n];\n\nconst StyledLegendItem = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 170px;\n    margin-bottom: 8px;\n    color: ${({theme}) => `${theme.colorBase.textPrimary}`};\n    font-size: 14px;\n\n    &>span:first-of-type {\n        display: flex;\n\n        &>div:first-of-type {\n            margin-right: 4px;\n        }\n    }\n`\n\nconst renderActiveShape = ({\n    cx,\n    cy, \n    innerRadius, \n    outerRadius, \n    startAngle, \n    endAngle,\n    fill \n}: any) => (\n    <g>\n        <Sector\n            cx={cx}\n            cy={cy}\n            innerRadius={innerRadius}\n            outerRadius={outerRadius + 5}\n            startAngle={startAngle}\n            endAngle={endAngle}\n            fill={fill}\n            // cornerRadius={2}\n        />\n    </g>\n);\n\nexport interface DoughnutChartProps {\n    data?: {\n        name: string;\n        value: number;\n    }[]\n}\n\nconst renderLegend = ({ payload }: any) => (\n    <ul style={{ marginRight: 26 }}>\n        {payload.map((entry: any, index: number) => {\n            const { color, value, payload: { value: amount } } = entry\n            const StyledColoredRect = styled.div`\n                width: 12px;\n                height: 12px;\n                background-color: ${color}\n            `\n            return (\n                <li key={`item-${index}`}>\n                    <StyledLegendItem>\n                        <span><StyledColoredRect />{value}</span>\n                        <span>${amount.toFixed(2)}</span>\n                    </StyledLegendItem>\n                </li>\n            )\n        })}\n    </ul>\n);\n\nexport const DoughnutChart = ({ data }: DoughnutChartProps) => {\n\tconst [activeIndex, setActiveIndex] = React.useState(undefined)\n\n    const onPieEnter = React.useCallback((_, index) => {\n        setActiveIndex(index)\n    }, [])\n\n    const onPieLeave = React.useCallback(() => {\n        setActiveIndex(undefined)\n    }, [])\n\n    const getFormattedData = React.useCallback(() => {\n        if (!data || !data.length) return []\n        if (data.length < 7) return data\n        data.sort((a, b) => b.value - a.value)\n        const others = data.slice(5, data.length).reduce((a, b) => ({\n            name: 'Others',\n            value: a.value + b.value\n        }))\n        const result = data.slice(0, 5).concat([others])\n        return result\n    }, [data])\n\n  \treturn (\n        <ResponsiveContainer debounce={1} width={'99%'}>\n            <PieChart>\n                <Pie \n                    dataKey={'value'}\n                    activeIndex={activeIndex}\n                    activeShape={renderActiveShape} \n                    data={data}\n                    cx={'30%'}\n                    // cy={200}\n                    innerRadius={45}\n                    outerRadius={55}\n                    fill=\"#8884d8\"\n                    stroke=\"none\"\n                    radius={5}\n                    paddingAngle={5}\n                    minAngle={2}\n                    animationEasing={'ease-in-out'}\n                    animationDuration={1500}\n                    onMouseEnter={onPieEnter}\n                    onMouseLeave={onPieLeave}\n                >\n                    {getFormattedData().map((entry, index) => (\n                        <Cell key={entry.name} fill={colors[index]} />\n                    ))}\n                </Pie>\n                <Tooltip\n                    formatter={(value: any, name: any) => ([`$${value}`, `${name}`])}\n                    contentStyle={{\n                        backgroundColor: 'rgba(0,0,0,.44)',\n                        border: 'none'\n                    }}\n                    itemStyle={{\n                        color: '#FFFFFF'\n                    }}\n                />\n                <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" content={renderLegend} />\n            </PieChart>\n        </ResponsiveContainer>\n    );\n}\n","import { ChartType } from '../';\n\nexport interface IOrigDataItem {\n\ttimeStamp: number\n\tlow: number\n\thigh: number\n\topen: number\n\tclose: number\n\tvolume: number\n}\n\n\nexport interface IDataItem {\n\ttimeStamp: number\n\tlow: number\n\thigh: number\n\topen: number\n\tclose: number\n\tvolume: number\n\tsign: 1 | -1\n}\n\nexport interface GetSignParams {\n\ttype: keyof typeof ChartType\n\tdata: any\n\tdataIndex: number\n\topen: number\n\tclose: number\n\tcloseDimIdx: number\n}\n\n// judge trend\nconst getSign = ({\n\ttype,\n\tdata,\n\tdataIndex,\n\topen,\n\tclose,\n\tcloseDimIdx,\n}: GetSignParams): IDataItem['sign'] => {\n\tif (type === ChartType.Trend) {\n\t\t// compare with last day's close\n\t\treturn close >= data[data.length - 1].close ? 1 : -1\n\t}\n\tlet sign\n\tif (open > close) {\n\t\tsign = -1\n\t} else if (open < close) {\n\t\tsign = 1\n\t} else {\n\t\tsign =\n\t\t\tdataIndex > 0\n\t\t\t\t? // If close === open, compare with close of last record\n\t\t\t\t  data[dataIndex - 1][closeDimIdx] <= close\n\t\t\t\t\t? 1\n\t\t\t\t\t: -1\n\t\t\t\t: // No record of previous, set to be positive\n\t\t\t\t  1\n\t}\n\n\treturn sign as IDataItem['sign']\n}\n\nexport const getRenderData = (\n\ttype: keyof typeof ChartType,\n\tdata?: IOrigDataItem[]\n): IDataItem[] => {\n\tif (!data || !Array.isArray(data)) return []\n\t// default index of close price\n\tconst closeDimIdx = 3\n\n\treturn data.map((o, index) => ({\n\t\t...o,\n\t\tsign: getSign({\n\t\t\ttype,\n\t\t\tdata: data,\n\t\t\tdataIndex: index,\n\t\t\topen: o.open,\n\t\t\tclose: o.close,\n\t\t\tcloseDimIdx,\n\t\t}),\n\t}))\n}\n\nexport interface IGetDepthDataParams {\n\tbidsPrices: number[]\n\tbidsAmtTotals: number[]\n\tasksPrices: number[]\n\tasksAmtTotals: number[]\n}\n\nexport const getDepthData = (data?: IGetDepthDataParams | any) => {\n\tif (!data || Array.isArray(data)) return undefined\n\tconst { bidsPrices, asksPrices, bidsAmtTotals, asksAmtTotals } = data\n\tconst formattedBidsPrices = bidsPrices.map((price: number) => ({\n\t\ttype: 'bids',\n\t\tprice\n\t}))\n\tconst formattedAsksPrices = asksPrices.map((price: number) => ({\n\t\ttype: 'asks',\n\t\tprice,\n\t}))\n\tconst jointPrices = formattedBidsPrices.concat(formattedAsksPrices)\n\tconst jointAmtTotals = bidsAmtTotals.concat(asksAmtTotals)\n\n\treturn jointAmtTotals.map((amount: number, index: number) =>\n\t\tjointPrices[index].type === 'bids'\n\t\t\t? {\n\t\t\t\t\tprice: jointPrices[index].price,\n\t\t\t\t\tbids: amount,\n\t\t\t  }\n\t\t\t: {\n\t\t\t\t\tprice: jointPrices[index].price,\n\t\t\t\t\tasks: amount,\n\t\t\t  }\n\t)\n}\n","import { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport * as React from \"react\";\nimport {\n    elderRay,\n    ema,\n    sma,\n    discontinuousTimeScaleProviderBuilder,\n    Chart,\n    ChartCanvas,\n    CurrentCoordinate,\n    BarSeries,\n    CandlestickSeries,\n    ElderRaySeries,\n    LineSeries,\n    MovingAverageTooltip,\n    OHLCTooltip,\n    SingleValueTooltip,\n    lastVisibleItemBasedZoomAnchor,\n    XAxis,\n    YAxis,\n    CrossHairCursor,\n    EdgeIndicator,\n    MouseCoordinateX,\n    MouseCoordinateY,\n    ZoomButtons,\n    withDeviceRatio,\n    withSize,\n    BollingerSeries,\n    BollingerBandTooltip,\n    bollingerBand,\n    MACDSeries,\n    MACDTooltip,\n    // macd\n} from \"react-financial-charts\";\nimport { macd } from \"@react-financial-charts/indicators\";\n\nenum CandleStickFill {\n    up = '#00BBA8',\n    down = '#fb3838'\n}\n\nexport interface IOHLCData {\n    close: number;\n    date: Date;\n    high: number;\n    low: number;\n    open: number;\n    volume: number;\n}\n\nexport interface StockChartProps {\n    readonly data: IOHLCData[];\n    readonly height: number;\n    readonly dateTimeFormat?: string;\n    readonly width: number;\n    readonly ratio: number;\n}\n\nclass StockChart extends React.Component<StockChartProps> {\n    private readonly margin = { left: 0, right: 48, top: 0, bottom: 24 };\n    private readonly pricesDisplayFormat = format(\".2f\");\n    private readonly xScaleProvider = discontinuousTimeScaleProviderBuilder().inputDateAccessor(\n        (d: IOHLCData) => d.date,\n    );\n\n    private readonly macdAppearance = {\n        fillStyle: {\n            divergence: \"#4682B4\",\n        },\n        strokeStyle: {\n            macd: \"#FF0000\",\n            signal: \"#00F300\",\n            zero: \"yellow\",\n        },\n    };\n\n    // private readonly macdCalculator = macd()\n    //     .id(6)\n    //     .options({\n    //         fast: 12,\n    //         signal: 9,\n    //         slow: 26,\n    //     })\n    //     .merge((d: any, c: any) => {\n    //         d.macd = c;\n    //     })\n    //     .accessor((d: any) => d.macd);\n\n    public render() {\n        const { data: initialData, dateTimeFormat = \"%d %b\", height, ratio, width } = this.props;\n        console.log(initialData)\n        // simple moving average\n        const macdCalculator = macd()\n            // .id(6)\n            .options({\n                fast: 12,\n                signal: 9,\n                slow: 26,\n            })\n            .merge((d: any, c: any) => {\n                d.macd = c;\n            })\n            .accessor((d: any) => d.macd);\n\n        const sma5 = sma()\n            .id(1)\n            .options({ windowSize: 5 })\n            .merge((d: any, c: any) => {\n                d.sma5 = c;\n            })\n            .accessor((d: any) => d.sma5);\n\n        const sma10 = sma()\n            .id(2)\n            .options({ windowSize: 10 })\n            .merge((d: any, c: any) => {\n                d.sma10 = c;\n            })\n            .accessor((d: any) => d.sma10);\n\n        const sma30 = sma()\n            .id(3)\n            .options({ windowSize: 30 })\n            .merge((d: any, c: any) => {\n                d.sma30 = c;\n            })\n            .accessor((d: any) => d.sma30);\n\n        const sma60 = sma()\n            .id(4)\n            .options({ windowSize: 60 })\n            .merge((d: any, c: any) => {\n                d.sma60 = c;\n            })\n            .accessor((d: any) => d.sma60);\n\n        const bollinger = bollingerBand()\n            .id(5)\n            .merge((d: any, c: any) => {\n                d.bb = c;\n            })\n            .accessor((d: any) => d.bb);\n\n        // const elder = elderRay();\n\n        const ema26 = ema()\n            .id(6)\n            .options({ windowSize: 26 })\n            .merge((d: any, c: any) => {\n                d.ema26 = c;\n            })  \n            .accessor((d: any) => d.ema26);\n\n        const ema12 = ema()\n            .id(7)\n            .options({ windowSize: 12 })\n            .merge((d: any, c: any) => {\n                d.ema12 = c;\n            })\n            .accessor((d: any) => d.ema12);\n\n        const macdYAccessor = macdCalculator.accessor();\n        const macdOptions = macdCalculator.options();\n\n        // const calculatedData = macdCalculator(ema12(ema26(sma60(sma30(sma10(sma5(bollinger(initialData))))))));\n        const calculatedData = macdCalculator(ema12(ema26(initialData)));\n\n        console.log(calculatedData)\n\n        const { margin, xScaleProvider } = this;\n\n        const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(calculatedData);\n\n        const max = xAccessor(data[data.length - 1]);\n        const min = xAccessor(data[Math.max(0, data.length - 100)]);\n        const xExtents = [min, max + 5];\n\n        const gridHeight = height - margin.top - margin.bottom;\n\n        // const elderRayHeight = 100;\n        // const elderRayOrigin = (_: number, h: number) => [0, h - elderRayHeight];\n        // const barChartHeight = gridHeight / 4;\n        // const barChartOrigin = (_: number, h: number) => [0, h - barChartHeight - elderRayHeight];\n        // const chartHeight = gridHeight - elderRayHeight;\n        const volumeHeight = 100;\n        const MACDHeight = 100;\n        const chartHeight = gridHeight - volumeHeight - MACDHeight;\n\n        const timeDisplayFormat = timeFormat(dateTimeFormat);\n\n        const bbStroke = {\n            top: \"#FF01FF\",\n            middle: \"#CC0165\",\n            bottom: \"#01CCCB\",\n        };\n\n        return (\n            <ChartCanvas\n                height={height}\n                ratio={ratio}\n                width={width}\n                margin={margin}\n                data={data}\n                displayXAccessor={displayXAccessor}\n                seriesName=\"Data\"\n                xScale={xScale}\n                xAccessor={xAccessor}\n                xExtents={xExtents}\n                zoomAnchor={lastVisibleItemBasedZoomAnchor}\n            >\n                <Chart id={1} height={chartHeight} yExtents={this.candleChartExtents} padding={{ top: 10, bottom: 20 }}>\n                    <XAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} showTicks={false} showTickLabel={false} tickLabelFill={'rgba(255, 255, 255, 0.4)'} strokeStyle={'rgba(255, 255, 255, 0.3)'} />\n                    <YAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} tickFormat={this.pricesDisplayFormat} tickLabelFill={'rgba(255, 255, 255, 0.4)'} strokeStyle={'rgba(255, 255, 255, 0.3)'} />\n                    <CandlestickSeries fill={this.candleStickColor} />\n                    <LineSeries yAccessor={sma5.accessor()} strokeStyle={sma5.stroke()} />\n                    <CurrentCoordinate yAccessor={sma5.accessor()} fillStyle={sma5.stroke()} />\n                    <LineSeries yAccessor={sma10.accessor()} strokeStyle={sma10.stroke()} />\n                    <CurrentCoordinate yAccessor={sma10.accessor()} fillStyle={sma10.stroke()} />\n                    <LineSeries yAccessor={sma30.accessor()} strokeStyle={sma30.stroke()} />\n                    <CurrentCoordinate yAccessor={sma30.accessor()} fillStyle={sma30.stroke()} />\n                    <LineSeries yAccessor={sma60.accessor()} strokeStyle={sma60.stroke()} />\n                    <CurrentCoordinate yAccessor={sma60.accessor()} fillStyle={sma60.stroke()} />\n                    <MouseCoordinateY rectWidth={margin.right} displayFormat={this.pricesDisplayFormat} />\n                    <EdgeIndicator\n                        itemType=\"last\"\n                        rectWidth={margin.right}\n                        fill={this.openCloseColor}\n                        lineStroke={this.openCloseColor}\n                        displayFormat={this.pricesDisplayFormat}\n                        yAccessor={this.yEdgeIndicator}\n                    />\n                    <MovingAverageTooltip\n                        origin={[8, 24]}\n                        textFill={'#FFF'}\n                        options={[\n                            {\n                                yAccessor: sma5.accessor(),\n                                type: \"MA\",\n                                stroke: sma5.stroke(),\n                                windowSize: sma5.options().windowSize,\n                            },\n                            {\n                                yAccessor: sma10.accessor(),\n                                type: \"MA\",\n                                stroke: sma10.stroke(),\n                                windowSize: sma10.options().windowSize,\n                            },\n                            {\n                                yAccessor: sma30.accessor(),\n                                type: \"MA\",\n                                stroke: sma30.stroke(),\n                                windowSize: sma30.options().windowSize,\n                            },\n                            {\n                                yAccessor: sma60.accessor(),\n                                type: \"MA\",\n                                stroke: sma60.stroke(),\n                                windowSize: sma60.options().windowSize,\n                            },\n                        ]}\n                    />\n                    {/* <ZoomButtons /> */}\n                    <OHLCTooltip origin={[8, 16]} textFill={'#FFF'} />\n                    <BollingerSeries\n\t\t\t\t\t\tstrokeStyle={bbStroke}\n\t\t\t\t\t/>\n                    <BollingerBandTooltip\n                        origin={[8, 64]}\n\t\t\t\t\t\tyAccessor={d => d.bb}\n                        options={bollinger.options()}\n                        textFill={'#fff'}\n                    />\n                </Chart>\n                {/* <Chart id={2} origin={(w, h) => [0, h - 200]} height={100} yExtents={d => d.volume}>\n\t\t\t\t\t<XAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} axisAt=\"bottom\" orient=\"bottom\" tickLabelFill={'rgba(255, 255, 255, 0.4)'} strokeStyle={'rgba(255, 255, 255, 0.3)'} />\n\t\t\t\t\t<YAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} axisAt=\"right\" orient=\"right\" ticks={5} tickFormat={format(\".2s\")} tickLabelFill={'rgba(255, 255, 255, 0.4)'} strokeStyle={'rgba(255, 255, 255, 0.3)'} />\n\t\t\t\t\t<MouseCoordinateX displayFormat={timeDisplayFormat} />\n                    <MouseCoordinateY rectWidth={margin.right} displayFormat={this.pricesDisplayFormat} />\n                    <BarSeries yAccessor={this.volumeSeries} fillStyle={this.volumeColor} />\n                    <SingleValueTooltip\n                        yAccessor={d => d.volume}\n                        yLabel={\"VOL\"}\n                        valueFill={'rgba(255, 255, 255, 0.8)'}\n                        yDisplayFormat={(d: any) => this.pricesDisplayFormat(d)}\n                        origin={[8, 16]}\n                    />\n\t\t\t\t</Chart> */}\n                <Chart id={8} origin={(w, h) => [0, h - 100]} height={100} yExtents={macdYAccessor}>\n                    <XAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} axisAt=\"bottom\" orient=\"bottom\" tickLabelFill={'rgba(255, 255, 255, 0.4)'} strokeStyle={'rgba(255, 255, 255, 0.3)'} />\n\t\t\t\t\t<YAxis showGridLines gridLinesStrokeStyle={'rgba(255, 255, 255, 0.1)'} axisAt=\"right\" orient=\"right\" ticks={5} tickFormat={format(\".2s\")} tickLabelFill={'rgba(255, 255, 255, 0.4)'} strokeStyle={'rgba(255, 255, 255, 0.3)'} />\n                    <MouseCoordinateX displayFormat={timeDisplayFormat} />\n                    <MouseCoordinateY rectWidth={margin.right} displayFormat={this.pricesDisplayFormat} />\n                    <MACDSeries yAccessor={macdYAccessor} {...this.macdAppearance} />\n                    <MACDTooltip\n                        origin={[8, 16]}\n                        appearance={this.macdAppearance}\n                        options={macdOptions}\n                        yAccessor={macdYAccessor}\n                    />\n                </Chart>\n                <CrossHairCursor strokeStyle={'#fff'} />\n            </ChartCanvas>\n        );\n    }\n\n    private readonly barChartExtents = (data: IOHLCData) => {\n        return data.volume;\n    };\n\n    private readonly candleChartExtents = (data: any) => {\n        return [data.high, data.low];\n    };\n\n    private readonly yEdgeIndicator = (data: IOHLCData) => {\n        return data.close;\n    };\n\n    private readonly candleStickColor = (data: IOHLCData) => data.close > data.open ? CandleStickFill.up : CandleStickFill.down\n\n    private readonly volumeColor = (data: IOHLCData) => {\n        return data.close > data.open ? \"rgba(38, 166, 154, 0.3)\" : \"rgba(239, 83, 80, 0.3)\";\n    };\n\n    private readonly volumeSeries = (data: IOHLCData) => {\n        return data.volume;\n    };\n\n    private readonly openCloseColor = (data: IOHLCData) => {\n        return data.close > data.open ? \"#26a69a\" : \"#ef5350\";\n    };\n}\n\nexport const DayilyStockChart = withSize({ style: { minHeight: 600 } })(withDeviceRatio()(StockChart));\n","import { useState, useCallback } from 'react'\nimport {\n\tResponsiveContainer,\n\tLine,\n\tComposedChart,\n\tArea,\n\tXAxis,\n\tYAxis,\n\tTooltip,\n} from 'recharts'\nimport moment from 'moment'\nimport { ScaleAreaChartProps } from '../ScaleAreaChart'\nimport { getRenderData } from '../data'\n\nconst DEFAULT_YAXIS_DOMAIN = 0.1\nconst UP_COLOR = '#00BBA8'\nconst DOWN_COLOR = '#fb3838'\n\n// export interface ScaleAreaChartProps {\n// \ttype: 'kline' | 'depth' | 'trend'\n// \tdata: IOrigDataItem[]\n// \thandleMove?: (props: any) => void\n// \tyAxisDomainPercent?: number // defualt 0.1\n// \triseColor?: 'green' | 'red'\n// }\n\nconst TrendChart = ({\n\ttype,\n\tdata,\n\tyAxisDomainPercent = DEFAULT_YAXIS_DOMAIN,\n\thandleMove,\n\triseColor = 'green',\n\tshowTooltip = true,\n\tshowArea = true,\n}: ScaleAreaChartProps) => {\n\tconst [priceTrend, setPriceTrend] = useState<'up' | 'down'>('up')\n\t// current chart xAxis index\n\tconst [currentIndex, setCurrentIndex] = useState(-1)\n\tconst renderData = getRenderData(type, data)\n\tconst trendColor =\n\t\triseColor === 'green'\n\t\t\t? priceTrend === 'up'\n\t\t\t\t? UP_COLOR\n\t\t\t\t: DOWN_COLOR\n\t\t\t: priceTrend === 'up'\n\t\t\t? DOWN_COLOR\n\t\t\t: UP_COLOR\n\tconst hasData = data && Array.isArray(data) && !!data.length\n\n\tconst handleMousemove = useCallback(\n\t\t(props: any) => {\n\t\t\tif (!hasData) return\n\t\t\tconst { activeTooltipIndex } = props\n\t\t\t// avoid duplicated event\n\t\t\tconst isUpdate = activeTooltipIndex !== currentIndex\n\t\t\tif (Number.isFinite(activeTooltipIndex) && isUpdate) {\n\t\t\t\tsetCurrentIndex(activeTooltipIndex)\n\t\t\t\tif (\n\t\t\t\t\trenderData[activeTooltipIndex] &&\n\t\t\t\t\trenderData[activeTooltipIndex].sign\n\t\t\t\t) {\n\t\t\t\t\tsetPriceTrend(\n\t\t\t\t\t\trenderData[activeTooltipIndex].sign === 1\n\t\t\t\t\t\t\t? 'up'\n\t\t\t\t\t\t\t: 'down'\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tif (handleMove) {\n\t\t\t\t\thandleMove(renderData[activeTooltipIndex])\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[renderData, handleMove, currentIndex, hasData]\n\t)\n\n\tconst renderTooltipContent = useCallback((props: any) => {\n\t\tif (!hasData) return\n\t\tif (\n\t\t\t!props.payload ||\n\t\t\t!props.payload.length ||\n\t\t\t!props.payload[0].payload.timeStamp\n\t\t)\n\t\t\treturn <span></span>\n\t\tconst { timeStamp } = props.payload[0].payload\n\t\treturn (\n\t\t\t<span style={{ fontSize: 14 }}>\n\t\t\t\t{moment(timeStamp).format('hh:mm A M[月]D[日]')}\n\t\t\t</span>\n\t\t)\n\t}, [hasData])\n\n\treturn (\n\t\t<ResponsiveContainer debounce={1} width={'99%'}>\n\t\t\t<ComposedChart data={renderData} onMouseMove={showTooltip && handleMousemove}>\n\t\t\t\t<defs>\n\t\t\t\t\t<linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n\t\t\t\t\t\t{/* <stop offset=\"5%\" stopColor=\"rgba(1, 187, 168, 0.4)\" stopOpacity={0.8}/> */}\n\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\toffset=\"5%\"\n\t\t\t\t\t\t\tstopColor={trendColor}\n\t\t\t\t\t\t\tstopOpacity={0.3}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\toffset=\"90%\"\n\t\t\t\t\t\t\tstopColor={trendColor}\n\t\t\t\t\t\t\tstopOpacity={0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</linearGradient>\n\t\t\t\t</defs>\n\t\t\t\t<XAxis\n\t\t\t\t\thide={true}\n\t\t\t\t\tdataKey=\"time\" /* tickFormatter={convertDate} */\n\t\t\t\t/>\n\t\t\t\t<YAxis\n\t\t\t\t\thide={true}\n\t\t\t\t\tdomain={[\n\t\t\t\t\t\t(dataMin: number) => dataMin * (1 - yAxisDomainPercent),\n\t\t\t\t\t\t(dataMax: number) => dataMax * (1 + yAxisDomainPercent),\n\t\t\t\t\t]} /* tickFormatter={convertValue} */\n\t\t\t\t/>\n\t\t\t\t{hasData && showTooltip && (\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\tposition={{ y: 50 }}\n\t\t\t\t\t\tcontent={(props) => renderTooltipContent(props)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Line\n\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\tdataKey=\"close\"\n\t\t\t\t\tstroke={trendColor}\n\t\t\t\t\tdot={false}\n\t\t\t\t\tlegendType=\"none\"\n\t\t\t\t\t// isAnimationActive={false}\n\t\t\t\t/>\n\t\t\t\t{showArea && (\n\t\t\t\t\t<Area\n\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\tdataKey=\"close\"\n\t\t\t\t\t\tstroke=\"false\"\n\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\tfillOpacity={1}\n\t\t\t\t\t\tfill=\"url(#colorUv)\"\n\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ComposedChart>\n\t\t</ResponsiveContainer>\n\t)\n}\n\nexport default TrendChart\n","import { useCallback, useState } from 'react'\n// import { ScaleAreaChartProps } from '../ScaleAreaChart'\nimport { getDepthData } from '../data'\nimport {\n\tResponsiveContainer,\n\tComposedChart,\n\tTooltip,\n\tXAxis,\n\tYAxis,\n\tLine,\n\tArea,\n} from 'recharts'\n\nconst ASKS_COLOR = '#fb3838'\nconst BIDS_COLOR = '#00BBA8'\nconst YAXIS_DOMAIN = 0.1\n\nexport interface DepthData {\n\t// timeStamp: number\n\tbidsPrices: any[]\n\tbidsAmtTotals: any[]\n\tasksPrices: any[]\n\tasksAmtTotals: any[]\n}\n\nexport interface DepthProps {\n\tdata?: DepthData\n\thandleMove?: (props: {\n\t\ttype: 'asks' | 'bids'\n\t\tprice: number\n\t\tamount: number\n\t}) => void\n\tyAxisDomainPercent?: number\n\triseColor?: 'green' | 'red'\n}\n\nconst DepthChart = ({\n\tdata,\n\thandleMove,\n\tyAxisDomainPercent = YAXIS_DOMAIN,\n\triseColor = 'green',\n}: DepthProps) => {\n\tconst [currentIndex, setCurrentIndex] = useState(-1)\n\n\tconst asksColor = riseColor === 'green' ? ASKS_COLOR : BIDS_COLOR\n\tconst bidsColor = riseColor === 'green' ? BIDS_COLOR : ASKS_COLOR\n\n\tconst hasData = data && Array.isArray(data) && !!data.length\n\n\tconst renderTooltipContent = useCallback((props) => {\n\t\t// no data\n\t\tif (!hasData) return ''\n\t\tif (props.payload && !!props.payload.length && props.payload[0].payload) {\n\t\t\tconst { payload } = props.payload[0]\n\t\t\tconst { price } = payload\n\t\t\tif (payload.bids) {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div>price: {price}</div>\n\t\t\t\t\t\t<div>amount: {payload.bids}</div>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif (payload.asks) {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div>price: {price}</div>\n\t\t\t\t\t\t<div>amount: {payload.asks}</div>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\treturn <span></span>\n\t}, [hasData])\n\n\tconst handleMousemove = useCallback(\n\t\t(props: any) => {\n\t\t\t// no data\n\t\t\tif (!hasData) return\n\t\t\tconst { activeTooltipIndex } = props\n\t\t\t// avoid duplicated event\n\t\t\tconst isUpdate = activeTooltipIndex !== currentIndex\n\t\t\tif (Number.isFinite(activeTooltipIndex) && isUpdate) {\n\t\t\t\tsetCurrentIndex(activeTooltipIndex)\n\t\t\t\tconst { payload, name } = props.activePayload[0]\n\t\t\t\tif (handleMove) {\n\t\t\t\t\thandleMove({\n\t\t\t\t\t\tprice: payload.price,\n\t\t\t\t\t\ttype: name,\n\t\t\t\t\t\tamount: payload.bids || payload.asks,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[handleMove, currentIndex, hasData]\n\t)\n\n\tconst formattedData = getDepthData(data)\n\n\treturn (\n\t\t<ResponsiveContainer width={'99%'}>\n\t\t\t<ComposedChart data={formattedData} onMouseMove={handleMousemove}>\n\t\t\t\t<defs>\n\t\t\t\t\t<linearGradient id=\"colorAsks\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\toffset=\"5%\"\n\t\t\t\t\t\t\tstopColor={asksColor}\n\t\t\t\t\t\t\tstopOpacity={0.3}\n\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\toffset=\"90%\"\n\t\t\t\t\t\t\tstopColor={asksColor}\n\t\t\t\t\t\t\tstopOpacity={0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</linearGradient>\n\t\t\t\t\t<linearGradient id=\"colorBids\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\toffset=\"5%\"\n\t\t\t\t\t\t\tstopColor={bidsColor}\n\t\t\t\t\t\t\tstopOpacity={0.3}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<stop\n\t\t\t\t\t\t\toffset=\"90%\"\n\t\t\t\t\t\t\tstopColor={bidsColor}\n\t\t\t\t\t\t\tstopOpacity={0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</linearGradient>\n\t\t\t\t</defs>\n\t\t\t\t<XAxis\n\t\t\t\t\tdataKey=\"price\"\n\t\t\t\t\thide={true}\n\t\t\t\t\ttype=\"category\"\n\t\t\t\t\tallowDuplicatedCategory\n\t\t\t\t/>\n\t\t\t\t<YAxis\n\t\t\t\t\thide={true}\n\t\t\t\t\tdomain={[\n\t\t\t\t\t\t(dataMin: number) => dataMin * (1 - yAxisDomainPercent),\n\t\t\t\t\t\t(dataMax: number) => dataMax * (1 + yAxisDomainPercent),\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t{hasData && (\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\tposition={{ y: 50 }}\n\t\t\t\t\t\tcontent={(props) => renderTooltipContent(props)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Line\n\t\t\t\t\ttype=\"step\"\n\t\t\t\t\tdataKey=\"asks\"\n\t\t\t\t\tstroke={asksColor}\n\t\t\t\t\tdot={false}\n\t\t\t\t\tanimationDuration={500}\n\t\t\t\t/>\n\t\t\t\t<Line\n\t\t\t\t\ttype=\"step\"\n\t\t\t\t\tdataKey=\"bids\"\n\t\t\t\t\tstroke={bidsColor}\n\t\t\t\t\tdot={false}\n\t\t\t\t\tanimationDuration={500}\n\t\t\t\t/>\n\t\t\t\t<Area\n\t\t\t\t\ttype=\"step\"\n\t\t\t\t\tdataKey=\"asks\"\n\t\t\t\t\tstroke=\"false\"\n\t\t\t\t\tfill=\"url(#colorAsks)\"\n\t\t\t\t\tanimationDuration={500}\n\t\t\t\t/>\n\t\t\t\t<Area\n\t\t\t\t\ttype=\"step\"\n\t\t\t\t\tdataKey=\"bids\"\n\t\t\t\t\tstroke=\"false\"\n\t\t\t\t\tfill=\"url(#colorBids)\"\n\t\t\t\t\tanimationDuration={500}\n\t\t\t\t/>\n\t\t\t</ComposedChart>\n\t\t</ResponsiveContainer>\n\t)\n}\n\nexport default DepthChart\n","// import {WithTranslation, withTranslation} from \"react-i18next\";\n// import styled from \"@emotion/styled\";\n// import { IOrigDataItem, IGetDepthDataParams } from './data'\nimport TrendChart from './TrendChart'\nimport DepthChart from './DepthChart'\nimport { ChartType } from '../';\n\nimport { DayilyStockChart } from './KlineChart'\n\nexport interface ScaleAreaChartProps {\n\ttype: ChartType\n\tdata: any\n\thandleMove?: (props: any) => void\n\tyAxisDomainPercent?: number // defualt 0.1\n\triseColor?: 'green' | 'red' // TODO: add user habit color\n\tshowTooltip?: boolean\n\tshowArea?: boolean\n}\n\nexport const ScaleAreaChart = (props: ScaleAreaChartProps) => {\n\tswitch (props.type) {\n\t\tcase ChartType.Trend:\n\t\t\treturn <TrendChart {...props} />\n\t\tcase ChartType.Depth:\n\t\t\treturn <DepthChart {...props} />\n\t\tcase ChartType.Kline:\n\t\t\treturn <DayilyStockChart data={props.data} />\n\t\tdefault:\n\t\t\treturn <span>prop \"type\" is not avaible for current chart</span>\n\t}\n}\n","import { WithTranslation } from 'react-i18next';\nimport { CoinKey, EmptyValueTag, getThousandFormattedNumbers } from 'static-resource';\nimport { Box, BoxProps, Grid } from '@material-ui/core';\nimport { Typography } from '@material-ui/core/';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { floatTag, MarketBlockProps, useSettings } from './../../index';\nimport { ScaleAreaChart } from '../charts/scaleAreaChart'\nimport { ChartType } from '../charts'\n\ntype StyledProps = {\n    custom: any\n}\n//${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\nconst MarketBlockStyled = styled(Box)<StyledProps>`\n\n  & {\n    background-color: ${({theme}) => theme.colorBase.background().default};\n  \n    border-radius: ${({ theme }) => theme.unit}px;\n\n  }\n \n  // &:not(:last-of-type){\n    //   margin-right: ${({theme}) => theme.unit * 3}px;\n  //   background-color: chocolate;\n  // }\n  ${({theme, custom}) => floatTag({theme, custom})};\n\n  .left-block {\n    min-width: 76px;\n    max-width: 84px;\n  }\n\n  .float-group span {\n    display: flex;\n    align-items: flex-end;\n  }\n\n` as React.ElementType<StyledProps & BoxProps>;\n\nexport const MarketBlock = <C extends CoinKey<I>, I>({coinAInfo, t, coinBInfo, tradeFloat, chartData = []}:  & WithTranslation & MarketBlockProps<C>) => {\n    const {upColor} = useSettings();\n    // const sellIconHasLoaded = useImage(coinBInfo?.icon ? coinBInfo?.icon : '').hasLoaded;\n    // const buyIconHasLoaded = useImage(coinAInfo?.icon ? coinAInfo?.icon : '').hasLoaded;\n    //TODO: get which currency is base\n    //TODO: get which color increase\n    return <MarketBlockStyled custom={{chg: upColor}} padding={0.5 * 5} display={'flex'}\n                              justifyContent={'stretch'}>\n        {coinAInfo && coinBInfo ?\n            <Grid container justifyContent={'space-around'} position={'relative'}>\n                <Grid item xs={12} display={'flex'} flexDirection={'row'} justifyContent={'flex-start'}\n                      alignItems={'center'} height={24}>\n                    <Typography variant={'h3'} component={'h3'}>\n                        <Typography component={'span'} title={'sell'} color={'textPrimary'}>\n                            {coinBInfo?.simpleName}\n                        </Typography>\n                        <Typography component={'i'}>/</Typography>\n                        <Typography component={'span'} title={'buy'} color={'textPrimary'}>\n                            {coinAInfo.simpleName}\n                        </Typography>\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} display={'flex'} flexDirection={'row'} justifyContent={'flex-start'}\n                      alignItems={'stretch'} className={'float-group'} marginTop={1}>\n                    <Box display={'flex'} flexDirection={'column'} alignItems={'flex-start'} justifyContent={'flex-end'}\n                         className={'left-block'}>\n                        <Typography variant={'h4'} height={24} component={'span'}\n                                    className={`float-tag float-${tradeFloat.floatTag}`}>${\n                            getThousandFormattedNumbers(tradeFloat.priceDollar,2,{isAbbreviate:true})\n                                    } </Typography>\n                        <Typography variant={'body2'} component={'span'} marginTop={1 / 2}\n                                    className={`float-tag float-${tradeFloat.floatTag}`}>{\n                            tradeFloat.change ?\n                                getThousandFormattedNumbers(tradeFloat.change,2)+'%':EmptyValueTag\n                        }</Typography>\n                    </Box>\n                    <Box display={'flex'} flexDirection={'column'} alignItems={'flex-start'}\n                         justifyContent={'flex-end'}>\n                        <Typography variant={'body2'} component={'span'}  textOverflow={'ellipsis'}\n                                    height={24}> ￥{\n                            getThousandFormattedNumbers(tradeFloat.priceYuan,2,)\n                        } </Typography>\n                        <Typography variant={'body2'} component={'span'}  textOverflow={'ellipsis'}\n                                    marginTop={1 / 2}>{t('labelVolume')} : {tradeFloat.volume}</Typography>\n                    </Box>\n\n                </Grid>\n                <Grid item position={'absolute'} top={0} right={0} width={120} height={42}>\n                        <ScaleAreaChart showTooltip={false} showArea={false} type={ChartType.Trend} data={chartData} />\n                </Grid>\n            </Grid> : <></>\n        } </MarketBlockStyled>\n}","import { withTranslation, WithTranslation } from \"react-i18next\";\nimport styled from \"@emotion/styled\";\nimport React from 'react';\n\n\nexport type EmptyProps = {\n    height?: number | string,\n    defaultPic?: string | React.ReactElement, //PATH or element\n    message: () => React.ElementType<any> | JSX.Element,\n}\nexport const EmptyDefault = withTranslation('layout')(({\n                                                           t,\n                                                           defaultPic,\n                                                           height,\n                                                           message\n                                                       }: EmptyProps & WithTranslation) => {\n    const WrapStyled = styled.div<{ height: number | undefined | string }>`\n      display: flex;\n      flex-direction: column;\n      flex-flow: column wrap;\n      justify-content: center;\n      align-items: center;\n      height: ${props => (props.height ? typeof props.height == 'number' ? props.height + 'px' : props.height : `${350 - 35}px`)};\n\n      .messageWrapper {\n        margin-top: 20px;\n      }\n    `;\n    const renderPic = !defaultPic || typeof defaultPic === 'string' ?\n        <img src={defaultPic} alt={t('Empty')}/> : defaultPic\n    return <WrapStyled height={height}>\n        {renderPic}\n        <div className=\"messageWrapper\">\n            {message()}\n        </div>\n    </WrapStyled>\n})\n\n\n\n\n\n","import type { Column as RdgColumn } from 'react-data-grid';\nimport DataGrid, { SortColumn } from 'react-data-grid';\nimport styled from \"@emotion/styled\";\nimport { WithTranslation } from 'react-i18next';\n\nimport { WithT } from \"i18next\";\nimport React from \"react\";\nimport { Link } from '@material-ui/core';\n// import { useCustomCompareEffect } from 'react-use';\n// import { isEqual } from 'lodash';\nimport { Column, DataGridProps, TableProps, SortableHeaderCell, SortableHeaderCellProps } from './';\nimport { EmptyIcon } from 'static-resource'\nimport { EmptyDefault } from '../empty';\n\nexport const DataGridStyled = styled(DataGrid)`\n  \n  &.rdg {\n    min-height: 350px;\n    color: ${({theme}) => theme.colorBase.textPrimary};\n    //color: inherit;\n    box-sizing: border-box;\n    border: rgba(0, 0, 0, 0) 0px solid;\n    //background-color: inherit;\n\n    .rdg-header-row {\n      color: ${({theme}) => theme.colorBase.textSecondary};\n      width: 100%;\n      background-color: inherit;\n    }\n    &.scrollable .rdg-header-row {\n      background-color: ${({theme}) => theme.colorBase.backgroundHeader};\n    }\n\n    .rdg-header-sort-name {\n      flex-grow: initial;\n    }\n\n    .rdg-header-sort-cell {\n      .rdg-header-sort-name + span {\n        display: none;\n      }\n\n      .rdg-header-sort-name {\n        .sort-icon svg {\n          display: inline-block;\n          transform-origin: center;\n        }\n\n        .DESC svg {\n          transform: rotate(0deg) translateX(-3px) scale(1.2);\n        }\n\n        .ASC svg {\n          transform: rotate(180deg) translateX(-3px) scale(1.2);\n        }\n\n        .NONE svg {\n          transform: rotate(90deg) translateX(-3px) scale(1.2);\n        }\n\n      }\n    }\n\n    .rdg-cell-selected {\n      box-shadow: inherit;\n    }\n\n    .rdg-row {\n      box-sizing: border-box;\n      background-color: inherit;\n      width: 100%;\n\n      &:hover {\n        background: ${({theme}) => theme.colorBase.background().hover};\n\n        .rdg-cell:first-of-type {\n          border-left: ${({theme}) => theme.border.borderConfig({d_W: 2, c_key: 'selected'})}\n        }\n      }\n    }\n\n    .rdg-cell {\n      color: inherit;\n      border-left: rgba(0, 0, 0, 0) 2px solid;\n      border-right: rgba(0, 0, 0, 0) 2px solid;\n      border-bottom: rgba(0, 0, 0, 0) 2px solid;\n      box-sizing: border-box;\n      height: 100%;\n    }\n    .rdg-cell[aria-selected=true] {\n      box-shadow: none;\n    }\n\n    .rdg-cell.success {\n      color: ${({theme}) => theme.colorBase.success};\n    }\n\n    .rdg-cell.error {\n      color: ${({theme}) => theme.colorBase.error};\n    }\n  }\n\n` as typeof DataGrid;\n\n// interface Action {\n//     type: 'toggleSubRow' | 'deleteSubRow' | 'refresh' | 'sort';\n//     id: string;\n//     uniqueKey: string;\n// }\n// function reducer<R extends { children: R[], [ key: string ]: any }, SR>(rows: R[], {type, id, uniqueKey}: Action): R[] {\n//     switch (type) {\n//         case 'toggleSubRow':\n//             return toggleSubRow(rows, id, uniqueKey);\n//         case 'deleteSubRow':\n//             return deleteSubRow(rows, id);\n//         default:\n//             return rows;\n//     }\n// }\n\n\nexport const generateColumns = <Row, SR>({\n                                             columnsRaw,\n                                             t\n                                         }: { columnsRaw: readonly Column<Row, SR>[], [ key: string ]: any } & WithT): RdgColumn<Row, SR>[] => {\n    const columns: Column<Row, SR>[] = columnsRaw.reduce((prev: RdgColumn<Row, SR>[], column: Column<Row, SR>) => {\n        const {name, isHidden} = column;\n        if (typeof name === 'string' && !isHidden) {\n            column.name = t(name);\n            prev.push(column);\n        }\n        return prev;\n    }, [])\n    return columns as Column<Row, SR>[];\n}\nexport const generateRows = <Row, SR>(rawData: [][], rest: TableProps<Row, SR>): Row[] => {\n    const {columnMode} = rest;\n    return rawData.map(row => row.reduce((prev: { [ key: string ]: any }, cell, index) => {\n        if (columnMode[ index ]) {\n            prev[ columnMode[ index ].key ] = cell;\n        }\n        return prev;\n    }, {_rawData: row}) as Row)\n};\n\n//TODO:\n// {isLoading && <div className={loadMoreRowsClassname}>Loading more rows...</div>\nexport const Table = <R, SR>(props: DataGridProps<R, SR> & WithTranslation) => {\n    const {\n        EmptyRowsRenderer,\n        generateRows,\n        generateColumns,\n        sortInitDirection,\n        sortDefaultKey,\n        sortMethod,\n        rawData,\n        style,\n        frozeSort,\n        rowRenderer,\n        rowClassFn,\n        rowKeyGetter,\n        columnMode,\n        onScroll,\n        rowHeight, t, ...rest\n    } = props;\n\n    const columns = generateColumns({columnsRaw: columnMode, t});\n    const [rows, setRows] = React.useState(generateRows(rawData, props));\n    // useCustomCompareEffect(() => {\n    //     setRows(generateRows(rawData, props));\n    // }, [rawData], (prevDeps, nextDeps) => isEqual(prevDeps, nextDeps))\n\n    React.useEffect(()=>{\n        setRows(generateRows(rawData, props));\n    },[rawData])\n    /*** sort handle start ***/\n    const [sortColumns, setSortColumns] = React.useState<readonly Readonly<SortColumn>[]>([{\n        columnKey: sortDefaultKey as any,\n        direction: sortInitDirection ? sortInitDirection : undefined  as any\n    }]);\n\n    // const [[sortColumn, sortDirection], setSort] = React.useState<[string | undefined, SortDirection]>([sortDefaultKey, sortInitDirection ? sortInitDirection : undefined]);\n\n    const sortedRows: readonly R[] = React.useMemo(() => {\n        if (sortColumns.length === 0) return rows;\n        const { columnKey, direction } = sortColumns[0];\n        let sortedRows: R[] = [...rows];\n        sortedRows = sortMethod ? sortMethod(sortedRows, columnKey, direction) : rows;\n        return direction === 'DESC' ? sortedRows.reverse() : sortedRows;\n\n    }, [rows, sortColumns, sortMethod]);\n    // const [sortColumns, setSortColumns] = React.useState<readonly Readonly<SortColumn>[]>([]);\n    const onSortColumnsChange = React.useCallback((sortColumns: SortColumn[]) => {\n        setSortColumns(sortColumns.slice(-1));\n    }, []);\n    // const handleSort = React.useCallback((sortColumns: SortColumn[]) => {\n    //     //console.log(direction);\n    //     setSort([columnKey, direction]);\n    // }, []);\n    const loopringColumns = React.useMemo(() => {\n        return columns.map(c => {\n            if (c.headerRenderer) {\n                return {...c} as Column<R, unknown>;\n            } else {\n                return {\n                    ...c, headerRenderer: (props: SortableHeaderCellProps<R>) => <SortableHeaderCell {...props} />\n                } as Column<R, unknown>;\n            }\n        }) as Column<R, unknown>[];\n    }, [columns]);\n    const RenderPic = styled.div`\n      & svg {\n        font-size: 110px;\n        fill: #727FAA;\n        fill-opacity: 0.3;\n      }\n    `\n    const RenderEmptyMsg = styled.span`\n      display: flex;\n\n      .link {\n        margin: 0 5px;\n      }\n    `\n\n    /*** sort handle end ***/\n    return <DataGridStyled\n        {...rest}\n        onScroll={onScroll}\n        columns={loopringColumns as any}\n        style={style}\n        rows={(sortDefaultKey && sortedRows) ? sortedRows : rows}\n        rowKeyGetter={rowKeyGetter}\n        rowClass={row => rowClassFn ? rowClassFn(row, props) : ''}\n        rowHeight={rowHeight ? rowHeight : 44}\n        onRowsChange={setRows}\n        onSortColumnsChange={onSortColumnsChange}\n        // sortDirection={sortDirection}\n        rowRenderer={rowRenderer as any}\n        sortColumns={sortColumns}\n        emptyRowsRenderer={() => EmptyRowsRenderer ? EmptyRowsRenderer :\n            <EmptyDefault height={`calc(100% - var(--header-row-height))`} defaultPic={<RenderPic><EmptyIcon/></RenderPic>} message={() => {\n                return <RenderEmptyMsg>Go to <Link className=\"link\" onClick={() => console.log('EMPTY ON CLICK')}> link\n                    or event</Link> at here</RenderEmptyMsg>\n            }}/>}\n    />;\n    //  <EmptyDefault height={\"calc(100% - 35px)\"} url={'/path'} message={()=>{\n    //  return <>Go to <Link to={'./path'}> link or event</Link> at here</>} } />   }\n}\n","import {  HeaderRendererProps } from 'react-data-grid';\n// import { DropDownIcon } from 'static-resource';\nimport React from 'react';\nimport styled from '@emotion/styled'\nimport { Box, BoxProps } from '@material-ui/core'\nimport { css } from '@emotion/react';\n\n// export interface LoopringTBHeaderProps<R> extends HeaderRendererProps<R> {\n//     child?: React.ElementType<any> | JSX.Element,\n// }\n\n// const StyledCellContentWrapper = styled(Box)`\n//   display: flex;\n//   align-items: center;\n//   cursor: pointer;\n// `\nexport const headerSortCell = css`\n  cursor: pointer;\n  display: flex;\n`;\nexport const headerSortName = css`\n  flex-grow: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const ArrowSort  = ({sortDirection,children,...rest}:BoxProps & { sortDirection:'ASC'|'DESC'|undefined })=>{\n    const StyledArrowSort = styled(Box)`\n      margin-left: ${({theme}) => `${theme.unit / 2}px`};\n      .up {\n        width: 0;\n        height: 0;\n        border: ${({theme}) => `${theme.unit / 2}px`} solid transparent;\n        border-bottom-color: ${({theme}) => sortDirection === 'ASC'? `${theme.colorBase.textPrimary}` : `${theme.colorBase.textSecondary}`};\n      }\n    \n      .down {\n        width: 0;\n        height: 0;\n        border: ${({theme}) => `${theme.unit / 2}px`} solid transparent;\n        border-top-color:  ${({theme}) => sortDirection === 'DESC' ? `${theme.colorBase.textPrimary}` : `${theme.colorBase.textSecondary}`};\n        margin-top: ${({theme}) => `${theme.unit / 4}px`};\n      }\n    ` as React.ElementType ;\n    return <StyledArrowSort {...{...rest}}>\n        <div className=\"up\"/>\n        <div className=\"down\"/>\n    </StyledArrowSort>\n}\n\n\n\n\n// type SharedHeaderCellProps<R, SR> = Pick<\n//     HeaderRendererProps<R, SR>,\n//     'sortDirection' | 'onSort' | 'priority'\n//     >;\nexport interface SortableHeaderCellProps<R, SR=unknown> extends HeaderRendererProps<R, SR> {\n    children?: React.ReactNode;\n}\n\nexport function SortableHeaderCell<R, SR>({\n                                                      column,\n                                                      sortDirection,\n                                                      priority,\n                                                      onSort,\n                                                      children\n                                                  }: SortableHeaderCellProps<R, SR>) {\n    // let sortText = '';\n    // if (sortDirection === 'ASC') {\n    //     sortText = '\\u25B2';\n    // } else if (sortDirection === 'DESC') {\n    //     sortText = '\\u25BC';\n    // }\n    if (column.sortable) {\n        // const showUp = sortDirection === 'ASC'\n        // const showDown =  sortDirection === 'DESC'\n\n        return (\n            <Box component={'span'} display={'flex'} alignItems={'center'} className={`rdg-header-sort-cell ${headerSortCell}`} onClick={(e:React.MouseEvent) => onSort(e.ctrlKey)}>\n                  <span className={`rdg-header-sort-name ${headerSortName}`}>{children?children:column.name}</span>\n                 <ArrowSort {...{sortDirection}}/>\n                  {priority}\n            </Box>\n\n        );\n    } else{\n        return <>{children?children:column.name}</>;\n    }\n\n\n}","import {\n    Box,\n    Button as MuButton,\n    IconButton,\n    ToggleButton,\n    ToggleButtonGroup as MuToggleButtonGroup,\n} from \"@material-ui/core\";\nimport { ButtonProps, TGItemJSXInterface, ToggleButtonGroupProps } from './Interface';\nimport { WithTranslation } from \"react-i18next\";\nimport styled from \"@emotion/styled\";\nimport loadingSvg from 'common-resources/assets/svg/loading.svg'\nimport { CloseIcon } from '../../../static-resource';\n\nexport const Button = styled(MuButton)<ButtonProps>`\n  && {\n    &.MuiButton-contained.Mui-disabled {\n      ${({loading, theme}) => loading === 'true' ? `\n           color:transparent;\n           background:${theme.colorBase.primaryDark};\n           &::after{\n            display: block;\n            content: url(${loadingSvg});\n            height: 40px;\n            width: 40px;\n            position: absolute;\n            transform:scale(.55);\n            display:flex;\n            flex-direction:row;\n            align-items: center;\n            justify-content: center;\n            color:#fff  \n           }\n       ` : ''}\n    }\n  }\n` as React.ComponentType<ButtonProps>;\n\nexport const ToggleButtonGroup = ({\n                                      t,\n                                      value,\n                                      setValue,\n                                      handleChange,\n                                      size = 'medium',\n                                      tgItemJSXs,\n                                      data,\n                                      exclusive,\n                                      onChange\n                                  }: WithTranslation & ToggleButtonGroupProps) => {\n    if (setValue) {\n        handleChange = (_e: React.MouseEvent<HTMLElement, MouseEvent>, value: any) => {\n            setValue(value)\n            if (onChange) {\n                onChange(_e, value)\n            }\n        }\n    }\n    if (data) {\n        tgItemJSXs = data.map(({value, key, disabled}) => {\n            return {value, JSX: t(key), tlabel: t(key), disabled}\n        })\n    }\n    return <MuToggleButtonGroup size={size} value={value} exclusive={exclusive} onChange={handleChange}>\n        {tgItemJSXs?.map(({value, JSX, tlabel, disabled, key}: TGItemJSXInterface) =>\n            <ToggleButton key={key ? key : value} value={value}\n                          aria-label={tlabel}\n                          disabled={disabled}>{JSX}</ToggleButton>)}\n    </MuToggleButtonGroup>;\n\n}\n\nexport const ModalCloseButton = ({onClose,t}:{onClose?: {\n        bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void;\n    }['bivarianceHack']} & WithTranslation)=>{\n    return  <Box alignSelf={'flex-end'} marginTop={-2} marginRight={1}>\n        <IconButton aria-label={t('labelClose')} size={'small'} onClick={(event) => {\n            onClose && onClose(event, 'escapeKeyDown')\n        }}>\n            <CloseIcon/>\n        </IconButton>\n    </Box>\n}\n\n\n\n\n","/* Rectangle 340 */\nimport styled from '@emotion/styled';\nimport { Box, Typography } from '@material-ui/core/';\nimport React from 'react';\nimport { BtnPercentageProps } from './Interface';\n\nconst PointOnStyled = styled(Box)`\n  width: 14px;\n  height: 14px;\n  box-sizing:border-box;\n  cursor: pointer;\n  background: ${({theme})=>theme.colorBase.textSecondary};\n  ${({theme})=>theme.border.defaultFrame({d_W:3,d_R:12, c_key:theme.colorBase.textPrimary})};\n  \n`  as typeof Box\nconst PointStyled = styled(Box)`\n  width: 24px;\n  height: 24px;\n  box-sizing: border-box;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  cursor: pointer;\n  :after{\n    content:'';\n    \n    \n    width: 10px;\n    height: 10px;\n    background: ${({theme})=>theme.colorBase.textSecondary};\n    ${({theme})=>theme.border.defaultFrame({d_W:1,d_R:2, c_key:theme.colorBase.backgroundBox})};\n  }\n`  as typeof Box\nconst Track = styled.div`\n  width: 100%;\n  height: 4px;\n  border-radius: 4px;\n  position: absolute;\n  background-color: ${({theme})=>theme.colorBase.background().outline};\n  z-index: 99;\n  left: 1px;\n  right: 1px;\n  transform: translateY(-50%);\n  top:50%;\n  //display: flex;\n  //align-items: center;\n`\nconst Thumb = styled(Box)`\n  height: 4px;\n  border-radius: 4px;\n  position: absolute;\n  background-color: ${({theme})=>theme.colorBase.textSecondary};\n  z-index: 102;\n  left: 1px;\n  transform: translateY(-50%);\n  top:50%;\n  //display: flex;\n  //align-items: center;\n` as typeof Box\n\n\nexport const BtnPercentage = ({selected=-1,handleChanged,anchors}:BtnPercentageProps)=>{\n  const _anchors = anchors && anchors.length? anchors: [0,20,40,60,80,100];\n  const _handleChanged = React.useCallback((item)=>{\n      handleChanged(item)\n  },[handleChanged])\n    return <Box width={'100%'} display={'flex'}  boxSizing={'content-box'} paddingY={1}>\n        <Box flex={1} height={'100%'} margin={1}>\n            <Box component={'div'} zIndex={'88'} display={'flex'} alignItems={'center'} justifyContent={'stretch'} position={'relative'}   >\n                <Track />\n                <Thumb width={`${selected}%`}/>\n                <Box component={'div'} zIndex={'121'} flex={1} display={'flex'} alignItems={'center'} width={'100%'} height={'100%'} position={'relative'}>\n                    {_anchors.map((item:number,index)=> {\n                        if(selected === item){\n                            return <React.Fragment  key={index} >\n                                <PointOnStyled left={`calc(${item}% - 7px)`} position={'absolute'}/>\n                                <Typography component={'span'} style={{fontSize:'1.6rem'}} position={'absolute'} top={16} left={`calc(${selected}% - 12px)`}>{selected}%</Typography>\n                            </React.Fragment>\n                        }\n                        return <PointStyled key={index} left={`calc(${item}% - 12px)`} position={'absolute'} onClick={()=>{\n                            _handleChanged(item)\n                        }} />\n                    } )\n                    }\n                </Box>\n            </Box>\n            <Box component={'div'} display={'flex'} alignItems={'center'} justifyContent={'space-between'} position={'relative'}  marginTop={1.2}  >\n                <Typography component={'span'} variant={'body2'} color={'textSecondary'} marginLeft={-1}>{selected !== 0? '0%':' '}</Typography>\n                <Typography component={'span'} variant={'body2'} color={'textSecondary'} marginRight={-1}>{selected!==100? '100%':' '}</Typography>\n            </Box>\n        </Box>\n    </Box>\n\n}","import {  LanguageKeys, ThemeKeys, UpColor } from 'static-resource';\n\nexport enum PlatFormType {\n    mobile = 'mobile',\n    desktop = 'desktop',\n    tablet = 'tablet'\n}\n\nexport type PlatFormKeys = keyof typeof PlatFormType\nexport interface SettingsState {\n    themeMode: ThemeKeys\n    language: LanguageKeys\n    platform: PlatFormKeys\n    currency: 'USD'|'CYN'\n    upColor: keyof typeof UpColor\n    slippage: number | 'N'\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PlatFormType,SettingsState } from \"./interface\";\nimport { Currency, i18n, LanguageKeys, ThemeKeys, ThemeType, UpColor } from 'static-resource';\nimport moment from 'moment';\n// import { localStore } from '../../../static-resource/src/storage';\n\nconst initialState:SettingsState  = {\n    themeMode:ThemeType.dark, //localStore.getItem('ThemeType')?localStore.getItem('ThemeType') as ThemeKeys :ThemeType.dark,\n    language:i18n.language as LanguageKeys, //localStore.getItem('LanguageKey')?localStore.getItem('LanguageKey') as LanguageKeys: i18n.language as LanguageKeys,\n    platform:  PlatFormType.desktop,\n    currency: Currency.dollar,//localStore.getItem('Currency')?localStore.getItem('Currency') as keyof typeof Currency: Currency.dollar,\n    upColor: UpColor.green,//localStore.getItem('UpColor')?localStore.getItem('UpColor') as keyof typeof UpColor: UpColor.green,\n    slippage: 'N',\n}\n\nexport const settingsSlice = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        setTheme(state, action: PayloadAction<ThemeKeys>) {\n            // localStore.setItem('ThemeType',action.payload)\n            state.themeMode = action.payload\n        },\n        setLanguage(state, action: PayloadAction<LanguageKeys>) {\n            i18n.changeLanguage(action.payload);\n            if(action.payload){\n                action.payload === 'en_US'? moment.locale('en'): moment.locale(action.payload.toLocaleLowerCase());\n                state.language = action.payload\n            }\n        },\n        setPlatform(state, action: PayloadAction<keyof typeof PlatFormType>) {\n            state.platform = action.payload\n        },\n        setCurrency(state, action: PayloadAction<'USD'|'CYN'>) {\n            // localStore.setItem('Currency',action.payload)\n            state.currency = action.payload\n        },\n        setUpColor(state, action: PayloadAction<keyof typeof UpColor>) {\n            // localStore.setItem('UpColor',action.payload)\n            state.upColor = action.payload\n        },\n        setSlippage(state, action: PayloadAction<'N'|number>) {\n            // localStore.setItem('UpColor',action.payload)\n            state.slippage = action.payload\n        },\n    },\n})\nexport const {setTheme, setLanguage, setPlatform, setCurrency, setUpColor, setSlippage} = settingsSlice.actions\n// export const { setTheme,setPlatform,setLanguage } = settingsSlice.actions","import { useDispatch, useSelector } from 'react-redux'\nimport {\n    setCurrency as dSetCurrency,\n    setLanguage as dSetLanguage,\n    setPlatform as dSetPlatform,\n    setTheme as dSetTheme,\n    setUpColor as dSetUpColor,\n    setSlippage as dSetSlippage\n} from './reducer'\nimport {  PlatFormType, SettingsState } from \"./interface\";\nimport {  LanguageKeys, LanguageType, ThemeKeys, ThemeType, UpColor } from 'static-resource';\n\n// import { RootState } from 'stores'\n\n\nexport function useSettings(): SettingsState & {\n    // settings: SettingsState,\n    setPlatform(value: keyof typeof PlatFormType): void,\n    setTheme(value: ThemeKeys): void,\n    setUpColor(value: keyof typeof UpColor): void,\n    setCurrency(value: 'USD'|'CYN'): void,\n    setLanguage(value: LanguageKeys): void,\n    setSlippage(value:'N'|number): void,\n} {\n    const settings:SettingsState = useSelector((state: any) => state.settings)\n    const { themeMode,\n        language,\n        platform,\n        currency,\n        upColor,slippage} = settings;\n    const dispatch = useDispatch();\n    const setTheme = (value: keyof typeof ThemeType) => {\n        dispatch(dSetTheme(value))\n    }\n    const setLanguage = (value: keyof typeof LanguageType) => {\n        dispatch(dSetLanguage(value))\n    }\n    const setPlatform = (value: keyof typeof PlatFormType) => {\n        dispatch(dSetPlatform(value))\n    }\n    const setCurrency = (value: 'USD'|'CYN') => {\n        dispatch(dSetCurrency(value))\n    }\n    const setUpColor = (value: keyof typeof UpColor) => {\n        dispatch(dSetUpColor(value))\n    }\n    const setSlippage = (value: 'N'|number) => {\n        dispatch(dSetSlippage(value))\n    }\n\n    return {\n        slippage,\n        themeMode,\n        language,\n        platform,\n        currency,\n        upColor,\n        setTheme, setLanguage, setPlatform, setCurrency, setUpColor ,setSlippage\n    }\n\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ModalState, ModalStatePlayLoad } from './interface';\nimport {\n    AmmInfoProps,\n    DepositInfoProps,\n    ResetInfoProps, SwapInfoProps,\n    TransferInfoProps,\n    WithdrawInfoProps\n} from '../../../index';\nimport {  IBData } from 'static-resource';\n\nconst initialState: ModalState<IBData<any>,any> = {\n    isShowTransfer: {isShow:false, props: {}},\n    isShowWithdraw:{isShow:false,props: {}},\n    isShowDeposit: {isShow:false,props: {}},\n    isShowResetAccount: {isShow:false,props:{}},\n    isShowSwap: {isShow:false,props:{}},\n    isShowAmm:{isShow:false,props: {}} ,\n    isShowConnect: {isShow:false},\n    isShowAccountInfo: {isShow:false}\n}\n\nexport const modalsSlice = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        setShowAmm(state, action: PayloadAction<ModalStatePlayLoad & {props?:Partial<AmmInfoProps<any ,any,any, any>>}>){\n            const {props,isShow} = action.payload;\n            state.isShowAmm.isShow = isShow;\n            if(props) {\n                Object.keys(props).map(key=>{\n                    state.isShowAmm.props[key] = props[key]\n                })\n            }\n        },\n        setShowSwap(state, action: PayloadAction<ModalStatePlayLoad & {props?:Partial<SwapInfoProps<any,any,any>>}>){\n            const {props,isShow} = action.payload;\n            state.isShowSwap.isShow = isShow;\n            if(props) {\n                Object.keys(props).map(key=>{\n                    state.isShowSwap.props[key] = props[key]\n                })\n            }\n        },\n        setShowTransfer(state, action: PayloadAction<ModalStatePlayLoad & {props?:Partial<TransferInfoProps<IBData<any>,any>>} >) {\n            const {props,isShow} = action.payload;\n            state.isShowTransfer.isShow = isShow;\n            if(props) {\n                Object.keys(props).map(key=>{\n                    state.isShowTransfer.props[key] = props[key]\n                })\n            }\n        },\n        setShowWithdraw(state, action: PayloadAction<ModalStatePlayLoad & {props?:Partial<WithdrawInfoProps<IBData<any>,any>>}>) {\n            const {props,isShow} = action.payload;\n            state.isShowWithdraw.isShow = isShow;\n            if(props) {\n                Object.keys(props).map(key=>{\n                    state.isShowWithdraw.props[key] = props[key]\n                })\n            }\n        },\n        setShowDeposit(state, action: PayloadAction<ModalStatePlayLoad & {props?:Partial<DepositInfoProps<IBData<any>,any>>}>) {\n            const {props,isShow} = action.payload;\n            state.isShowDeposit.isShow = isShow;\n            if(props) {\n                Object.keys(props).map(key=>{\n                    state.isShowDeposit.props[key] = props[key]\n                })\n            }\n        },\n        setShowResetAccount(state, action: PayloadAction<ModalStatePlayLoad & {props?:Partial<ResetInfoProps<IBData<any>,any>>}>) {\n            const {props,isShow} = action.payload;\n            state.isShowResetAccount.isShow = isShow;\n            if(props) {\n                Object.keys(props).map(key=>{\n                    state.isShowResetAccount.props[key] = props[key]\n                })\n            }\n        },\n        setShowConnect(state, action:PayloadAction<{isShow:boolean}>) {\n            const {isShow} = action.payload;\n            state.isShowConnect.isShow  = isShow\n        },\n        setShowAccountInfo(state, action:PayloadAction<{isShow:boolean}>) {\n            const {isShow} = action.payload;\n            state.isShowAccountInfo.isShow  = isShow\n        }\n    },\n})\nexport const {setShowTransfer, setShowWithdraw, setShowDeposit, setShowResetAccount,setShowSwap,setShowAmm,setShowConnect,setShowAccountInfo} = modalsSlice.actions\n// export const { setTheme,setPlatform,setLanguage } = settingsSlice.actions\n","import {\n    AmmInfoProps,\n    DepositInfoProps,\n    ResetInfoProps,\n    SwapInfoProps,\n    TransferInfoProps,\n    WithdrawInfoProps\n} from '../../../components';\nimport { AmmData, IBData } from '../../../static-resource';\n\nexport enum ModalType {\n    transfer = 'transfer',\n    deposit = 'deposit',\n    withdraw = 'withdraw',\n}\n\nexport type ModalTypeKeys = keyof typeof ModalType\n\nexport type ModalStatePlayLoad = {\n    isShow: boolean,\n}\n\nexport interface ModalState<T,I,A = AmmData<IBData<string>>, C = unknown> {\n    isShowTransfer: ModalStatePlayLoad & { props: Partial<TransferInfoProps<T, I>> },\n    isShowWithdraw: ModalStatePlayLoad & { props: Partial<WithdrawInfoProps<T, I>> },\n    isShowDeposit: ModalStatePlayLoad & { props: Partial<DepositInfoProps<T, I>> },\n    isShowResetAccount: ModalStatePlayLoad & { props: Partial<ResetInfoProps<T, I>> },\n    isShowSwap: ModalStatePlayLoad & { props: Partial<SwapInfoProps<T, I, C>> },\n    isShowAmm: ModalStatePlayLoad & { props: Partial<AmmInfoProps<A, I  ,C>> },\n    isShowConnect: ModalStatePlayLoad,\n    isShowAccountInfo: ModalStatePlayLoad\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { ModalState, ModalStatePlayLoad } from './interface';\nimport {\n    setShowAccountInfo,\n    setShowAmm, setShowConnect,\n    setShowDeposit,\n    setShowResetAccount,\n    setShowSwap,\n    setShowTransfer,\n    setShowWithdraw\n} from './reducer';\nimport {\n    AmmInfoProps,\n    DepositInfoProps,\n    ResetInfoProps,\n    SwapInfoProps,\n    TransferInfoProps,\n    WithdrawInfoProps\n} from '../../../index';\nimport { AmmData, IBData } from 'static-resource';\n\nexport const useOpenModals = <T extends IBData<any>,I,A = AmmData<IBData<string>>, C = unknown>()=> {\n    const dispatch = useDispatch();\n    return {\n        modals: useSelector((state: any) => state.modals) as ModalState<T,I>,\n        setShowTransfer: (state: ModalStatePlayLoad & { props?: Partial<TransferInfoProps<T,I>> }) => dispatch(setShowTransfer(state)),\n        setShowDeposit: (state: ModalStatePlayLoad & { props?: Partial<DepositInfoProps<T,I>> }) => dispatch(setShowDeposit(state)),\n        setShowWithdraw: (state: ModalStatePlayLoad & { props?: Partial<WithdrawInfoProps<T,I>> }) => dispatch(setShowWithdraw(state)),\n        setShowResetAccount: (state: ModalStatePlayLoad & { props?: Partial<ResetInfoProps<T,I>>}) => dispatch(setShowResetAccount(state)),\n        setShowAmm: (state: ModalStatePlayLoad & { props?: AmmInfoProps<A, I, C>}) => dispatch(setShowAmm(state)),\n        setShowSwap: (state: ModalStatePlayLoad & { props?: SwapInfoProps<T, I, C>}) => dispatch(setShowSwap(state)),\n        setShowAccountInfo:(state:ModalStatePlayLoad) => dispatch(setShowAccountInfo(state)),\n        setShowConnect:(state:ModalStatePlayLoad) => dispatch(setShowConnect(state))\n    }\n\n}\n","import { InputButtonProps } from '../../basic-lib';\nimport { AmmData, CoinInfo, IBData } from 'static-resource';\nimport { AmmChgData, AmmDepositBaseProps, AmmWithdrawBaseProps } from '../components';\nexport enum AmmPanelType {\n    Deposit='Deposit',\n    WithDraw='WithDraw',\n}\n\n/**\n *\n */\nexport type AmmPanelBaseProps<T,I,ACD,C > = {\n    ammDepositData:T,\n    ammWithdrawData:T,\n    tabSelected?: keyof typeof AmmPanelType,\n    disableDeposit?: boolean,\n    disableWithdraw?: boolean,\n    ammCalcData: ACD,\n    tokenDepositAProps?: Partial<InputButtonProps<C, I, CoinInfo<I>>>,\n    tokenDepositBProps?: Partial<InputButtonProps<C, I, CoinInfo<I>>>,\n    tokenWithDrawAProps?: Partial<InputButtonProps<C, I, CoinInfo<I>>>,\n    tokenWithDrawBProps?: Partial<InputButtonProps<C, I, CoinInfo<I>>>,\n    ammDepositBtnI18nKey?:string,\n    ammWithdrawBtnI18nKey?:string,\n    height?:number,\n    width?:number,\n}\n\nexport type AmmProps<T extends AmmData<C extends IBData<I>?C:IBData<I>>,I,ACD,C =IBData<I>> = AmmPanelBaseProps<T ,I,ACD,C >\n    & {\n    handleDepositEvent: (data: T, focusOn:'coinA'|'coinB') => void,\n    handleWithDrawEvent: (data: T, focusOn:'coinA'|'coinB') => void,\n    onChangeEvent?: (data: AmmChgData<T>) =>AmmChgData<T>,\n} & AmmWithdrawBaseProps<T, I> & AmmDepositBaseProps<T, I>\n\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/clock-loading.174e833d.svg\";","import { TGItemJSXInterface, ToggleButtonGroup } from '../../../basic-lib';\nimport React from 'react';\nimport CurrencyInput from 'react-currency-input-field';\nimport { globalSetup } from 'static-resource';\nimport styled from '@emotion/styled';\nimport { Box } from '@material-ui/core';\nimport { WithTranslation } from 'react-i18next';\nimport { useFocusRef } from '../../../basic-lib/form/hooks';\n\nconst Styled = styled(Box)`\n  & {\n    height: 108px;\n    width: 176px;\n    padding: 24px 16px;\n\n    .MuiToggleButtonGroup-root {\n      display: flex;\n      flex: 1;\n      flex-wrap: wrap;\n      justify-content: space-evenly;\n      align-content: space-between;\n\n    }\n  }\n`\nconst InputStyled = styled(CurrencyInput)`\n  text-align: right;\n  color: ${({theme}) => theme.colorBase.textPrimary};\n\n  ::placeholder {\n    color: ${({theme}) => theme.colorBase.textSecondary};\n  }\n;\n  width: 48px; //calc(100% - 2rem);\n  height: 100%; //var(--btn-Input-height);\n  border: 0;\n  margin: 0;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n  font-size: ${({theme}) => theme.fontDefault.h6};\n  display: block;\n  //padding: .8rem 1rem;\n  min-width: 0;\n  background: none;\n  box-sizing: border-box;\n  animation-name: mui-auto-fill-cancel;\n  letter-spacing: inherit;\n  animation-duration: 10ms;\n  -webkit-tap-highlight-color: transparent;\n\n  :focus {\n    outline: 0;\n    border-color: transparent;\n  }\n}\n\n` as typeof CurrencyInput\nexport const SlippagePanel = ({\n                                  slippageList,\n                                  slippage,\n                                  wait = globalSetup.wait,\n                                  handleChange,\n                                  ...rest\n                              }: WithTranslation & {\n\n\n    slippageList: Array<number | string>,\n    slippage: number | string, wait?: number,\n    handleChange: (newValue: any, customValue: any) => void\n}) => {\n    const [cValue, setcValue] = React.useState<number | undefined>(0.3);\n    const inputEle = useFocusRef({\n        shouldFocusOn: false,\n        value: cValue,\n    });\n    const handleContChange = React.useCallback((value: any, _name: any) => {\n            setcValue(value);\n        }\n        , []);\n    const toggleData = slippageList.reduce((pre, value, index) => {\n        let item: TGItemJSXInterface;\n        if (RegExp('slippage:').test(value.toString())) {\n            value = value.toString().replace('slippage:', '');\n            if (!isNaN(Number(value)) && Number(value) !== cValue) {\n                setcValue(Number(value))\n            }\n            item = {\n                value: cValue,\n                JSX: <>{rest.t('labelCustomer')} : <InputStyled ref={inputEle} placeholder={'N%'} allowDecimals={true}\n                                                                decimalsLimit={2}\n                                                                onValueChange={handleContChange} value={cValue}\n                                                                maxLength={3} suffix=\"%\"/></>,\n                tlabel: cValue + '%',\n                key: cValue + '-' + index,\n            }\n        } else {\n            item = {\n                value: value,\n                JSX: <>{value}%</>,\n                tlabel: value + '%',\n                key: value + '-' + index,\n            }\n        }\n\n        pre.push(item);\n        return pre;\n    }, [] as TGItemJSXInterface[])\n    const [value, setValue] = React.useState(slippage);\n    const _handleChange = (event: React.MouseEvent<HTMLElement>, newValue: number | string) => {\n        if (event.target !== inputEle.current) {\n            setValue(newValue);\n            if (cValue !== 0.1 && cValue !== 0.5 && cValue !== 1)\n                if (handleChange) {\n                    handleChange(newValue, cValue !== 0.1 && cValue !== 0.5 && cValue !== 1 ? cValue : undefined)\n                }\n            //TODO close\n        } else {\n\n        }\n\n    }\n    return <Styled display={'flex'}>  {\n        <ToggleButtonGroup exclusive {...{...rest, tgItemJSXs: toggleData, value: value, size: 'small'}}\n                           handleChange={_handleChange}/>\n    }\n    </Styled>\n}","import { Grid } from '@material-ui/core';\nimport { DropDownIcon } from '../../../../static-resource';\nimport { SwitchData } from '../../Interface';\nimport { IconButtonStyled } from '../index'\n\nexport const ToolBarItemBack = <T extends any>({\n                                                   onChangeEvent,\n                                                   tradeData\n                                               }: { tradeData: T, onChangeEvent: (index: 0 | 1, data: SwitchData<T>) => Promise<void> }) => {\n    return <Grid container justifyContent={'flex-start'}>\n        <IconButtonStyled edge=\"start\" sx={{transform: 'rotate(90deg)', transformOrigin: '50%'}}\n                          className={'switch'}\n                          color=\"inherit\"\n                          onClick={() => {\n                              onChangeEvent(0, {tradeData, to: 'button'})}\n                          }\n                          aria-label=\"to Professional\">\n\n            <DropDownIcon/>\n        </IconButtonStyled>\n    </Grid>\n}","import { CoinInfo, CoinKey, IBData } from 'static-resource';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { CoinMenu, EmptyDefault, InputSelect, InputSelectProps } from '../../../basic-lib';\nimport { Box, Link } from '@material-ui/core';\nimport { TradeMenuListProps } from '../Interface';\n\n\nexport const TradeMenuList = <T extends IBData<I>,\n    I>({\n           t, onChangeEvent, walletMap, selected, tradeData, coinMap,\n           ...rest\n       }: TradeMenuListProps<T, I> & WithTranslation) => {\n    const ref = React.useRef<any>(null);\n    const inputSelectProps: InputSelectProps<I> = {\n        placeholder: 'tokenSearchCoin',\n        focusOnInput: true,\n        allowScroll: true,\n        selected: '',\n        panelRender: () => <></>,\n    }\n    //TODO: for error and when empty\n    const PanelEmptyRender = () => {\n        return <><EmptyDefault height={\"calc(100% - 35px)\"} message={() => {\n            return <>Go to <Link onClick={() => console.log('EMPTY ON CLICK')}> link or event</Link> at here</>\n        }}/></>\n    }\n    try {\n        // const selected: string | undefined = swapData.tradeData[ swapData.type ].belong ? swapData.tradeData[ swapData.type ]?.belong : '';\n        const filterBy = (coinInfo: CoinInfo<I>, filterString: string) => {\n            return filterString && filterString.length ? RegExp(filterString, 'i').test(coinInfo.simpleName) : true;\n        }\n\n\n        const PanelRender = ({selected, value}: any) => {\n            const handleSelect = (_event: any, itemKey: CoinKey<I>) => {\n                // console.log('TradeMenuList item handleSelect',itemKey)\n                onChangeEvent(0, {...{tradeData: {...tradeData, belong: itemKey}}, to: 'button'})\n            }\n            return <CoinMenu {...{\n                coinMap: coinMap, //swapData.type === 'sell' ? tradeCalcData?.sellCoinInfoMap : tradeCalcData?.buyCoinInfoMap as any,\n                filterBy,\n                height: '410px',\n                filterString: value,\n                handleSelect,\n                walletMap: walletMap,//tradeCalcData?.walletMap as any,   // TODO get form parents Data\n                selected, t, ...rest\n            }} ref={ref}></CoinMenu>\n        }\n        return <>\n            <Box flex={1} height={'100%'} width={'100%'}> <InputSelect {...{\n                ...{...inputSelectProps, selected},\n                panelRender: PanelRender, t, ...rest\n            }}/> </Box>\n        </>\n    } catch (error) {\n        //todo: showError Page, reload\n        return <>\n            <Box flex={1} height={'100%'} width={'100%'}> <InputSelect {...{\n                ...inputSelectProps,\n                panelRender: PanelEmptyRender, t, ...rest\n            }}/> </Box>\n        </>\n    }\n\n\n}\n\n","import { SwitchData } from '../../../Interface';\nimport { IBData, TradeCalcData } from 'static-resource';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { TradeMenuList } from '../../tool/TradeMenuList';\nimport { SwapMenuListProps } from './Interface';\n\nexport const SwapMenuList = <T extends IBData<I>,\n    I,\n    TCD extends TradeCalcData<I>>({\n                                      onChangeEvent,\n                                      tradeCalcData,\n                                      swapData,\n                                      ...rest\n                                  }: SwapMenuListProps<T, TCD> & WithTranslation) => {\n    const selected: string | undefined = swapData.tradeData[ swapData.type ].belong ? swapData.tradeData[ swapData.type ]?.belong : '';\n    const tradeData = swapData.tradeData[ swapData.type ];\n    const coinMap = swapData.type === 'sell' ? tradeCalcData?.sellCoinInfoMap : tradeCalcData?.buyCoinInfoMap as any;\n    const walletMap = tradeCalcData?.walletMap as any;   //IBData<I>\n    const handleOnChangeIndex = React.useCallback((index: 0 | 1, {tradeData, to}: SwitchData<IBData<I>>) => {\n        console.log('SwapMenuList item handleSelect', tradeData, swapData)\n        onChangeEvent(index, {\n            ...swapData,\n            tradeData: {...swapData.tradeData, [ swapData.type ]: tradeData},\n            to: to,\n        });\n    }, [swapData, onChangeEvent])\n    return <TradeMenuList  {...{\n        ...rest,\n        selected,\n        tradeData,\n        coinMap,\n        walletMap,\n        onChangeEvent: handleOnChangeIndex\n    }}  />\n}\n","import { IBData } from 'static-resource';\nimport { BasicACoinTradeHookProps } from '../Interface';\nimport React from 'react';\nimport { SwitchData } from '../../Interface';\nimport { useDeepCompareEffect } from 'react-use';\nimport { ToolBarItemBack } from '../tool';\n\nexport const useBasicTrade = <T extends IBData<I>,\n    I>({tradeData, handlePanelEvent, walletMap, coinMap, ...rest}: BasicACoinTradeHookProps<T, I>) => {\n    tradeData = tradeData ? tradeData : {} as T;\n    // data used on trade input btn click to menu list and back to the input data transfer\n    const [switchData, setSwitchData] = React.useState<SwitchData<T>>({\n        to: 'button',\n        tradeData: tradeData\n    } as SwitchData<T>);\n    // index is switch panel index number 1 is btn view\n    const [index, setIndex] = React.useState(0);\n    useDeepCompareEffect(() => {\n        if (tradeData !== switchData.tradeData) {\n            setSwitchData({...switchData, tradeData: tradeData});\n        }\n    }, [tradeData]);\n    const onChangeEvent = React.useCallback(async (_index: 0 | 1, {to, tradeData}: SwitchData<T>) => {\n        await handlePanelEvent({to, tradeData}, `To${to}` as any);\n        if (typeof rest.onChangeEvent == 'function') {\n            setSwitchData(rest.onChangeEvent(_index, {to, tradeData}));\n        } else {\n            if (to === 'menu') {\n                setSwitchData({tradeData, to});\n            } else if (to === 'button') {\n                const count = tradeData.belong ? walletMap[ tradeData.belong ]?.count : 0;\n                setSwitchData({tradeData: {...tradeData, balance: count}, to});\n            }\n        }\n        if(_index!== index) {\n            setIndex(_index);\n        }\n    }, [handlePanelEvent, tradeData, walletMap, coinMap, rest,index]);\n\n    const toolBarItemBack = React.useMemo(() => <ToolBarItemBack onChangeEvent={onChangeEvent}\n                                                                 tradeData={tradeData}/>, [tradeData,onChangeEvent])\n    return {\n        //toolbar UI\n        toolBarItemBack,\n        //Data, panel and function\n        onChangeEvent,\n        index,\n        switchData\n\n    }\n}","import { CoinInfo, CoinMap, IBData } from 'static-resource';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { BasicACoinTradeProps } from '../Interface';\nimport { InputButton, } from '../../../basic-lib';\n\nexport const BasicACoinTrade = <T extends IBData<I>,\n    I>({\n           t, tradeData, onChangeEvent, coinMap, walletMap, disabled,\n           inputButtonDefaultProps, handleError, inputBtnRef, inputButtonProps,\n           ...rest\n       }: BasicACoinTradeProps<T, I> & WithTranslation) => {\n    const getDisabled = () => {\n        if (disabled || tradeData === undefined || walletMap === undefined || coinMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const handleOnClick = React.useCallback((_event: React.MouseEvent, _ref: any) => {\n        onChangeEvent(1, {tradeData, to: 'menu'});\n    }, [tradeData, onChangeEvent])\n    const handleCountChange: any = React.useCallback((_tradeData: T, _ref: any) => {\n        //const focus: 'buy' | 'sell' = _ref?.current === buyRef.current ? 'buy' : 'sell';\n        if (tradeData.tradeValue !== _tradeData.tradeValue) {\n            onChangeEvent(0,{ tradeData:{...tradeData,..._tradeData}, to: 'button'});\n        }\n\n        // onCoinValueChange(ibData);\n    }, [onChangeEvent, tradeData]);\n\n    if (typeof handleError !== 'function') {\n        handleError = ({belong, balance, tradeValue}: T) => {\n            if (balance < tradeValue || (tradeValue && !balance)) {\n                return {error: true, message: t('tokenNotEnough', {belong: belong})}\n            }\n            return {error: false, message: ''}\n        }\n    }\n\n    const inputBtnProps = {\n        subLabel: t('tokenMax'),\n        emptyText: t('tokenSelectToken'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        handleError: handleError as any,\n        handleCountChange,\n        handleOnClick,\n        ...inputButtonDefaultProps,\n        ...inputButtonProps,\n        ...rest\n    }\n\n\n    return <InputButton<T, I, CoinInfo<I>> ref={inputBtnRef} disabled={getDisabled()}  {...{\n        ...inputBtnProps,\n        inputData: tradeData ? tradeData : {} as T,\n        coinMap: coinMap ? coinMap : {} as CoinMap<I, CoinInfo<I>>\n    }} ></InputButton>\n\n}\n\n\n\n","import styled from '@emotion/styled';\nimport { IconButton, LinearProgress, linearProgressClasses, Typography } from '@material-ui/core';\n\nexport const TypographyStrong = styled(Typography)`\n  color: ${({theme}) => theme.colorBase.secondary};\n` as typeof Typography\nexport const TypographyGood = styled(Typography)`\n  color: ${({theme}) => theme.colorBase.success};\n` as typeof Typography\nexport const BorderLinearProgress = styled(LinearProgress)(({theme}) => ({\n    height: 10,\n    borderRadius: 5,\n    [ `&.${linearProgressClasses.colorPrimary}` ]: {\n        backgroundColor: theme.colorBase.textSecondary, //theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\n    },\n    [ `& .${linearProgressClasses.bar}` ]: {\n        borderRadius: 5,\n        backgroundColor: theme.colorBase.primaryLight,\n    },\n}));\n\nexport const IconButtonStyled = styled(IconButton)`\n  .MuiToolbar-root &.MuiButtonBase-root{\n    svg {\n      font-size: ${({theme}) => theme.fontDefault.h4};\n      height: 24px;\n      width: 24px;\n    }\n\n    &.outline {\n      background-color: ${({theme}) => theme.colorBase.textDisable};\n      margin: 0 ${({theme}) => theme.unit / 2}px;\n      ${({theme}) => theme.border.defaultFrame({c_key: 'transparent'})};\n\n      &:last-child {\n        margin-right: 0;\n\n      }\n    }\n\n  }\n}\n`;","import { IBData } from 'static-resource';\nimport { TradeBtnStatus } from '../../Interface';\nimport { Trans, WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { Box, Grid, Link, Typography } from '@material-ui/core';\nimport { Button } from '../../../../index';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { DepositViewProps } from '../Interface';\nimport { BasicACoinTrade } from './BasicACoinTrade';\nimport { TypographyGood } from '../Styled';\n\n\n//SelectReceiveCoin\nexport const DepositWrap = <T extends IBData<I>,\n    I>({\n           t, disabled, walletMap, tradeData, coinMap,\n           //  onTransferClick,\n           title, description,\n           depositBtnStatus,\n           onDepositClick,\n           ...rest\n       }: DepositViewProps<T, I> & WithTranslation) => {\n    const inputBtnRef = React.useRef();\n    const getDisabled = () => {\n        if (disabled || tradeData === undefined || walletMap === undefined || coinMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const inputButtonDefaultProps = {\n        label: t('depositLabelEnterToken'),\n    }\n    return <Grid className={walletMap ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}>\n        <Grid item>\n            <Typography component={'h4'} height={36} textAlign={'center'} variant={'h4'}>\n                {title ? title : t('depositTitle')}\n            </Typography>\n            <Typography component={'p'} variant=\"body1\">\n                <Trans i18nKey={description ? description : 'depositDescription'}>\n                    Once your deposit is <TypographyGood component={'span'}>confirmed on Ethereum</TypographyGood>, it\n                    will be added to your balance within <TypographyGood component={'span'}>2 minutes</TypographyGood>.\n                </Trans>\n            </Typography>\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <BasicACoinTrade {...{\n                ...rest,\n                t,\n                disabled,\n                walletMap,\n                tradeData,\n                coinMap,\n                inputButtonDefaultProps,\n                inputBtnRef: inputBtnRef,\n            }} />\n        </Grid>\n        {/* TODO: check whether there's a need to show deposit fee */}\n        <Grid item marginTop={2} alignSelf={'center'}>\n            <Button variant={'contained'} size={'medium'} color={'primary'} onClick={() => {\n                onDepositClick(tradeData)\n            }}\n                    style={{width: '200px'}}\n                    loading={!getDisabled() && depositBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={getDisabled() || depositBtnStatus === TradeBtnStatus.DISABLED ? true : false}\n            >{t(`depositLabelBtn`)}\n            </Button>\n            {/* TODO: link to last deposit history */}\n            <Box component={'p'} display={'flex'} marginTop={2} width={'100%'} justifyContent={'center'}>\n                <Typography variant={'body2'} component={'span'}> <Link component={RouterLink}\n                                                                        to={'/'}>{t('depositLabelLinkRecent')}</Link></Typography>\n            </Box>\n        </Grid>\n    </Grid>\n}\n\n","import { IBData } from 'static-resource';\nimport { TradeBtnStatus } from '../../Interface';\nimport { Trans, WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Button } from '../../../basic-lib';\nimport { ResetViewProps } from '../Interface';\nimport { BasicACoinTrade } from './BasicACoinTrade';\nimport { TypographyStrong } from '..';\n\n\nexport const ResetWrap = <T extends IBData<I>,\n    I>({\n           t, disabled, walletMap, tradeData, coinMap,\n           //  onTransferClick,\n           resetBtnStatus,\n           onResetClick,\n           fee,\n           ...rest\n       }: ResetViewProps<T, I> & WithTranslation) => {\n    const inputBtnRef = React.useRef();\n    const getDisabled = () => {\n        if (disabled || tradeData === undefined || walletMap === undefined || coinMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const inputButtonDefaultProps = {\n        label: t('restLabelEnterToken'),\n    }\n    return <Grid className={walletMap ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}>\n        <Grid item>\n            <Typography component={'h4'} height={36} textAlign={'center'} variant={'h4'}>\n                {t('resetTitle')}\n            </Typography>\n            <Typography component={'p'} variant=\"body1\">\n                <Trans i18nKey=\"resetDescription\">\n                    Create a new signing key for layer-2 authentication (no backup needed). This will\n                    <TypographyStrong component={'span'}>cancel all your pending orders</TypographyStrong>.\n                </Trans>\n                {/*//TODO:*/}\n                {/*<Link href=\"http.google.com\">Read More</Link>.*/}\n            </Typography>\n\n        </Grid>\n        <Grid item marginTop={2}>\n            <Typography component={'p'} variant=\"body1\" height={20}>\n                {t('resetFee', {count: fee?.count, price: fee?.price})}\n            </Typography>\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <BasicACoinTrade {...{\n                ...rest,\n                t,\n                disabled,\n                walletMap,\n                tradeData,\n                coinMap,\n                inputButtonDefaultProps,\n                inputBtnRef: inputBtnRef,\n            }} />\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"center\"}>\n            <Button variant={'contained'} size={'medium'} color={'primary'} onClick={() => {\n                onResetClick(tradeData)\n            }}\n                    style={{width: '200px'}}\n                    loading={!getDisabled() && resetBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={getDisabled() || resetBtnStatus === TradeBtnStatus.DISABLED ? true : false}\n            >{t(`resetLabelBtn`)}\n            </Button>\n        </Grid>\n    </Grid>\n}\n\n\n\n","import { Trans, WithTranslation } from 'react-i18next';\nimport React, { ChangeEvent } from 'react';\nimport { Box, FormControlLabel, Grid, Link, ListItemText, Radio, RadioGroup, Typography } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { DropDownIcon, globalSetup, IBData, WithdrawTypes } from 'static-resource';\nimport { TradeBtnStatus } from '../../Interface';\nimport { Button, MenuItem, TextField } from '../../../../';\nimport { WithdrawViewProps } from '../Interface';\nimport { BasicACoinTrade } from './BasicACoinTrade';\nimport { debounce } from 'lodash';\nimport { TypographyGood, TypographyStrong } from '..';\n\nexport const WithdrawWrap = <T extends IBData<I>,\n    I>({\n           t, disabled, walletMap, tradeData, coinMap,\n           addressDefault,\n           withdrawTypes = WithdrawTypes,\n           withdrawType,\n           chargeFeeToken = 'ETH',\n           chargeFeeTokenList,\n           onWithdrawClick,\n           withdrawBtnStatus,\n           handleFeeChange,\n           handleWithdrawTypeChange,\n           handleOnAddressChange, handleAddressError,\n           wait = globalSetup.wait,\n           ...rest\n       }: WithdrawViewProps<T, I> & WithTranslation) => {\n    const [_withdrawType, setWithdrawType] = React.useState<string | undefined>(withdrawType);\n    const [feeIndex, setFeeIndex] = React.useState<any | undefined>(0);\n    const [address, setAddress] = React.useState<string | undefined>(addressDefault ? addressDefault : '');\n    const [addressError, setAddressError] = React.useState<{ error: boolean, message?: string | React.ElementType<HTMLElement> } | undefined>();\n\n    const inputBtnRef = React.useRef();\n    const getDisabled = () => {\n        if (disabled || tradeData === undefined || walletMap === undefined || coinMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const inputButtonDefaultProps = {\n        label: t('withdrawLabelEnterToken'),\n    }\n\n\n    const _handleWithdrawTypeChange = React.useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        setWithdrawType(e.target?.value);\n        if (handleWithdrawTypeChange) {\n            handleWithdrawTypeChange(e.target?.value as any);\n        }\n    }, [handleWithdrawTypeChange])\n\n    const _handleFeeChange = React.useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const index = e.target ? Number(e.target.value) : 0;\n        setFeeIndex(index)\n        if (handleFeeChange) {\n            handleFeeChange(chargeFeeTokenList[ index ]);\n        }\n    }, [chargeFeeTokenList, handleFeeChange])\n\n    const debounceAddress = React.useCallback(debounce(({address}: any) => {\n        if (handleOnAddressChange) {\n            handleOnAddressChange(address)\n        }\n    }, wait),[handleOnAddressChange,debounce])\n    const _handleOnAddressChange = React.useCallback((event) => {\n        const address = event.target.value;\n        if (handleAddressError) {\n            const error = handleAddressError(address)\n            if (error?.error) {\n                setAddressError(error)\n            }\n        }\n        //TODO error handle and notification\n        setAddress(address);\n        debounceAddress({address})\n        // debounce(() => {\n        //     if (handleOnAddressChange) {\n        //         handleOnAddressChange(address)\n        //     }\n        // }, wait)\n    }, [debounce, wait, handleAddressError])\n\n\n    return <Grid className={walletMap ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"} minHeight={540}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}\n                 style={{transform: \"translateY(-24px)\"}} flexWrap={'nowrap'}>\n        <Grid item>\n            <Typography component={'h4'} height={36} textAlign={'center'} variant={'h4'}>\n                {t('withdrawTitle')}\n            </Typography>\n            <Typography component={'p'} variant=\"body1\">\n                <Trans i18nKey=\"withdrawDescription\">\n                    Your withdrawal will be processed in the next batch, which usually takes <TypographyGood\n                    component={'span'}>30 minutes to 2 hours</TypographyGood>. (There will be <TypographyStrong\n                    component={'span'}> a large delay</TypographyStrong> if the Ethereum gas price <TypographyStrong\n                    component={'span'}>exceeds 500 GWei</TypographyStrong>.）\n                </Trans>\n            </Typography>\n\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <BasicACoinTrade {...{\n                ...rest,\n                t,\n                disabled,\n                walletMap,\n                tradeData,\n                coinMap,\n                inputButtonDefaultProps,\n                inputBtnRef: inputBtnRef,\n            }} />\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <TextField\n                value={address}\n                error={addressError && addressError.error ? true : false}\n                label={t('withdrawLabelAddress')}\n                placeholder={t('LabelPleaseInputWalletAddress')}\n                onChange={_handleOnAddressChange}\n                disabled={chargeFeeTokenList.length ? false : true}\n                required={true}\n                SelectProps={{IconComponent: DropDownIcon}}\n                helperText={<Typography component={'span'}\n                                        variant={'body2'}>{addressError && addressError.error ? addressError.message : ''}</Typography>}\n                fullWidth={true}\n            />\n        </Grid>\n        <Grid item marginTop={2} alignSelf={'stretch'}>\n            <RadioGroup row aria-label=\"withdraw\" name=\"withdraw\" value={_withdrawType}\n                        onChange={(e) => {\n                            _handleWithdrawTypeChange(e);\n                        }\n                        }>\n                {Object.keys(withdrawTypes).map((key) => {\n                    return <FormControlLabel key={key} value={key} control={<Radio/>}\n                                             label={`${t('withdrawTypeLabel' + key)}: ${withdrawTypes[ key ]}Gas`}/>\n                })}\n            </RadioGroup>\n        </Grid>\n        {/* TODO: check whether there's a need to show deposit fee */}\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <TextField\n                id=\"withdrawFeeType\"\n                select\n                label={t('withdrawLabelFee')}\n                value={feeIndex}\n                onChange={(event: React.ChangeEvent<any>) => {\n                    _handleFeeChange(event)\n                }}\n                disabled={chargeFeeTokenList.length ? false : true}\n                SelectProps={{IconComponent: DropDownIcon}}\n                fullWidth={true}\n            >{chargeFeeTokenList.map(({belong, fee}, index) => {\n                // @ts-ignore\n                return <MenuItem key={index} value={index} withNoCheckIcon={'true'}>\n                    <ListItemText primary={<Typography\n                        sx={{display: 'inline'}}\n                        component=\"span\"\n                        variant=\"body1\"\n                        color=\"text.primary\"\n                    >{belong}</Typography>} secondary={<Typography\n                        sx={{display: 'inline'}}\n                        component=\"span\"\n                        variant=\"body1\"\n                        color=\"text.primaryLight\"\n                    >{fee}</Typography>}/>\n                </MenuItem>\n            })\n            }</TextField>\n        </Grid>\n        <Grid item marginTop={2} alignSelf={'center'}>\n            <Button variant={'contained'} size={'medium'} color={'primary'} onClick={() => {\n                onWithdrawClick(tradeData)\n            }}\n                    style={{width: '200px'}}\n                    loading={!getDisabled() && withdrawBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={getDisabled() || withdrawBtnStatus === TradeBtnStatus.DISABLED ? true : false}\n            >{t(`withdrawLabelBtn`)}\n            </Button>\n            {/* TODO: link to last deposit history */}\n            <Box marginTop={2} display={'flex'} justifyContent={'center'}>\n                <Link component={RouterLink} to={'/'}> <Typography variant={'body2'}>\n                    {t('withdrawLabelLinkRecent')}\n\n                </Typography></Link>\n            </Box>\n        </Grid>\n    </Grid>\n}\n","import { Trans, WithTranslation } from 'react-i18next';\nimport React, { ChangeEvent } from 'react';\nimport { Box, Grid, Link, ListItemText, Typography } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { DropDownIcon, globalSetup, IBData } from 'static-resource';\nimport { Button, MenuItem, TextField, TradeBtnStatus } from '../../../';\nimport { TransferViewProps } from '../Interface';\nimport { BasicACoinTrade } from './BasicACoinTrade';\nimport { debounce } from 'lodash';\nimport { TypographyGood } from '..';\n\n\nexport const TransferWrap = <T extends IBData<I>,\n    I>({\n           t, disabled, walletMap, tradeData, coinMap,\n           addressDefault,\n           chargeFeeToken = 'ETH',\n           chargeFeeTokenList,\n           onTransferClick,\n           handleFeeChange,\n           transferBtnStatus,\n           handleOnAddressChange,\n           handleAddressError,\n           wait = globalSetup.wait,\n           ...rest\n       }: TransferViewProps<T, I> & WithTranslation) => {\n    // const [_chargeFeeToken, setChargeFeeToken] = React.useState<any | undefined>(\n    //     chargeFeeToken && chargeFeeTokenList.length ? chargeFeeTokenList[ chargeFeeToken as any ] : undefined);\n    const inputBtnRef = React.useRef();\n    const getDisabled = () => {\n        if (disabled || tradeData === undefined || walletMap === undefined || coinMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const inputButtonDefaultProps = {\n        label: t('transferLabelEnterToken'),\n    }\n\n\n    const [address, setAddress] = React.useState<string | undefined>(addressDefault?addressDefault:'');\n    const [addressError, setAddressError] = React.useState<{ error: boolean, message?: string | React.ElementType<HTMLElement> } | undefined>();\n    const [feeIndex, setFeeIndex] = React.useState<any | undefined>(0);\n\n    const debounceAddress = React.useCallback(debounce(({address}: any) => {\n        if (handleOnAddressChange) {\n                    handleOnAddressChange(address)\n                }\n    }, wait),[handleOnAddressChange,debounce])\n    const _handleOnAddressChange = React.useCallback((event) => {\n        const address = event.target.value;\n        if (handleAddressError) {\n            const error = handleAddressError(address)\n            if (error?.error) {\n                setAddressError(error)\n            }\n        }\n        //TODO error handle and notification\n        setAddress(address);\n        debounceAddress({address})\n        // debounce(() => {\n        //     if (handleOnAddressChange) {\n        //         handleOnAddressChange(address)\n        //     }\n        // }, wait)\n    }, [debounce, wait, handleAddressError])\n\n    const _handleFeeChange = React.useCallback((e: ChangeEvent<HTMLInputElement>) => {\n        const index = e.target ? Number(e.target.value) : 0;\n        setFeeIndex(index)\n        if (handleFeeChange) {\n            handleFeeChange(chargeFeeTokenList[ index ]);\n        }\n    }, [chargeFeeTokenList, handleFeeChange])\n\n    return <Grid className={walletMap ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'}\n                 alignItems={\"stretch\"} flex={1} height={'100%'} flexWrap={'nowrap'}\n    >\n        <Grid item>\n            <Typography component={'h4'} height={36} textAlign={'center'} variant={'h4'}>\n                {t('transferTitle')}\n            </Typography>\n            <Typography component={'p'} variant=\"body1\">\n                <Trans i18nKey=\"transferDescription\">\n                    Transfer to any valid Ethereum addresses instantly. Please <TypographyGood component={'span'}>make\n                    sure</TypographyGood> the recipient address <TypographyGood component={'span'}>accepts Loopring\n                    layer-2 </TypographyGood> payments before you proceed.\n                </Trans>\n            </Typography>\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <BasicACoinTrade {...{\n                ...rest,\n                t,\n                disabled,\n                walletMap,\n                tradeData,\n                coinMap,\n                inputButtonDefaultProps,\n                inputBtnRef: inputBtnRef,\n            }} />\n        </Grid>\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <TextField\n                value={address}\n                error={addressError && addressError.error ? true : false}\n                label={t('transferLabelAddress')}\n                placeholder={t('transferLabelAddressInput')}\n                onChange={_handleOnAddressChange}\n                disabled={chargeFeeTokenList.length ? false : true}\n                SelectProps={{IconComponent: DropDownIcon}}\n                required={true}\n                helperText={<Typography\n                    variant={'body2'}\n                    component={'span'}>{addressError && addressError.error ? addressError.message : ''}</Typography>}\n                fullWidth={true}\n            />\n        </Grid>\n\n        {/* TODO: check whether there's a need to show deposit fee */}\n        <Grid item marginTop={2} alignSelf={\"stretch\"}>\n            <TextField\n                id=\"transferFeeType\"\n                select\n                label={t('transferLabelFee')}\n                value={feeIndex}\n                onChange={(event: React.ChangeEvent<any>) => {\n                    _handleFeeChange(event)\n                }}\n                disabled={chargeFeeTokenList.length ? false : true}\n                SelectProps={{IconComponent: DropDownIcon}}\n                fullWidth={true}\n            >{chargeFeeTokenList.map(({belong, fee}, index) => {\n                // @ts-ignore\n                return <MenuItem key={index} value={index} withNoCheckIcon={'true'}>\n                    <ListItemText primary={<Typography\n                        sx={{display: 'inline'}}\n                        component=\"span\"\n                        variant=\"body1\"\n                        color=\"text.primary\"\n                    >{belong}</Typography>} secondary={<Typography\n                        sx={{display: 'inline'}}\n                        component=\"span\"\n                        variant=\"body1\"\n                        color=\"text.primaryLight\"\n                    >{fee}</Typography>}/>\n                </MenuItem>\n            })\n            }</TextField>\n        </Grid>\n        <Grid item marginTop={2} alignSelf={'center'}>\n            <Button variant={'contained'} size={'medium'} color={'primary'} onClick={() => {\n                onTransferClick(tradeData)\n            }}\n                    style={{width: '200px'}}\n                    loading={!getDisabled() && transferBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                    disabled={getDisabled() || transferBtnStatus === TradeBtnStatus.DISABLED ? true : false}\n            >{t(`transferLabelBtn`)}\n            </Button>\n            {/* TODO: link to last deposit history */}\n            <Box marginTop={2} display={'flex'} justifyContent={'center'}>\n                <Link component={RouterLink} to={'/'}> <Typography\n                    variant={'body2'}> {t('transferLabelLinkRecent')}</Typography></Link>\n            </Box>\n        </Grid>\n    </Grid>\n}\n","import { SwapTradeData, TradeBtnStatus } from '../../../Interface';\nimport {\n    CoinInfo,\n    CoinMap,\n    DropDownIcon, EmptyValueTag,\n    ExchangeIcon,\n    IBData,\n    ReverseIcon,\n    SlippageTolerance,\n    TradeCalcData\n} from 'static-resource';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Button, InputButton, PopoverPure } from '../../../../basic-lib';\nimport { bindTrigger, usePopupState } from 'material-ui-popup-state/hooks';\nimport { bindPopover } from 'material-ui-popup-state/es';\nimport { IconButtonStyled, SlippagePanel } from '../../';\nimport { SwapTradeProps } from './Interface';\nimport { useSettings } from '../../../../../stores';\n\n\nexport const SwapTradeWrap = <T extends IBData<I>,\n    I,\n    TCD extends TradeCalcData<I>>({\n                                      t,\n                                      onChangeEvent,\n                                      swapData, disabled,\n                                      handleError, swapBtnStatus,\n                                      onSwapClick, swapBtnI18nKey,\n                                      tradeCalcData,\n                                      tokenSellProps,\n                                      tokenBuyProps,\n                                      ...rest\n                                  }: SwapTradeProps<T, I, TCD> & WithTranslation) => {\n    const sellRef = React.useRef();\n    const buyRef = React.useRef();\n    const {slippage} = useSettings();\n    const slippageArray:Array<number|string> = SlippageTolerance.concat(`slippage:${slippage}`) as Array<number|string>;\n    const getDisabled = () => {\n        if (disabled || tradeCalcData === undefined || tradeCalcData.sellCoinInfoMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    const tradeData = swapData.tradeData\n    const handleOnClick = React.useCallback((_event: React.MouseEvent, ref: any) => {\n        const focus: 'buy' | 'sell' = ref.current === buyRef.current ? 'buy' : 'sell';\n        onChangeEvent(1, {tradeData: swapData.tradeData, type: focus, to: 'menu'});\n    }, [swapData, onChangeEvent])\n    const handleCountChange = React.useCallback((ibData: IBData<I>, _ref: any) => {\n        const focus: 'buy' | 'sell' = _ref?.current === buyRef.current ? 'buy' : 'sell';\n        if (swapData.tradeData[ focus ].tradeValue !== ibData.tradeValue) {\n            onChangeEvent(0, {tradeData: {...swapData.tradeData, [ focus ]: ibData}, type: focus, to: 'button'});\n        }\n    }, [swapData, onChangeEvent]);\n    const covertOnClick = React.useCallback(() => {\n        onChangeEvent(0, {\n            tradeData: {sell: swapData.tradeData.buy, buy: swapData.tradeData.sell} as SwapTradeData<T>,\n            type: 'exchange',\n            to: 'button'\n        });\n    }, [swapData, onChangeEvent]);\n    const _onSlippageChange = React.useCallback((slippage: number | string, customSlippage: number | string | undefined) => {\n        popupState.close();\n        onChangeEvent(0, {\n            ...swapData,\n            tradeData: {\n                ...swapData.tradeData,\n                slippage: slippage,\n                __cache__: {\n                    ...swapData.tradeData.__cache__,\n                    customSlippage: customSlippage\n                }\n            }\n        });\n    }, [swapData, onChangeEvent])\n    if (typeof handleError !== 'function') {\n        handleError = ({belong, balance, tradeValue}: any) => {\n            if (balance < tradeValue || (tradeValue && !balance)) {\n                return {error: true, message: t('tokenNotEnough', {belong: belong})}\n            }\n            return {error: false, message: ''}\n        }\n    }\n    const propsSell = {\n        label: t('tokenEnterPaymentToken'),\n        subLabel: t('tokenMax'),\n        emptyText: t('tokenSelectToken'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        ...tokenSellProps,\n        handleError,\n        handleCountChange,\n        handleOnClick,\n        ...rest\n    }\n    const propsBuy = {\n        label: t('tokenEnterReceiveToken'),\n        subLabel: t('tokenHave'),\n        emptyText: t('tokenSelectToken'),\n        placeholderText: '0.00',\n        maxAllow: false,\n        ...tokenBuyProps,\n        // handleError,\n        handleCountChange,\n        handleOnClick,\n        ...rest\n    }\n    const popupState = usePopupState({\n        variant: 'popover',\n        popupId: 'slippagePop',\n    })\n\n\n    return <Grid className={tradeCalcData ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}>\n        <Grid item>\n            <Grid container direction={\"column\"} spacing={1} alignItems={\"center\"} alignContent={\"center\"}>\n                <Grid item>\n                    <InputButton<any, I, CoinInfo<I>> ref={sellRef} disabled={getDisabled()}  {...{\n                        ...propsSell,\n                        inputData: tradeData ? tradeData.sell : {} as any,\n                        coinMap: tradeCalcData && tradeCalcData.sellCoinInfoMap ? tradeCalcData.sellCoinInfoMap : {} as CoinMap<I, CoinInfo<I>>\n                    }} />\n                </Grid>\n                <Grid item>\n                    <IconButtonStyled size={'medium'} onClick={covertOnClick} color=\"inherit\" aria-label={t('tokenExchange')}>\n                        <ExchangeIcon/>\n                    </IconButtonStyled>\n                </Grid>\n                <Grid item>\n                    <InputButton<any, I, CoinInfo<I>> ref={buyRef} disabled={getDisabled()} {...{\n                        ...propsBuy,\n                        // maxAllow:false,\n                        inputData: tradeData ? tradeData.buy : {} as any,\n                        coinMap: tradeCalcData && tradeCalcData.buyCoinInfoMap ? tradeCalcData.buyCoinInfoMap : {} as CoinMap<I, CoinInfo<I>>\n                    }} />\n                </Grid>\n            </Grid>\n        </Grid>\n        <Grid item>\n            <Typography component={'p'} variant=\"body1\" height={24} lineHeight={'24px'}>\n                {tradeData.buy.belong && tradeData.sell && tradeCalcData ? <>\n                    {`1${tradeData.sell?.belong} = ${tradeCalcData.StoB?tradeCalcData.StoB:EmptyValueTag} ${tradeData.buy?.belong}`}\n                    <IconButtonStyled  size={'small'} aria-label={t('tokenExchange')} onClick={covertOnClick}\n                                      // style={{transform: 'rotate(90deg)'}}\n                    ><ReverseIcon/></IconButtonStyled>\n                </> : EmptyValueTag}\n            </Typography>\n        </Grid>\n        <Grid item alignSelf={\"stretch\"}>\n            <Grid container direction={\"column\"} spacing={1} alignItems={\"stretch\"}>\n                <Grid item paddingBottom={3} sx={{color: 'text.secondary'}}>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"} height={24}>\n                        <Typography component={'p'} variant=\"body1\">{t('swapTolerance')}</Typography>\n                        <Typography component={'p'} variant=\"body1\">\n                            {tradeCalcData ? <>\n                                <span>\n                                    <IconButtonStyled\n                                        {...bindTrigger(popupState)}\n                                        size={'small'}\n                                        sx={{fontSize: '1.4rem', height: '24px', minWidth: '24px', width: '24px'}}\n                                        className={'clock-loading'}\n                                        color=\"inherit\"\n                                        aria-label=\"3' price update\">\n                                        <DropDownIcon/>\n                                    </IconButtonStyled>\n                                    <PopoverPure\n                                        className={'arrow-right'}\n                                        {...bindPopover(popupState)}\n                                        {...{\n                                            anchorOrigin: {vertical: 'bottom', horizontal: 'right'},\n                                            transformOrigin: {vertical: 'top', horizontal: 'right'}\n                                        }}\n                                    >\n                                        <SlippagePanel {...{\n                                            ...rest, t,\n                                            handleChange: _onSlippageChange,\n                                            slippageList: slippageArray,\n                                            slippage: tradeData.slippage ? tradeData.slippage : tradeCalcData.slippage ? tradeCalcData.slippage : 0.5\n                                        }} />\n                                    </PopoverPure>\n                                </span>\n                                <Typography\n                                    component={'span'}>{tradeData.slippage ? tradeData.slippage : tradeCalcData.slippage ? tradeCalcData.slippage : 0.5}%</Typography></> : EmptyValueTag\n                            }\n                        </Typography>\n                    </Grid>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}>\n                        <Typography component={'p'} variant=\"body1\"> {t('swapPriceImpact')}</Typography>\n                        <Typography component={'p'}\n                                    variant=\"body1\"> {t(tradeCalcData ? tradeCalcData.priceImpact : EmptyValueTag)} </Typography>\n                    </Grid>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}>\n                        <Typography component={'p'} variant=\"body1\"> {t('swapMinReceive')}</Typography>\n                        <Typography component={'p'}\n                                    variant=\"body1\">{t(tradeCalcData ? tradeCalcData.minimumReceived : EmptyValueTag)} </Typography>\n                    </Grid>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}>\n                        <Typography component={'p'} variant=\"body1\"> {t('swapFee')} </Typography>\n                        <Typography component={'p'}\n                                    variant=\"body1\">{t(tradeCalcData ? tradeCalcData.fee : EmptyValueTag)}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button variant={'contained'} size={'large'} color={'primary'} onClick={() => {\n                        onSwapClick(swapData.tradeData)\n                    }}\n                            loading={!getDisabled() && swapBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                            disabled={getDisabled() || swapBtnStatus === TradeBtnStatus.DISABLED }\n                            fullWidth={true}>{t(swapBtnI18nKey?swapBtnI18nKey:`swapBtn`)}\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n\n    </Grid>\n}\n\n","import styled from '@emotion/styled';\n\nexport const SvgStyled = styled.div`\n  & svg{\n    width: 24px;\n    height: 24px;\n  }\n`\n","import {\n    AmmData,\n    AmmInData,\n    DropDownIcon,\n    EmptyValueTag,\n    IBData,\n    LinkedIcon,\n    SlippageTolerance\n} from 'static-resource';\nimport { WithTranslation } from 'react-i18next';\nimport { AmmDepositWrapProps } from './Interface';\nimport { Button, InputCoin, PopoverPure } from '../../../../basic-lib';\nimport React from 'react';\nimport { bindTrigger, usePopupState } from 'material-ui-popup-state/hooks';\nimport { Grid, Typography } from '@material-ui/core';\nimport { IconButtonStyled } from '../../Styled';\nimport { bindPopover } from 'material-ui-popup-state/es';\nimport { SlippagePanel } from '../../tool';\nimport { TradeBtnStatus } from '../../../Interface';\nimport { SvgStyled } from './styled';\nimport { useSettings } from '../../../../../stores';\n\n\nexport const AmmDepositWrap = <T extends AmmData<C extends IBData<I> ? C : IBData<I>>,\n    I,\n    ACD extends AmmInData<I>,\n    C = IBData<I>>({\n                       t,\n                       disabled,\n                       ammDepositBtnStatus,\n                       ammCalcData,\n                       ammDepositBtnI18nKey,\n                       onAmmDepositClick,\n                       tokenAProps,\n                       tokenBProps,\n                       onChangeEvent,\n                       handleError,\n                       ammData,\n                       ...rest\n                   }: AmmDepositWrapProps<T, I, ACD, C> & WithTranslation) => {\n    const coinARef = React.useRef();\n    const coinBRef = React.useRef();\n    const {slippage} = useSettings();\n    const slippageArray:Array<number|string> = SlippageTolerance.concat(`slippage:${slippage}`) as Array<number|string>;\n    const getDisabled = () => {\n        if (disabled || ammCalcData === undefined || ammCalcData.coinInfoMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    if (typeof handleError !== 'function') {\n        handleError = ({belong, balance, tradeValue}: any) => {\n            if (balance < tradeValue || (tradeValue && !balance)) {\n                return {error: true, message: t('tokenNotEnough', {belong: belong})}\n            }\n            return {error: false, message: ''}\n        }\n    }\n    const handleCountChange = React.useCallback((ibData: IBData<I>, _ref: any) => {\n        const focus: 'coinA' | 'coinB' = _ref?.current === coinARef.current ? 'coinA' : 'coinB';\n        if (ammData[ focus ].tradeValue !== ibData.tradeValue) {\n            onChangeEvent({tradeData: {...ammData, [ focus ]: ibData}, type: focus});\n        }\n    }, [ammData, onChangeEvent]);\n    const propsA: any = {\n        label: t('labelTokenAmount'),\n        subLabel: t('labelAvailable'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        ...tokenAProps,\n        handleError,\n        handleCountChange,\n        ...rest\n    }\n    const propsB: any = {\n        label: t('labelTokenAmount'),\n        subLabel: t('labelAvailable'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        ...tokenBProps,\n        handleError,\n        handleCountChange,\n        ...rest\n    }\n    const popupState = usePopupState({\n        variant: 'popover',\n        popupId: 'slippagePop',\n    })\n    const _onSlippageChange = React.useCallback((slippage: number | string, customSlippage: number | string | undefined) => {\n        popupState.close();\n        onChangeEvent({\n            tradeData: {\n                ...ammData, slippage: slippage,\n                __cache__: {\n                    ...ammData.__cache__,\n                    customSlippage: customSlippage\n                }\n            }, type: 'coinA'\n        });\n    }, [ammData, onChangeEvent])\n\n\n    return <Grid className={ammCalcData ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}>\n        <Grid item marginTop={2}>\n            <Grid container direction={\"column\"} spacing={1} alignItems={\"center\"}>\n                <Grid item>\n                    <InputCoin<any, I, any> ref={coinARef} disabled={getDisabled()} {...{\n                        ...propsA,\n                        order: 'right',\n                        inputData: ammData ? ammData.coinA : {} as any,\n                        coinMap: ammCalcData ? ammCalcData.coinInfoMap : {} as any\n                    }}/>\n                </Grid>\n                <Grid item>\n                    <SvgStyled>\n                        <LinkedIcon/>\n                    </SvgStyled>\n                </Grid>\n                <Grid item>\n                    <InputCoin<any, I, any> ref={coinBRef} disabled={getDisabled()} {...{\n                        ...propsB,\n                        order: 'right',\n                        inputData: ammData ? ammData.coinB : {} as any,\n                        coinMap: ammCalcData ? ammCalcData.coinInfoMap : {} as any\n                    }}/>\n                </Grid>\n            </Grid>\n        </Grid>\n\n        <Grid item>\n            <Typography component={'p'} variant=\"body1\" height={20}>\n                {ammData.coinA.belong && ammData.coinB.belong && ammCalcData ? <>\n                    {`1${ammData.coinA?.belong} = ${ammCalcData.AtoB?ammCalcData.AtoB:EmptyValueTag} ${ammData.coinB?.belong}`}\n                </> :EmptyValueTag}\n            </Typography>\n        </Grid>\n        <Grid item alignSelf={\"stretch\"}>\n            <Grid container direction={\"column\"} spacing={1} alignItems={\"stretch\"}>\n                <Grid item paddingBottom={3} sx={{color: 'text.secondary'}}>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}\n                          height={24}>                                      \n                        <Typography component={'p'} variant=\"body1\">{t('swapTolerance')}</Typography>\n                        <Typography component={'p'} variant=\"body1\">\n\n                            {ammCalcData ? <>\n                                <span>\n                                    <IconButtonStyled\n                                        {...bindTrigger(popupState)}\n                                        sx={{fontSize: '1.4rem', height: '24px', minWidth: '24px', width: '24px'}}\n                                        className={'clock-loading'}\n                                        color=\"inherit\"\n                                        aria-label=\"3' price update\">\n                                        <DropDownIcon/>\n                                    </IconButtonStyled>\n                                    <PopoverPure\n                                        className={'arrow-right'}\n                                        {...bindPopover(popupState)}\n                                        {...{\n                                            anchorOrigin: {vertical: 'bottom', horizontal: 'right'},\n                                            transformOrigin: {vertical: 'top', horizontal: 'right'}\n                                        }}\n                                    >\n                                        <SlippagePanel {...{\n                                            ...rest, t,\n                                            handleChange: _onSlippageChange,\n                                            slippageList: slippageArray,\n                                            slippage: ammData.slippage ? ammData.slippage : ammCalcData.slippage ? ammCalcData.slippage : 0.5\n                                        }} />\n                                    </PopoverPure>\n                                </span>\n\n                                <Typography\n                                    component={'span'}>{ammData.slippage ? ammData.slippage : ammCalcData.slippage ? ammCalcData.slippage : 0.5}%</Typography></> : EmptyValueTag\n                            }\n                        </Typography>\n                    </Grid>\n\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}>\n                        <Typography component={'p'} variant=\"body1\"> {t('swapFee')} </Typography>\n                        <Typography component={'p'}\n                                    variant=\"body1\">{t(ammCalcData ? ammCalcData.fee : EmptyValueTag)}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button variant={'contained'} size={'large'} color={'primary'} onClick={() => {\n                        onAmmDepositClick(ammData)\n                    }}\n                            loading={!getDisabled() && ammDepositBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                            disabled={getDisabled() || ammDepositBtnStatus === TradeBtnStatus.DISABLED ? true : false}\n                            fullWidth={true}>\n                        {ammDepositBtnI18nKey ? t(ammDepositBtnI18nKey) : t(`labelAddLiquidityBtn`)}\n\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>\n}","import { AmmInData, CoinInfo, DropDownIcon, IBData, AmmData, SlippageTolerance, EmptyValueTag } from 'static-resource';\nimport { AmmWithdrawWrapProps } from './Interface';\nimport { WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { bindTrigger, usePopupState } from 'material-ui-popup-state/hooks';\nimport { Grid, Typography } from '@material-ui/core';\nimport { BtnPercentage, Button, InputCoin, PopoverPure, IconButtonStyled,TradeBtnStatus } from '../../../../';\nimport { bindPopover } from 'material-ui-popup-state/es';\nimport { SlippagePanel } from '../../tool';\nimport { useSettings } from '../../../../../stores';\n\nexport const AmmWithdrawWrap = <T extends AmmData<C extends IBData<I> ? C : IBData<I>>,\n    I,\n    ACD extends AmmInData<I>,\n    C = IBData<I>>({\n                       t,\n                       disabled,\n                       ammWithdrawBtnStatus,\n                       ammCalcData,\n                       onAmmWithdrawClick,\n                       tokenAProps,\n                       tokenBProps,\n                       anchors,\n                       ammWithdrawBtnI18nKey,\n                       onChangeEvent,\n                       handleError,\n                       ammData,\n                       selectedPercentage = -1,\n                       ...rest\n                   }: AmmWithdrawWrapProps<T, I, ACD, C> & WithTranslation) => {\n    const coinARef = React.useRef();\n    const coinBRef = React.useRef();\n    const {slippage} = useSettings();\n    const slippageArray:Array<number|string> = SlippageTolerance.concat(`slippage:${slippage}`) as Array<number|string>;\n    const [_selectedPercentage, setSelectedPercentage] = React.useState(selectedPercentage);\n\n    const getDisabled = () => {\n        if (disabled || ammCalcData === undefined || ammCalcData.coinInfoMap === undefined) {\n            return true\n        } else {\n            return false\n        }\n    };\n    if (typeof handleError !== 'function') {\n        handleError = ({belong, balance, tradeValue}: any) => {\n            if (balance < tradeValue || (tradeValue && !balance)) {\n                return {error: true, message: t('tokenNotEnough', {belong: belong})}\n            }\n            return {error: false, message: ''}\n        }\n    }\n    const handleCountChange = React.useCallback((ibData: IBData<I>, _ref: any, flag=-1) => {\n        let focus : 'coinA' | 'coinB' |'percentage';\n        if(flag !== _selectedPercentage ){\n            // console.log(flag,_selectedPercentage)\n            setSelectedPercentage(flag)\n        }\n        if(_ref){\n             focus= _ref?.current === coinARef.current ? 'coinA' : 'coinB';\n            if (ammData[ focus ].tradeValue !== ibData.tradeValue) {\n                onChangeEvent( {tradeData: {...ammData, [ focus ]: ibData}, type: focus});\n            }\n        } else{\n            onChangeEvent( {tradeData: {...ammData, [ 'coinA' ]: ibData}, type: 'percentage'});\n        }\n    }, [ammData, onChangeEvent]);\n    const onPercentage =(value:any)=>{\n        ammData['coinA'].tradeValue =  ammData['coinA'].balance * value/100;\n        handleCountChange(ammData['coinA'],null, value)\n    }\n    const _onSlippageChange = React.useCallback((slippage: number | string, customSlippage: number | string | undefined) => {\n        popupState.close();\n        onChangeEvent({\n            tradeData: {\n                ...ammData, slippage: slippage,\n                __cache__: {\n                    ...ammData.__cache__,\n                    customSlippage: customSlippage\n                }\n            }, type: 'coinA'\n        });\n    }, [ammData, onChangeEvent])\n    const propsA: any = {\n        label: t('labelTokenAmount'),\n        subLabel: t('labelAvailable'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        ...tokenAProps,\n        handleError,\n        handleCountChange,\n        ...rest\n    }\n    const propsB: any = {\n        label: t('labelTokenAmount'),\n        subLabel: t('labelAvailable'),\n        placeholderText: '0.00',\n        maxAllow: true,\n        ...tokenBProps,\n        handleError,\n        handleCountChange,\n        ...rest\n    }\n    const popupState = usePopupState({\n        variant: 'popover',\n        popupId: 'slippagePop',\n    })\n\n\n    return <Grid className={ammCalcData ? '' : 'loading'} paddingLeft={5 / 2} paddingRight={5 / 2} container\n                 direction={\"column\"}\n                 justifyContent={'space-between'} alignItems={\"center\"} flex={1} height={'100%'}>\n        <Grid item  marginTop={2}>\n            <Grid container direction={\"column\"} spacing={1} alignItems={\"center\"} >\n                <Grid item>\n                    <InputCoin<IBData<I>, I,CoinInfo<I>> ref={coinARef} disabled={getDisabled()} {...{\n                        ...propsA,\n                        order:'right',\n                        inputData: ammData ? ammData.coinA : {} as any,\n                        coinMap: ammCalcData ? ammCalcData.coinInfoMap: {} as any\n                    }}/>\n                </Grid>\n                {/*<Grid item>*/}\n                {/*    <SvgStyled>*/}\n                {/*        <LinkedIcon/>*/}\n                {/*    </SvgStyled>*/}\n                {/*</Grid>*/}\n                <Grid item marginTop={2}>\n                    <InputCoin<IBData<I>, I, CoinInfo<I>> ref={coinBRef} disabled={getDisabled()} {...{\n                        ...propsB,\n                        order:'right',\n                        inputData: ammData ? ammData.coinB : {} as any,\n                        coinMap: ammCalcData ? ammCalcData.coinInfoMap: {} as any\n                    }}/>\n                </Grid>\n                <Grid item alignSelf={'stretch'} marginTop={2}>\n                    <BtnPercentage selected={_selectedPercentage} anchors={anchors} handleChanged={onPercentage}></BtnPercentage>\n                </Grid>\n            </Grid>\n        </Grid>\n\n        <Grid item>\n            <Typography component={'p'} variant=\"body1\" height={20}>\n                {ammData.coinA.belong && ammData.coinB.belong && ammCalcData ? <>\n                    {`1${ammData.coinA?.belong} = ${ammCalcData.AtoB?ammCalcData.AtoB:EmptyValueTag} ${ammData.coinB?.belong}`}\n                </> : EmptyValueTag}\n            </Typography>\n        </Grid>\n        <Grid item alignSelf={\"stretch\"}>\n            <Grid container direction={\"column\"} spacing={1} alignItems={\"stretch\"}>\n                <Grid item paddingBottom={3} sx={{color: 'text.secondary'}}>\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}\n                          height={24}>\n                        <Typography component={'p'} variant=\"body1\">{t('swapTolerance')}</Typography>\n                        <Typography component={'p'} variant=\"body1\">\n\n                            {ammCalcData ? <>\n                                <span>\n                                    <IconButtonStyled\n                                        {...bindTrigger(popupState)}\n                                        sx={{fontSize: '1.4rem', height:'24px', minWidth:'24px', width:'24px'}}\n                                        className={'clock-loading'}\n                                        color=\"inherit\"\n                                        aria-label=\"3' price update\">\n                                        <DropDownIcon/>\n                                    </IconButtonStyled>\n                                    <PopoverPure\n                                        className={'arrow-right'}\n                                        {...bindPopover(popupState)}\n                                        {...{\n                                            anchorOrigin: {vertical: 'bottom', horizontal: 'right'},\n                                            transformOrigin: {vertical: 'top', horizontal: 'right'}\n                                        }}\n                                    >\n                                        <SlippagePanel {...{\n                                            ...rest, t,\n                                            handleChange: _onSlippageChange,\n                                            slippageList: slippageArray,\n                                            slippage: ammData.slippage ? ammData.slippage : ammCalcData.slippage ? ammCalcData.slippage : 0.5\n                                        }} />\n                                    </PopoverPure>\n                                </span>\n\n                                <Typography\n                                    component={'span'}>{ammData.slippage ? ammData.slippage : ammCalcData.slippage ? ammCalcData.slippage : 0.5}%</Typography></> : EmptyValueTag\n                            }\n                        </Typography>\n                    </Grid>\n\n                    <Grid container justifyContent={'space-between'} direction={\"row\"} alignItems={\"center\"}>\n                        <Typography component={'p'} variant=\"body1\"> {t('swapFee')} </Typography>\n                        <Typography component={'p'}\n                                    variant=\"body1\">{t(ammCalcData ? ammCalcData.fee : EmptyValueTag)}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid item>\n                    <Button variant={'contained'} size={'large'} color={'primary'} onClick={() => {\n                        onAmmWithdrawClick(ammData)\n                    }}\n                            loading={!getDisabled() && ammWithdrawBtnStatus === TradeBtnStatus.LOADING ? 'true' : 'false'}\n                            disabled={getDisabled() || ammWithdrawBtnStatus === TradeBtnStatus.DISABLED ? true : false}\n                            fullWidth={true}>\n                        {ammWithdrawBtnI18nKey ? t(ammWithdrawBtnI18nKey):t(`labelRemoveLiquidityBtn`)}\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>\n}\n\n","import { SwapProps, SwapTradeData } from '../Interface';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { SwitchPanel, SwitchPanelProps } from '../../basic-lib';\nimport { DropDownIcon, IBData, ProToLiteIcon, TradeCalcData } from 'static-resource';\nimport { useDeepCompareEffect } from 'react-use';\nimport clockLoading from 'common-resources/assets/svg/clock-loading.svg';\nimport { IconButtonStyled, SwapMenuList, SwapTradeWrap } from '../components';\nimport { SwapData } from '../components/panel/SwapWrap/Interface';\n\n\nexport const SwapPanel = withTranslation('common', {withRef: true})(<T extends IBData<I>,\n    I,\n    TCD extends TradeCalcData<I>>({\n                                      disabled,\n                                      handleSwapPanelEvent, tradeCalcData,\n                                      handleError,\n                                      onSwapClick,\n                                      swapBtnStatus,\n                                      tokenSellProps,\n                                      tokenBuyProps,\n                                      ...rest\n                                  }: SwapProps<T, I, TCD> & WithTranslation) => {\n    // useSettings()\n    let swapTradeData: SwapTradeData<T>\n    if (tradeCalcData && tradeCalcData.sellCoinInfoMap) {\n        swapTradeData = ({\n            // @ts-ignore\n            sell: {\n                belong: tradeCalcData.sellCoinInfoMap ? tradeCalcData.sellCoinInfoMap[ tradeCalcData.coinSell ]?.simpleName : undefined,\n                balance: tradeCalcData.walletMap ? tradeCalcData.walletMap[ tradeCalcData.coinSell ]?.count : 0\n            },\n            // @ts-ignore\n            buy: {\n                belong: tradeCalcData.sellCoinInfoMap ? tradeCalcData.sellCoinInfoMap[ tradeCalcData.coinBuy ]?.simpleName : undefined,\n                balance: tradeCalcData.walletMap ? tradeCalcData.walletMap[ tradeCalcData.coinBuy ]?.count : 0\n            },\n            slippage: tradeCalcData.slippage,\n        });\n    } else {\n        swapTradeData = {\n            // @ts-ignore\n            sell: {\n                belong: undefined,\n                balance: 0\n            },\n            // @ts-ignore\n            buy: {\n                belong: undefined,\n                balance: 0,\n            }\n        }\n\n    }\n\n    const [index, setIndex] = React.useState(0);\n    const [swapData, setSwapData] = React.useState<SwapData<SwapTradeData<T>>>({\n        to: 'button',\n        type: 'buy',\n        tradeData: {\n            ...swapTradeData\n        }\n    })\n\n    useDeepCompareEffect(() => {\n        if (rest.tradeData  &&   rest.tradeData !==  swapData.tradeData\n            // && (rest.tradeData.sell.tradeValue !== swapData.tradeData.sell.tradeValue\n            //     || rest.tradeData.buy.tradeValue !== swapData.tradeData.buy.tradeValue)\n            ) {\n            setSwapData({...swapData, tradeData: rest.tradeData});\n        }\n    }, [rest.tradeData])\n    const onChangeEvent = React.useCallback(async (_index: 0 | 1, {\n        to,\n        tradeData,\n        type\n    }: SwapData<SwapTradeData<T>>) => {\n        await handleSwapPanelEvent && handleSwapPanelEvent({\n            to,\n            tradeData,\n            type\n        }, type === 'exchange' ? 'exchange' : `${type}To${to}` as any);\n        if (typeof rest.onChangeEvent == 'function') {\n            setSwapData(rest.onChangeEvent(_index, {to, tradeData, type}));\n        } else {\n            if (type === 'exchange') {\n                const countBuy = (tradeData.buy.belong && tradeCalcData.walletMap) ? tradeCalcData.walletMap[ tradeData.buy.belong ]?.count : 0;\n                const countSell = (tradeData.sell.belong && tradeCalcData.walletMap) ? tradeCalcData.walletMap[ tradeData.sell.belong ]?.count : 0;\n                setSwapData({\n                    tradeData: {\n                        ...swapData.tradeData,\n                        sell: {belong: tradeData.sell.belong, balance: countSell, tradeValue: 0},\n                        buy: {belong: tradeData.buy.belong, balance: countBuy, tradeValue: 0},\n                    } as SwapTradeData<T>, to, type: 'buy'\n                });\n            } else if (to === 'menu') {\n                setSwapData({tradeData, to, type});\n            } else if (to === 'button') {\n                const count = (tradeData[ type ].belong && tradeCalcData.walletMap) ? tradeCalcData.walletMap[ tradeData[ type ].belong ]?.count : 0;\n                let _tradeData = {\n                    ...tradeData,\n                    [ type ]: {\n                        ...tradeData[ type ],\n                        balance: count ? count : 0,\n                    }\n                };\n                setSwapData({tradeData: _tradeData, to, type});\n            }\n        }\n        if (_index !== index) {\n            setIndex(_index);\n        }\n\n    }, [handleSwapPanelEvent, tradeCalcData, rest, index]);\n    const props: SwitchPanelProps<'tradeMenuList' | 'trade'> = {\n        index: index, // show default show\n        panelList: [\n            {\n                key: \"trade\",\n                element: () => <SwapTradeWrap<T, I, TCD> key={\"trade\"} {...{\n                    ...rest,\n                    swapData,\n                    tradeCalcData,\n                    onSwapClick,\n                    onChangeEvent,\n                    disabled,\n                    swapBtnStatus,\n                    tokenSellProps,\n                    tokenBuyProps,\n                    handleError,\n                }}/>,\n                toolBarItem: () => <Grid container justifyContent={'flex-end'}>\n                    <IconButtonStyled edge=\"end\"\n                                      className={'switch outline'}\n                                      color=\"inherit\"\n                                      aria-label=\"to Professional\">\n                        <ProToLiteIcon/>\n                    </IconButtonStyled>\n                    <IconButtonStyled edge=\"end\"\n                                      className={'clock-loading outline'}\n                                      color=\"inherit\"\n                                      aria-label=\"3' price update\">\n                        <img src={clockLoading} alt={'loading'} width={28} height={28}/>\n                    </IconButtonStyled>\n                </Grid>\n            },\n            {\n                key: \"tradeMenuList\",\n                element: () => <SwapMenuList<T, I, TCD> key={\"tradeMenuList\"} {...{\n                    ...rest,\n                    onChangeEvent,\n                    tradeCalcData,\n                    swapData\n                }}/>,\n                toolBarItem: () => <Grid container justifyContent={'flex-start'}>\n                    <IconButtonStyled edge=\"start\" sx={{transform: 'rotate(90deg)', transformOrigin: '50%'}}\n                                      className={'switch'}\n                                      color=\"inherit\"\n                                      onClick={() => onChangeEvent(0, swapData)}\n                                      aria-label=\"to Professional\">\n\n                        <DropDownIcon/>\n                    </IconButtonStyled>\n\n                </Grid>\n            },\n        ],\n\n    }\n    return <SwitchPanel {...{...rest, ...props}} />\n}) as <T extends IBData<I>,\n    I,\n    TCD extends TradeCalcData<I>> (props: SwapProps<T, I, TCD> & React.RefAttributes<any>) => JSX.Element;\n\n","import { DepositProps } from '../Interface';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { IBData } from 'static-resource';\nimport { SwitchPanel, SwitchPanelProps } from '../../basic-lib';\nimport { DepositWrap, TradeMenuList, useBasicTrade } from '../components';\nimport React from 'react';\n\nexport const DepositPanel = withTranslation('common', {withRef: true})(<T extends IBData<I>, I>(\n    {\n        // tradeData,\n        // disabled,\n        // coinMap,\n        // walletMap,\n        // handleError,\n        // walletMap,\n        // coinMap,\n        onDepositClick,\n        depositBtnStatus,\n        ...rest\n    }: DepositProps<T, I> & WithTranslation) => {\n\n    // const [transferData, setTransferData] = React.useState<SwitchData<T>>({\n    //     to: 'button',\n    //     tradeData: tradeData\n    // } as SwitchData<T>);\n    // const [index, setIndex] = React.useState(0);\n    const {\n        toolBarItemBack,\n        onChangeEvent,\n        index,\n        switchData\n\n    } = useBasicTrade({...rest});\n\n    const props: SwitchPanelProps<'tradeMenuList' | 'trade'> = {\n        index: index, // show default show\n        panelList: [{\n            key: \"trade\",\n            element: () => <DepositWrap<T, I> key={\"transfer\"}\n                                              {...{\n                                                  ...rest,\n                                                  tradeData: switchData.tradeData,\n                                                  onChangeEvent,\n                                                  disabled: rest.disabled ? true : false,\n                                                  // onCoinValueChange,\n                                                  // coinMap,\n                                                  // walletMap,\n                                                  // disabled,\n                                                  // handleError,\n                                                  onDepositClick,\n                                                  depositBtnStatus,\n                                              }} />,\n            toolBarItem: () => <></>\n        },\n            {\n                key: \"tradeMenuList\",\n                element: () => <TradeMenuList {...{\n                    ...rest,\n                    onChangeEvent,\n                    //rest.walletMap,\n                    selected: switchData.tradeData.belong,\n                    tradeData: switchData.tradeData,\n                    //oinMap\n                }}/>,\n                toolBarItem: () => <>{toolBarItemBack}</>\n            },]\n    }\n    return <SwitchPanel {...{...rest, ...props}} />\n}) as <T, I>(props: DepositProps<T, I> & React.RefAttributes<any>) => JSX.Element;\n\n// export const TransferModal = withTranslation()","import { ResetProps } from '../Interface';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { IBData } from 'static-resource';\nimport { SwitchPanel, SwitchPanelProps } from '../../basic-lib';\nimport { ResetWrap, TradeMenuList, useBasicTrade } from '../components';\nimport React from 'react';\n\nexport const ResetPanel = withTranslation('common', {withRef: true})(<T extends IBData<I>, I>(\n    {\n        // tradeData,\n        // disabled,\n        // coinMap,\n        // walletMap,\n        // handleError,\n\n        // walletMap,\n        // coinMap,\n        onResetClick,\n        resetBtnStatus,\n        fee,\n        ...rest\n    }: ResetProps<T, I> & WithTranslation) => {\n    const {\n        //toolbar UI\n        toolBarItemBack,\n        //Data, panel and function\n        onChangeEvent,\n        index,\n        switchData\n\n    } = useBasicTrade({...rest});\n\n    const props: SwitchPanelProps<'tradeMenuList' | 'trade'> = {\n        index: index, // show default show\n        panelList: [{\n            key: \"trade\",\n            element: () => <ResetWrap<T, I> key={\"transfer\"}\n                                            {...{\n                                                ...rest,\n                                                tradeData: switchData.tradeData,\n                                                onChangeEvent,\n                                                disabled: rest.disabled ? true : false,\n                                                // onCoinValueChange,\n                                                // coinMap,\n                                                // walletMap,\n                                                // disabled,\n                                                // handleError,\n                                                fee,\n                                                resetBtnStatus,\n                                                onResetClick,\n                                            }} />,\n            toolBarItem: () => <></>\n        },\n            {\n                key: \"tradeMenuList\",\n                element: () => <TradeMenuList {...{\n                    ...rest,\n                    onChangeEvent,\n                    //rest.walletMap,\n                    selected: switchData.tradeData.belong,\n                    tradeData: switchData.tradeData,\n                    //oinMap\n                }}/>,\n                toolBarItem: () => <>{toolBarItemBack}</>\n            },]\n    }\n    return <SwitchPanel {...{...rest, ...props}} />\n}) as <T, I>(props: ResetProps<T, I> & React.RefAttributes<any>) => JSX.Element;\n\n// export const TransferModal = withTranslation()","import { WithTranslation, withTranslation } from 'react-i18next';\nimport { SwitchPanel, SwitchPanelProps } from '../../basic-lib';\nimport { WithdrawProps } from '../Interface';\nimport { IBData } from 'static-resource';\nimport { TradeMenuList, useBasicTrade, WithdrawWrap } from '../components';\nimport React from 'react';\n\nexport const WithdrawPanel = withTranslation('common', {withRef: true})(<T extends IBData<I>, I>(\n    {\n        // tradeData,\n        // disabled,\n        // coinMap,\n        // walletMap,\n        // handleError,\n\n        // walletMap,\n        // coinMap,\n        chargeFeeTokenList,\n        onWithdrawClick,\n        withdrawBtnStatus,\n        ...rest\n    }: WithdrawProps<T, I> & WithTranslation) => {\n\n    // const [transferData, setTransferData] = React.useState<SwitchData<T>>({\n    //     to: 'button',\n    //     tradeData: tradeData\n    // } as SwitchData<T>);\n    // const [index, setIndex] = React.useState(0);\n    const {\n        //toolbar UI\n        toolBarItemBack,\n        //Data, panel and function\n        onChangeEvent,\n        index,\n        switchData\n\n    } = useBasicTrade({...rest});\n\n    const props: SwitchPanelProps<'tradeMenuList' | 'trade'> = {\n        index: index, // show default show\n        panelList: [{\n            key: \"trade\",\n            element: () => <WithdrawWrap<T, I> key={\"transfer\"}\n                                               {...{\n                                                   ...rest,\n                                                   chargeFeeTokenList: chargeFeeTokenList ? chargeFeeTokenList : [],\n                                                   tradeData: switchData.tradeData,\n                                                   onChangeEvent,\n                                                   disabled: rest.disabled ? true : false,\n                                                   onWithdrawClick,\n                                                   withdrawBtnStatus,\n\n                                               }} />,\n            toolBarItem: () => <></>\n        },\n            {\n                key: \"tradeMenuList\",\n                element: () => <TradeMenuList {...{\n                    ...rest,\n                    onChangeEvent,\n                    //rest.walletMap,\n                    selected: switchData.tradeData.belong,\n                    tradeData: switchData.tradeData,\n                    //oinMap\n                }}/>,\n                toolBarItem: () => <>{toolBarItemBack}</>\n            },]\n    }\n    return <SwitchPanel {...{...rest, ...props}} />\n}) as <T, I>(props: WithdrawProps<T, I> & React.RefAttributes<any>) => JSX.Element;","import { WithTranslation, withTranslation } from 'react-i18next';\nimport { SwitchPanel, SwitchPanelProps } from '../../basic-lib';\nimport { TransferProps } from '../Interface';\nimport { IBData } from 'static-resource';\nimport { TradeMenuList, TransferWrap, useBasicTrade } from '../components';\nimport React from 'react';\n\nexport const TransferPanel = withTranslation('common', {withRef: true})(<T extends IBData<I>, I>(\n    {\n        // tradeData,\n        // disabled,\n        // coinMap,\n        // walletMap,\n        // handleError,\n\n        // walletMap,\n        // coinMap,\n        chargeFeeTokenList,\n        onTransferClick,\n        transferBtnStatus,\n        ...rest\n    }: TransferProps<T, I> & WithTranslation) => {\n\n    // const [transferData, setTransferData] = React.useState<SwitchData<T>>({\n    //     to: 'button',\n    //     tradeData: tradeData\n    // } as SwitchData<T>);\n    // const [index, setIndex] = React.useState(0);\n    const {\n        //toolbar UI\n        toolBarItemBack,\n        //Data, panel and function\n        onChangeEvent,\n        index,\n        switchData\n\n    } = useBasicTrade({...rest});\n\n    const props: SwitchPanelProps<'tradeMenuList' | 'trade'> = {\n        index: index, // show default show\n        panelList: [{\n            key: \"trade\",\n            element: () => <TransferWrap<T, I> key={\"transfer\"}\n                                               {...{\n                                                   ...rest,\n                                                   chargeFeeTokenList: chargeFeeTokenList ? chargeFeeTokenList : [],\n                                                   tradeData: switchData.tradeData,\n                                                   onChangeEvent,\n                                                   disabled: rest.disabled ? true : false,\n                                                   onTransferClick,\n                                                   transferBtnStatus,\n\n                                               }} />,\n            toolBarItem: () => <></>\n        },\n            {\n                key: \"tradeMenuList\",\n                element: () => <TradeMenuList {...{\n                    ...rest,\n                    onChangeEvent,\n                    //rest.walletMap,\n                    selected: switchData.tradeData.belong,\n                    tradeData: switchData.tradeData,\n                    //oinMap\n                }}/>,\n                toolBarItem: () => <>{toolBarItemBack}</>\n            },]\n    }\n    return <SwitchPanel {...{...rest, ...props}} />\n}) as <T, I>(props: TransferProps<T, I> & React.RefAttributes<any>) => JSX.Element;","import styled from '@emotion/styled';\nimport { Box, BoxProps, Modal as MuiModal } from '@material-ui/core';\nimport {\n    AmmPanel,\n    AmmProps,\n    DepositPanel,\n    DepositProps,\n    ModalPanelProps,\n    ResetPanel,\n    ResetProps, SwapPanel, SwapProps,\n    TransferPanel,\n    TransferProps,\n    useOpenModals,\n    WithdrawPanel,\n    WithdrawProps\n} from '../../';\nimport { IBData } from 'static-resource';\n\n\nconst SwitchPanelStyled = styled(Box)<{ _height?: number|string, _width?: number|string }>`\n  & > div {\n    background-color: ${({theme}) => theme.colorBase.background().secondary};\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    ${({_width}) => `\n       width: ${_width && Number.isNaN(_width) ? _width + 'px' : _width ? _width : 'var(--transfer-modal-width)'};\n    `\n}\n  }\n\n  & .react-swipeable-view-container {\n    ${({_height}) => `\n       height: ${_height && Number.isNaN(_height) ? _height + 'px': _height? _height: 'unset'} ;\n    `\n}\n\n` as React.ElementType<{ _height?: number|string, _width?: number|string  } & BoxProps>\nconst Modal = ({open, onClose, content, height, width}: ModalPanelProps) => {\n    return <MuiModal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n    >\n        <SwitchPanelStyled {...{_height: height, _width: width}} style={{boxShadow: '24'}}>\n            {content}\n        </SwitchPanelStyled>\n    </MuiModal>\n}\n\nexport const ModalPanel = <T extends IBData<I>, I>({transferProps, withDrawProps, depositProps, resetProps, ammProps, swapProps}: {\n    transferProps: TransferProps<T, I>,\n    withDrawProps: WithdrawProps<T, I>,\n    depositProps: DepositProps<T, I>,\n    resetProps: ResetProps<T, I>\n    ammProps:  AmmProps<any,T,any>\n    swapProps:  SwapProps<T,I, any>\n}) => {\n    const {\n        modals,\n        setShowAmm,\n        setShowSwap,\n        setShowTransfer,\n        setShowDeposit,\n        setShowWithdraw,\n        setShowResetAccount\n    } = useOpenModals()\n    const {\n        isShowTransfer,\n        isShowWithdraw,\n        isShowDeposit,\n        isShowResetAccount,\n        isShowAmm,\n        isShowSwap\n    } = modals;\n    return <>\n        <Modal open={isShowTransfer.isShow} height={620} onClose={() => setShowTransfer({isShow: false})}\n               content={<TransferPanel<any,any> {...{...transferProps,...isShowTransfer.props}}> </TransferPanel>}/>\n        <Modal open={isShowWithdraw.isShow} height={620} onClose={() => setShowWithdraw({isShow: false})}\n               content={<WithdrawPanel<any,any> {...{...withDrawProps, ...isShowWithdraw.props}}  > </WithdrawPanel>}/>\n        <Modal open={isShowDeposit.isShow}\n               width={`var(--swap-box-width)`} onClose={() => setShowDeposit({isShow: false})}\n               content={<DepositPanel<any,any> {...{...depositProps, ...isShowDeposit.props}} > </DepositPanel>}/>\n        <Modal open={isShowResetAccount.isShow}\n               width={`var(--swap-box-width)`}\n               onClose={() => setShowResetAccount({...isShowResetAccount, isShow: false})}\n               content={<ResetPanel<any,any> {...{...resetProps,...isShowResetAccount.props}} > </ResetPanel>}/>\n        <Modal open={isShowAmm.isShow}  width={`var(--swap-box-width)`}\n               onClose={() => setShowAmm({...isShowAmm, isShow: false} as any)}\n               content={<AmmPanel<any,any,any> {...{...ammProps,...isShowAmm.props}} > </AmmPanel>}/>\n        <Modal open={isShowSwap.isShow}   width={`var(--swap-box-width)`}\n               onClose={() => setShowSwap({...isShowSwap, isShow: false} as any)}\n               content={<SwapPanel<any,any,any> {...{...swapProps,...isShowSwap.props}} > </SwapPanel>}/>\n    </>\n\n}","import { PanelContent, WrapStyled, } from '../../basic-lib';\nimport { AmmChgData, AmmWithdrawWrap, IconButtonStyled } from '../components';\nimport { Grid, Tab, Tabs, Toolbar } from '@material-ui/core';\nimport { AmmData, AmmInData, IBData, RefreshIcon } from 'static-resource';\nimport { AmmDepositWrap } from '../components/panel/AmmWrap/AmmDeposit';\nimport { WithTranslation, withTranslation } from 'react-i18next';\nimport { AmmProps, AmmPanelType } from './Interface';\nimport React from 'react';\nimport { useDeepCompareEffect } from 'react-use';\nimport { Box } from '@material-ui/core/';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@emotion/react';\n\nenum AmmPanelTypeMap {\n    Deposit = 0,\n    WithDraw = 1\n}\n\nconst TabPanelBtn = ({t, value, handleChange}: WithTranslation & any) => {\n    return <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n    >\n        <Tab label={t('labelLiquidityDeposit')} value={0}/>\n        <Tab label={t('labelLiquidityWithdraw')} value={1}/>\n    </Tabs>\n}\nexport const AmmPanel = withTranslation('common', {withRef: true})(<T extends AmmData<C extends IBData<I> ? C : IBData<I>>, I,\n    ACD extends AmmInData<I>,\n    C = IBData<I>>(\n    {\n        t,\n        tabSelected = AmmPanelType.Deposit,\n        ammDepositData,\n        ammWithdrawData,\n        disableDeposit,\n        disableWithdraw,\n        handleDepositEvent,\n        handleWithDrawEvent,\n        ammCalcData,\n        tokenDepositAProps,\n        tokenDepositBProps,\n        tokenWithDrawAProps,\n        tokenWithDrawBProps,\n        ammDepositBtnStatus,\n        ammWithdrawBtnStatus,\n        ammDepositBtnI18nKey,\n        ammWithdrawBtnI18nKey,\n        onAmmDepositClick,\n        onAmmWithdrawClick,\n        onChangeEvent,\n        handleError,\n        height,\n        width,\n        anchors,\n        ...rest\n    }: AmmProps<T, I, ACD, C> & WithTranslation) => {\n    const [index, setIndex] = React.useState(AmmPanelTypeMap[ tabSelected ]);\n    const [ammChgDepositData, setAmmChgDepositData] = React.useState<AmmChgData<T>>({tradeData: ammDepositData,type:'coinA'});\n    const [ammChgWithdrawData, setAmmChgWithdrawData] = React.useState<Pick<AmmChgData<T>, 'tradeData'> & { type?: 'coinA' | 'coinB' | 'percentage'}>({tradeData: ammWithdrawData});\n\n    //\n    useDeepCompareEffect(() => {\n        if (ammDepositData !== ammChgDepositData.tradeData) {\n            setAmmChgDepositData({...ammChgDepositData, tradeData: ammDepositData});\n        }\n        if (ammWithdrawData !== ammChgWithdrawData.tradeData && ammChgWithdrawData.type !== 'percentage' ) {\n            setAmmChgWithdrawData({...ammChgWithdrawData, tradeData: ammWithdrawData});\n        }\n    }, [ammDepositData,ammWithdrawData]);\n\n    const _onChangeDepositEvent = React.useCallback(async ({tradeData, type}: AmmChgData<T>) => {\n        await handleDepositEvent(tradeData, type)\n        if (typeof onChangeEvent == 'function') {\n            setAmmChgDepositData(onChangeEvent({tradeData, type} as AmmChgData<T>));\n        }else {\n            setAmmChgDepositData({tradeData, type})\n        }\n    }, [handleDepositEvent, onChangeEvent])\n    const _onChangeWithdrawEvent = React.useCallback(async ({\n                                                                tradeData,\n                                                                type,\n                                                                percentage\n                                                            }: Pick<AmmChgData<T>, 'tradeData'> & { type: 'coinA' | 'coinB' | 'percentage', percentage?: number }) => {\n\n        await handleWithDrawEvent(tradeData, type === 'percentage' ? 'coinA' : type)\n        if (typeof onChangeEvent == 'function') {\n            setAmmChgWithdrawData(onChangeEvent({tradeData, type} as AmmChgData<T>));\n        } else {\n            if(percentage){\n                console.log('from percentage')\n            }\n            setAmmChgWithdrawData({tradeData, type});\n\n            // if (type !== 'percentage') {\n            //     console.log('from Input',tradeData);\n            // } else {\n            //     console.log('from percentage',tradeData)\n            //     setAmmChgWithdrawData({tradeData,type});\n            // }\n        }\n\n    }, [handleWithDrawEvent, onChangeEvent]);\n    // const [tab, setTab] = React.useState(0);\n    const handleTabChange = React.useCallback((_event: any, newValue: any) => {\n        if (index !== newValue) {\n            setIndex(newValue);\n        }\n\n    }, [index]);\n    const panelList: Pick<PanelContent<\"ammDeposit\" | \"ammWithdraw\">, 'key' | 'element'>[] = [\n        {\n            key: \"ammDeposit\",\n            element: () => <AmmDepositWrap<T, I, ACD, C> key={\"ammDeposit\"} {...{\n                t,\n                ...rest,\n                disableDeposit,\n                ammDepositBtnStatus,\n                ammDepositBtnI18nKey,\n                ammCalcData,\n                onChangeEvent: _onChangeDepositEvent,\n                onAmmDepositClick,\n                handleError,\n                ammData:ammChgDepositData.tradeData,\n                tokenAProps: {...tokenDepositAProps},\n                tokenBProps: {...tokenDepositBProps},\n            }}/>,\n        },\n        {\n            key: \"ammWithdraw\",\n            element: () => <AmmWithdrawWrap<T, I, ACD, C> key={\"ammWithdraw\"} {...{\n                t,\n                ...rest,\n                anchors,\n                selectedPercentage:-1,\n                disableDeposit,\n                ammWithdrawBtnStatus,\n                ammWithdrawBtnI18nKey,\n                ammCalcData,\n                onChangeEvent: _onChangeWithdrawEvent,\n                onAmmWithdrawClick,\n                handleError,\n                ammData: ammChgWithdrawData.tradeData,\n                tokenAProps: {...tokenWithDrawAProps},\n                tokenBProps: {...tokenWithDrawBProps},\n            }}/>,\n        },\n    ];\n    const theme = useTheme();\n    return <WrapStyled height={height} width={width}>\n        <Grid container className={'container'} direction={'column'}\n              justifyContent={\"start\"} flexWrap={'nowrap'}>\n            <Toolbar variant={'dense'}  >\n                <Box alignSelf={'center'}>\n                    <TabPanelBtn {...{t, value: index, handleChange: handleTabChange, ...rest}} />\n                </Box>\n                <Box alignSelf={'center'}>\n                    <IconButtonStyled edge=\"end\"\n                                      className={'switch outline'}\n                                      color=\"inherit\"\n                                      aria-label=\"to Professional\">\n                        <RefreshIcon/>\n                    </IconButtonStyled>\n                </Box>\n\n            </Toolbar>\n            {/*<Grid item flex={1} justifyContent={'stretch'} alignItems={'stretch'} height={'100%'}>*/}\n            <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={index}>\n                {panelList.map((panel) => {\n                    return <Grid item justifyContent={'space-evenly'} alignItems={'stretch'} height={'100%'}\n                                 key={panel.key}>{panel.element()}</Grid>\n                })}\n            </SwipeableViews>\n            {/*</Grid>*/}\n        </Grid>\n    </WrapStyled>\n})  as <T extends AmmData<C extends IBData<I> ? C : IBData<I>>, I,\n    ACD extends AmmInData<I>,\n    C = IBData<I>>(props: AmmProps<T, I, ACD, C> & React.RefAttributes<any>) => JSX.Element;\n\n\n","import styled from \"@emotion/styled\";\nimport { Box, debounce, Grid, InputAdornment, OutlinedInput } from \"@material-ui/core\";\nimport { CoinInfo, CoinKey, globalSetup, SearchIcon } from 'static-resource';\nimport React from \"react\";\nimport { InputSelectProps } from \"./Interface\";\nimport { useFocusRef, usePanelRef } from \"../hooks\";\nimport { WithTranslation } from 'react-i18next';\n\n\nconst WrapStyled = styled(Box)`\n  padding: 0;\n  margin: 0;\n  flex: 1;\n  min-height: 100%;\n  width: 100%;\n  display: flex;\n\n  .search-wrap {\n    flex-grow: 1;\n    width: 100%;\n    min-width: 100%;\n    //& label{\n    //  display: none;\n    //}\n    //\n    .MuiInputBase-root {\n      margin: 0;\n      width: 100%;\n      max-width: inherit;\n      height: var(--toolbar-row-height);\n\n      .MuiInputBase-input {\n        height: inherit;\n      }\n    }\n\n` as typeof Box;\n\nfunction _InputSelect<C, I extends string = CoinKey<C>>({\n                                                            t,\n                                                            handleContentChange,\n                                                            wait = globalSetup.wait,\n                                                            panelRender,\n                                                            inputProps,\n                                                            placeholder,\n                                                            focusOnInput,\n                                                            selected,\n                                                        }: InputSelectProps<C, I> & WithTranslation, _ref: React.ForwardedRef<C>\n) {\n\n    const [value, setValue] = React.useState<{ selected: string | undefined, focusOnInput: boolean }>({\n        selected: '',\n        focusOnInput: focusOnInput ? focusOnInput : false\n    })\n    const debounceContentChange = debounce((props: any) => {\n        if (handleContentChange) {\n            handleContentChange(props)\n        }\n    }, wait)\n    const _handleContentChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue({...value, selected: event.target.value});\n        debounceContentChange(event.target.value)\n    }, [debounceContentChange, value])\n\n    const inputEle = useFocusRef({\n        shouldFocusOn: value.focusOnInput,\n        value: value.selected,\n    });\n    // let height = '100%';\n    // let width = '100%';\n    const panelRef = usePanelRef({\n        // callback:({current})=>{\n        //  height = current.offsetHeight;\n        //   width = current.offsetWidth;\n        // }\n    });\n    return <WrapStyled flexDirection={'column'} alignItems={'stretch'} justifyContent={\"flex-start\"} ref={_ref}>\n        <Grid container paddingBottom={2} paddingLeft={5 / 2} paddingRight={5 / 2}>\n            {/*<Grid item xs={12} flex={1}>*/}\n            <OutlinedInput\n                ref={inputEle}\n                {...inputProps}\n                key={'search'}\n                value={value.selected}\n                placeholder={t(selected ? selected : placeholder)}\n                onChange={_handleContentChange}\n                className={'search-wrap'}\n                aria-label={t(placeholder)}\n                startAdornment={<InputAdornment position=\"start\">\n                    <SearchIcon/>\n                </InputAdornment>}\n            />\n            {/*</Grid>*/}\n        </Grid>\n        <Box flex={1} ref={panelRef}>\n\n            {panelRender({selected, value: value.selected})}\n        </Box>\n    </WrapStyled>\n\n}\n\nexport const InputSelect = React.memo(React.forwardRef(_InputSelect)) as\n    <C, I = CoinInfo<C>>(props: InputSelectProps<C, I> & WithTranslation & React.RefAttributes<HTMLDivElement>) => JSX.Element;\n//as React.ComponentType<InputButtonProps<coinType,CoinInfo> & RefAttributes<HTMLDivElement>>;\n// export const InputSelectSearch=withTranslation()(()=><></>)","import { Avatar, Box, Button, ButtonProps, FormHelperText, FormLabel, Grid } from \"@material-ui/core\";\nimport styled from \"@emotion/styled\";\nimport { debounce } from \"lodash\"\nimport CurrencyInput from 'react-currency-input-field';\nimport { CoinInfo, DropDownIcon, getThousandFormattedNumbers, globalSetup, IBData } from 'static-resource';\nimport { InputButtonProps } from \"./Interface\";\nimport React from \"react\";\nimport { useFocusRef } from \"../hooks\";\nimport { useImage } from '../../resource';\n\nconst IWrap = styled(Box)`\n  .label-wrap {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-transform: capitalize;\n  }\n\n  .message-wrap {\n    .MuiFormHelperText-root {\n      color: ${({theme}) => theme.colorBase.error};\n      text-align: right;\n      font-size: ${({theme}) => theme.fontDefault.h6};\n    }\n\n  }\n\n  .sub-label {\n    text-align: right;\n    cursor: pointer;\n\n    .max-allow {\n      text-decoration: underline dotted;\n\n      &:hover {\n        color: ${({theme}) => theme.colorBase.primaryLight};\n      }\n    }\n\n    .no-balance {\n      text-decoration: none;\n    }\n  }\n\n  .btnInput-wrap {\n    background-color: ${({theme}) => theme.colorBase.background().outline};\n    border-radius: ${({theme}) => theme.unit / 2}px;\n    position: relative;\n    margin-top: ${({theme}) => `${theme.unit / 2}px`};\n    height: var(--btn-Input-height);\n\n    ::before {\n      content: '';\n      display: block;\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      top: 0;\n      left: 0;\n      box-sizing: border-box;\n      pointer-events: none;\n      z-index: 1;\n      ${({theme}) => `\n            ${theme.border.defaultFrame({c_key: 'blur'})};\n            ${theme.mode === 'dark' ? `border-color: transparent` : ''};\n     `};\n    }\n\n\n    &.error {\n      input {\n        ${({theme}) => `\n            ${theme.border.defaultFrame({c_key: theme.colorBase.error})};\n            border-top-left-radius: 0px;\n            border-bottom-left-radius: 0px;\n          `};\n\n      }\n    }\n  }\n\n  .input-wrap {\n    //min-width: 128px;\n    // width: 100%;\n    flex: 1;\n    height: 100%\n  }\n\n  .btn-wrap {\n    max-width: var(--btn-max-width);\n    min-width: var(--btn-min-width);\n\n    .MuiButton-label {\n      justify-content: flex-start;\n    }\n\n  }\n\n` as typeof Box\nconst ISBtn = styled(Button)<ButtonProps & { logoColor?: any }>`\n  && {\n    width: 100%;\n    height: 100%;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-right: 1px solid transparent;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-size: ${({theme}) => theme.fontDefault.h5};\n    color: ${({theme}) => theme.colorBase.textPrimary};\n\n    .placeholder {\n      color: ${({theme}) => theme.colorBase.textSecondary};\n    }\n  }\n\n  // .logo-icon svg {\n    //   color: ${({logoColor}) => logoColor}\n  // }\n  .MuiAvatar-root {\n    width: 24px;\n    height: 24px;\n  }\n\n  .MuiButton-endIcon svg {\n    color: ${({theme}) => theme.colorBase.textPrimary}\n      // color: ${({logoColor}) => logoColor}\n  }\n\n  &:hover, &:active {\n      //color: ${({theme}) => theme.colorBase.primaryLight};\n    color: ${({theme}) => theme.colorBase.textPrimary};\n    background-color: ${({theme}) => theme.colorBase.background().hover};\n  }\n` as React.ComponentType<ButtonProps & { logoColor?: any }>;\nconst IInput = styled(CurrencyInput)`\n  text-align: right;\n  color: ${({theme}) => theme.colorBase.textPrimary};;\n\n  ::placeholder {\n    color: ${({theme}) => theme.colorBase.textSecondary};;\n  }\n;\n  width: 100%; //calc(100% - 2rem);\n  height: 100%; //var(--btn-Input-height);\n  border: 0;\n  margin: 0;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n  ${({theme}) => `\n    border-left:  ${theme.border.borderConfig({c_key: 'blur'})};\n    ${theme.mode === 'dark' ? `border-color: transparent` : ''};\n  `};\n  font-size: ${({theme}) => theme.fontDefault.h4};\n  display: block;\n  padding: .8rem 1rem;\n  min-width: 0;\n  background: none;\n  box-sizing: border-box;\n  animation-name: mui-auto-fill-cancel;\n  letter-spacing: inherit;\n  animation-duration: 10ms;\n  -webkit-tap-highlight-color: transparent;\n\n  :focus {\n    outline: 0;\n\n    ${({theme}) => `\n        ${theme.border.defaultFrame({c_key: 'focus',d_R: 0.5})};\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n     `};\n  }\n}\n\n` as typeof CurrencyInput\n\nfunction _InputButton<T extends IBData<C>, C, I extends CoinInfo<C>>({\n                                                                         label = \"Enter token\",\n                                                                         handleError,\n                                                                         subLabel = \"Max\",\n                                                                         wait = globalSetup.wait,\n                                                                         coinMap,\n                                                                         maxAllow,\n                                                                         disabled,\n                                                                         emptyText = 'tokenSelectToken',\n                                                                         placeholderText = '0.00',\n                                                                         inputData,\n                                                                         handleCountChange,\n                                                                         handleOnClick,\n                                                                         focusOnInput,\n                                                                         name,\n                                                                         // isAllowBalanceClick\n                                                                     }\n                                                                         : InputButtonProps<T, C, I>, ref: React.ForwardedRef<any>) {\n    const {balance, belong, tradeValue} = (inputData ? inputData : {}) as IBData<C>;\n    const [sValue, setsValue] = React.useState<number | undefined>(tradeValue ? tradeValue : undefined);\n    // let _error = {error: false, message: ''};\n    // if (handleError && inputData) {\n    //     let error:any = handleError(inputData, ref);\n    //     _error = error ? error : {error: false}\n    // }\n    const _handleError = (value:any)=>{\n        if (handleError) {\n            let _error = handleError({balance: Number(balance), belong, ...{tradeValue: value}, maxAllow} as T & {maxAllow?:boolean} , ref);\n            setError(_error ? _error : {error: false});\n        }\n    }\n    const [error, setError] = React.useState<{ error: boolean, message?: string | React.ElementType }>({error: false, message: ''});\n    const inputCallback = React.useCallback(({current}) => {\n            if (inputData  && (inputData.tradeValue !== Number(current?.value))) {\n                setsValue(inputData.tradeValue);\n                _handleError(inputData.tradeValue);\n                // debounceCount({...inputData, ...{tradeValue: inputData.tradeValue}})\n                // _handleContChange(current?.value, name)\n            }\n        },\n        [inputData,name])\n    const inputEle = useFocusRef({\n        callback: inputCallback,\n        shouldFocusOn: focusOnInput,\n        value: tradeValue,\n    });\n    const debounceCount = debounce(({...props}: any) => {\n        if (handleCountChange) {\n            handleCountChange({...props}, ref)\n        }\n    }, wait)\n    const _handleContChange = React.useCallback((value: any, _name: any) => {\n            _handleError(value);\n            setsValue(value);\n            debounceCount({...inputData, ...{tradeValue: value}})\n        }\n        , [debounceCount, _handleError, inputData])\n    // const _handleContChange =\n    // const _handleOnClick = React.useCallback((event: React.MouseEvent) => {\n    //     if (handleOnClick) handleOnClick(event,ref)\n    // }, [])\n    const _handleMaxAllowClick = (_event: React.MouseEvent) => {\n        if (maxAllow) {\n            _handleContChange(balance,name)\n            //setsValue(balance);\n        }\n    }\n    const coinInfo: any = coinMap[ belong ] ? coinMap[ belong ] : {};\n    const hasLoaded = useImage(coinInfo.icon ? coinInfo.icon : '').hasLoaded;\n    // formatValue(sValue)\n    return <> <IWrap component={'div'} ref={ref}>\n        <Grid container component={'div'} className={'label-wrap'} justifyContent={'space-between'}\n              paddingBottom={1 / 2}>\n            <Grid item xs={6}><FormLabel className={'main-label'}>{label}</FormLabel></Grid>\n            <Grid item xs={6} className={'sub-label'}>{subLabel && belong ?\n                <FormLabel className={maxAllow && balance > 0 ? \"max-allow\" : 'no-balance'}\n                           onClick={_handleMaxAllowClick}>\n                    {<span>{balance > 0 ? subLabel + ':' : ''}</span>}\n                    <span>{getThousandFormattedNumbers(balance)}</span>\n                </FormLabel> : null}</Grid>\n        </Grid>\n        <Grid container className={`btnInput-wrap ${error.error ? 'error' : ''}`} wrap={'nowrap'} alignItems={'stretch'}\n              alignContent={'stretch'}>\n            <Grid item className={'btn-wrap'}>\n                <ISBtn onClick={(event) => handleOnClick(event, ref)} endIcon={<DropDownIcon/>} disabled={disabled}>\n                    {belong ?\n                        <Grid container align-items={'center'} display={'flex'}>\n                            <Grid item className={'logo-icon'}>\n                                {/*//TODO:*/}\n                                {/*<Avatar alt={coinMap[ belong ]?.simpleName} src={coinMap[ belong ]?.icon} />*/}\n                                {/*<Avatar alt={coinMap[ belong ]?.simpleName}*/}\n                                {/*        src=\"https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png\"/>*/}\n                                <Avatar variant=\"square\" alt={coinMap[ belong ]?.simpleName}\n                                    // src={sellData?.icon}\n                                        src={hasLoaded ? coinMap[ belong ]?.icon : 'static/images/icon-default.png'}/>\n                            </Grid>\n                            <Grid item paddingLeft={1}>{coinMap[ belong ]?.simpleName}</Grid>\n                        </Grid>\n                        : <span className={'placeholder'}>{emptyText}</span>\n                    }\n                </ISBtn>\n            </Grid>\n            <Grid item className={'input-wrap'}>\n                <IInput ref={inputEle} onValueChange={_handleContChange} value={sValue} allowNegativeValue={false}  name={name}\n                        disabled={!disabled || belong ? false : true}\n                        placeholder={placeholderText}\n                        aria-placeholder={placeholderText} aria-label={label} decimalsLimit={10000000}></IInput>\n\n            </Grid>\n        </Grid>\n        <Grid container className={'message-wrap'} wrap={'nowrap'} alignItems={'stretch'} alignContent={'stretch'}\n              justifyContent={'flex-end'}>\n            <Grid item><FormHelperText>{error.message}</FormHelperText></Grid>\n        </Grid>\n\n    </IWrap>\n    </>\n\n}\n\nexport const InputButton = React.memo(React.forwardRef(_InputButton)) as\n    <T extends IBData<C>, C, I extends CoinInfo<C>>(props: InputButtonProps<T, C, I> & React.RefAttributes<any>) => JSX.Element;\n//as React.ComponentType<InputButtonProps<coinType,CoinInfo> & RefAttributes<HTMLDivElement>>;\n","import { experimentalStyled, InputAdornment, TextField, } from \"@material-ui/core\";\nimport styled from \"@emotion/styled\";\nimport {\n    DatePicker as MuDatePicker,\n    DatePickerProps as MuDatePickerProps,\n    DateRangeDelimiter,\n    DateRangePicker as MuDateRangePicker,\n    DateRangePickerProps as MuDateRangePickerProps\n} from '@material-ui/pickers';\n\nimport { TFunction } from 'i18next';\nimport { CalendarIcon } from 'static-resource';\n\nconst DateTextField = styled(TextField)`\n  position: relative;\n\n  && .MuiInputBase-input {\n    padding-right: 1rem;\n    position: relative;\n    padding-right: 0px;\n    cursor: pointer;\n    pointer-events: none;\n  }\n\n  .MuiIconButton-label {\n    width: 100%;\n    display: flex;\n    align-items: inherit;\n    justify-content: inherit;\n  }\n\n  .MuiIconButton-edgeEnd, .MuiInputAdornment-positionEnd {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 1px;\n    padding: 0;\n    height: auto;\n    //text-indent: -.4rem;\n    margin-left: -.4rem;\n    //padding-right: .4rem;\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n\n    & svg {\n      font-size: 1.8rem;\n      color: ${({theme}) => theme.colorBase.textPrimary}\n    }\n\n      //color: ${({theme}) => theme.colorBase.primaryLight}\n  }\n\n  .MuiInputAdornment-positionEnd.date-range-adornment {\n    pointer-events: none;\n    cursor: pointer;\n    top: 2px;\n    margin-left: -.8rem;\n\n  }\n\n`;\n\nexport type DateRangePickerProps = {} & Omit<MuDateRangePickerProps, 'renderInput'>;\n\nexport const DateRangePicker = experimentalStyled(({...props}: DateRangePickerProps & { t: TFunction }) => {\n\n    return <MuDateRangePicker\n        {...props}\n        calendars={props.calendars ? props.calendars : 2}\n        mask={props.mask ? props.mask : \"__-__-__\"}\n        inputFormat={props.inputFormat ? props.inputFormat : 'YY-MM-DD'}\n        openPickerIcon={<CalendarIcon/>}\n        OpenPickerButtonProps={props.OpenPickerButtonProps}\n        renderInput={(startProps, endProps) => {\n            startProps.InputProps = {\n                ...startProps.InputProps, endAdornment: (\n                    <InputAdornment position=\"end\" component={'button'} className={'date-range-adornment'}>\n                        <span className={'MuiIconButton-label'}>\n                            <CalendarIcon/>\n                        </span>\n                    </InputAdornment>\n                )\n            }\n            endProps.InputProps = {\n                ...endProps.InputProps, readOnly: true, endAdornment: (\n                    <InputAdornment position=\"end\" component={'button'} className={'date-range-adornment'}>\n                        <span className={'MuiIconButton-label'}>\n                            <CalendarIcon/>\n                        </span>\n                    </InputAdornment>\n                )\n            }\n            return (<>\n                <DateTextField {...{...startProps, helperText: null}} placeholder={'YY-MM-DD'}/>\n                <DateRangeDelimiter>TO</DateRangeDelimiter>\n                <DateTextField {...{...endProps, helperText: null}} placeholder={'YY-MM-DD'}/>\n            </>)\n        }\n        }\n    />\n})<DateRangePickerProps>`\n\n` as React.ComponentType<DateRangePickerProps & { t?: TFunction }>\n\nexport type DatePickerProps = {} & Omit<MuDatePickerProps, 'renderInput'>;\nexport const DatePicker = styled(({\n                                      t,\n                                      inputFormat,\n                                      value,\n                                      ...props\n                                  }: DatePickerProps & { t?: TFunction }) => <MuDatePicker\n\n    disableFuture={props.disableFuture ? props.disableFuture : true}\n    mask={props.mask ? props.mask : \"__-__-__\"}\n    inputFormat={inputFormat ? inputFormat : 'YY-MM-DD'}\n    openTo={props.openTo ? props.openTo : 'date'}\n    views={props.views ? props.views : [\"year\", \"date\"]}\n    value={value}\n    openPickerIcon={<CalendarIcon/>}\n    renderInput={(props) => {\n        props.InputProps = {...props.InputProps}\n        return (<DateTextField {...{...props, helperText: null}}  />)\n    }}\n    {...props} />\n)<DatePickerProps>`\n\n` as React.ComponentType<DatePickerProps & { t?: TFunction }>\n// (({ theme }) => ({\n//     position: 'relative',\n//     '& .MuiIconButton-edgeEnd': {\n//         position: 'absolute',\n//         left: 0,\n//         right: 0,\n//         padding: 0,\n//         height: '100%',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         color: theme.palette.primary.light\n//     }\n// }))\n","import styled from \"@emotion/styled\";\nimport { FormControlLabel as MuFormControlLabel, TextField as MuTextField } from \"@material-ui/core\";\n\nexport const FormControlLabel = styled(MuFormControlLabel)`\n  && {\n    padding-right: ${({theme}) => theme.unit * 2}px;\n    background-color: ${({theme}) => theme.colorBase.background().outline};\n    ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 0.5})};\n  }\n`\nexport const TextField = styled(MuTextField)`\n  label + & {\n    //margin-top: 24px;\n    margin-top: 0;\n  }\n\n  && {\n    .MuiSelect-nativeInput + svg {\n      position: absolute;\n      right: .4rem;\n      top:  ${({theme}) => theme.unit }px;\n      color: ${({theme}) => theme.colorBase.textSecondary};\n    }\n\n    &:not(.MuiFormControl-fullWidth) {\n      max-width: 260px;\n\n    }\n\n    text-overflow: fade();\n  }\n\n  &:focus {\n    ${({theme}) => theme.border.defaultFrame({c_key: 'focus', d_R: 0.5})};\n    outline: transparent;\n  }\n` as typeof MuTextField;\n","import { Avatar, Box, BoxProps, FormHelperText, FormLabel, Grid } from \"@material-ui/core\";\nimport styled from \"@emotion/styled\";\nimport { debounce } from \"lodash\"\nimport CurrencyInput from 'react-currency-input-field';\nimport { CoinInfo, getThousandFormattedNumbers, globalSetup, IBData } from 'static-resource';\nimport { InputCoinProps } from \"./Interface\";\nimport React from \"react\";\nimport { useFocusRef } from \"../hooks\";\nimport { useImage } from '../../resource';\n\nconst IWrap = styled(Box)`\n  .label-wrap {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-transform: capitalize;\n  }\n\n  .message-wrap {\n    .MuiFormHelperText-root {\n      color: ${({theme}) => theme.colorBase.error};\n      text-align: right;\n      font-size: ${({theme}) => theme.fontDefault.h6};\n    }\n\n  }\n\n  .sub-label {\n    text-align: right;\n    cursor: pointer;\n\n    .max-allow {\n      text-decoration: underline dotted;\n\n      &:hover {\n        color: ${({theme}) => theme.colorBase.primaryLight};\n      }\n    }\n\n    .no-balance {\n      text-decoration: none;\n    }\n  }\n\n  .coinInput-wrap {\n    background-color: ${({theme}) => theme.colorBase.background().outline};\n    border-radius: ${({theme}) => theme.unit / 2}px;\n    position: relative;\n    margin-top: ${({theme}) => `${theme.unit / 2}px`};\n    height: var(--btn-Input-height);\n\n    ::before {\n      content: '';\n      display: block;\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      top: 0;\n      left: 0;\n      box-sizing: border-box;\n      pointer-events: none;\n      z-index: 1;\n      ${({theme}) => `\n            ${theme.border.defaultFrame({c_key: 'blur'})};\n            ${theme.mode === 'dark' ? `border-color: transparent` : ''};\n     `};\n    }\n\n\n    &.error {\n      .input-wrap-right input {\n        ${({theme}) => `\n            ${theme.border.defaultFrame({c_key: theme.colorBase.error, d_R: 0.5})};\n            border-top-left-radius: 0px;\n            border-bottom-left-radius: 0px;\n          `};\n\n      }\n      .input-wrap-left input {\n        ${({theme}) => `\n            ${theme.border.defaultFrame({c_key: theme.colorBase.error, d_R: 0.5})};\n            border-top-right-radius: 0px;\n            border-bottom-right-radius: 0px;\n          `};\n\n      }\n    }\n  }\n\n  .input-wrap {\n    //min-width: 128px;\n    // width: 100%;\n    flex: 1;\n    height: 100%\n  }\n\n  .icon-wrap {\n    max-width: var(--btn-max-width);\n    min-width: var(--coin-min-width);\n  \n    //.MuiButton-label {\n    //  justify-content: flex-start;\n    //}\n\n  }\n\n` as typeof Box\nconst CoinWrap = styled(Box)<BoxProps & { logoColor?: any }>`\n  & {\n   \n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-right: 1px solid transparent;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-size: ${({theme}) => theme.fontDefault.h5};\n    color: ${({theme}) => theme.colorBase.textPrimary};\n\n    .placeholder {\n      color: ${({theme}) => theme.colorBase.textSecondary};\n    }\n  }\n  &.icon-wrap-right > div{\n     justify-content: flex-start;\n     padding-left:${({theme}) => theme.unit/2 * 3}px;\n     align-items: center;\n  }\n  &.icon-wrap-left > div{\n    justify-content: flex-end;\n    padding-right:${({theme}) => theme.unit/2 * 3}px;\n    align-items: center;\n  }\n  \n  .MuiAvatar-root {\n    width: 24px;\n    height: 24px;\n  }\n\n  // .MuiButton-endIcon svg {\n  //   color: ${({theme}) => theme.colorBase.textPrimary}\n  // }\n\n  // &:hover, &:active {\n  //     //color: ${({theme}) => theme.colorBase.primaryLight};\n  //   color: ${({theme}) => theme.colorBase.textPrimary};\n  //   background-color: ${({theme}) => theme.colorBase.background().hover};\n  // }\n` as React.ComponentType<BoxProps & { logoColor?: any }>;\nconst IInput = styled(CurrencyInput)`\n  \n  color: ${({theme}) => theme.colorBase.textPrimary};\n\n  ::placeholder {\n    color: ${({theme}) => theme.colorBase.textSecondary};\n  }\n\n  width: 100%; //calc(100% - 2rem);\n  height: 100%; //var(--btn-Input-height);\n  border: 0;\n  margin: 0;\n  \n \n  font-size: ${({theme}) => theme.fontDefault.h4};\n  display: block;\n  padding: .8rem 1rem;\n  min-width: 0;\n  background: none;\n  box-sizing: border-box;\n  animation-name: mui-auto-fill-cancel;\n  letter-spacing: inherit;\n  animation-duration: 10ms;\n  -webkit-tap-highlight-color: transparent;\n\n  :focus {\n    outline: 0;\n  }\n  .input-wrap-right &{\n    text-align: right;\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n    ${({theme}) => `\n        border-left:  ${theme.border.borderConfig({c_key: 'blur'})};\n        ${theme.mode === 'dark' ? `border-color: transparent` : ''};\n    `};\n    :focus {\n      ${({theme}) => `\n        ${theme.border.defaultFrame({c_key: 'focus', d_R: 0.5})};\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n     `};\n    }\n  }\n\n  .input-wrap-left &{\n    text-align: left;\n    border-top-right-radius: 0px;\n    border-bottom-right-radius: 0px;\n    ${({theme}) => `\n        border-right:  ${theme.border.borderConfig({c_key: 'blur'})};\n        ${theme.mode === 'dark' ? `border-color: transparent` : ''};\n    `};\n    :focus {\n      ${({theme}) => `\n        ${theme.border.defaultFrame({c_key: 'focus',d_R: 0.5})};\n        border-top-right-radius: 0px;\n        border-bottom-right-radius: 0px;\n     `};\n    }\n  }\n}\n\n` as typeof CurrencyInput\n\nfunction _InputCoin<T extends IBData<C>, C, I extends CoinInfo<C>>({\n                                                                         order = 'left',\n                                                                         label = \"Amount\",\n                                                                         handleError,\n                                                                         subLabel = \"Available\",\n                                                                         wait = globalSetup.wait,\n                                                                         coinMap,\n                                                                         maxAllow,\n                                                                         disabled,\n                                                                         placeholderText = '0.00',\n                                                                         inputData,\n                                                                         handleCountChange,\n                                                                         focusOnInput,\n\n                                                                     }\n                                                                         : InputCoinProps<T, C, I>, ref: React.ForwardedRef<any>) {\n    const {balance, belong, tradeValue} = (inputData ? inputData : {}) as IBData<C>;\n    const [sValue, setsValue] = React.useState<number | undefined>(tradeValue ? tradeValue : undefined);\n    // let _error = {error: false, message: ''};\n    // if (handleError && inputData) {\n    //     let error:any = handleError(inputData, ref);\n    //     _error = error ? error : {error: false}\n    // }\n    const _handleError = (value:any)=>{\n        if (handleError) {\n            let _error = handleError({balance: Number(balance), belong, ...{tradeValue: value}} as T, ref);\n            setError(_error ? _error : {error: false});\n        }\n    }\n    const [error, setError] = React.useState<{ error: boolean, message?: string | React.ElementType }>({error: false, message: ''});\n    const inputCallback = React.useCallback(({current}) => {\n            if (inputData && (inputData.tradeValue !== Number(current?.value))) {\n                setsValue(inputData.tradeValue);\n                _handleError(inputData.tradeValue);\n            }\n        },\n        [inputData])\n    const inputEle = useFocusRef({\n        callback: inputCallback,\n        shouldFocusOn: focusOnInput,\n        value: tradeValue,\n    });\n    const debounceCount = debounce(({...props}: any) => {\n        if (handleCountChange) {\n            handleCountChange({...props}, ref)\n        }\n    }, wait)\n    const _handleContChange = React.useCallback((value: any, _name: any) => {\n            _handleError(value);\n            setsValue(value);\n            debounceCount({...inputData, ...{tradeValue: value}})\n        }\n        , [debounceCount,  _handleError, inputData])\n    // const _handleContChange =\n    // const _handleOnClick = React.useCallback((event: React.MouseEvent) => {\n    //     if (handleOnClick) handleOnClick(event,ref)\n    // }, [])\n    const _handleMaxAllowClick = (_event: React.MouseEvent) => {\n        if (maxAllow) {\n            setsValue(balance);\n        }\n    }\n    const coinInfo: any = coinMap[ belong ] ? coinMap[ belong ] : {};\n    const hasLoaded = useImage(coinInfo.icon ? coinInfo.icon : '').hasLoaded;\n    // formatValue(sValue)\n    return <> <IWrap component={'div'} ref={ref}>\n        <Grid container component={'div'} className={'label-wrap'} justifyContent={'space-between'}\n              paddingBottom={1 / 2}>\n            <Grid item xs={6}><FormLabel className={'main-label'}>{label}</FormLabel></Grid>\n            <Grid item xs={6} className={'sub-label'}>{subLabel && belong ?\n                <FormLabel className={maxAllow && balance > 0 ? \"max-allow\" : 'no-balance'}\n                           onClick={_handleMaxAllowClick}>\n                    {<span>{balance > 0 ? subLabel + ':' : ''}</span>}\n                    <span>{getThousandFormattedNumbers(balance)}</span>\n                </FormLabel> : null}</Grid>\n        </Grid>\n\n        <Grid container className={`coinInput-wrap ${error.error ? 'error' : ''}`} wrap={'nowrap'} alignItems={'stretch'}\n              alignContent={'stretch'}>\n            <CoinWrap order={order === 'left'?2:1}\n                      display={'flex'}\n                      alignItems={'center'}\n                      className={`icon-wrap icon-wrap-${order}`}>\n                <Grid container align-items={'center'} display={'flex'}>\n                    <Grid item order={order === 'left'?2:1} paddingLeft={order === 'left'?1:0} className={'logo-icon'}>\n                        {coinMap[ belong ]?.simpleName? <Avatar variant=\"square\" alt={coinMap[ belong ]?.simpleName}\n                                                                src={hasLoaded ? coinMap[ belong ]?.icon : 'static/images/icon-default.png'}/>:'' }\n                    </Grid>\n                    <Grid item order={order === 'left'?1:2} paddingLeft={order === 'left'?0:1}>{coinMap[ belong ]?.simpleName}</Grid>\n                </Grid>\n            </CoinWrap>\n            <Grid order={order === 'left'?1:2} flex={1} item className={`input-wrap input-wrap-${order}`}>\n                <IInput ref={inputEle} onValueChange={_handleContChange} value={sValue} allowNegativeValue={false}\n                        disabled={!disabled || belong ? false : true}\n                        placeholder={placeholderText}\n                        aria-placeholder={placeholderText} aria-label={label} decimalsLimit={10000000}></IInput>\n\n            </Grid>\n        </Grid>\n\n        \n        <Grid container className={'message-wrap'} wrap={'nowrap'} alignItems={'stretch'} alignContent={'stretch'}\n              justifyContent={'flex-end'}>\n            <Grid item><FormHelperText>{error.message}</FormHelperText></Grid>\n        </Grid>\n\n    </IWrap>\n    </>\n\n}\n\nexport const InputCoin = React.memo(React.forwardRef(_InputCoin)) as\n    <T extends IBData<C>, C, I extends CoinInfo<C>>(props: InputCoinProps<T, C, I> , ref: React.RefAttributes<any>) => JSX.Element;\n//as React.ComponentType<InputButtonProps<coinType,CoinInfo> & RefAttributes<HTMLDivElement>>;\n","/**\n * @example\n * export const HeadMenuItem = withTranslation()(styled(({}:InterFaceProps & WithTranslation)=><></>)``\n * ) as  React.ComponentType<InterFaceProps>;\n */\n\nexport * from './stores'\nexport * from './components'\n// export * from \"./static-resource\";\nexport * from './static-resource/src/themes/globalSetup'\n","import React from 'react';\n\nexport function useFocusRef<T extends HTMLInputElement>({value, shouldFocusOn, callback}: {\n    value?: any,\n    shouldFocusOn?: boolean | undefined,\n    // ref: React.RefObject<T>,\n    callback?: (prorps: { current: any },) => void\n}) {\n    const ref = React.useRef<T>(null);\n    React.useEffect(() => {\n        if (shouldFocusOn) {\n            ref?.current?.focus()\n        }\n        callback && callback({current: ref.current});\n    }, [value, shouldFocusOn, callback]);\n    return ref;\n}\n\n","import React from 'react';\n\nexport function usePanelRef<T extends HTMLInputElement>({callback}: {\n    callback?: (prorps: { current: any }) => void\n}){\n    const ref = React.useRef<T>(null);\n    React.useEffect(()=>{\n        if (ref.current) {\n            callback && callback({current: ref.current});\n        }\n    },[])\n    return ref;\n}\n// {\n//     const ref = React.useRef<T>(null);\n//     React.useEffect(() => {\n//\n//         callback && callback({current: ref.current});\n//         return ref\n//     }, [height, width, callback]);\n//     return ref;\n// }","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport enUS from './en_US'\nimport zhCN from './zh_CN'\n// import { localStore } from '../storage';\n// the translations\n// (tip move them in a JSON file and import them)\nexport enum LanguageType {\n    en_US = 'en_US',\n    zh_CN = 'zh_CN',\n}\n\nexport type LanguageKeys = keyof typeof LanguageType\n\nexport const resources = {\n    en_US: {...enUS},\n    zh_CN: {...zhCN},\n};\n\ni18n.use(initReactI18next).init({\n    resources,\n    ns: ['common', 'layout', 'tables','error'],\n    defaultNS: 'common',\n    lng: LanguageType.en_US,\n    load: 'currentOnly',\n    fallbackLng: LanguageType.en_US,\n    supportedLngs: [LanguageType.en_US,LanguageType.zh_CN],\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n        escapeValue: false // react already safes from xss\n    },\n    // debug:true,\n    react: {\n        bindI18n: 'languageChanged',\n        // bindI18nStore: '',\n        transEmptyNodeValue: '',\n        transSupportBasicHtmlNodes: true,\n        transKeepBasicHtmlNodesFor: ['br', 'strong', 'i'],\n        useSuspense: true,\n    }\n});\n// i18n.languages = [LanguageType.en_US,LanguageType.zh_CN];\nexport default i18n;","import common from './common';\nimport layout from './layout';\nimport tables from './tables';\nimport error from './error';\n\nexport default {\n    common,\n    layout,\n    tables,\n    error,\n}","export default {\n    tokenEnter: 'Enter Token',\n    tokenEnterPaymentToken: 'Enter Payment Token',\n    tokenMax: 'Max',\n    tokenHave: 'Save',\n    tokenEnterReceiveToken: 'Enter Receive Token',\n    tokenSelectToken: 'Select Token',\n    tokenExchange: 'exchange',\n    tokenNotEnough: 'Not enough {{belong}} perform a deposit',\n    tokenSearchCoin: 'Search Coin',\n    swapTolerance: 'Slippage Tolerance',\n    swapPriceImpact: 'Price Impact',\n    swapMinReceive: 'Minimum Received',\n    swapFee: 'Fee',\n    swapBtn: 'swap',\n    goBack: 'go back',\n    resetTitle: 'Reset Layer-2 Keypair',\n    restLabelEnterToken: 'Select Reset cause token',\n    resetDescription: 'Create a new signing key for layer-2 authentication (no backup needed). This will <1>cancel all your pending orders</1>.',\n    resetFee: 'Fee {{count}} GAS ≈ ${{price}}',\n    resetLabelBtn: 'Reset',\n    depositTitle: 'Deposit',\n    depositTitleAndActive: 'Deposit & Activate Layer2',\n    depositLabelEnterToken: 'Enter Deposit token',\n    depositDescription: 'Once your deposit is <1>confirmed on Ethereum</1>, it will be added to your balance within <3>2 minutes</3>.',\n    depositAndActiveDescription: 'Make a deposit to activate your Loopring layer-2 account. Once your deposit is <1>confirmed on Ethereum</1>, it will be added to your balance within <3>2 minutes</3>.',\n    depositLabelBtn: 'Deposit',\n    depositLabelLinkRecent: 'Recent deposits history',\n    withdrawTitle: 'Withdraw',\n    withdrawLabelEnterToken: 'Enter withdraw token',\n    withdrawDescription: 'Your withdrawal will be processed in the next batch, which usually takes <1>30 minutes to 2 hours</1>. (There will be <3>a large delay</3> if the Ethereum gas price <5>exceeds 500 GWei</5>.）',\n    withdrawLabelBtn: 'Withdraw',\n    withdrawLabelAddress: 'Withdraw address',\n    withdrawLabelAddressInput: 'Please input the address',\n    withdrawLabelFee: 'Select payment token',\n    withdrawTypeLabelFast: 'Fast',\n    withdrawTypeLabelStandard: 'Standard',\n    withdrawLabelLinkRecent: 'Recent withdraws history',\n    transferTitle: 'Transfer',\n    transferLabelEnterToken: 'Enter transfer token',\n    transferDescription: 'Transfer to any valid Ethereum addresses instantly. Please <1>make sure</1> the recipient address <3>accepts Loopring layer-2 </3> payments before you proceed.',\n    transferLabelBtn: 'Transfer',\n    transferLabelAddress: 'Transfer address',\n    transferLabelAddressInput: 'Please input the address',\n    transferLabelFee: 'Select payment token',\n    transferLabelLinkRecent: 'Recent transfers history',\n    labelConnectWallet: 'Connect wallet',\n    labelCustomer: 'Custom',\n    labelChange24h: '{{timeUnit}} Change',\n    labelDepth: 'Depth',\n    labelTrend: 'Price',\n    label1W: 'W1',\n    label1H: 'H1',\n    label1D: 'D1',\n    labelCopyAddress: 'Copy address',\n    labelDisconnect:'Disconnect',\n    labelLockLayer2:'Lock',\n    labelUnLockLayer2:'Unlock',\n    labelActiveLayer2:'Active l2',\n    labelSwitchAccount: 'Switch W',\n    labelViewEth: 'View on Etherscan',\n    labelQRCode: 'View QR Code',\n    labelShowAccountInfo: 'Show account information',\n    labelAssetTitle: 'Total Assets ( Layer 2 Account)',\n    labelShowAccount: 'Show or Hide Assets',\n    labelBtnDeposit: 'Deposit',\n    labelBtnTransfer: 'Transfer',\n    labelBtnWithdraw: 'Withdraw',\n    labelLevel: 'Level',\n    labelOrderbook: 'Order Book',\n    labelDeposit: 'Deposit',\n    labelWithdraw: 'WidthDraw',\n    labelSetPublicKey: 'Set EdDSA Public Key',\n    labelTitleSecurity: 'Security',\n    labelTitleResetL2Keypair: 'Reset Layer-2 Keypair',\n    labelBtnReset: 'Reset',\n    labelHadChangPassword: 'You changed your password {{passDay}} ago',\n    labelTitleForceWithdraw: 'Force Withdraw',\n    descriptionForceWithdraw: 'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnForceWithdraw: 'Force Withdraw',\n    labelTitleExportAccount: 'Export Account',\n    descriptionExportAccount: 'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnExportAccount: 'Export Account',\n    labelTitlePreferences: 'Preferences',\n    labelTitleLayout: 'Custom Setting',\n    whichColorIsUp: '<0>{{up}} up</0> and <2>{{down}} down</2> ',\n    labelTradeFeeLevel: 'Your Trading Fee Level:',\n    labelLanguage: 'Language',\n    labelCurrency: 'Currency',\n    currencySetting: 'Currency setting',\n    labelColors: 'Colors',\n    labelthemeLight: 'light',\n    labelthemeDark: 'dark',\n    labelgreen: 'green',\n    labelred: 'red',\n    langZH: 'Chinese',\n    langEN: 'English',\n    labelUSDollar: 'US Dollar',\n    labelCNYYuan: 'CNY Yuan',\n    labelMaker: 'Maker',\n    labelTaker: 'Taker',\n    labelAssetsTitle: 'Assets',\n    labelVolume: 'volume',\n    labelLiquidityDeposit: 'Add Liquidity',\n    labelLiquidityWithdraw: 'Remove Liquidity',\n    labelAvailable: 'Available',\n    labelTokenAmount: 'Amount',\n    labelRemoveLiquidityBtn: 'Remove Liquidity',\n    labelAddLiquidityBtn: 'Add Liquidity',\n    labelTradePanelHideOtherPairs: 'Hide other pairs',\n    labelLPTokens:'LP Tokens',\n    labelTrade: 'Trade',\n    labelAmmList: 'Amm List',\n    labelMyPoolShare: 'My Pool Share',\n    labelFee: 'Fee',\n    labelLPTotal: 'Total ',\n    labelLiquidity: 'Liquidity',\n    labelReward:'Reward',\n    labelMyReward: 'My Reward',\n    labelDate: 'Date',\n    labelBack: 'Back',\n    labelAPY: 'APY',\n    labelNew: 'New',\n    labelAccount: 'Account',\n    labelAll:'All',\n    labelMe:'Me',\n    labelMyTrade:'My Trade',\n    labelRecent:'Recent',\n    labelMyAmm:'My Amm',\n    labelMyAmmRecord: 'My Amm Record',\n    labelCurrentActivities:'Current Activities',\n    labelPastActivities:'Past Activities',\n    labelTotalPositionValue:'Total Position Value',\n    labelFeeRewards:'Fee Rewards',\n    labelMiningRewards:'Mining Rewards',\n    labelLiquidityValue:'Liquidity Value',\n    labelCopyAddClip:' Address Copied to Clipboard!',\n    labelPleaseInputWalletAddress:'Please Input Address'\n}\n\n","export default {\n    labelMarkets: 'markets',\n    labelTrade: 'trade',\n    labelLiquidity: 'liquidity',\n    labelLayer2: 'layer2',\n    loopringDomain: 'Exchange Loopring',\n    labelClassic: 'classic',\n    labelClassicDescription: 'The easiest to trade',\n    labelAdvanced: 'advanced',\n    labelAdvancedDescription: 'Full access to all trading tools',\n    labelDownloadApp: 'Download Loopring Wallet Mobile Application',\n    labelDownloadAppTitle: 'Download Loopring Wallet',\n    labelDownloadBtn: 'Go to app store',\n    labelNotification: 'Notification Information',\n    themeSetting: 'theme setting',\n    languageSetting: 'Language setting',\n    labelConnectWallet: 'Connect Wallet',\n    notificationApprove: 'approving',\n    notificationPending: 'pending',\n    labelMyTrades: 'my trades',\n    labelRecentTrades: 'Recent Trades',\n    // layer2 submenu\n    labelAssets: 'assets',\n    labelTransactions: 'transactions',\n    labelTrades: 'trades',\n    labelAmmRecords: 'Amm records',\n    labelAmmRecordsDes: '(Join & Exits)',\n    rewards: 'rewards',\n    labelOrders: 'orders',\n    selectLanguage: 'select language',\n    labelPools:'Pools',\n    labelAmmMining:'Amm Mining',\n    labelMyLiquidity:'My Liquidity',\n    labelOrderBookMining:'Orderbook Mining ',\n    labelMakerRebates:'Maker Rebates',\n    labelSetting:'Setting',\n}","export default {\n    labelStatus:'Status',\n    labelAMM: 'AMM',\n    labelTransfer: 'Transfer',\n    labelWithdraw: 'Withdraw',\n    labelDeposit: 'Deposit',\n    labelToken: 'Token',\n    labelAmount: 'Amount',\n    labelAvailable: 'Available',\n    labelLocked: 'Locked',\n    labelActions: 'Actions',\n    labelAllToken: 'All Tokens',\n    labelHideSmallBalances: 'Hide Small Balances',\n    labelHideLPToken: 'Hide LP Token',\n    labelOrderFilterAllTypes: 'All Types',\n    labelOrderFilterBuy: 'Buy',\n    labelOrderFilterSell: 'Sell',\n    labelFilterReset: 'Reset',\n    labelFilterSearch: 'Search',\n    labelOrderSide: 'Side',\n    labelOrderAmount: 'Amount',\n    labelOrderAverage: 'Average',\n    labelOrderFilledAmount: 'Filled Amount',\n    labelOrderFilledPrice: 'Filled Price',\n    labelOrderTime: 'Time',\n    labelOrderStatus: 'Status',\n    labelOrderTradingPrice: 'Trading Price',\n    labelOrderTotal: 'Total',\n    labelQuotaPair: 'Pair',\n    labelQuotaLastPrice: 'Last Price',\n    labelQuota24hChange: '24h Change',\n    labelQuota24hHigh: '24h High',\n    labelQuota24hLow: '24h Low',\n    labelQuota24Volume: '24h Volume',\n    labelTradeFilterAllTypes: 'All Types',\n    labelTradeFilterBuy: 'Buy',\n    labelTradeFilterSell: 'Sell',\n    labelTradeSide: 'Side',\n    labelTradeAmount: 'Amount',\n    labelTradePrice: 'Price',\n    labelTradeFee: 'Fee',\n    labelTradeTime: 'Time',\n    labelTxFilterAllTypes: 'All Types',\n    labelTxFilterDeposit: 'Deposit',\n    labelTxFilterWithdraw: 'Withdraw',\n    labelTxFilterTransfer: 'Transfer',\n    labelTxFilterAllTokens: 'All Tokens',\n    labelTxToken: 'Token',\n    labelTxFrom: 'From',\n    labelTxTo: 'To',\n    labelTxAmount: 'Amount',\n    labelTxFee: 'Fee',\n    labelTxMemo: 'Memo',\n    labelTxTime: 'Time',\n    labelTxTxnHash: 'Txn Hash',\n    labelTxStatus: 'Status',\n    labelVolume:'volume',\n    labelTradePair:'Trade Pair',\n    labelPool: 'Pool',\n    labelLiquidity: 'Liquidity',\n    label24TradeVolume: '24h Trade Volume',\n    label24Reward: '24h Reward',\n    labelAPY: 'APY',\n    labelTradePool:'Trade Pool',\n    labelAction:'Action',\n    labelFilter:'Filter',\n    valueAddTOAMM: `Add <1></1> and <3></3>`,\n    valueSwapForAMM: `Swap <1></1> for <3></3>`,\n    valueRemoveTOAMM:  `Remove <1></1> and <3></3>`,\n    labelAmmTotalValue:'Total Value',\n    labelAmmTokenAmount: 'Token Amount',\n    labelAmmTime:'Time',\n    labelFeeEarned:'Fee Earned',\n    labelBuy:'buy',\n    labelSell:'sell',\n    labelAmmSide: 'Side',\n    labelAmmAmount: 'Amount',\n    labelAmmLpTokenAmount: 'LP Token Amount',\n    labelAmmFee: 'Fee',\n    labelAmmRecordTime: 'Time',\n    labelAmmExit: 'Exit',\n    labelAmmJoin: 'Join',\n    labelAmmFilterTypes: 'All Types',\n    labelAmmFilterJoin: 'Join',\n    labelAmmFilterExit: 'Exit',\n}\n","export default {\n    labelConnectUs:'If you believe this is indeed a bug, please <1>contact us</1> <2/> We would appreciate your feedback',\n    errorBase:'Oops! Something went wrong.',\n    errorLoading:'Loading! Please wait for a while.',\n    error404:'404! page can\\'t be reached',\n}","import common from './common';\nimport layout from './layout';\nimport tables from './tables';\nimport error from './error';\n\nexport default {\n    common,\n    layout,\n    tables,\n    error,\n}","export default {\n    tokenEnter: '输入币种',\n    tokenEnterPaymentToken: '交易支付币种',\n    tokenMax: '最大',\n    tokenHave: '拥有',\n    tokenEnterReceiveToken: '交易获取币种',\n    tokenSelectToken: '选择币种',\n    tokenExchange: '转换',\n    tokenNotEnough: '{{belong}}余额不足无法交易',\n    tokenSearchCoin: '搜索交易币种',\n    swapTolerance: '划点范围',\n    swapPriceImpact: '价格区间',\n    swapMinReceive: '最小获得数量',\n    swapFee: '手续费用',\n    swapBtn: '兑换',\n    goBack: '返回',\n    resetTitle: '重置二层秘钥',\n    restLabelEnterToken: '请选择消耗代币',\n    resetDescription: '创建一个新的二层身份验证签名密钥（无需备份），该操作将会<1>取消您的所有待定指令</1>。',\n    resetFee: '{{count}} GAS ≈ ${{price}} 费用',\n    resetLabelBtn: '重置',\n    depositTitle: '充值',\n    depositTitleAndActive: '充值并激活二层账号',\n    depositLabelEnterToken: '选择充值代币',\n    depositDescription: '您的充值将会在以太坊<1>确认</1>后<3>两分钟</3>内到账。',\n    depositAndActiveDescription: '完成一次充值来激活您的路印二层账号。您的充值将会在以太坊<1>确认</1>后<3>两分钟</3>内到账。',\n    depositLabelBtn: '充值',\n    depositLabelLinkRecent: '最近充值记入',\n    withdrawTitle: '提现',\n    withdrawLabelEnterToken: '选择提现代币',\n    withdrawDescription: '提现操作会被提交到以太坊的下一个区块，一般会在<1>30分钟到2小时</1>内到账。（如果以太坊的GAS价格<5>超过500GWei</5>的话，可能会存在<3>长时间的延迟</3>）',\n    withdrawLabelBtn: '提现',\n    withdrawLabelAddress: '提现到该账号地址',\n    withdrawLabelAddressInput: '输入地址',\n    withdrawLabelFee: '请选付费代币',\n    withdrawTypeLabelFast: '快速',\n    withdrawTypeLabelStandard: '普通',\n    withdrawLabelLinkRecent: '最近提现记入',\n    transferTitle: '转账',\n    transferLabelEnterToken: '选择转账代币',\n    transferDescription: '迅速转账到任何有效的以太坊地址。转账前请务必<1>确认</1>该地址可以<3>接受路印的二层<3>转账。',\n    transferLabelBtn: '转账',\n    transferLabelAddress: '转账到该账号地址',\n    transferLabelAddressInput: '输入地址',\n    transferLabelFee: '请选付费代币',\n    transferLabelLinkRecent: '最近转账记入',\n    labelConnectWallet: '链接钱包',\n    labelCustomer: '自定义',\n    labelChange24h: '{{timeUnit}} 涨幅',\n    labelDepth: '深度',\n    labelTrend: '价格',\n    label1W: '1周',\n    label1H: '1小时',\n    label1D: '1日',\n    labelCopyAddress: '复制地址到剪切板',\n    labelDisconnect:'断开钱包',\n    labelLockLayer2:'锁定钱包',\n    labelUnLockLayer2:'解锁钱包',\n    labelActiveLayer2:'激活二层',\n    labelSwitchAccount: '切换钱包',\n    labelViewEth: '跳转至以太网查看',\n    labelQRCode: '查看二维码',\n    labelShowAccountInfo: '查看,设置账号信息',\n    labelAssetTitle: '资产总量 ( 路印二层 )',\n    labelShowAccount: '显示或隐藏资产总量',\n    labelBtnDeposit: '充值',\n    labelBtnTransfer: '转账',\n    labelBtnWithdraw: '提现',\n    labelLevel:'VIP等级',\n    labelOrderbook:'订单本',\n    labelDeposit:'充值',\n    labelWithdraw:'提现',\n    labelSetPublicKey :'设置 EdDSA 公钥',\n    labelTitleSecurity:'安全设置',\n    labelTitleResetL2Keypair:'重置 二层密钥',\n    labelBtnReset:'重置',\n    labelHadChangPassword:'您在{{passDay}}修改了密码',\n    labelTitleForceWithdraw:'强制提现',\n    descriptionForceWithdraw:'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnForceWithdraw:'强制提现',\n    labelTitleExportAccount:'导出账号',\n    descriptionExportAccount:'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnExportAccount:'导出账号',\n    labelTitlePreferences:'设置选项',\n    labelTitleLayout:'个性化设置',\n    whichColorIsUp:'<0>{{up}} 上涨</0> -- <2>{{down}} 下跌</2>',\n    labelTradeFeeLevel: '您的交易等级评定:',\n    labelLanguage:'显示语言',\n    labelCurrency:'结算货币',\n    currencySetting:'货币设置',\n    labelColors:'选择颜色',\n    labelthemeLight: '明亮模式',\n    labelthemeDark: '暗黑模式',\n    labelgreen:'绿色',\n    labelred:'红色',\n    langZH: '中文',\n    langEN: '英语',\n    labelUSDollar: '美金结算',\n    labelCNYYuan:'人民币结算',\n    labelMaker:'做市商返佣',\n    labelTaker:'吃单费率',\n    labelAssetsTitle:'资产清单',\n    labelVolume:'总量',\n    labelLiquidityDeposit:'放入流动池',\n    labelLiquidityWithdraw:'移出流动池',\n    labelAvailable:'可用额度',\n    labelTokenAmount:'数量',\n    labelRemoveLiquidityBtn:'立刻移出',\n    labelAddLiquidityBtn:'立刻放入',\n    labelTradePanelHideOtherPairs: '隐藏其他交易对',\n    labelLPTokens:'权益代币',\n    labelTrade: '兑换',\n    labelAmmList: 'Amm 列表',\n    labelMyPoolShare: '我的份额',\n    labelFee: '费用',\n    labelLPTotal: '资金池中',\n    labelLiquidity: '流动性矿池',\n    labelReward:'奖励池',\n    labelMyReward: '我的奖励',\n    labelDate: '日期',\n    labelBack: '返回',\n    labelAPY: 'APY',\n    labelNew: '新的',\n    labelAccount: '账户信息',\n    labelAll:'所有',\n    labelMe:'我的',\n    labelMyTrade:'我的交易',\n    labelRecent:'最近交易',\n    labelMyAmm:'我的Amm',\n    labelMyAmmRecord: '我的Amm记录',\n    labelCurrentActivities:'当前活动',\n    labelPastActivities:'往期活动',\n    labelTotalPositionValue:'我的流动性总价值',\n    labelFeeRewards:'获得费用',\n    labelMiningRewards:'活动奖励',\n    labelLiquidityValue:'流动性价值',\n    labelCopyAddClip:'复制黏贴到剪切板!',\n    labelPleaseInputWalletAddress:'请输入地址'\n}\n\n","export default {\n    labelMarkets: '市场',\n    labelTrade: '交易',\n    labelLiquidity: '流动矿池',\n    labelLayer2: '二层账号',\n    loopringDomain: '路印交易所',\n    labelClassic: '简洁版',\n    labelClassicDescription: '快捷交易平台',\n    labelAdvanced: '专业版',\n    labelAdvancedDescription: '提供更丰富的交易模式',\n    labelDownloadApp: '下载手机客户端',\n    labelDownloadAppTitle: '下载钱包',\n    labelDownloadBtn: '转去 APP 商店',\n    labelNotification: '消息提醒',\n    themeSetting: '主题模版',\n    languageSetting: '语言设置',\n    labelConnectWallet: '链接钱包',\n    notificationApprove: '验证中',\n    notificationPending: '进行中',\n    labelMyTrades: '交易历史',\n    labelRecentTrades: '最近交易',\n    // layer2 submenu\n    labelAssets: '资产信息',\n    labelTransactions: '充值提现',\n    labelTrades: '交易记录',\n    labelAmmRecords: 'Amm记录',\n    labelAmmRecordsDes: '(出金和入金)',\n    rewards: '推荐奖励',\n    labelOrders: '挂单记录',\n    selectLanguage: '语言设置',\n    labelPools:'流动性挖矿池',\n    labelAmmMining:'交易大赛',\n    labelMyLiquidity:'我的流动性',\n    labelOrderBookMining:'订单本挖矿排名',\n    labelMakerRebates:'做市收益',\n    labelSetting:'高级设置',\n}\n\n","export default {\n    labelStatus:'状态',\n    labelAMM: 'AMM',\n    labelTransfer: '转账',\n    labelWithdraw: '提现',\n    labelDeposit: '充值',\n    labelToken: '币种',\n    labelAmount: '总量',\n    labelAvailable: '可用额度',\n    labelLocked: '冻结',\n    labelActions: '操作',\n    labelAllToken: '所有币种',\n    labelHideSmallBalances: '隐藏小额资产',\n    labelHideLPToken: '隐藏流动性凭证',\n    labelOrderFilterAllTypes: '所有类型',\n    labelOrderFilterBuy: '买入',\n    labelOrderFilterSell: '卖出',\n    labelFilterReset: '重置',\n    labelFilterSearch: '搜索',\n    labelOrderSide: '卖/买',\n    labelOrderAmount: '订单总量',\n    labelOrderAverage: '均值',\n    labelOrderFilledAmount: '成交部分',\n    labelOrderFilledPrice: '成交价格',\n    labelOrderTime: '成交时间',\n    labelOrderStatus: '状态',\n    labelOrderTradingPrice: '交易价格',\n    labelOrderTotal: '全部数量',\n    labelQuotaPair: '交易对',\n    labelQuotaLastPrice: '最新价',\n    labelQuota24hChange: '24h 涨跌',\n    labelQuota24hHigh: '24h 最高',\n    labelQuota24hLow: '24h 最低',\n    labelQuota24Volume: '24h 交易量',\n    labelTradeFilterAllTypes: '所有类型',\n    labelTradeFilterBuy: '买入',\n    labelTradeFilterSell: '卖出',\n    labelTradeSide: '卖/买',\n    labelTradeAmount: '交易总额',\n    labelTradePrice: '价格',\n    labelTradeFee: '费用',\n    labelTradeTime: '交易时间',\n    labelTxFilterAllTypes: '所有类型',\n    labelTxFilterDeposit: '充值',\n    labelTxFilterWithdraw: '提现',\n    labelTxFilterTransfer: '转账',\n    labelTxFilterAllTokens: '所有类型',\n    labelTxToken: '币种',\n    labelTxFrom: '起始',\n    labelTxTo: '完结',\n    labelTxAmount: '总额',\n    labelTxFee: '费用',\n    labelTxMemo: '备注',\n    labelTxTime: '时间',\n    labelTxTxnHash: '交易哈希',\n    labelTxStatus: '状态',\n    labelVolume:'交易量',\n    labelTradePair:'交易对',\n    labelPool: '资金池',\n    labelLiquidity: '流动性',\n    label24TradeVolume: '24h 交易量',\n    label24Reward: '24h 奖励',\n    labelAPY: 'APY',\n    labelTradePool:'放入池子',\n    labelAction:'操作',\n    labelFilter:'搜索',\n    valueAddTOAMM: `添加 <1></1> 和 <3></3>`,\n    valueSwapForAMM: `<1></1> 和 <3></3> 兑换`,\n    valueRemoveTOAMM:  `移出 <1></1> 和 <3></3>`,\n    labelAmmTotalValue:'价值总和',\n    labelAmmTokenAmount: '代币数量',\n    labelAmmTime:'时间',\n    labelFeeEarned:'赚取费用',\n    labelBuy:'买',\n    labelSell:'卖',\n    labelAmmSide: '入金/出金',\n    labelAmmAmount: '交易总额',\n    labelAmmLpTokenAmount: '流动性资产价格',\n    labelAmmFee: '费用',\n    labelAmmRecordTime: '交易时间',\n    labelAmmExit: '出金',\n    labelAmmJoin: '入金',\n    labelAmmFilterTypes: '所有类型',\n    labelAmmFilterJoin: '入金',\n    labelAmmFilterExit: '出金',\n}\n","export default {\n    labelConnectUs:'这有可能时候一个错误,<2/> 如需帮助请<1>联系我们</1>~',\n    errorBase:'奥哦! 遇到了一些问题',\n    errorLoading:'不要着急, 不要着急马上就好',\n    error404:'四〇四! 这是页面不存在呢.'\n\n}","import { Theme } from '@material-ui/core';\nimport { ColorBaseInterface } from './css/color-lib';\n\nexport enum ThemeType {\n    dark = 'dark',\n    light = 'light',\n}\n\nexport type ThemeKeys = keyof typeof ThemeType;\nexport type LoopringTheme = Theme & {\n    colorBase: ColorBaseInterface\n    fontDefault: { h1: string, h2: string, h3: string, h4: string, h5: string, h6: string, body1:string},\n    unit: number,\n    mode: ThemeKeys,\n    border: {\n        defaultBorder: string,\n        defaultRadius: string,\n        defaultFrame: (props: { d_W?: number, d_R?: number, c_key?: 'primary' | 'selected' | 'blur' | 'focus' | string }) => string,\n        borderConfig: (props: { d_W?: number, c_key?: 'primary' | 'selected' | 'blur' | 'focus' | string }) => string,\n    }\n}\ndeclare module '@emotion/react' {\n    export interface Theme extends LoopringTheme {\n    }\n}\n\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\n\nexport const DropDownIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox={\"0 0 24 24\"}>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.14645 10.1464C8.34171 9.95118 8.6583 9.95118 8.85356 10.1464L11.5 12.7929L14.1465 10.1464C14.3417 9.95118 14.6583 9.95118 14.8536 10.1464C15.0488 10.3417 15.0488 10.6583 14.8536 10.8536L11.8536 13.8536C11.6583 14.0488 11.3417 14.0488 11.1465 13.8536L8.14645 10.8536C7.95118 10.6583 7.95118 10.3417 8.14645 10.1464Z\" />\n    </SvgIcon>\n}\n\n\n\nexport const CalendarIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox={\"0 0 24 24\"}>\n        <path\n            d=\"M11.9636 16.4545C12.0895 16.4545 12.2125 16.4173 12.3172 16.3473C12.4218 16.2774 12.5034 16.178 12.5516 16.0617C12.5997 15.9455 12.6123 15.8175 12.5878 15.694C12.5632 15.5706 12.5026 15.4572 12.4136 15.3682C12.3247 15.2792 12.2113 15.2186 12.0878 15.194C11.9643 15.1695 11.8364 15.1821 11.7201 15.2302C11.6038 15.2784 11.5044 15.36 11.4345 15.4646C11.3646 15.5693 11.3273 15.6923 11.3273 15.8182C11.3273 15.9869 11.3944 16.1488 11.5137 16.2682C11.633 16.3875 11.7949 16.4545 11.9636 16.4545ZM15.1455 16.4545C15.2713 16.4545 15.3943 16.4173 15.499 16.3473C15.6036 16.2774 15.6852 16.178 15.7334 16.0617C15.7816 15.9455 15.7939 15.8175 15.7696 15.694C15.745 15.5706 15.6845 15.4572 15.5954 15.3682C15.5065 15.2792 15.3931 15.2186 15.2696 15.194C15.1462 15.1695 15.0182 15.1821 14.9019 15.2302C14.7857 15.2784 14.6863 15.36 14.6163 15.4646C14.5465 15.5693 14.5091 15.6923 14.5091 15.8182C14.5091 15.9869 14.5762 16.1488 14.6955 16.2682C14.8148 16.3875 14.9767 16.4545 15.1455 16.4545ZM15.1455 13.9091C15.2713 13.9091 15.3943 13.8718 15.499 13.8019C15.6036 13.7319 15.6852 13.6325 15.7334 13.5163C15.7816 13.4 15.7939 13.272 15.7696 13.1486C15.745 13.0251 15.6845 12.9117 15.5954 12.8228C15.5065 12.7337 15.3931 12.6731 15.2696 12.6486C15.1462 12.624 15.0182 12.6366 14.9019 12.6848C14.7857 12.733 14.6863 12.8145 14.6163 12.9192C14.5465 13.0238 14.5091 13.1469 14.5091 13.2727C14.5091 13.4415 14.5762 13.6034 14.6955 13.7227C14.8148 13.842 14.9767 13.9091 15.1455 13.9091ZM11.9636 13.9091C12.0895 13.9091 12.2125 13.8718 12.3172 13.8019C12.4218 13.7319 12.5034 13.6325 12.5516 13.5163C12.5997 13.4 12.6123 13.272 12.5878 13.1486C12.5632 13.0251 12.5026 12.9117 12.4136 12.8228C12.3247 12.7337 12.2113 12.6731 12.0878 12.6486C11.9643 12.624 11.8364 12.6366 11.7201 12.6848C11.6038 12.733 11.5044 12.8145 11.4345 12.9192C11.3646 13.0238 11.3273 13.1469 11.3273 13.2727C11.3273 13.4415 11.3944 13.6034 11.5137 13.7227C11.633 13.842 11.7949 13.9091 11.9636 13.9091ZM16.4182 6.27273H15.7818V5.63636C15.7818 5.46759 15.7148 5.30573 15.5954 5.18638C15.4761 5.06705 15.3142 5 15.1455 5C14.9767 5 14.8148 5.06705 14.6955 5.18638C14.5762 5.30573 14.5091 5.46759 14.5091 5.63636V6.27273H9.41819V5.63636C9.41819 5.46759 9.35111 5.30573 9.2318 5.18638C9.11248 5.06705 8.95059 5 8.78182 5C8.61306 5 8.45117 5.06705 8.33185 5.18638C8.21253 5.30573 8.14546 5.46759 8.14546 5.63636V6.27273H7.5091C7.00281 6.27273 6.5172 6.47386 6.15918 6.83189C5.80116 7.18991 5.60001 7.6755 5.60001 8.18182V17.0909C5.60001 17.5972 5.80116 18.0828 6.15918 18.4408C6.5172 18.7988 7.00281 19 7.5091 19H16.4182C16.9247 19 17.4103 18.7988 17.7679 18.4408C18.1262 18.0828 18.3273 17.5972 18.3273 17.0909V8.18182C18.3273 7.6755 18.1262 7.18991 17.7679 6.83189C17.4103 6.47386 16.9247 6.27273 16.4182 6.27273ZM17.0546 17.0909C17.0546 17.2597 16.9877 17.4216 16.8681 17.5409C16.7491 17.6602 16.5868 17.7273 16.4182 17.7273H7.5091C7.34033 17.7273 7.17844 17.6602 7.05912 17.5409C6.93981 17.4216 6.87273 17.2597 6.87273 17.0909V11.3636H17.0546V17.0909ZM17.0546 10.0909H6.87273V8.18182C6.87273 8.01304 6.93981 7.85118 7.05912 7.73184C7.17844 7.6125 7.34033 7.54545 7.5091 7.54545H8.14546V8.18182C8.14546 8.35059 8.21253 8.51245 8.33185 8.6318C8.45117 8.75113 8.61306 8.81818 8.78182 8.81818C8.95059 8.81818 9.11248 8.75113 9.2318 8.6318C9.35111 8.51245 9.41819 8.35059 9.41819 8.18182V7.54545H14.5091V8.18182C14.5091 8.35059 14.5762 8.51245 14.6955 8.6318C14.8148 8.75113 14.9767 8.81818 15.1455 8.81818C15.3142 8.81818 15.4761 8.75113 15.5954 8.6318C15.7148 8.51245 15.7818 8.35059 15.7818 8.18182V7.54545H16.4182C16.5868 7.54545 16.7491 7.6125 16.8681 7.73184C16.9877 7.85118 17.0546 8.01304 17.0546 8.18182V10.0909ZM8.78182 13.9091C8.9077 13.9091 9.03071 13.8718 9.13539 13.8019C9.24001 13.7319 9.32159 13.6325 9.36976 13.5163C9.41793 13.4 9.43053 13.272 9.40597 13.1486C9.3814 13.0251 9.32082 12.9117 9.2318 12.8228C9.14283 12.7337 9.02943 12.6731 8.90598 12.6486C8.78252 12.624 8.65455 12.6366 8.53829 12.6848C8.42203 12.733 8.32263 12.8145 8.25269 12.9192C8.18282 13.0238 8.14546 13.1469 8.14546 13.2727C8.14546 13.4415 8.21253 13.6034 8.33185 13.7227C8.45117 13.842 8.61306 13.9091 8.78182 13.9091ZM8.78182 16.4545C8.9077 16.4545 9.03071 16.4173 9.13539 16.3473C9.24001 16.2774 9.32159 16.178 9.36976 16.0617C9.41793 15.9455 9.43053 15.8175 9.40597 15.694C9.3814 15.5706 9.32082 15.4572 9.2318 15.3682C9.14283 15.2792 9.02943 15.2186 8.90598 15.194C8.78252 15.1695 8.65455 15.1821 8.53829 15.2302C8.42203 15.2784 8.32263 15.36 8.25269 15.4646C8.18282 15.5693 8.14546 15.6923 8.14546 15.8182C8.14546 15.9869 8.21253 16.1488 8.33185 16.2682C8.45117 16.3875 8.61306 16.4545 8.78182 16.4545Z\"\n            />\n    </SvgIcon>\n}\n\n\nexport const SearchIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M6.40001 11.3C6.40001 8.59383 8.59383 6.40001 11.3 6.40001C14.0063 6.40001 16.2001 8.59383 16.2001 11.3C16.2001 12.6187 15.6792 13.8158 14.8319 14.6966C14.8066 14.7158 14.7823 14.7369 14.7593 14.76C14.7362 14.7831 14.715 14.8074 14.6958 14.8326C13.8151 15.6795 12.6184 16.2001 11.3 16.2001C8.59383 16.2001 6.40001 14.0063 6.40001 11.3ZM15.2321 16.2228C14.1544 17.0847 12.7875 17.6001 11.3 17.6001C7.82032 17.6001 5 14.7795 5 11.3C5 7.82063 7.82032 5 11.3 5C14.7798 5 17.6001 7.82063 17.6001 11.3C17.6001 12.7878 17.0844 14.1552 16.2221 15.233L18.7941 17.805C19.0678 18.0784 19.0678 18.5216 18.7941 18.795C18.5211 19.0683 18.0773 19.0683 17.8043 18.795L15.2321 16.2228Z\"\n              />\n    </SvgIcon>\n}\n\n\nexport const StarIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"14\" height=\"13\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M12.1264 5C12.3801 5 12.6112 5.14391 12.7238 5.37123L14.6266 9.22695L18.8832 9.84905C19.1337 9.8857 19.3421 10.0615 19.4201 10.3027C19.4987 10.5438 19.4327 10.8083 19.2516 10.9852L16.1725 13.9844L16.8991 18.2214C16.9418 18.4712 16.8392 18.7238 16.6341 18.8728C16.4289 19.0218 16.1565 19.0415 15.9327 18.9234L12.1264 16.9218L8.32 18.9234C8.09621 19.0415 7.8238 19.0218 7.61866 18.8728C7.41352 18.7238 7.31096 18.4712 7.35358 18.2214L8.08023 13.9844L5.00116 10.9852C4.82 10.8083 4.75406 10.5438 4.83265 10.3027C4.91058 10.0615 5.11905 9.8857 5.36948 9.84905L9.62608 9.22695L11.5289 5.37123C11.6415 5.14391 11.8726 5 12.1264 5Z\"\n              />\n\n    </SvgIcon>\n}\n\n\nexport const DownloadIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"12\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M7 5C5.89543 5 5 5.89543 5 7V17C5 18.1046 5.89543 19 7 19H17C18.1046 19 19 18.1046 19 17V7C19 5.89543 18.1046 5 17 5H7ZM12.6576 14.0489L14.5273 12.4543C14.5763 12.4125 14.633 12.3808 14.6943 12.3609C14.7555 12.3411 14.8201 12.3335 14.8843 12.3386C14.9484 12.3438 15.011 12.3615 15.0683 12.3909C15.1256 12.4202 15.1765 12.4605 15.2182 12.5096C15.3026 12.6085 15.3442 12.7368 15.334 12.8664C15.3238 12.9959 15.2625 13.1161 15.1636 13.2005L12.778 15.2354C12.5932 15.3929 12.3629 15.4713 12.1326 15.4713C11.8974 15.4713 11.6622 15.3894 11.476 15.2256L9.16674 13.1956C8.96304 13.0171 8.94344 12.707 9.12194 12.504C9.30044 12.3003 9.61054 12.2807 9.81354 12.4592L11.6776 14.0972V8.99C11.6776 8.7191 11.8967 8.5 12.1676 8.5C12.4385 8.5 12.6576 8.7191 12.6576 8.99V14.0489Z\"\n              />\n    </SvgIcon>\n}\n\n\nexport const NotificationIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"12\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M9.21404 6.3049C10.0497 5.46939 11.1826 5 12.3645 5C13.5464 5 14.6793 5.46939 15.515 6.3049C16.35 7.14042 16.8198 8.27363 16.8198 9.45522C16.8198 11.5891 17.2761 12.9141 17.6968 13.6852C17.9081 14.0724 18.1137 14.3264 18.2562 14.4771C18.3282 14.5527 18.3842 14.6028 18.4179 14.631C18.4297 14.6408 18.4388 14.6479 18.4448 14.6526C18.4475 14.6547 18.4496 14.6563 18.451 14.6575L18.4529 14.6588C18.6814 14.8156 18.782 15.1022 18.7018 15.3678C18.6203 15.6362 18.3734 15.8198 18.0927 15.8198H6.63638C6.35571 15.8198 6.10876 15.6362 6.02729 15.3678C5.9471 15.1022 6.04765 14.8156 6.27614 14.6588L6.27806 14.6575C6.27946 14.6563 6.28154 14.6547 6.28426 14.6526C6.29025 14.6479 6.29935 14.6408 6.31116 14.631C6.34489 14.6028 6.4009 14.5527 6.47282 14.4771C6.61539 14.3264 6.82096 14.0724 7.03227 13.6852C7.45297 12.9141 7.90931 11.5891 7.90931 9.45522C7.90931 8.27362 8.37901 7.14042 9.21404 6.3049ZM12.3008 19C11.1962 19 10.3008 18.1046 10.3008 17H14.3008C14.3008 18.1046 13.4054 19 12.3008 19Z\"\n              />\n    </SvgIcon>\n}\n\nexport const ThemeDarkIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M19.1227 12.7035C19.0191 12.6176 18.8931 12.5626 18.7592 12.5448C18.6253 12.527 18.49 12.547 18.367 12.6027C17.6062 12.951 16.7784 13.1302 15.9413 13.1281C14.3931 13.1262 12.9083 12.5123 11.8106 11.4202C10.713 10.3281 10.0918 8.84633 10.0825 7.29805C10.0861 6.8128 10.1458 6.32964 10.2624 5.85852C10.2869 5.73295 10.2775 5.60307 10.2358 5.48227C10.1933 5.36146 10.1199 5.2541 10.022 5.17125C9.92486 5.08839 9.80682 5.03303 9.68087 5.01087C9.55491 4.98871 9.42535 5.00056 9.30515 5.04519C8.17656 5.55256 7.19625 6.33843 6.4549 7.32898C5.71355 8.31954 5.23634 9.48225 5.06792 10.7079C4.8995 11.9335 5.0456 13.1819 5.49185 14.3357C5.9381 15.4895 6.67082 16.5108 7.62019 17.3038C8.57027 18.0968 9.70533 18.6353 10.9203 18.8688C12.1352 19.1023 13.3898 19.0232 14.5659 18.6387C15.742 18.2544 16.8008 17.5774 17.6429 16.6714C18.4857 15.7653 19.0838 14.66 19.3818 13.4592C19.4178 13.3217 19.4128 13.1766 19.3667 13.0421C19.3206 12.9076 19.2357 12.7898 19.1227 12.7035Z\"\n            />\n    </SvgIcon>\n}\n\nexport const ThemeLightIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" focusable=\"false\" viewBox=\"0 0 24 24\"\n                    aria-hidden=\"true\">\n        <path\n            d=\"M7.548 15.5L7.051 15.997C6.92062 16.1279 6.84745 16.3057 6.84745 16.4905C6.84745 16.6753 6.92062 16.8531 7.051 16.984C7.18215 17.1142 7.35957 17.1877 7.5445 17.1877C7.72943 17.1877 7.90685 17.1142 8.038 16.984L8.535 16.487C8.64968 16.3533 8.70961 16.1811 8.7028 16.0047C8.69599 15.8283 8.62296 15.6617 8.4983 15.5364C8.37363 15.4118 8.20651 15.339 8.03034 15.332C7.85417 15.3257 7.68191 15.3852 7.548 15.5ZM7.1 12C7.1 11.8144 7.02626 11.6363 6.89498 11.505C6.7637 11.3738 6.58565 11.3 6.4 11.3H5.7C5.51435 11.3 5.3363 11.3738 5.20503 11.505C5.07375 11.6363 5 11.8144 5 12C5 12.1856 5.07375 12.3637 5.20503 12.495C5.3363 12.6262 5.51435 12.7 5.7 12.7H6.4C6.58565 12.7 6.7637 12.6262 6.89498 12.495C7.02626 12.3637 7.1 12.1856 7.1 12ZM12 7.1C12.1856 7.1 12.3637 7.02622 12.495 6.89497C12.6262 6.76372 12.7 6.58564 12.7 6.4V5.7C12.7 5.51436 12.6262 5.33628 12.495 5.20503C12.3637 5.07378 12.1856 5 12 5C11.8144 5 11.6363 5.07378 11.505 5.20503C11.3738 5.33628 11.3 5.51436 11.3 5.7V6.4C11.3 6.58564 11.3738 6.76372 11.505 6.89497C11.6363 7.02622 11.8144 7.1 12 7.1ZM7.548 8.535C7.67838 8.66429 7.85436 8.73723 8.038 8.738C8.13013 8.73856 8.22145 8.72085 8.30674 8.68606C8.39202 8.6512 8.46959 8.59989 8.535 8.535C8.66538 8.40382 8.73856 8.22644 8.73856 8.0415C8.73856 7.85656 8.66538 7.67918 8.535 7.548L8.038 7.051C7.90409 6.93634 7.73184 6.87642 7.55567 6.88321C7.37949 6.89 7.21237 6.96301 7.08771 7.08768C6.96304 7.21235 6.89001 7.37951 6.8832 7.55563C6.8764 7.73182 6.93633 7.90409 7.051 8.038L7.548 8.535ZM15.948 8.738C16.1316 8.73723 16.3076 8.66429 16.438 8.535L16.935 8.038C17.0083 7.97528 17.0678 7.898 17.1098 7.8112C17.1519 7.72433 17.1754 7.62976 17.1792 7.53337C17.1829 7.43691 17.1666 7.3408 17.1314 7.25099C17.0963 7.16111 17.0429 7.07956 16.9747 7.01138C16.9064 6.94313 16.8249 6.88972 16.735 6.85458C16.6452 6.81937 16.5491 6.80313 16.4527 6.80684C16.3562 6.81055 16.2617 6.83421 16.1748 6.87621C16.088 6.91821 16.0108 6.97771 15.948 7.051L15.5 7.548C15.3697 7.67918 15.2964 7.85656 15.2964 8.0415C15.2964 8.22644 15.3697 8.40382 15.5 8.535C15.6234 8.65778 15.7881 8.73016 15.962 8.738H15.948ZM18.3 11.3H17.6C17.4144 11.3 17.2363 11.3738 17.105 11.505C16.9738 11.6363 16.9 11.8144 16.9 12C16.9 12.1856 16.9738 12.3637 17.105 12.495C17.2363 12.6262 17.4144 12.7 17.6 12.7H18.3C18.4856 12.7 18.6637 12.6262 18.795 12.495C18.9262 12.3637 19 12.1856 19 12C19 11.8144 18.9262 11.6363 18.795 11.505C18.6637 11.3738 18.4856 11.3 18.3 11.3ZM12 16.9C11.8144 16.9 11.6363 16.9735 11.505 17.1051C11.3738 17.236 11.3 17.4145 11.3 17.6V18.3C11.3 18.4855 11.3738 18.664 11.505 18.7949C11.6363 18.9265 11.8144 19 12 19C12.1856 19 12.3637 18.9265 12.495 18.7949C12.6262 18.664 12.7 18.4855 12.7 18.3V17.6C12.7 17.4145 12.6262 17.236 12.495 17.1051C12.3637 16.9735 12.1856 16.9 12 16.9ZM16.452 15.5C16.319 15.4258 16.1656 15.3971 16.0148 15.4188C15.8641 15.4398 15.7243 15.5091 15.6168 15.6169C15.5092 15.7247 15.4395 15.864 15.4184 16.0145C15.3974 16.1657 15.426 16.319 15.5 16.452L15.997 16.949C16.1282 17.0792 16.3056 17.1527 16.4905 17.1527C16.6754 17.1527 16.8528 17.0792 16.984 16.949C17.1144 16.8181 17.1876 16.6403 17.1876 16.4555C17.1876 16.2707 17.1144 16.0929 16.984 15.962L16.452 15.5ZM12 8.15C11.2385 8.15 10.4942 8.37582 9.86106 8.79883C9.22793 9.22191 8.73446 9.82314 8.44307 10.5266C8.15167 11.2301 8.07543 12.0043 8.22398 12.7511C8.37253 13.4979 8.73921 14.1839 9.27764 14.7224C9.81607 15.2606 10.5021 15.6274 11.2489 15.7758C11.9957 15.9249 12.7699 15.8486 13.4734 15.5567C14.1769 15.2655 14.7781 14.7721 15.2012 14.1389C15.6242 13.5058 15.85 12.7615 15.85 12C15.8482 10.9795 15.4419 10.0013 14.7203 9.27966C13.9987 8.5581 13.0205 8.15182 12 8.15Z\"\n            />\n    </SvgIcon>\n}\n\n\nexport const CheckIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.7722 7.22781C19.0759 7.53155 19.0759 8.02401 18.7722 8.32775L10.2166 16.8833C9.9129 17.187 9.42044 17.187 9.11669 16.8833L5.22781 12.9944C4.92406 12.6907 4.92406 12.1982 5.22781 11.8945C5.53155 11.5907 6.02401 11.5907 6.32775 11.8945L9.66667 15.2334L13.6695 11.2306L17.6723 7.22781C17.976 6.92406 18.4685 6.92406 18.7722 7.22781Z\"/>\n    </SvgIcon>\n}\n\n\nexport const CheckBoxIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M18.3333 6.66667V18.3333H6.66667V6.66667H18.3333ZM18.3333 5H6.66667C5.75 5 5 5.75 5 6.66667V18.3333C5 19.25 5.75 20 6.66667 20H18.3333C19.25 20 20 19.25 20 18.3333V6.66667C20 5.75 19.25 5 18.3333 5Z\"\n             />\n\n    </SvgIcon>\n}\n\n\nexport const CheckedIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.3333 18.3333V6.66667H6.66667V18.3333H18.3333ZM6.66667 5H18.3333C19.25 5 20 5.75 20 6.66667V18.3333C20 19.25 19.25 20 18.3333 20H6.66667C5.75 20 5 19.25 5 18.3333V6.66667C5 5.75 5.75 5 6.66667 5ZM16.8386 10.1726C17.164 9.84715 17.164 9.31951 16.8386 8.99408C16.5132 8.66864 15.9855 8.66864 15.6601 8.99408L10.8327 13.8215L9.3386 12.3274C9.01317 12.002 8.48553 12.002 8.16009 12.3274C7.83466 12.6528 7.83466 13.1805 8.16009 13.5059L10.2434 15.5893C10.5689 15.9147 11.0965 15.9147 11.4219 15.5893L16.8386 10.1726Z\" />\n    </SvgIcon>\n}\n\n\n\nexport const PendingIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"11\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path d=\"M12 5C10.6155 5 9.26215 5.41054 8.11101 6.17971C6.95987 6.94888 6.06266 8.04213 5.53285 9.32121C5.00303 10.6003 4.86441 12.0078 5.13451 13.3656C5.4046 14.7235 6.07129 15.9708 7.05026 16.9497C8.02922 17.9287 9.2765 18.5954 10.6344 18.8655C11.9922 19.1356 13.3997 18.997 14.6788 18.4672C15.9579 17.9373 17.0511 17.0401 17.8203 15.889C18.5895 14.7378 19 13.3845 19 12C19 11.0807 18.8189 10.1705 18.4672 9.32121C18.1154 8.47194 17.5998 7.70026 16.9497 7.05025C16.2997 6.40024 15.5281 5.88463 14.6788 5.53284C13.8295 5.18106 12.9193 5 12 5ZM12 17.6C10.8924 17.6 9.80972 17.2716 8.88881 16.6562C7.96789 16.0409 7.25013 15.1663 6.82628 14.143C6.40243 13.1198 6.29153 11.9938 6.50761 10.9075C6.72368 9.8212 7.25703 8.82337 8.0402 8.0402C8.82338 7.25703 9.8212 6.72368 10.9075 6.5076C11.9938 6.29153 13.1198 6.40242 14.143 6.82627C15.1663 7.25012 16.0409 7.96789 16.6562 8.88881C17.2716 9.80972 17.6 10.8924 17.6 12C17.6 13.4852 17.01 14.9096 15.9598 15.9598C14.9096 17.01 13.4852 17.6 12 17.6ZM14.17 12.441L12.7 11.594V8.5C12.7 8.31435 12.6263 8.1363 12.495 8.00502C12.3637 7.87375 12.1857 7.8 12 7.8C11.8144 7.8 11.6363 7.87375 11.505 8.00502C11.3738 8.1363 11.3 8.31435 11.3 8.5V12C11.3 12 11.3 12.056 11.3 12.084C11.3041 12.1322 11.316 12.1795 11.335 12.224C11.3494 12.2655 11.3682 12.3054 11.391 12.343C11.4102 12.3828 11.4336 12.4203 11.461 12.455L11.573 12.546L11.636 12.609L13.456 13.659C13.5627 13.7195 13.6834 13.7508 13.806 13.75C13.961 13.7511 14.112 13.7007 14.2352 13.6067C14.3585 13.5128 14.4471 13.3806 14.4871 13.2308C14.5272 13.0811 14.5164 12.9223 14.4565 12.7794C14.3965 12.6364 14.2909 12.5174 14.156 12.441H14.17Z\" />\n\n    </SvgIcon>\n}\n\n\n\nexport const AlertIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M11.7012 14.8143C11.5632 14.8143 11.4283 14.8552 11.3136 14.9319C11.1989 15.0085 11.1095 15.1175 11.0567 15.2449C11.0039 15.3724 10.9901 15.5127 11.017 15.648C11.0439 15.7833 11.1103 15.9076 11.2079 16.0052C11.3055 16.1027 11.4298 16.1692 11.5651 16.1961C11.7004 16.223 11.8407 16.2092 11.9681 16.1564C12.0956 16.1036 12.2046 16.0142 12.2812 15.8995C12.3579 15.7847 12.3988 15.6499 12.3988 15.5119C12.3988 15.3269 12.3253 15.1494 12.1945 15.0186C12.0636 14.8878 11.8862 14.8143 11.7012 14.8143ZM19.1446 15.8398L13.5289 6.07335C13.3474 5.74793 13.0823 5.47687 12.761 5.28818C12.4397 5.09949 12.0738 5 11.7012 5C11.3286 5 10.9627 5.09949 10.6414 5.28818C10.3201 5.47687 10.055 5.74793 9.87347 6.07335L4.29266 15.8398C4.10486 16.1565 4.00395 16.5172 4.00011 16.8853C3.99628 17.2535 4.08965 17.6162 4.27081 17.9368C4.45197 18.2574 4.7145 18.5245 5.03189 18.7111C5.34929 18.8978 5.71031 18.9974 6.07852 18.9999H17.3238C17.695 19.0036 18.0605 18.9084 18.3827 18.7243C18.705 18.5401 18.9725 18.2736 19.1578 17.952C19.3431 17.6304 19.4396 17.2652 19.4372 16.8941C19.4349 16.5229 19.3339 16.159 19.1446 15.8398ZM17.9377 17.235C17.8766 17.3438 17.7874 17.4342 17.6794 17.4967C17.5714 17.5593 17.4486 17.5918 17.3238 17.5907H6.07852C5.95372 17.5918 5.83094 17.5593 5.72296 17.4967C5.61498 17.4342 5.52577 17.3438 5.46463 17.235C5.4034 17.1289 5.37117 17.0086 5.37117 16.8862C5.37117 16.7637 5.4034 16.6434 5.46463 16.5374L11.0454 6.77095C11.104 6.65668 11.1929 6.56079 11.3025 6.49382C11.412 6.42686 11.5379 6.39143 11.6663 6.39143C11.7947 6.39143 11.9206 6.42686 12.0301 6.49382C12.1397 6.56079 12.2286 6.65668 12.2872 6.77095L17.9029 16.5374C17.9721 16.6419 18.0118 16.7631 18.018 16.8884C18.0241 17.0136 17.9964 17.1381 17.9377 17.2489V17.235ZM11.7012 9.23348C11.5162 9.23348 11.3387 9.30698 11.2079 9.43781C11.0771 9.56863 11.0036 9.74607 11.0036 9.93108V12.7215C11.0036 12.9065 11.0771 13.0839 11.2079 13.2148C11.3387 13.3456 11.5162 13.4191 11.7012 13.4191C11.8862 13.4191 12.0636 13.3456 12.1945 13.2148C12.3253 13.0839 12.3988 12.9065 12.3988 12.7215V9.93108C12.3988 9.74607 12.3253 9.56863 12.1945 9.43781C12.0636 9.30698 11.8862 9.23348 11.7012 9.23348Z\"\n            />\n    </SvgIcon>\n}\n\n// export const LoadingIcon = (props: SvgIconProps) => {\n//     return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n//     >\n//         <path\n//             d=\"M12 24C10.3805 24 8.80781 23.6836 7.32891 23.0578C5.89922 22.4531 4.61719 21.5859 3.51563 20.4844C2.41406 19.3828 1.54688 18.1008 0.942188 16.6711C0.316406 15.1922 0 13.6195 0 12C0 11.5336 0.377344 11.1562 0.84375 11.1562C1.31016 11.1562 1.6875 11.5336 1.6875 12C1.6875 13.3922 1.95938 14.7422 2.49844 16.0148C3.01875 17.243 3.76172 18.3469 4.70859 19.2938C5.65547 20.2406 6.75938 20.9859 7.9875 21.5039C9.25781 22.0406 10.6078 22.3125 12 22.3125C13.3922 22.3125 14.7422 22.0406 16.0148 21.5016C17.243 20.9813 18.3469 20.2383 19.2938 19.2914C20.2406 18.3445 20.9859 17.2406 21.5039 16.0125C22.0406 14.7422 22.3125 13.3922 22.3125 12C22.3125 10.6078 22.0406 9.25781 21.5016 7.98516C20.983 6.75998 20.2325 5.64659 19.2914 4.70625C18.3521 3.76387 17.2385 3.01321 16.0125 2.49609C14.7422 1.95938 13.3922 1.6875 12 1.6875C11.5336 1.6875 11.1563 1.31016 11.1563 0.84375C11.1563 0.377344 11.5336 0 12 0C13.6195 0 15.1922 0.316406 16.6711 0.942188C18.1008 1.54688 19.3828 2.41406 20.4844 3.51562C21.5859 4.61719 22.4508 5.90156 23.0555 7.32891C23.6813 8.80781 23.9977 10.3805 23.9977 12C23.9977 13.6195 23.6813 15.1922 23.0555 16.6711C22.4531 18.1008 21.5859 19.3828 20.4844 20.4844C19.3828 21.5859 18.0984 22.4508 16.6711 23.0555C15.1922 23.6836 13.6195 24 12 24Z\">\n//         </path>\n//     </SvgIcon>\n// }\nexport const CloseIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M16.7071 8.70711C17.0976 8.31658 17.0976 7.68342 16.7071 7.29289C16.3166 6.90237 15.6834 6.90237 15.2929 7.29289L12 10.5858L8.70711 7.29289C8.31658 6.90237 7.68342 6.90237 7.29289 7.29289C6.90237 7.68342 6.90237 8.31658 7.29289 8.70711L10.5858 12L7.29289 15.2929C6.90237 15.6834 6.90237 16.3166 7.29289 16.7071C7.68342 17.0976 8.31658 17.0976 8.70711 16.7071L12 13.4142L15.2929 16.7071C15.6834 17.0976 16.3166 17.0976 16.7071 16.7071C17.0976 16.3166 17.0976 15.6834 16.7071 15.2929L13.4142 12L16.7071 8.70711Z\"/>\n\n    </SvgIcon>\n}\n\n\nexport const LockIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox=\"0 0 24 24\" aria-hidden=\"true\" data-testid=\"LockIcon\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M12.3641 6.27273C11.689 6.27273 11.0416 6.54091 10.5642 7.01827C10.0869 7.49564 9.81868 8.14309 9.81868 8.81818V10.7273H14.9096V8.81818C14.9096 8.14309 14.6414 7.49564 14.164 7.01827C13.6867 6.54091 13.0392 6.27273 12.3641 6.27273ZM9.18232 12L9.1831 12H15.5452L15.546 12L15.5467 12H16.8182C17.1696 12 17.4545 12.2849 17.4545 12.6364V17.0909C17.4545 17.4424 17.1696 17.7273 16.8182 17.7273H7.90909C7.55764 17.7273 7.27273 17.4424 7.27273 17.0909V12.6364C7.27273 12.2849 7.55764 12 7.90909 12H9.18153L9.18232 12ZM16.1823 8.81818V10.7273H16.8182C17.8725 10.7273 18.7273 11.582 18.7273 12.6364V17.0909C18.7273 18.1453 17.8725 19 16.8182 19H7.90909C6.85473 19 6 18.1453 6 17.0909V12.6364C6 11.582 6.85473 10.7273 7.90909 10.7273H8.54595V8.81818C8.54595 7.80554 8.94822 6.83437 9.66427 6.11832C10.3803 5.40227 11.3515 5 12.3641 5C13.3768 5 14.3479 5.40227 15.064 6.11832C15.78 6.83437 16.1823 7.80554 16.1823 8.81818ZM13.001 13.9088C13.001 13.5574 12.7161 13.2725 12.3646 13.2725C12.0132 13.2725 11.7283 13.5574 11.7283 13.9088V15.8179C11.7283 16.1694 12.0132 16.4543 12.3646 16.4543C12.7161 16.4543 13.001 16.1694 13.001 15.8179V13.9088Z\"\n              />\n\n    </SvgIcon>\n}\n\n\nexport const UnLockIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox=\"0 0 24 24\" aria-hidden=\"true\" data-testid=\"LockIcon\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M15.612 6.10622C14.9369 6.10622 14.2894 6.3744 13.8121 6.85177C13.3347 7.32914 13.0665 7.97658 13.0665 8.65168V10.5608H15.4842C16.5386 10.5608 17.3933 11.4155 17.3933 12.4699V16.9244C17.3933 17.9788 16.5386 18.8335 15.4842 18.8335H6.57511C5.52074 18.8335 4.66602 17.9788 4.66602 16.9244V12.4699C4.66602 11.4155 5.52074 10.5608 6.57511 10.5608H11.7938V8.65168C11.7938 7.63903 12.1961 6.66786 12.9121 5.95182C13.6282 5.23577 14.5993 4.8335 15.612 4.8335C16.6246 4.8335 17.5958 5.23577 18.3118 5.95182C19.0279 6.66786 19.4302 7.63903 19.4302 8.65168V9.54246H18.1574V8.65168C18.1574 7.97658 17.8892 7.32914 17.4119 6.85177C16.9345 6.3744 16.2871 6.10622 15.612 6.10622ZM12.4294 11.8335H6.57511C6.22365 11.8335 5.93874 12.1184 5.93874 12.4699V16.9244C5.93874 17.2759 6.22365 17.5608 6.57511 17.5608H15.4842C15.8357 17.5608 16.1206 17.2759 16.1206 16.9244V12.4699C16.1206 12.1184 15.8357 11.8335 15.4842 11.8335H12.4309C12.4307 11.8335 12.4304 11.8335 12.4301 11.8335C12.4299 11.8335 12.4296 11.8335 12.4294 11.8335ZM18.7938 11.8335L18.781 11.8334H18.8065L18.7938 11.8335ZM11.0306 13.106C11.3821 13.106 11.667 13.3909 11.667 13.7423V15.6514C11.667 16.0029 11.3821 16.2878 11.0306 16.2878C10.6792 16.2878 10.3943 16.0029 10.3943 15.6514V13.7423C10.3943 13.3909 10.6792 13.106 11.0306 13.106Z\"\n              />\n\n    </SvgIcon>\n}\n\n\nexport const ActiveIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M18.775 8.17266L17.7828 7.18603L18.775 6.19941C18.9066 6.06765 18.9805 5.88894 18.9805 5.7026C18.9805 5.51626 18.9066 5.33755 18.775 5.20579C18.6435 5.07402 18.465 5 18.2789 5C18.0928 5 17.9144 5.07402 17.7828 5.20579L10.4179 12.581C9.69537 12.1036 8.82166 11.9119 7.96602 12.0428C7.11039 12.1737 6.33375 12.6181 5.7866 13.2897C5.23944 13.9613 4.96073 14.8124 5.00447 15.6781C5.0482 16.5438 5.41127 17.3624 6.02332 17.9753C6.63536 18.5882 7.45282 18.9517 8.31728 18.9955C9.18174 19.0393 10.0317 18.7602 10.7024 18.2123C11.3731 17.6644 11.8168 16.8867 11.9475 16.0299C12.0783 15.173 11.8868 14.2981 11.4101 13.5746L14.8201 10.1529L15.8053 11.1465C15.8706 11.2114 15.948 11.2627 16.0332 11.2975C16.1183 11.3323 16.2095 11.35 16.3014 11.3494C16.3934 11.35 16.4846 11.3323 16.5697 11.2975C16.6548 11.2627 16.7323 11.2114 16.7976 11.1465C16.863 11.0815 16.915 11.0041 16.9505 10.9188C16.986 10.8335 17.0042 10.7421 17.0042 10.6497C17.0042 10.5573 16.986 10.4659 16.9505 10.3806C16.915 10.2953 16.863 10.218 16.7976 10.1529L15.8053 9.20127L16.7976 8.20764L17.7828 9.20127C17.8481 9.26612 17.9255 9.31743 18.0107 9.35225C18.0958 9.38707 18.187 9.40472 18.2789 9.40419C18.3709 9.40472 18.462 9.38707 18.5472 9.35225C18.6323 9.31743 18.7098 9.26612 18.775 9.20127C18.846 9.13574 18.9026 9.05622 18.9413 8.9677C18.98 8.87918 19 8.7836 19 8.68696C19 8.59033 18.98 8.49474 18.9413 8.40622C18.9026 8.31771 18.846 8.23818 18.775 8.17266V8.17266ZM8.49626 17.5981C8.08166 17.5981 7.67636 17.475 7.33163 17.2443C6.9869 17.0136 6.71821 16.6858 6.55955 16.3022C6.40089 15.9186 6.35937 15.4965 6.44026 15.0893C6.52114 14.6821 6.7208 14.3081 7.01397 14.0145C7.30714 13.7209 7.68066 13.521 8.0873 13.44C8.49394 13.359 8.91543 13.4006 9.29848 13.5595C9.68152 13.7183 10.0089 13.9874 10.2393 14.3326C10.4696 14.6778 10.5925 15.0837 10.5925 15.4989C10.5925 16.0556 10.3717 16.5896 9.97856 16.9832C9.58543 17.3769 9.05223 17.5981 8.49626 17.5981Z\"/>\n    </SvgIcon>\n}\n\n// export const TaskIcon = (props: SvgIconProps) => {\n//     return <SvgIcon {...props} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"\n//                     data-testid=\"TaskAltIcon\">\n//         <path\n//             d=\"M22 5.18L10.59 16.6l-4.24-4.24 1.41-1.41 2.83 2.83 10-10L22 5.18zm-2.21 5.04c.13.57.21 1.17.21 1.78 0 4.42-3.58 8-8 8s-8-3.58-8-8 3.58-8 8-8c1.58 0 3.04.46 4.28 1.25l1.44-1.44C16.1 2.67 14.13 2 12 2 6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10c0-1.19-.22-2.33-.6-3.39l-1.61 1.61z\"></path>\n//     </SvgIcon>\n// }\n\n\nexport const ReverseIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.41602 6.62412C9.76067 6.39435 9.8538 5.9287 9.62403 5.58405C9.39427 5.23941 8.92862 5.14628 8.58397 5.37604L5.58397 7.37604C5.30898 7.55937 5.1864 7.9011 5.28218 8.21742C5.37795 8.53374 5.6695 8.75008 6 8.75008H14.5C16.5711 8.75008 18.25 10.429 18.25 12.5001H19.75C19.75 9.60058 17.3995 7.25008 14.5 7.25008H8.47708L9.41602 6.62412ZM15.584 18.8759C15.2393 19.1056 15.1462 19.5713 15.376 19.9159C15.6057 20.2606 16.0714 20.3537 16.416 20.124L19.416 18.124C19.691 17.9406 19.8136 17.5989 19.7178 17.2826C19.622 16.9663 19.3305 16.7499 19 16.7499H10.5C8.42894 16.7499 6.75 15.071 6.75 12.9999H5.25C5.25 15.8994 7.60051 18.2499 10.5 18.2499H16.5229L15.584 18.8759Z\" />\n    </SvgIcon>\n}\n\n\nexport const ProToLiteIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"20\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.75836 13.7023H1.82227V4.54492H5.43485C7.51426 4.54492 8.71619 5.8282 8.71619 7.64805C8.71619 9.47661 7.49102 10.7337 5.38546 10.7337H3.75836V13.7023ZM3.75836 6.12844V9.18218H5.07263C6.18158 9.18218 6.72202 8.55555 6.72202 7.64805C6.72202 6.7357 6.18158 6.12844 5.06391 6.12844H3.75836ZM11.6013 13.7025H9.69715V6.83469H11.5431V8.03274H11.6148C11.8657 7.18335 12.4962 6.73591 13.2652 6.73591C13.4569 6.73591 13.6942 6.76302 13.8637 6.8037V8.49376C13.6855 8.43565 13.3233 8.39111 13.0589 8.39111C12.2192 8.39111 11.6013 8.97222 11.6013 9.81676V13.7025ZM17.3902 13.8359C19.4735 13.8359 20.7703 12.4102 20.7703 10.295C20.7703 8.16715 19.4735 6.74537 17.3902 6.74537C15.3069 6.74537 14.0101 8.16715 14.0101 10.295C14.0101 12.4102 15.3069 13.8359 17.3902 13.8359ZM17.3989 12.3608C16.4381 12.3608 15.9461 11.4805 15.9461 10.2814C15.9461 9.08337 16.4381 8.19814 17.3989 8.19814C18.3423 8.19814 18.8343 9.08337 18.8343 10.2814C18.8343 11.4805 18.3423 12.3608 17.3989 12.3608ZM3.93144 16.6079C3.39682 16.6079 2.96292 17.0418 2.96292 17.5764C2.96292 18.111 3.39682 18.5449 3.93144 18.5449H17.4907C18.0253 18.5449 18.4592 18.111 18.4592 17.5764C18.4592 17.0418 18.0253 16.6079 17.4907 16.6079H3.93144Z\" />\n    </SvgIcon>\n}\n\n\n\nexport const RefreshIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n        <path\n            d=\"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"></path>\n    </SvgIcon>\n}\nexport const ExchangeIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.9993 5.99984C8.68564 5.99984 5.99935 8.68613 5.99935 11.9998C5.99935 15.3135 8.68564 17.9998 11.9993 17.9998C15.3131 17.9998 17.9993 15.3135 17.9993 11.9998C17.9993 8.68613 15.3131 5.99984 11.9993 5.99984ZM4.66602 11.9998C4.66602 7.94975 7.94926 4.6665 11.9993 4.6665C16.0494 4.6665 19.3327 7.94975 19.3327 11.9998C19.3327 16.0499 16.0494 19.3332 11.9993 19.3332C7.94926 19.3332 4.66602 16.0499 4.66602 11.9998ZM8.86128 11.5288C9.12163 11.2684 9.54374 11.2684 9.80409 11.5288L11.334 13.0587V9.33317C11.334 8.96498 11.6325 8.6665 12.0007 8.6665C12.3688 8.6665 12.6673 8.96498 12.6673 9.33317V13.0561L14.1946 11.5288C14.455 11.2684 14.8771 11.2684 15.1374 11.5288C15.3978 11.7891 15.3978 12.2112 15.1374 12.4716L12.4931 15.1159C12.3995 15.2184 12.2742 15.2917 12.1327 15.3201C11.9209 15.3631 11.6922 15.3025 11.5279 15.1382L8.86128 12.4716C8.60093 12.2112 8.60093 11.7891 8.86128 11.5288Z\" />\n    </SvgIcon>\n}\n\n\n\n\n// export const ClockIcon = (props: SvgIconProps) => {\n//     return <SvgIcon {...props} width=\"13\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\"\n//     >\n//         <path\n//             d=\"M6.53256 0.166504C5.37883 0.166504 4.25102 0.508623 3.29173 1.1496C2.33244 1.79057 1.58477 2.70161 1.14326 3.76752C0.701746 4.83342 0.586227 6.00631 0.811307 7.13786C1.03639 8.26942 1.59196 9.30882 2.40777 10.1246C3.22357 10.9404 4.26297 11.496 5.39453 11.7211C6.52608 11.9462 7.69897 11.8306 8.76488 11.3891C9.83078 10.9476 10.7418 10.2 11.3828 9.24066C12.0238 8.28138 12.3659 7.15356 12.3659 5.99984C12.3659 5.23379 12.215 4.47525 11.9219 3.76752C11.6287 3.05978 11.199 2.41672 10.6573 1.87505C10.1157 1.33337 9.47261 0.903692 8.76488 0.61054C8.05714 0.317388 7.2986 0.166504 6.53256 0.166504ZM6.53256 10.6665C5.60958 10.6665 4.70732 10.3928 3.93989 9.88003C3.17246 9.36725 2.57433 8.63842 2.22112 7.78569C1.86791 6.93297 1.77549 5.99466 1.95556 5.08942C2.13562 4.18417 2.58008 3.35265 3.23272 2.70001C3.88537 2.04736 4.71689 1.6029 5.62213 1.42284C6.52738 1.24278 7.46569 1.33519 8.31841 1.6884C9.17113 2.04161 9.89997 2.63975 10.4127 3.40718C10.9255 4.17461 11.1992 5.07686 11.1992 5.99984C11.1992 7.23751 10.7076 8.4245 9.83239 9.29967C8.95722 10.1748 7.77023 10.6665 6.53256 10.6665ZM8.34089 6.36734L7.11589 5.6615V3.08317C7.11589 2.92846 7.05443 2.78009 6.94503 2.67069C6.83564 2.5613 6.68727 2.49984 6.53256 2.49984C6.37785 2.49984 6.22947 2.5613 6.12008 2.67069C6.01068 2.78009 5.94922 2.92846 5.94922 3.08317V5.99984C5.94922 5.99984 5.94922 6.0465 5.94922 6.06984C5.95268 6.11003 5.96252 6.14941 5.97839 6.1865C5.9904 6.22111 6.00604 6.25435 6.02506 6.28567C6.04102 6.31883 6.06058 6.35013 6.08339 6.379L6.17672 6.45484L6.22922 6.50734L7.74589 7.38234C7.83479 7.43273 7.93537 7.45888 8.03756 7.45817C8.16672 7.45907 8.29252 7.41708 8.39525 7.33879C8.49797 7.26049 8.57181 7.15031 8.60517 7.02553C8.63854 6.90075 8.62954 6.76843 8.5796 6.64931C8.52966 6.53019 8.4416 6.43102 8.32922 6.36734H8.34089Z\"\n//         />\n//     </SvgIcon>\n// }\n\nexport const EmptyIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"89\" height=\"111\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M55.3825 11.456C54.4289 11.456 53.5664 10.8019 53.3413 9.83333L51.6759 2.68333C51.4132 1.55472 52.1149 0.427377 53.2429 0.164584C54.3715 -0.0982088 55.499 0.603461 55.7618 1.73157L57.4271 8.8822C57.6898 10.0108 56.9886 11.1382 55.8601 11.4009C55.7035 11.4373 55.5432 11.4558 55.3825 11.456ZM78.7304 29.896C78.5923 29.896 78.4527 29.8828 78.3125 29.8541L71.116 28.4009C69.9807 28.1717 69.246 27.0652 69.4749 25.9295C69.7047 24.7937 70.8111 24.0594 71.9467 24.2886L79.1434 25.7417C80.2785 25.9708 81.0134 27.0779 80.7843 28.2132C80.5827 29.209 79.7082 29.896 78.7304 29.896ZM67.2589 15.4749C66.6548 15.4749 66.0553 15.2156 65.6404 14.7137C64.9029 13.8203 65.0288 12.4978 65.9216 11.7602L72.0927 6.66192C72.9859 5.92368 74.3078 6.04975 75.046 6.94299C75.7842 7.83585 75.6576 9.15807 74.7649 9.89643L68.5938 14.9946C68.2185 15.3054 67.7463 15.4753 67.2589 15.4749ZM87.5219 108.139H38.0479L72.7267 95.5689C74.875 94.7905 76.5915 93.2218 77.5605 91.152C78.5291 89.082 78.6333 86.7588 77.8548 84.6102L75.6065 78.4086C75.3305 77.6462 74.488 77.252 73.7259 77.5286C72.9635 77.8046 72.5694 78.6471 72.8459 79.4092L75.0935 85.6107C75.6047 87.0219 75.5364 88.5474 74.9004 89.9073C74.2643 91.2665 73.1367 92.2968 71.7255 92.8081L32.6996 106.954C31.2877 107.465 29.7622 107.397 28.4029 106.76C27.0436 106.124 26.0133 104.997 25.502 103.586L3.93877 44.094C2.88316 41.1817 4.39377 37.9527 7.30684 36.8971L46.333 22.7509C47.7442 22.2397 49.2697 22.3086 50.6295 22.9447C51.9888 23.5807 53.0191 24.7083 53.53 26.1172L62.338 50.5036C62.6135 51.2666 63.4548 51.6615 64.2182 51.386C64.9805 51.1105 65.3752 50.269 65.0997 49.5065L56.2909 25.1182C55.5123 22.9699 53.9438 21.2534 51.874 20.2844C49.8039 19.3158 47.4806 19.2116 45.3323 19.9901L6.30569 34.1357C1.87032 35.7436 -0.429812 40.6597 1.17754 45.0948L22.7409 104.586C23.7898 107.48 26.2462 109.463 29.059 110.047C29.2266 110.157 29.4225 110.215 29.6227 110.214H30.3581C30.5028 110.222 30.6474 110.227 30.7932 110.227C30.9384 110.227 31.0836 110.222 31.2294 110.214H87.5222C88.0958 110.214 88.5602 109.75 88.5602 109.176C88.5602 108.603 88.0954 108.139 87.5219 108.139ZM77.3346 45.3143L75.0539 44.0761C74.143 43.5827 72.8388 44.2253 72.1398 45.5129L53.1571 80.5007C53.0726 80.6565 53.0289 80.8283 53.0346 80.9861L53.1588 84.8571C53.0997 84.8609 53.0406 84.873 52.9827 84.8952L47.086 87.0927C46.9296 87.1509 46.8027 87.2689 46.7333 87.4207C46.6639 87.5725 46.6577 87.7457 46.7159 87.902C46.7742 88.0584 46.8922 88.1853 47.044 88.2547C47.1958 88.3241 47.3689 88.3303 47.5253 88.272L53.2009 86.1568L53.2024 86.202C53.2164 86.6288 53.5673 86.8192 53.9323 86.5978L58.3962 83.8951C58.5314 83.8133 58.6519 83.6836 58.7364 83.5278L77.719 48.5395C78.4175 47.2528 78.2456 45.8083 77.3346 45.3143ZM34.8992 91.6357L30.5716 93.2484C30.4942 93.2772 30.4232 93.321 30.3627 93.3773C30.3022 93.4336 30.2534 93.5012 30.219 93.5764C30.1847 93.6516 30.1655 93.7327 30.1625 93.8153C30.1596 93.8979 30.1729 93.9803 30.2018 94.0577C30.2601 94.2141 30.3781 94.3409 30.5299 94.4102C30.6817 94.4796 30.8548 94.4859 31.0111 94.4276L35.3386 92.8148C35.416 92.786 35.4871 92.7422 35.5476 92.6859C35.6081 92.6296 35.6569 92.562 35.6913 92.4868C35.7257 92.4117 35.7449 92.3305 35.7479 92.2479C35.7508 92.1653 35.7375 92.0829 35.7087 92.0055C35.6799 91.928 35.6361 91.8569 35.5798 91.7963C35.5235 91.7358 35.4558 91.6869 35.3806 91.6526C35.3054 91.6182 35.2242 91.599 35.1415 91.5961C35.0589 91.5932 34.9766 91.6067 34.8992 91.6357ZM43.9408 88.2648L38.0441 90.4629C37.9667 90.4917 37.8956 90.5355 37.8351 90.5918C37.7746 90.6481 37.7258 90.7157 37.6914 90.7909C37.6571 90.8661 37.6379 90.9472 37.6349 91.0298C37.6319 91.1124 37.6453 91.1948 37.6742 91.2722C37.7324 91.4286 37.8504 91.5554 38.0022 91.6248C38.154 91.6941 38.3271 91.7004 38.4835 91.6422L44.3802 89.4443C44.4577 89.4155 44.5288 89.3717 44.5893 89.3154C44.6499 89.2591 44.6987 89.1915 44.7331 89.1163C44.7674 89.0411 44.7866 88.9598 44.7896 88.8772C44.7925 88.7946 44.7791 88.7122 44.7501 88.6348C44.7213 88.5573 44.6775 88.4862 44.6213 88.4257C44.565 88.3652 44.4973 88.3163 44.4221 88.2819C44.3469 88.2476 44.2657 88.2284 44.1831 88.2254C44.1005 88.2225 44.0183 88.2359 43.9408 88.2648ZM26.5847 78.538C26.4562 78.5381 26.3308 78.4989 26.2253 78.4256C26.1198 78.3524 26.0392 78.2486 25.9943 78.1283C25.9362 77.9719 25.9425 77.7988 26.0118 77.6471C26.0812 77.4953 26.2079 77.3773 26.3642 77.3189L30.0646 75.9397C30.2204 75.8839 30.3919 75.8918 30.542 75.9615C30.692 76.0313 30.8086 76.1573 30.8664 76.3124C30.9242 76.4675 30.9186 76.6391 30.8508 76.79C30.783 76.941 30.6584 77.0592 30.5041 77.119L26.8038 78.4982C26.7337 78.5246 26.6595 78.538 26.5847 78.538ZM33.4295 75.9865C33.1743 75.9865 32.9342 75.8296 32.8398 75.5762C32.8109 75.4988 32.7976 75.4164 32.8005 75.3339C32.8035 75.2513 32.8227 75.1701 32.857 75.0949C32.8914 75.0197 32.9402 74.9521 33.0007 74.8958C33.0612 74.8395 33.1322 74.7956 33.2096 74.7668L39.1063 72.5687C39.1837 72.5398 39.2661 72.5265 39.3487 72.5295C39.4312 72.5325 39.5124 72.5517 39.5876 72.586C39.6627 72.6203 39.7304 72.6692 39.7867 72.7296C39.843 72.7901 39.8868 72.8611 39.9156 72.9385C39.9446 73.016 39.958 73.0984 39.9551 73.181C39.9521 73.2636 39.933 73.3448 39.8986 73.42C39.8643 73.4952 39.8154 73.5629 39.7549 73.6192C39.6944 73.6755 39.6233 73.7193 39.5458 73.7481L33.6491 75.9462C33.5789 75.9727 33.5045 75.9864 33.4295 75.9865ZM42.471 72.6165C42.3427 72.6163 42.2175 72.577 42.1121 72.5038C42.0068 72.4306 41.9263 72.327 41.8814 72.2068C41.8525 72.1293 41.8391 72.047 41.842 71.9644C41.8449 71.8818 41.8641 71.8006 41.8985 71.7254C41.9328 71.6502 41.9817 71.5825 42.0422 71.5262C42.1027 71.4699 42.1737 71.4261 42.2512 71.3973L48.1479 69.1986C48.2253 69.1698 48.3077 69.1564 48.3903 69.1594C48.4729 69.1624 48.5541 69.1816 48.6292 69.216C48.7044 69.2503 48.772 69.2991 48.8283 69.3596C48.8846 69.4201 48.9284 69.4911 48.9572 69.5686C48.9862 69.646 48.9996 69.7284 48.9966 69.811C48.9937 69.8936 48.9745 69.9748 48.9402 70.05C48.9058 70.1251 48.857 70.1928 48.7965 70.2491C48.7359 70.3054 48.6649 70.3492 48.5874 70.378L42.6906 72.5761C42.6204 72.6025 42.546 72.6162 42.471 72.6165ZM51.5126 69.2456C51.365 69.2456 51.222 69.1938 51.1088 69.0992C50.9955 69.0045 50.9192 68.8731 50.893 68.7279C50.8668 68.5826 50.8925 68.4328 50.9656 68.3046C51.0388 68.1764 51.1546 68.0779 51.2929 68.0265L57.1895 65.8285C57.2669 65.7996 57.3493 65.7863 57.4319 65.7892C57.5145 65.7922 57.5957 65.8114 57.6709 65.8457C57.746 65.8801 57.8137 65.9289 57.87 65.9894C57.9263 66.0499 57.9701 66.1209 57.999 66.1983C58.0279 66.2758 58.0412 66.3581 58.0383 66.4407C58.0353 66.5233 58.0161 66.6045 57.9818 66.6796C57.9474 66.7548 57.8986 66.8225 57.8381 66.8787C57.7776 66.935 57.7066 66.9788 57.6292 67.0077L51.7324 69.2059C51.6621 69.2321 51.5876 69.2456 51.5126 69.2456Z\"\n        />\n    </SvgIcon>\n}\nexport const ArrowDownIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M9.29 13.71C9.3851 13.801 9.49725 13.8724 9.62 13.92C9.86346 14.02 10.1365 14.02 10.38 13.92C10.5028 13.8724 10.6149 13.801 10.71 13.71L13.71 10.71C13.8983 10.5217 14.0041 10.2663 14.0041 10C14.0041 9.7337 13.8983 9.47831 13.71 9.29C13.5217 9.1017 13.2663 8.99591 13 8.99591C12.7337 8.99591 12.4783 9.1017 12.29 9.29L11 10.59V7C11 6.73479 10.8946 6.48043 10.7071 6.2929C10.5196 6.10536 10.2652 6 10 6C9.73478 6 9.48043 6.10536 9.29289 6.2929C9.10536 6.48043 9 6.73479 9 7V10.59L7.71 9.29C7.61704 9.19628 7.50644 9.12188 7.38458 9.07111C7.26272 9.02034 7.13201 8.99421 7 8.99421C6.86799 8.99421 6.73728 9.02034 6.61542 9.07111C6.49356 9.12188 6.38296 9.19628 6.29 9.29C6.19627 9.38297 6.12188 9.49357 6.07111 9.61543C6.02034 9.73729 5.9942 9.86799 5.9942 10C5.9942 10.132 6.02034 10.2627 6.07111 10.3846C6.12188 10.5064 6.19627 10.617 6.29 10.71L9.29 13.71ZM10 20C11.9778 20 13.9112 19.4135 15.5557 18.3147C17.2002 17.2159 18.4819 15.6541 19.2388 13.8268C19.9957 11.9996 20.1937 9.98891 19.8079 8.0491C19.422 6.10929 18.4696 4.32746 17.0711 2.92894C15.6725 1.53041 13.8907 0.578004 11.9509 0.192152C10.0111 -0.193701 8.00043 0.00433284 6.17317 0.761209C4.3459 1.51809 2.78412 2.79981 1.6853 4.4443C0.58649 6.08879 0 8.02219 0 10C0 12.6522 1.05357 15.1957 2.92893 17.0711C3.85752 17.9997 4.95991 18.7363 6.17317 19.2388C7.38642 19.7413 8.68678 20 10 20ZM10 2C11.5823 2 13.129 2.4692 14.4446 3.34825C15.7602 4.2273 16.7855 5.47673 17.391 6.93854C17.9965 8.40035 18.155 10.0089 17.8463 11.5607C17.5376 13.1126 16.7757 14.538 15.6569 15.6569C14.538 16.7757 13.1126 17.5376 11.5607 17.8463C10.0089 18.155 8.40034 17.9965 6.93853 17.391C5.47672 16.7855 4.22729 15.7602 3.34824 14.4446C2.46919 13.129 2 11.5823 2 10C2 7.87827 2.84285 5.84344 4.34315 4.34315C5.84344 2.84286 7.87827 2 10 2Z\"\n        />\n    </SvgIcon>\n}\nexport const ViewIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"22\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.93033 12.5303C4.79608 12.3225 4.68731 12.1418 4.60557 12C4.68731 11.8582 4.79608 11.6775 4.93033 11.4697C5.27608 10.9342 5.78833 10.2217 6.45358 9.51299C7.79683 8.08049 9.67482 6.75 11.9998 6.75C14.3248 6.75 16.2028 8.08049 17.5461 9.51299C18.2113 10.2217 18.7236 10.9342 19.0693 11.4697C19.2036 11.6775 19.3123 11.8582 19.3941 12C19.3123 12.1418 19.2036 12.3225 19.0693 12.5303C18.7236 13.0658 18.2113 13.7783 17.5461 14.487C16.2028 15.9195 14.3248 17.25 11.9998 17.25C9.67482 17.25 7.79683 15.9195 6.45358 14.487C5.78833 13.7783 5.27608 13.0658 4.93033 12.5303ZM20.2498 12C20.9203 11.6648 20.9203 11.664 20.9203 11.664L20.2498 12ZM20.9203 11.664C21.0261 11.8755 21.0261 12.1245 20.9203 12.3352L20.2498 12C20.9203 12.3352 20.9203 12.3368 20.9203 12.3368L20.9188 12.3382L20.9166 12.3435L20.9083 12.36C20.9008 12.3743 20.8911 12.3938 20.8776 12.4185C20.874 12.4252 20.8702 12.4322 20.8662 12.4397C20.8409 12.4868 20.8071 12.5497 20.7643 12.6255C20.6653 12.801 20.5198 13.0485 20.3293 13.3447C19.9483 13.9342 19.3821 14.7217 18.6411 15.513C17.1718 17.0805 14.9248 18.75 11.9998 18.75C9.07482 18.75 6.82781 17.0805 5.35856 15.513C4.61756 14.7217 4.05133 13.9342 3.67033 13.3447C3.47983 13.0485 3.33432 12.801 3.23532 12.6255C3.19261 12.5498 3.15884 12.4869 3.13351 12.4398C3.12948 12.4323 3.12567 12.4252 3.12207 12.4185C3.11274 12.4014 3.10522 12.3868 3.09898 12.3747C3.09618 12.3693 3.09365 12.3644 3.09133 12.36L3.08307 12.3435L3.08082 12.3382L3.07931 12.3352C2.97356 12.1245 2.97356 11.8755 3.07931 11.6648L3.74982 12C3.07932 11.6648 3.07931 11.6632 3.07931 11.6632L3.08082 11.6618L3.08307 11.6565L3.09133 11.64C3.09365 11.6356 3.09618 11.6307 3.09898 11.6253C3.10522 11.6132 3.11274 11.5986 3.12207 11.5815C3.12567 11.5748 3.12948 11.5677 3.13351 11.5602C3.15884 11.5131 3.19261 11.4502 3.23532 11.3745C3.33432 11.199 3.47983 10.9515 3.67033 10.6553C4.05133 10.0658 4.61756 9.27826 5.35856 8.48701C6.82781 6.91951 9.07482 5.25 11.9998 5.25C14.9248 5.25 17.1718 6.91951 18.6411 8.48701C19.3821 9.27826 19.9483 10.0658 20.3293 10.6553C20.5198 10.9515 20.6653 11.199 20.7643 11.3745C20.8071 11.4503 20.8409 11.5132 20.8662 11.5603C20.8702 11.5678 20.874 11.5748 20.8776 11.5815C20.8869 11.5986 20.8944 11.6132 20.9007 11.6253C20.9035 11.6307 20.906 11.6356 20.9083 11.64L20.9166 11.6565L20.9188 11.6618L20.9203 11.664ZM10.4985 12C10.4985 11.1712 11.1698 10.5 11.9985 10.5C12.8273 10.5 13.4985 11.1712 13.4985 12C13.4985 12.8287 12.8273 13.5 11.9985 13.5C11.1698 13.5 10.4985 12.8287 10.4985 12ZM11.9985 9C10.3418 9 8.99854 10.3433 8.99854 12C8.99854 13.6567 10.3418 15 11.9985 15C13.6553 15 14.9985 13.6567 14.9985 12C14.9985 10.3433 13.6553 9 11.9985 9Z\" />\n    </SvgIcon>\n}\n\nexport const HideIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"22\" height=\"19\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.28041 3.21993C3.98792 2.92669 3.51243 2.92669 3.21993 3.21993C2.92669 3.51243 2.92669 3.98792 3.21993 4.28041L6.4264 7.48688C5.06987 8.65452 3.93775 10.0636 3.08932 11.6453C2.97383 11.8598 2.97008 12.1178 3.07957 12.3353L3.75007 12C3.07958 12.3353 3.07957 12.3368 3.07957 12.3368L3.08108 12.3383L3.08333 12.3435L3.09159 12.36C3.09391 12.3644 3.09645 12.3693 3.09924 12.3748C3.10548 12.3868 3.11301 12.4014 3.12233 12.4185C3.12593 12.4252 3.12975 12.4323 3.13377 12.4398C3.1591 12.4869 3.19287 12.5498 3.23558 12.6255C3.33457 12.801 3.48008 13.0485 3.67058 13.3447C4.05157 13.9342 4.61779 14.7217 5.35878 15.5129C6.828 17.0804 9.07496 18.7499 11.9999 18.7499H12.0119C13.5636 18.7243 15.0721 18.2651 16.3694 17.4299L19.7196 20.7801C20.0121 21.0733 20.4876 21.0733 20.7801 20.7801C21.0733 20.4876 21.0733 20.0121 20.7801 19.7196L10.9412 9.88069C10.9401 9.8795 10.939 9.87816 10.9376 9.8771L4.28041 3.21993ZM10.5959 6.91062C11.0557 6.80262 11.5259 6.74938 11.9984 6.75013H11.9999C14.3248 6.75013 16.2028 8.08059 17.546 9.51306C18.2113 10.2218 18.7235 10.9343 19.0692 11.4698C19.2027 11.6768 19.3115 11.8568 19.3932 11.9985C19.0055 12.6735 18.5578 13.3132 18.056 13.9095C17.789 14.2267 17.8303 14.7 18.1468 14.9662C18.464 15.2332 18.9373 15.192 19.2035 14.8755C19.859 14.0962 20.4312 13.251 20.9112 12.3533C21.0259 12.1388 21.029 11.8823 20.9202 11.6648L20.2496 11.9998C20.9201 11.6646 20.9202 11.6633 20.9202 11.6633L20.9187 11.6618L20.9165 11.6565L20.9082 11.64C20.9007 11.6258 20.891 11.6063 20.8775 11.5815C20.8739 11.5748 20.87 11.5677 20.866 11.5602C20.8407 11.5131 20.8069 11.4502 20.7642 11.3745C20.6652 11.199 20.5197 10.9515 20.3292 10.6553C19.9482 10.0658 19.382 9.27833 18.641 8.4871C17.1719 6.92052 14.9252 5.25045 12.0014 5.25016L11.9999 6.00014V5.25016H12.0007C11.4127 5.24866 10.8269 5.31616 10.2539 5.44966C9.85044 5.54416 9.59994 5.94764 9.69444 6.35113C9.78894 6.75462 10.1924 7.00512 10.5959 6.91062ZM19.574 12.3255C19.5768 12.3311 19.5277 12.242 19.4798 12.1552C19.4385 12.0802 19.3981 12.007 19.3932 11.9985C19.4165 12.039 19.4375 12.0758 19.457 12.1103C19.4997 12.186 19.5312 12.2445 19.5515 12.2835L19.574 12.3255ZM4.93055 12.5303C4.79705 12.3233 4.68905 12.144 4.60731 12.0023C5.36179 10.6935 6.33752 9.52582 7.49024 8.55084L9.40196 10.4626C9.32771 10.5818 9.26095 10.7063 9.2032 10.8353C9.03971 11.2035 8.95121 11.6003 8.94446 12.003C8.93696 12.4058 9.01121 12.8063 9.16196 13.1797C9.31271 13.5532 9.53769 13.8922 9.82268 14.1772C10.1077 14.4622 10.4467 14.6872 10.8202 14.838C11.1937 14.9887 11.5942 15.063 11.9969 15.0555C12.3996 15.0487 12.7964 14.9602 13.1646 14.7967C13.2936 14.739 13.4181 14.6722 13.5374 14.598L15.2781 16.3394C14.2829 16.9139 13.1526 17.2297 11.9939 17.2499C9.6712 17.2477 7.79549 15.9187 6.45377 14.487C5.78854 13.7782 5.27629 13.0657 4.93055 12.5303ZM10.4437 12.03C10.4467 11.877 10.4729 11.7263 10.5209 11.5815L12.4184 13.479C12.2737 13.527 12.1229 13.5532 11.9699 13.5562C11.7689 13.5592 11.5687 13.5225 11.3819 13.4467C11.1952 13.3717 11.0257 13.2593 10.8832 13.1168C10.7407 12.9743 10.6282 12.8048 10.5532 12.618C10.4774 12.4313 10.4407 12.231 10.4437 12.03Z\" />\n    </SvgIcon>\n}\n\nexport const CopyIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M7.69167 15.6456V14.9164H6.9625V6.89583H6.96159V14.9167H7.69076V15.6456H7.69167ZM15.7116 7.62477H15.7125V6.16644H6.23333V6.16667H15.7116V7.62477ZM7.925 14.6831H7.19583V7.12893H14.75V7.8581H15.9458V5.93311H6V15.8789H7.925V14.6831ZM18.1341 8.43297H8.50081V18.0663H18.1341V8.43297ZM8.73414 8.66653H17.8999V17.833H17.9008V8.66631H8.73414V8.66653ZM16.9623 16.8945H9.67261V9.60476H16.9623V16.8945ZM9.43927 9.37166V17.1278H17.1948V17.1281H9.43836V9.37166H9.43927Z\"\n              fill=\"white\"/>\n    </SvgIcon>\n}\n\nexport const LinkIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M15.3434 8.17098L9.3423 14.1939L10.1718 15.0204L16.1689 9.00159V11.0984H17.3398V7H13.2414V8.17098H15.3434ZM11.6839 9.34213V8.17115H7V17.539H16.3678V12.8551H15.1969V16.368H8.17098V9.34213H11.6839Z\"/>\n    </SvgIcon>\n}\n\nexport const QRIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.66666 19L5 19V14.3333H9.66666V19ZM8.5 15.5H6.16667V17.8333H8.5L8.5 15.5ZM5 5H9.66666V9.66666H5V5ZM6.16667 8.5H8.5V6.16667H6.16667V8.5ZM14.3333 19V14.3333H19V19H14.3333ZM17.8333 15.5H15.5V17.8333H17.8333V15.5ZM14.3333 5H19L19 9.66666H14.3333V5ZM15.5 8.5L17.8333 8.5V6.16667H15.5V8.5ZM11.4167 19H12.5833V17.8333H11.4167V19ZM6.75 12.5833H7.91666V11.4167H6.75V12.5833ZM16.0833 12H17.25V10.8333H16.0833V12ZM14.3333 13.1667H17.25V12H14.3333V13.1667ZM12.5833 16.9583H11.4167V13.75H9.66666V9.66666H10.8333V12.5833H12.5833V13.1667H14.3333V14.3333H12.5833V16.9583ZM10.8333 9.66666H12V6.16667H10.8333V9.66666Z\" />\n    </SvgIcon>\n}\n\n\nexport const LinkedIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"26\" height=\"26\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <g clipRule=\"url(#clip0)\">\n            <path\n                d=\"M4.92202 13.0861C4.90829 11.3762 6.28708 9.97508 7.99703 9.96135L11.9969 9.92924L11.9816 8.0293L7.98177 8.06142C5.22186 8.08358 2.99992 10.3415 3.02208 13.1014C3.04424 15.8613 5.30215 18.0833 8.06207 18.0611L12.0619 18.029L12.0467 16.129L8.04681 16.1612C6.33687 16.1749 4.93575 14.7961 4.92202 13.0861ZM9.02992 14.0532L17.0297 13.989L17.0136 11.989L9.01386 12.0533L9.02992 14.0532ZM17.9814 7.98112L13.9816 8.01324L13.9968 9.91318L17.9967 9.88106C19.7066 9.86733 21.1078 11.2461 21.1215 12.9561C21.1352 14.666 19.7564 16.0671 18.0465 16.0809L14.0466 16.113L14.0619 18.0129L18.0617 17.9808C20.8217 17.9586 23.0436 15.7007 23.0214 12.9408C22.9993 10.1809 20.7414 7.95896 17.9814 7.98112Z\"\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"24\" height=\"24\" transform=\"translate(0.925781 1.11768) rotate(-0.460053)\"/>\n            </clipPath>\n        </defs>\n    </SvgIcon>\n}\nexport const PoolsIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.1837 4.58978C16.964 5.02344 18.5432 6.5898 19.0818 8.481L19.5047 9.85554H14.5687L14.3576 9.74997C14.2268 9.67155 14.043 9.50334 13.9837 9.4264C13.9494 9.37355 13.8994 9.28032 13.8821 9.24117C13.8503 9.16525 13.8353 9.1024 13.83 9.07917C13.8177 9.02562 13.8126 8.98263 13.8111 8.97045C13.8072 8.93784 13.8057 8.911 13.8052 8.90236C13.8039 8.87933 13.8033 8.85681 13.8029 8.84183C13.8021 8.80857 13.8015 8.76579 13.8011 8.71872C13.8003 8.6228 13.8 8.48895 13.8 8.33196C13.8 8.01708 13.8013 7.59909 13.8031 7.18271C13.8048 6.76601 13.807 6.34966 13.8088 6.03757L13.8201 4.2002L15.1837 4.58978ZM14.8658 8.85255C14.8658 8.85255 14.862 7.53879 14.867 6.56298L14.8728 5.52073L14.9708 5.54855C15.2857 5.63792 15.5869 5.75892 15.8705 5.90804C16.7007 6.34449 17.3813 7.02187 17.8202 7.85255C17.9713 8.13857 18.0938 8.44276 18.1838 8.76155V8.85255H14.8658ZM14.8728 5.52055C14.8728 5.52055 14.709 5.47419 14.8728 5.52073L14.8728 5.52055ZM19.39 11.9999C19.39 16.1421 16.0322 19.4999 11.89 19.4999C7.74788 19.4999 4.39001 16.1421 4.39001 11.9999C4.39001 7.85778 7.74788 4.49992 11.89 4.49992C11.9529 4.49992 12.0354 4.49843 12.1257 4.49681C12.3362 4.49301 12.5887 4.48846 12.7324 4.50026V10.9898H19.3226C19.3452 11.1582 19.3736 11.4999 19.3736 11.4999C19.3845 11.6652 19.39 11.8319 19.39 11.9999ZM11.3047 6.20012L11.2067 6.21412C8.45574 6.59912 6.26474 8.82512 6.08274 11.5971C5.85874 15.0201 8.62374 17.8971 12.0397 17.8201C14.9307 17.7571 17.3037 15.5101 17.6817 12.6541L17.6957 12.5491H12.8307C12.0257 12.5491 11.3607 11.9261 11.3047 11.1211V11.0231V6.20012Z\" />\n    </SvgIcon>\n}\n\n\n\n\nexport const MiningIcon = () => {\n    return <SvgIcon width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.0273 3.91406L12.5417 7.20561L14.6093 9.23934L13.4155 10.4331L9.88443 6.34619L6.17153 10.1299L6.11507 10.2038C5.56228 10.9279 5.17112 11.5666 4.91464 12.2357C4.65466 12.914 4.56657 13.538 4.51544 14.1637C4.43 15.2073 4.7132 16.6663 5.19215 18.3728L5.4352 19.2387L6.31357 19.4323C7.9572 19.7945 9.31738 19.9979 10.2753 19.9468C11.4947 19.8817 13.2507 19.5252 14.3719 18.4041L18.2341 14.5419L14.1279 11.1897L15.3498 9.9678L17.3579 11.943L20.8738 8.70782L16.0273 3.91406ZM17.3924 9.87288L14.7031 7.22764L16.0032 5.99998L18.7012 8.66861L17.3924 9.87288ZM10.4825 13.9032L11.793 11.7387L12.1095 11.2159L9.81426 8.55934L7.30734 11.1141C6.50373 12.1667 6.21581 12.8401 6.08541 13.6406C6.05217 13.8446 6.02916 14.0569 6.01046 14.2858C5.94906 15.0348 6.1577 16.262 6.63635 17.9674C8.27181 18.3278 9.45813 18.4883 10.1953 18.4489C11.3011 18.3899 12.5893 18.0654 13.3112 17.3434L16.0001 14.6545L13.365 12.5033L10.4825 13.9032Z\" />\n    </SvgIcon>\n}\n\n\n\n\nexport const MyLiquidityIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.5008 9.5C17.5008 10.7901 17.0566 11.9765 16.3128 12.9145C16.4161 12.9599 16.5174 13.0105 16.6161 13.0664L16.619 13.068C17.1399 13.3657 17.7287 13.5245 18.3286 13.5292C18.8963 13.5274 19.4529 13.3712 19.9387 13.0774L19.9515 13.0699C20.1796 12.938 20.4227 12.8338 20.6756 12.7596L20.6769 12.7592C20.7405 12.7406 20.7942 12.6975 20.8261 12.6394L22.1413 13.3606C21.9182 13.7673 21.5429 14.0688 21.0977 14.1989C20.9616 14.2389 20.8308 14.2947 20.7078 14.3653C19.9895 14.7979 19.1671 15.0274 18.3284 15.0292L18.3218 15.0292V15.0292C17.4637 15.0233 16.6215 14.7968 15.8763 14.3713C15.5989 14.2146 15.2858 14.1323 14.9672 14.1323C14.119 14.6766 13.1115 14.9943 12.0301 14.9999C11.8963 15.011 11.7618 15.0165 11.6269 15.0165C10.7743 15.0165 9.93654 14.7941 9.19629 14.3712C8.91879 14.2146 8.60553 14.1323 8.28686 14.1323C7.97022 14.1323 7.65892 14.2135 7.38275 14.3682C6.64874 14.8043 5.81072 15.0344 4.95686 15.0344C4.10166 15.0344 3.26237 14.8035 2.52755 14.3662C2.40413 14.2953 2.27278 14.2391 2.1362 14.199C1.91583 14.1346 1.71027 14.0275 1.53125 13.8838L2.47034 12.7141C2.49594 12.7347 2.52534 12.75 2.55686 12.7592L2.55817 12.7595C2.81101 12.8338 3.05409 12.938 3.28223 13.0699L3.29127 13.0751L3.29123 13.0752C3.79483 13.3757 4.37038 13.5344 4.95686 13.5344C5.54333 13.5344 6.11888 13.3757 6.62248 13.0752L6.63763 13.0664C6.92079 12.9062 7.22456 12.7888 7.5391 12.7168C6.88579 11.8122 6.5008 10.7011 6.5008 9.5C6.5008 6.46243 8.96323 4 12.0008 4C15.0384 4 17.5008 6.46243 17.5008 9.5ZM16.0008 9.5C16.0008 10.7936 15.3868 11.9437 14.4343 12.6749C14.0432 12.7379 13.6649 12.8699 13.3176 13.0664L13.3176 13.0663L13.3146 13.0681C12.8985 13.306 12.438 13.4526 11.9636 13.4998C9.77158 13.4799 8.0008 11.6967 8.0008 9.5C8.0008 7.29086 9.79166 5.5 12.0008 5.5C14.2099 5.5 16.0008 7.29086 16.0008 9.5ZM4.95686 19.0344C5.81072 19.0344 6.64874 18.8043 7.38275 18.3682C7.65892 18.2135 7.97022 18.1323 8.28686 18.1323C8.60553 18.1323 8.91879 18.2146 9.19629 18.3712C9.93654 18.7941 10.7743 19.0165 11.6269 19.0165C12.4795 19.0165 13.3173 18.7941 14.0576 18.3711C14.3351 18.2145 14.6483 18.1323 14.9669 18.1323C15.2855 18.1323 15.5988 18.2146 15.8763 18.3713C16.6215 18.7968 17.4637 19.0233 18.3218 19.0292V19.0292L18.3284 19.0292C19.1671 19.0274 19.9895 18.7979 20.7078 18.3653C20.8308 18.2947 20.9616 18.2389 21.0977 18.1989C21.5429 18.0688 21.9182 17.7673 22.1413 17.3606L20.8261 16.6394C20.7942 16.6975 20.7405 16.7406 20.6769 16.7592L20.6756 16.7596C20.4227 16.8338 20.1796 16.938 19.9515 17.0699L19.9387 17.0774C19.4529 17.3712 18.8963 17.5274 18.3286 17.5292C17.7287 17.5245 17.1399 17.3657 16.619 17.068L16.6161 17.0664C16.113 16.7818 15.5448 16.6323 14.9669 16.6323C14.3889 16.6323 13.8207 16.7818 13.3176 17.0664L13.3176 17.0663L13.3146 17.0681C12.8006 17.362 12.2189 17.5165 11.6269 17.5165C11.0348 17.5165 10.4531 17.362 9.93915 17.0681L9.93609 17.0664C9.433 16.7818 8.86484 16.6323 8.28686 16.6323C7.70887 16.6323 7.14072 16.7818 6.63763 17.0664L6.62248 17.0752C6.11888 17.3757 5.54333 17.5344 4.95686 17.5344C4.37038 17.5344 3.79483 17.3757 3.29123 17.0752L3.29127 17.0751L3.28223 17.0699C3.05409 16.938 2.81101 16.8338 2.55817 16.7595L2.55686 16.7592C2.52534 16.75 2.49594 16.7347 2.47034 16.7141L1.53125 17.8838C1.71027 18.0275 1.91583 18.1346 2.1362 18.199C2.27278 18.2391 2.40413 18.2953 2.52755 18.3662C3.26237 18.8035 4.10166 19.0344 4.95686 19.0344ZM10.9752 8.417C10.9752 8.73418 11.2618 8.93736 12.1539 9.13427V9.134C13.0457 9.33091 14.0008 9.65436 14.0008 10.6013C14.0008 11.2847 13.3918 11.6616 12.6254 11.7849V12.5H11.4469V11.7765C10.6924 11.6395 10.0477 11.2294 10.0008 10.4993H10.8653C10.9083 10.8928 11.2265 11.1994 12.0363 11.1994C12.9043 11.1994 13.0968 10.8323 13.0968 10.6032C13.0968 10.2939 12.9004 10.0002 11.918 9.80027C10.8222 9.57773 10.0715 9.19427 10.0715 8.42409C10.0715 7.78045 10.6847 7.36045 11.4469 7.22V6.5H12.6263V7.23009C12.9752 7.28903 13.2901 7.44693 13.5193 7.67784C13.7484 7.90874 13.8782 8.19893 13.8874 8.50073H13.0181C12.9946 8.084 12.7356 7.80036 12.036 7.80036C11.372 7.80036 10.9752 8.05345 10.9752 8.417Z\" />\n    </SvgIcon>\n}\n\n\nexport const OrderMinIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.1267 9.44667C16.1463 9.50509 16.1597 9.56542 16.1667 9.62667V9.66667V11.3627C17.5437 11.9947 18.5 13.3857 18.5 15C18.5 17.2091 16.7091 19 14.5 19C13.6822 19 12.9217 18.7546 12.2881 18.3333H7.5C6.96957 18.3333 6.46086 18.1226 6.08579 17.7475C5.71071 17.3725 5.5 16.8638 5.5 16.3333V7C5.5 6.46957 5.71071 5.96086 6.08579 5.58579C6.46086 5.21071 6.96957 5 7.5 5H11.5333C11.6108 5.00956 11.6856 5.03449 11.7533 5.07333H11.8133C11.8819 5.10539 11.9449 5.14814 12 5.2L16 9.2C16.0519 9.25511 16.0946 9.31812 16.1267 9.38667V9.44667ZM14.8333 10.3333V11.0137C14.7234 11.0046 14.6123 11 14.5 11C12.2909 11 10.5 12.7909 10.5 15C10.5 15.7286 10.6948 16.4117 11.0351 17H7.5C7.32319 17 7.15362 16.9298 7.0286 16.8047C6.90357 16.6797 6.83333 16.5101 6.83333 16.3333V7C6.83333 6.82319 6.90357 6.65362 7.0286 6.5286C7.15362 6.40357 7.32319 6.33333 7.5 6.33333H10.8333V8.33333C10.8333 8.86377 11.044 9.37247 11.4191 9.74755C11.7942 10.1226 12.3029 10.3333 12.8333 10.3333H14.8333ZM13.8933 9L12.1667 7.27333V8.33333C12.1667 8.51014 12.2369 8.67971 12.3619 8.80474C12.487 8.92976 12.6565 9 12.8333 9H13.8933ZM14.5 18C16.1569 18 17.5 16.6569 17.5 15C17.5 13.3431 16.1569 12 14.5 12C12.8431 12 11.5 13.3431 11.5 15C11.5 16.6569 12.8431 18 14.5 18ZM13.4504 13.4256C13.5691 13.4085 13.6893 13.4 13.8111 13.4C14.3136 13.3992 14.8047 13.5494 15.2208 13.831L15.2522 13.8529L15.475 13.6313H15.5739L16.069 14.1265V14.2254L15.8511 14.4424L15.9108 14.5264C16.1541 14.8919 16.2972 15.3148 16.3256 15.7529L16.3311 15.92C16.3311 16.0415 16.3223 16.162 16.3052 16.2807L16.2361 16.3406L15.5258 16.3403L15.4573 16.2563C15.4795 16.1465 15.4911 16.0342 15.4911 15.92C15.4911 15.5785 15.3888 15.252 15.2007 14.9759L15.2455 15.0478L13.5941 16.7004H13.4952L13 16.2052V16.1063L14.6435 14.4613L14.6015 14.4372C14.3998 14.3295 14.1781 14.2643 13.9502 14.2458L13.8111 14.24C13.6967 14.24 13.5843 14.2513 13.4745 14.2738L13.3905 14.205L13.3902 13.495L13.4504 13.4256Z\" />\n    </SvgIcon>\n}\n\n\nexport const MakerRebatesIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7 6.5H17C17.2761 6.5 17.5 6.72386 17.5 7V17C17.5 17.2761 17.2761 17.5 17 17.5H7C6.72386 17.5 6.5 17.2761 6.5 17V7C6.5 6.72386 6.72386 6.5 7 6.5ZM5 7C5 5.89543 5.89543 5 7 5H17C18.1046 5 19 5.89543 19 7V17C19 18.1046 18.1046 19 17 19H7C5.89543 19 5 18.1046 5 17V7ZM16.5 8.59985V8.5H13.0708L12.7934 8.85895L14.0108 9.89105L12.4843 11.8649L10.8446 10.429L7.5 14.7348L8.39899 15.5L11.0021 12.1472L12.6393 13.5804L12.7649 13.422L12.7675 13.4238L12.8814 13.2774L13.3816 12.6499L13.3724 12.6413L16.5 8.59985Z\" />\n\n    </SvgIcon>\n}\n\nexport const AssetsIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M15.4311 3.63902C16.4363 3.2573 17.5573 3.78128 17.9057 4.7957L18.6258 6.89305H18.6787C19.7833 6.89305 20.6787 7.78848 20.6787 8.89305V17.2545C20.6787 18.3591 19.7833 19.2545 18.6787 19.2545H6C4.89543 19.2545 4 18.3591 4 17.2545V8.89305C4 7.78848 4.89543 6.89305 6 6.89305H6.8616L15.4311 3.63902ZM16.1053 5.41387L16.6133 6.89305H12.2099L16.1053 5.41387ZM6.93932 8.89442L6.9388 8.89305H6V17.2545H18.6787V15.9329H17.0888C15.5074 15.9329 14.2253 14.6509 14.2253 13.0695C14.2253 11.488 15.5074 10.206 17.0888 10.206H18.6787V8.89305H6.94294L6.93932 8.89442ZM18.6787 12.206H17.8279H17.0888C16.6119 12.206 16.2253 12.5926 16.2253 13.0695C16.2253 13.5464 16.6119 13.9329 17.0888 13.9329H17.8279H18.6787V12.206Z\"/>\n    </SvgIcon>\n}\n\n\nexport const TransactionsIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M19.975 12.3816C19.4212 12.3869 16.7056 10.8186 16.6198 10.7368C16.4136 10.5402 16.4915 10.2954 16.702 10.2619C16.9124 10.2284 18.0942 10.0879 18.0942 10.0879C17.3679 8.14661 15.7472 6.59624 13.6201 6.09373C10.2251 5.29141 6.7142 7.56725 5.93825 11.0406C5.93157 11.0703 5.88468 11.4244 5.60347 11.4131C5.4131 11.4055 4.78944 11.1576 4.56397 11.0518C4.30656 10.9311 4.237 10.9623 4.31506 10.5737C5.1981 6.15801 9.72029 3.18211 14.0607 4.20032C17.6628 5.04518 20.1651 8.17083 20.44 11.7321C20.486 12.2094 20.2431 12.379 19.975 12.3816ZM14.3058 13.3494C14.6624 13.3494 14.9514 13.6382 14.9514 13.995C14.9514 14.3512 14.6624 14.6406 14.3058 14.6406H13.0146V15.4476C13.0146 15.8934 12.6534 16.2547 12.2076 16.2547C11.7618 16.2547 11.4006 15.8934 11.4006 15.4476V14.6406H10.1093C9.75279 14.6406 9.46375 14.3512 9.46375 13.995C9.46375 13.6381 9.7528 13.3494 10.1093 13.3494H11.4006V12.7038H10.1093C9.75279 12.7038 9.46375 12.4144 9.46375 12.0582C9.46375 11.7014 9.7528 11.4126 10.1093 11.4126H11.4006V11.3684L9.9678 9.93596C9.71389 9.68187 9.71389 9.27019 9.9678 9.01639C10.2217 8.7626 10.6333 8.76262 10.8872 9.01639L12.1967 10.3256L13.5113 9.01101C13.7652 8.75756 14.1768 8.75756 14.4307 9.01101C14.6846 9.26509 14.6846 9.67682 14.4307 9.93058L13.0147 11.3467V11.4126H14.3059C14.6624 11.4126 14.9515 11.7013 14.9515 12.0582C14.9515 12.4144 14.6624 12.7038 14.3059 12.7038H13.0147V13.3494L14.3058 13.3494ZM7.82879 14.2605C8.11201 14.4415 8.04375 14.8053 7.73251 14.8377C7.42128 14.87 6.44662 14.9559 6.44662 14.9559C7.21929 16.7667 8.78527 18.1944 10.8101 18.6726C14.2051 19.4746 17.677 17.3089 18.4532 13.8355C18.4691 13.7642 18.4686 13.7754 18.4964 13.6224C18.5241 13.4694 18.5691 13.2367 18.868 13.3402C19.1669 13.4438 19.8959 13.6581 20.123 13.7189C20.3501 13.7796 20.3245 13.8691 20.296 14.0801C20.2874 14.1443 20.2743 14.2031 20.2606 14.2649C19.2444 18.7811 14.821 21.5984 10.3808 20.5565C6.78298 19.7126 4.28214 16.5939 4.00233 13.0379C3.96438 12.4269 4.39608 12.3021 4.83738 12.5356C5.18455 12.7192 7.54557 14.0794 7.82879 14.2605Z\"/>\n    </SvgIcon>\n}\n\nexport const TradeIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M13.6517 15.8163C13.9445 15.5234 13.9445 15.0485 13.6517 14.7557C13.3588 14.4628 12.8839 14.4628 12.591 14.7557C11.7123 15.6343 10.2877 15.6343 9.40901 14.7557C9.11612 14.4628 8.64124 14.4628 8.34835 14.7557C8.05546 15.0485 8.05546 15.5234 8.34835 15.8163C9.81282 17.2808 12.1872 17.2808 13.6517 15.8163Z\"/>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M14.0443 4C11.7428 4 9.74576 5.29595 8.73991 7.19369C5.98293 8.13365 4 10.7457 4 13.8208C4 17.6868 7.13401 20.8208 11 20.8208C14.622 20.8208 17.6015 18.0699 17.9631 14.5435C19.2363 13.4443 20.0443 11.8166 20.0443 10C20.0443 6.68629 17.358 4 14.0443 4ZM14.0443 6C13.1176 6 12.2638 6.31508 11.585 6.8449C14.4504 7.08199 16.8261 9.04488 17.6703 11.6916C17.9104 11.1776 18.0443 10.6044 18.0443 10C18.0443 7.79086 16.2534 6 14.0443 6ZM11 8.8208C8.23858 8.8208 6 11.0594 6 13.8208C6 16.5822 8.23858 18.8208 11 18.8208C13.7614 18.8208 16 16.5822 16 13.8208C16 11.0594 13.7614 8.8208 11 8.8208Z\"/>\n    </SvgIcon>\n}\n\nexport const AmmIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M11.4214 14.8426V11.1267H8V9.12671H11.4214V6H13.4214V9.12671H16.8426V11.1267H13.4214V14.8426H11.4214ZM8 18H16.8426V16H8V18Z\"/>\n    </SvgIcon>\n}\n\nexport const OrderIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M5 5H19V19.3874L12 17.0541L5 19.3874V5ZM7 7V16.6126L12 14.9459L17 16.6126V7H7Z\"/>\n    </SvgIcon>\n}\nexport const SettingIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M17.0152 12.6854C17.0444 12.4667 17.059 12.2406 17.059 12C17.059 11.7667 17.0444 11.5333 17.0079 11.3146L18.4881 10.1625C18.6194 10.0604 18.6558 9.86354 18.5756 9.71771L17.1756 7.29687C17.0881 7.13646 16.9058 7.08542 16.7454 7.13646L15.0027 7.83646C14.6381 7.55937 14.2517 7.32604 13.8215 7.15104L13.559 5.29896C13.5298 5.12396 13.384 5 13.209 5H10.409C10.234 5 10.0954 5.12396 10.0662 5.29896L9.80375 7.15104C9.37354 7.32604 8.97979 7.56667 8.6225 7.83646L6.87979 7.13646C6.71937 7.07812 6.53708 7.13646 6.44958 7.29687L5.05688 9.71771C4.96938 9.87083 4.99854 10.0604 5.14438 10.1625L6.62458 11.3146C6.58813 11.5333 6.55896 11.774 6.55896 12C6.55896 12.226 6.57354 12.4667 6.61 12.6854L5.12979 13.8375C4.99854 13.9396 4.96208 14.1365 5.04229 14.2823L6.44229 16.7031C6.52979 16.8635 6.71208 16.9146 6.8725 16.8635L8.61521 16.1635C8.97979 16.4406 9.36625 16.674 9.79646 16.849L10.059 18.701C10.0954 18.876 10.234 19 10.409 19H13.209C13.384 19 13.5298 18.876 13.5517 18.701L13.8142 16.849C14.2444 16.674 14.6381 16.4406 14.9954 16.1635L16.7381 16.8635C16.8985 16.9219 17.0808 16.8635 17.1683 16.7031L18.5683 14.2823C18.6558 14.1219 18.6194 13.9396 18.4808 13.8375L17.0152 12.6854V12.6854ZM11.809 14.625C10.3652 14.625 9.18396 13.4437 9.18396 12C9.18396 10.5562 10.3652 9.375 11.809 9.375C13.2527 9.375 14.434 10.5562 14.434 12C14.434 13.4437 13.2527 14.625 11.809 14.625Z\"/>\n    </SvgIcon>\n}\n\n\nexport const RewardIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path  fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.5 5.00021L8.12127 4.51514L12 5.48482L15.8787 4.51514L16.5 5.00021V9.00021C16.5 9.0103 16.4997 9.02032 16.4991 9.03026C17.4332 10.0881 18 11.4778 18 13C18 16.3137 15.3137 19 12 19C8.68629 19 6 16.3137 6 13C6 11.4778 6.56681 10.0881 7.50089 9.03026C7.5003 9.02032 7.5 9.0103 7.5 9.00021V5.00021ZM15.5 5.6406V8.12605C14.5149 7.41738 13.3062 7 12 7C10.6938 7 9.48512 7.41738 8.5 8.12605V5.6406L11.8787 6.48528H12.1213L15.5 5.6406ZM12 17.5C14.4853 17.5 16.5 15.4853 16.5 13C16.5 10.5147 14.4853 8.5 12 8.5C9.51472 8.5 7.5 10.5147 7.5 13C7.5 15.4853 9.51472 17.5 12 17.5ZM13.0864 15.0914C12.9768 15.1125 12.8611 15.0938 12.762 15.0388L12 14.6116L11.2381 15.0387C11.1665 15.0787 11.0861 15.0999 11.0041 15.1C10.9123 15.1001 10.8226 15.0738 10.7451 15.0244C10.6694 14.9762 10.6085 14.9079 10.5685 14.8274C10.5206 14.731 10.5047 14.6216 10.5228 14.5146L10.6788 13.6114L10.0464 12.9787C9.85839 12.7904 9.85054 12.4833 10.0283 12.285C10.1046 12.2002 10.2076 12.1444 10.3206 12.1282C10.7325 12.0695 11.0098 12.0294 11.1803 12.0039L11.5585 11.1857C11.6382 11.0133 11.8099 10.9 11.9999 10.9C12.0765 10.9 12.1523 10.9185 12.2208 10.9539C12.3179 11.0043 12.3952 11.086 12.4414 11.1858L12.8197 12.0039C12.9901 12.0294 13.2672 12.0694 13.6793 12.1282C13.948 12.1664 14.1301 12.4188 14.0959 12.6872C14.0817 12.7973 14.0319 12.9 13.9534 12.9787L13.3211 13.6114L13.477 14.5137C13.488 14.5765 13.4871 14.6408 13.4743 14.7034C13.4614 14.7663 13.4367 14.8262 13.4023 14.8783C13.3667 14.9329 13.3208 14.9799 13.2668 15.0166C13.2121 15.0538 13.1503 15.0794 13.0864 15.0914ZM11.2965 13.5604L11.1516 14.3994L11.8533 14.006C11.9445 13.9549 12.0556 13.9549 12.1467 14.006L12.8484 14.3993L12.7034 13.5603C12.6868 13.4643 12.7179 13.3662 12.7869 13.2972L13.3907 12.6931C12.9357 12.6279 12.6806 12.5905 12.5669 12.572C12.4685 12.556 12.3845 12.4923 12.3426 12.4018L12.3309 12.3765L11.9999 11.6607L11.6573 12.4018C11.6155 12.4923 11.5315 12.556 11.4331 12.572C11.3193 12.5905 11.0638 12.628 10.6093 12.6931L11.2131 13.2972C11.282 13.3662 11.3131 13.4643 11.2965 13.5604Z\" />\n    </SvgIcon>\n}\n\n\n\nexport const RedPockIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M5.54199 7C5.54199 5.48121 6.77321 4.25 8.29199 4.25H15.3834C16.9022 4.25 18.1334 5.48122 18.1334 7V16.5778C18.1334 18.0966 16.9022 19.3278 15.3834 19.3278H8.29199C6.77321 19.3278 5.54199 18.0966 5.54199 16.5778V7ZM8.29199 5.75C7.60164 5.75 7.04199 6.30964 7.04199 7V8.11942C7.7581 8.41592 8.63926 8.71732 9.57124 8.94215C9.98492 8.02838 10.8925 7.38867 11.9559 7.38867C13.0696 7.38867 14.0124 8.09033 14.396 9.07361C14.7112 9.00099 15.0121 8.9138 15.3 8.81557C15.5154 8.73785 15.6926 8.67531 15.8428 8.62235V8.62232C16.2201 8.48924 16.4258 8.41667 16.6334 8.31579V7C16.6334 6.30965 16.0738 5.75 15.3834 5.75H8.29199ZM16.6334 9.93382C16.5369 9.96866 16.4322 10.0055 16.3155 10.0466L16.3154 10.0466C16.1668 10.0989 15.9988 10.1581 15.8032 10.2287L15.7912 10.233C15.3928 10.3692 14.9726 10.4873 14.5288 10.5802C14.2896 11.7957 13.2356 12.722 11.9559 12.722C10.6252 12.722 9.5384 11.7202 9.35826 10.4332C8.52336 10.2391 7.73079 9.98884 7.04199 9.73112V16.5778C7.04199 17.2681 7.60164 17.8278 8.29199 17.8278H15.3834C16.0738 17.8278 16.6334 17.2681 16.6334 16.5778V9.93382ZM11.9559 8.38867C11.0684 8.38867 10.332 9.12542 10.332 10.0553C10.332 10.9853 11.0684 11.722 11.9559 11.722C12.8434 11.722 13.5798 10.9853 13.5798 10.0553C13.5798 9.12542 12.8434 8.38867 11.9559 8.38867Z\"/>\n    </SvgIcon>\n}\n\nexport const NoNetWorkIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M3.20711 8.52081C2.93096 8.79696 2.93096 9.24467 3.20711 9.52081C3.48325 9.79696 3.93096 9.79696 4.20711 9.52081C6.19623 7.53169 8.89406 6.41421 11.7071 6.41421C14.5202 6.41421 17.218 7.53169 19.2071 9.52081C19.4832 9.79696 19.931 9.79696 20.2071 9.52081C20.4832 9.24467 20.4832 8.79696 20.2071 8.52081C17.9528 6.26647 14.8952 5 11.7071 5C8.51899 5 5.46145 6.26647 3.20711 8.52081ZM6.5 12.5803C6.10948 12.9708 6.10948 13.604 6.5 13.9945C6.89052 14.385 7.52369 14.385 7.91421 13.9945C8.92015 12.9886 10.2845 12.4235 11.7071 12.4235C13.1297 12.4235 14.4941 12.9886 15.5 13.9945C15.8905 14.385 16.5237 14.385 16.9142 13.9945C17.3047 13.604 17.3047 12.9708 16.9142 12.5803C15.5332 11.1993 13.6602 10.4235 11.7071 10.4235C9.75406 10.4235 7.88101 11.1993 6.5 12.5803ZM13.6723 15.6419C13.9652 15.9347 13.9652 16.4096 13.6723 16.7025L12.7884 17.5864L13.6723 18.4703C13.9652 18.7632 13.9652 19.238 13.6723 19.5309C13.3794 19.8238 12.9045 19.8238 12.6116 19.5309L11.7278 18.6471L10.8439 19.5309C10.551 19.8238 10.0761 19.8238 9.78322 19.5309C9.49033 19.238 9.49033 18.7632 9.78322 18.4703L10.6671 17.5864L9.78322 16.7025C9.49033 16.4096 9.49033 15.9347 9.78322 15.6419C10.0761 15.349 10.551 15.349 10.8439 15.6419L11.7278 16.5257L12.6116 15.6419C12.9045 15.349 13.3794 15.349 13.6723 15.6419Z\"/>\n    </SvgIcon>\n}\n\n\nexport const PowerIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M8.09968 8.00857L8.09972 8.0086L8.10277 8.00555C8.37315 7.73517 8.37315 7.32039 8.10277 7.05001C7.83239 6.77963 7.41761 6.77963 7.14723 7.05001C5.84734 8.3499 5.09986 10.0975 5.00027 11.9898L5 11.9898V12C5 15.8504 8.14956 19 12 19C15.8504 19 19 15.8504 19 12C19 10.0029 18.2006 8.15074 16.7479 6.84828L16.7415 6.8426L16.7347 6.8375C16.4687 6.63798 16.0679 6.63627 15.8 6.90417L15.7902 6.91395L15.7819 6.925C15.5824 7.19103 15.5807 7.59182 15.8486 7.85972L15.8483 7.86L15.8577 7.86819C17.0292 8.89911 17.6875 10.4006 17.6875 12C17.6875 15.1009 15.1496 17.6389 12.0486 17.6389C8.94767 17.6389 6.40972 15.1009 6.40972 12C6.40972 10.4963 7.02081 9.04053 8.09968 8.00857ZM12.7778 5.68056C12.7778 5.49054 12.7136 5.31708 12.5871 5.19063C12.4607 5.06419 12.2872 5 12.0972 5C11.9072 5 11.7337 5.06419 11.6073 5.19063C11.4809 5.31708 11.4167 5.49054 11.4167 5.68056V11.5139C11.4167 11.7039 11.4809 11.8774 11.6073 12.0038C11.7337 12.1303 11.9072 12.1944 12.0972 12.1944C12.2872 12.1944 12.4607 12.1303 12.5871 12.0038C12.7136 11.8774 12.7778 11.7039 12.7778 11.5139V5.68056ZM7.28472 7.1875C7.47917 6.99306 7.77083 6.99306 7.96528 7.1875C8.15972 7.38194 8.15972 7.67361 7.96528 7.86806C6.84722 8.9375 6.21528 10.4444 6.21528 12C6.21528 13.554 6.83115 14.9712 7.83088 16.0195C6.83126 14.9712 6.21547 13.5541 6.21547 12.0002C6.21547 10.4446 6.84741 8.93769 7.96547 7.86825C8.15991 7.6738 8.15991 7.38213 7.96547 7.18769C7.77102 6.99325 7.47936 6.99325 7.28491 7.18769C6.02102 8.45158 5.29186 10.153 5.19463 12.0002C5.19463 13.8064 5.90777 15.4542 7.0664 16.6758C5.90766 15.4542 5.19444 13.8063 5.19444 12C5.29167 10.1528 6.02083 8.45139 7.28472 7.1875ZM7.22257 16.8352C8.45369 18.052 10.1432 18.8057 12.0002 18.8057C15.7432 18.8057 18.8057 15.7432 18.8057 12.0002C18.8057 10.2354 18.165 8.5907 16.9926 7.35692C18.1649 8.59068 18.8056 10.2353 18.8056 12C18.8056 15.7431 15.7431 18.8056 12 18.8056C10.1431 18.8056 8.45368 18.0518 7.22257 16.8352ZM16.8121 7.17427C16.7488 7.11272 16.6841 7.0523 16.6181 6.99306C16.4236 6.84722 16.1319 6.84722 15.9375 7.04167C15.7917 7.23611 15.7917 7.52778 15.9861 7.72222C15.9862 7.72228 15.9862 7.72235 15.9863 7.72241C16.0361 7.7662 16.0849 7.8108 16.1329 7.85619C16.0849 7.81073 16.0359 7.76607 15.9861 7.72222C15.7919 7.52778 15.7919 7.23624 15.9377 7.04186C16.1321 6.84741 16.4238 6.84741 16.6182 6.99325C16.6843 7.05243 16.7489 7.11278 16.8121 7.17427ZM16.3137 8.0355C17.323 9.08419 17.8819 10.5022 17.8819 12C17.8819 15.2083 15.2569 17.8333 12.0486 17.8333C10.457 17.8333 9.00891 17.1873 7.95367 16.1445C9.00892 17.1874 10.4571 17.8335 12.0488 17.8335C15.2571 17.8335 17.8821 15.2085 17.8821 12.0002C17.8821 10.5023 17.3231 9.08421 16.3137 8.0355ZM12.4477 5.32623C12.534 5.41139 12.5833 5.53364 12.5833 5.68056V11.5139C12.5833 11.8056 12.3889 12 12.0972 12C11.9514 12 11.83 11.9514 11.7449 11.8664C11.6599 11.7813 11.6113 11.6599 11.6113 11.5141V5.68075C11.6113 5.38908 11.8057 5.19463 12.0974 5.19463C12.2421 5.19463 12.3628 5.24245 12.4477 5.32623ZM12.0972 5.19444C12.242 5.19444 12.3628 5.24233 12.4477 5.32623C12.5341 5.4114 12.5835 5.53372 12.5835 5.68075V11.5141C12.5835 11.8057 12.3891 12.0002 12.0974 12.0002C11.9515 12.0002 11.83 11.9515 11.7449 11.8664C11.6598 11.7813 11.6111 11.6598 11.6111 11.5139V5.68056C11.6111 5.38889 11.8056 5.19444 12.0972 5.19444Z\"/>\n    </SvgIcon>\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\nexport const ColorDarkDefault = Object.freeze({\n    primary: '#1C42FF',\n    primaryLight: '#1C96FF',\n    primaryDark: '#0426CC',\n    secondary: '#F0B90B',\n    secondaryLight: '#F0B90B',\n    secondaryDark: '#F3A008',\n    success: '#00BBA8',\n    error: '#FF5677',\n    textPrimary: \"#FFFFFF\",\n    textPrimaryLight: \"#E6EEFF\",\n    textSecondary: \"#A1A7BB\",\n    textDisable: \"#282C48\",\n    textHint: \"rgba(255, 255, 255, 0.38)\",\n    backgroundGlobal: 'linear-gradient(0deg, rgba(20, 23, 44, 0.8), rgba(20, 23, 44, 0.68)), linear-gradient(106.98deg, rgba(32, 51, 143, 1) -0.48%, rgba(15, 30, 100, 1) 52.64%,  rgba(114, 44, 115, 1) 100.5%)',\n    backgroundBox: 'rgba(0,0,0,.44)',  //#191C30\n    backgroundHeader: '#070a21',\n    backgroundSecondary: '#0D1746', //'#1F2126',\n    backgroundHover: 'rgba(235, 238, 255, 0.1)',\n    blur: 'rgba(255,255,255,.1)',\n    borderColor: '#252842',\n    // outline: 'rgba(235, 238, 255, 0.1)',\n    focus: \"rgba(235, 238, 255, 0.6)\",\n    vipBgColor: \"rgba(255, 242, 202, 0.2)\",\n    shadowBox: \"0px 4px 38px rgba(0, 0, 0, 0.16)\",\n    background: () => {\n        return {\n            default: ColorDarkDefault.backgroundBox,\n            bg: ColorDarkDefault.backgroundGlobal,\n            active: ColorDarkDefault.textSecondary,\n            secondary: ColorDarkDefault.backgroundSecondary,\n            outline: ColorDarkDefault.backgroundHover,\n            backDrop: ColorDarkDefault.blur,\n            hover: ColorDarkDefault.backgroundHover,\n        }\n    },\n    border: () => {\n        return {\n            default: ColorDarkDefault.borderColor,\n            selected: ColorDarkDefault.primaryLight,//'#1C96FF',\n            blur: ColorDarkDefault.blur,//ColorDarkDefault.textDisable\n            focus: ColorDarkDefault.focus,\n        }\n    }\n})\nexport const ColorLightDefault = Object.freeze({...ColorDarkDefault})\nexport type ColorBaseInterface = typeof ColorDarkDefault\n\n\n","import { ColorDarkDefault, ColorLightDefault } from \"../css/color-lib\";\nimport { fontDefault } from \"../css/global\";\nimport { ThemeKeys } from '../interface';\n\n\nexport const pxToRem = (px: any, oneRemPx = 10) => `${px / oneRemPx}rem`;\nexport const unit: number = 8;\nexport const borderFunc = (themeMode: ThemeKeys) => {\n    const colorBase = themeMode === 'dark' ? ColorDarkDefault : ColorLightDefault\n    const borderColor = colorBase?.border() as any;\n    return {\n        defaultBorder: `1px solid ${borderColor?.default}`,\n        defaultRadius: `${unit / 2}px`,\n        FontDefault: fontDefault,\n        defaultFrame: ({\n                           d_W = 1,\n                           d_R = 1,\n                           c_key = 'primary'\n                       }: { d_W?: number, d_R?: number, c_key?: 'primary' | 'selected' | 'blur' | 'focus' | 'outline' | string }) => {\n            let color;\n            switch (c_key) {\n                case 'primary':\n                case 'selected':\n                case 'blur':\n                case 'focus':\n                    color = borderColor[ c_key ];\n                    break;\n                default:\n                    color = c_key;\n            }\n            return `\n        border: ${d_W}px solid ${color};\n        border-radius: ${d_R * unit}px;\n       `\n        },\n        borderConfig: ({\n                           d_W = 1,\n                           c_key = 'primary'\n                       }: { d_W?: number, c_key?: 'primary' | 'selected' | 'blur' | 'focus' | string }) => {\n            let color;\n            switch (c_key) {\n                case 'primary':\n                case 'selected':\n                case 'focus':\n                case 'blur':\n                    color = borderColor[ c_key ];\n                    break;\n                default:\n                    color = c_key;\n            }\n            return `${d_W}px solid ${color}`;\n        }\n    }\n}\n","import { css } from \"@emotion/react\";\n\nexport default css`\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  box-sizing: border-box;\n}\n\naddress,\ncaption,\ncite,\ncode,\ndfn,\nem,\nstrong,\nth,\nvar,\nb {\n  font-weight: normal;\n  font-style: normal;\n}\n\nabbr,\nacronym {\n  border: 0;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\nhtml {\n  text-size-adjust: 100%;\n  box-sizing: border-box;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote {\n  &:before,\n  &:after {\n    content: '';\n    content: none;\n  }\n}\nq {\n  &:before,\n  &:after {\n    content: '';\n    content: none;\n  }\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ncaption,\nth {\n  text-align: left;\n}\ntextarea {\n  resize: none;\n}\na {\n  text-decoration: none;\n  cursor: pointer;\n}\nbutton {\n  padding: 0;\n  border: none;\n  background: none;\n}\n  html{\n    overscroll-behavior-x:none;\n    overscroll-behavior-y:none;\n  }\n`","export default __webpack_public_path__ + \"static/media/Inter-Medium.18b8c68e.ttf\";","export default __webpack_public_path__ + \"static/media/Gilroy-Medium.1b4da658.ttf\";","export const globalSetup = Object.freeze({\n        wait: 100\n    }\n)","export enum HeaderMenuTabStatus {\n    hidden = 'hidden',\n    disabled = 'disabled',\n    default = 'default'\n}\n\nexport interface HeaderMenuItemInterface {\n    label: {\n        icon?: any,\n        id: string,\n        style?: any,\n        description?: string,\n        i18nKey:string\n    },\n    child?: Array<HeaderMenuItemInterface>,\n    router?: { path: string, [ key: string ]: any },\n    status?: keyof typeof HeaderMenuTabStatus\n    extender?: React.ElementType<any>|JSX.Element | undefined,\n}\n\n\n","export enum WalletStatus {\n    disabled = 'disabled',\n    loading = 'loading',\n    unlock = 'unlock',\n    connect = 'connect',\n    noAccount = 'noAccount',\n    accountPending = 'accountPending',\n    noNetwork='noNetwork',\n    default = 'default',\n}\n\nexport interface GatewayItem {\n    key: string\n    imgSrc: string\n    handleSelect?: (event: React.MouseEvent) => void\n}","import { GatewayItem } from '../loopring-interface';\n\nexport const gatewayList: GatewayItem[] = [\n    {\n        key: 'MetaMask',\n        imgSrc: 'static/svg/meta-mask.svg',\n    },\n    {\n        key: 'WalletConnect',\n        imgSrc: 'static/svg/wallet-connect.svg',\n    },\n    {\n        key: 'Ledger',\n        imgSrc: 'static/svg/ledger.svg',\n    },\n    {\n        key: 'Trezor',\n        imgSrc: 'static/svg/trezor.svg',\n    },\n]\n","export enum UpColor {\n    green = 'green',\n    red = 'red'\n}\n\nexport enum Currency {\n    dollar='USD',\n    yen='CNY',\n}\n\nexport const  SlippageTolerance:Array<0.1|0.5|1|string> =  [0.1, 0.5, 1]","export enum FloatTag {\n    increase = 'increase',\n    decrease = 'decrease',\n    none = 'none'\n}\n","export enum ChartType {\n    Depth = 'Depth',\n    Trend = 'Trend',\n    Kline = 'Kline',\n}\n\nexport enum ChartUnit {\n    W1 = '1W',\n    H1 = '1H',\n    D1 = '1D',\n}\n","export enum WithdrawType {\n    'Fast' = 'Fast',\n    'Standard' = 'Standard',\n}\n\nexport const WithdrawTypes: {\n    [P in keyof typeof WithdrawType]: string | number\n} = {\n    'Fast': '',\n    'Standard': '',\n}\n\nexport  type PriceTagType = '$'|'￥';\n\nexport enum PriceTag {\n    Dollar='$',\n    Yuan='￥'\n}\n\n\nexport enum TradeTypes {\n    Buy = 'Buy',\n    Sell = 'Sell'\n}\n\nexport enum TradeStatus {\n    // Filled = 'Filled',\n    // Cancelled = 'Cancelled',\n    // Succeeded = 'Succeeded',\n    Processing = 'processing',\n    Processed = 'processed',\n    Cancelling = 'cancelling',\n    Cancelled = 'cancelled',\n    Expired = 'expired',\n    Waiting = 'waiting'\n}\nexport const EmptyValueTag = 'N/a'\n\n\n","import {\n    AssetsIcon,\n    AmmIcon,\n    // MakerRebatesIcon,\n    MiningIcon,\n    MyLiquidityIcon,\n    OrderIcon,\n    // OrderMinIcon,\n    PoolsIcon, SettingIcon,\n    TradeIcon,\n    TransactionsIcon\n} from '../svg';\n\nimport { ThemeType } from '../themes';\nimport { HeaderMenuItemInterface, HeaderMenuTabStatus } from '../loopring-interface';\n\nexport enum ButtonComponentsMap {\n    Download = 0,\n    Notification = 1,\n    Theme = 2,\n    Language = 3,\n    WalletConnect = 4,\n}\n\nexport const ToolBarAvailableItem = [\n    ButtonComponentsMap.Download,\n    // ButtonComponentsMap.Notification,\n    ButtonComponentsMap.Theme,\n    ButtonComponentsMap.Language,\n    ButtonComponentsMap.WalletConnect\n]\n\nexport let headerToolBarData: Array<{ buttonComponent: number, handleClick?: (props: any) => void, [ key: string ]: any }> = [\n    {\n        buttonComponent: ButtonComponentsMap.Download,\n        url: 'https://apps.apple.com/us/app/loopring-smart-wallet/id1550921126',\n        i18nTitle: 'labelDownloadAppTitle',\n        i18nDescription: 'labelDownloadBtn',\n    },\n    {buttonComponent: ButtonComponentsMap.Notification, label: 'labelNotification',},\n    {\n        buttonComponent: ButtonComponentsMap.Theme,\n        themeMode: ThemeType.dark,\n        label: 'themeSetting',\n        handleClick: undefined\n    },\n    {\n        buttonComponent: ButtonComponentsMap.Language,\n        // language: LanguageType.en_US,\n        label: 'languageSetting',\n        handleClick: undefined,\n    },\n    {\n        buttonComponent: ButtonComponentsMap.WalletConnect,\n        label: 'labelConnectWallet',\n        status: undefined,\n        notificationList: [],\n        handleClick: undefined\n    }];\nexport let layer2ItemData: Array<HeaderMenuItemInterface> = [{\n    label: {\n        id: 'Classic', i18nKey: 'labelClassic',\n        description: 'labelClassicDescription',\n    },\n    router: {path: '/trading/lite'},\n}, {\n    label: {\n        id: 'Advanced', i18nKey: 'labelAdvanced',\n        //TODO: translate id\n        description: 'labelAdvancedDescription',\n    },\n    router: {path: '/trading/pro'},\n},\n]\n\n\nexport enum HeadMenuTabKey {\n    markets,\n    trade,\n    liquidity,\n    Layer2,\n}\n\nexport enum NavListIndex {\n    markets,\n    trade,\n    liquidity,\n    layer2\n}\n\nexport let headerMenuData: Array<HeaderMenuItemInterface> = [\n    {\n        label: {\n            id: 'Markets', i18nKey: 'labelMarkets',\n        },\n        router: {path: '/markets'},\n        status: HeaderMenuTabStatus.default,\n    },\n    {\n        label: {\n            id: 'Trading', i18nKey: 'labelTrade',\n        },\n        router: {path: '/trading'},\n        child: layer2ItemData,\n        status: HeaderMenuTabStatus.default,\n    },\n    {\n        label: {\n            id: 'Liquidity', i18nKey: 'labelLiquidity',\n        },\n        router: {path: '/liquidity'},\n        status: HeaderMenuTabStatus.default,\n    },\n    {\n        label: {\n            id: 'Layer2', i18nKey: 'labelLayer2',\n        },\n        router: {path: '/layer2'},\n        status: HeaderMenuTabStatus.default,\n\n    }\n];\n\nexport const subMenuLayer2 = {\n    assetsGroup: [{\n        icon: AssetsIcon,\n        router: {path: '/layer2/assets'},\n        label: {\n            id: 'assets', i18nKey: 'labelAssets',\n        },\n    }],\n    transactionsGroup: [{\n        icon: TransactionsIcon,\n        router: {path: '/layer2/transactions'},\n        label: {\n            id: 'transactions', i18nKey: 'labelTransactions',\n        },\n    }, {\n        icon: TradeIcon,\n        router: {path: '/layer2/trades'},\n        label: {\n            id: 'trades', i18nKey: 'labelTrades',\n        },\n    },\n        {\n            icon: AmmIcon,\n            router: { path: '/layer2/ammRecords' },\n            label: {\n                id: 'AmmRecords', i18nKey: 'labelAmmRecords',\n                description: 'labelAmmRecordsDes',\n            },\n        }\n    ],\n    countInfoGroup: [{\n        icon: OrderIcon,\n        router: {path: '/layer2/orders'},\n        label: {\n            id: 'orders', i18nKey: 'labelOrders',\n        },\n    },\n    \n    ],\n    settingGroup: [{\n        icon: SettingIcon,\n        router: {path: '/layer2/setting'},\n        label: {\n            id: 'setting',\n            i18nKey: 'labelSetting',\n        },\n    },\n\n    ]\n}\n\n\nexport const subMenuLiquidity = {\n    poolsGroup: [{\n        icon: PoolsIcon,\n        router: {path: '/liquidity/pools'},\n        label: {\n            id: 'pools',\n            i18nKey: 'labelPools',\n        },\n    }, {\n        icon: MiningIcon,\n        router: {path: '/liquidity/amm-mining'},\n        label: {\n            id: 'amm-mining',\n            i18nKey: 'labelAmmMining',\n        },\n    }, {\n        icon: MyLiquidityIcon,\n        router: {path: '/liquidity/my-liquidity'},\n        label: {\n            id: 'my-liquidity',\n            i18nKey: 'labelMyLiquidity',\n        },\n    }],\n    // bookGroup: [{\n    //     icon: OrderMinIcon,\n    //     router: {path: '/liquidity/orderBook-Mining'},\n    //     label: {\n    //         id: 'orderBook-Mining',\n    //         i18nKey: 'labelOrderBookMining',\n    //     }\n    // },\n    //     {\n    //     icon: MakerRebatesIcon,\n    //     router: {path: '/liquidity/maker-rebates'},\n    //     label: {\n    //         id: 'maker-rebates',\n    //         i18nKey: 'labelMakerRebates',\n    //     },\n    // }\n    // ]\n}\nexport const headerRoot = 'trade'\n","export enum TableType {\n    filter = 'filter',\n    page = 'page'\n}\n","/**\n *\n * @param value\n * @param minFractionDigits default = 6\n * @returns\n */\nexport const getThousandFormattedNumbers = (value: undefined|number, minFractionDigits: number = 6 , option?:{isAbbreviate:boolean}) => {\n    if (!Number.isFinite(value)) return value\n    let result =  value!==undefined?value.toLocaleString('en', {\n        minimumFractionDigits: minFractionDigits\n    }).replace(/(\\.\\d+?)0*$/, '$1'):undefined\n    return value == undefined? undefined :option && option.isAbbreviate? abbreviateNumber(value):result;\n\n\n\n}\n\nexport function abbreviateNumber(value: number) {\n    let newValue = value,result:string = '';\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue >= 1000) {\n        newValue /= 1000;\n        suffixNum++;\n    }\n\n    result = newValue.toPrecision(3);\n\n    result += suffixes[suffixNum];\n    return result;\n}","export const ErrorMap  = {\n    LOADING_WHOLE_SITE : {\n        id:'LOADING_WHOLE_SITE',\n        messageKey: 'errorLoading'\n    },\n    NO_SUPPORT_PAIR: {\n        id:'NO_SUPPORT_PAIR',\n        messageKey: 'no support base/quote pair!'\n    },\n    NO_SDK:{\n        id:'NO_SDK',\n        messageKey: 'errorBase'\n    },\n    NO_NETWORK_ERROR : {\n        id:'NO_NETWORK_ERROR',\n        messageKey: 'errorMessageNoNetwork'\n    },\n    NO_TOKEN_MAP : {\n        id:'NO_TOKEN_MAP',\n        messageKey: 'errorMessageTokenMapIsEmpty'\n    },\n    NO_ENOUGH_BALANCE:{\n        id:'NO_ENOUGH_BALANCE',\n        messageKey: 'errorTokenNotEnough'\n    },\n    NO_TOKEN_KEY_LIST:{\n        id:'NO_TOKEN_KEY_LIST',\n        messageKey: 'errorRequiredTokenKeyList'\n    },\n    GET_X_TOKEN_TICKER_ERROR:{\n        id:'NO_TOKEN_KEY_LIST',\n        messageKey: 'errorRequiredTokenKeyList',\n        options:{}\n    },\n    BUILD_AMM_MAP_WITH_TICKER:{\n        id:'BUILD_AMM_MAP_WITH_TICKER',\n        messageKey: 'errorBase',\n        options:{}\n    },\n    TRADE_LITE_SET_PAIR_ERROR:{\n        id:'TRADE_LITE_SET_PAIR_ERROR',\n        messageKey: 'errorBase',\n        options:{}\n    },\n    SOCKET_ERROR:{\n        id:'SOCKET_ERROR',\n        messageKey: 'errorBase',\n        options:{}\n    },\n    TRADE_404:{\n        id:'404',\n        messageKey: 'error404',\n        options:{}\n    }\n\n\n}\nexport type ErrorObject =  {\n    from?:string,\n    timestamp?:number,\n    messageKey:string\n    [key:string]:any,\n}","export * from './errorMap'\n\nexport type ErrorType = {\n    id: string,\n    messageKey: string,\n    options?: any\n}\n\nexport class CustomError extends Error {\n    get options(): any {\n        return this._options;\n    }\n\n    private _options: any;\n\n    get messageKey(): string {\n        return this._messageKey;\n    }\n\n    get date(): number {\n        return this._date;\n    }\n\n    private _date: number;\n    private _messageKey: string;\n\n    constructor(error: ErrorType) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(error.id)\n\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, CustomError)\n        }\n\n        this.name = error.id;\n        this.message = error.id;\n        this._date = Date.now();\n        this._messageKey = error.messageKey;\n        this._options = error.options\n        // Custom debugging information\n        // this.foo = foo\n        // this.date = new Date()\n    }\n}\n","import React from \"react\";\n\nexport const useImage = (src: string) => {\n    const [hasLoaded, setHasLoaded] = React.useState(false);\n    const [hasError, setHasError] = React.useState(false);\n    const [hasStartedInitialFetch, setHasStartedInitialFetch] = React.useState(false);\n\n\n    React.useEffect(() => {\n        setHasStartedInitialFetch(true);\n        setHasLoaded(false);\n        setHasError(false);\n\n        // Here's where the magic happens.\n        const image = new Image();\n        image.src = src;\n        const handleError = () => {\n            setHasError(true);\n        }\n\n        const handleLoad =() => {\n            setHasLoaded(true);\n            setHasError(false);\n        }\n\n        image.addEventListener(\"error\", handleError)\n        image.addEventListener(\"load\", handleLoad);\n\n\n        return ()=> {\n            image.removeEventListener(\"error\", handleError);\n            image.removeEventListener(\"load\", handleLoad);\n        };\n    }, [src]);\n\n    return {hasLoaded, hasError, hasStartedInitialFetch};\n};","import { Box, Button, Container, Link, MenuItem, Tab, Typography } from \"@material-ui/core\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { WithTranslation } from \"react-i18next\";\n// @ts-ignore\nimport { anchorRef, bindHover, bindMenu, bindTrigger, usePopupState } from \"material-ui-popup-state/hooks\";\nimport { BasicHeaderItem, HeadMenuType, MenuItemLink, MenuItemProps } from './Interface'\nimport styled from \"@emotion/styled\";\nimport clsx from \"clsx\";\nimport { DropDownIcon } from 'static-resource';\nimport { css } from \"@emotion/react\";\nimport Menu from 'material-ui-popup-state/HoverMenu';\nimport React, { ForwardedRef, RefAttributes } from \"react\";\n// import Popover from 'material-ui-popup-state/HoverPopover';\nconst hr = ({theme}: any) => css`\n  border-radius: ${theme.unit / 2}px;\n  content: '';\n  margin: 0 8px;\n  display: block;\n  height: 4px;\n  background-color: ${theme.colorBase.primaryLight};\n  //margin-bottom: -2px;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const MenuTab = styled(Tab)`\n  opacity: 1;\n  height: var(--header-height);\n  &.MuiTab-root.Mui-selected {\n    //background-color: chocolate;\n\n    color: ${({theme}) => theme.colorBase.textPrimary};\n\n    &:after {\n      ${hr}\n    }\n  }\n` as typeof Tab;\nexport const HeaderMenu = styled(Container)`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  position: relative;\n` as typeof Container;\nconst StyledHeadMenuItem = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-transform: capitalize;\n  font-size: ${({theme}) => theme.fontDefault.h5};\n  box-shadow: inherit;\n  height: var(--header-height);\n  color: ${({theme}) => theme.colorBase.textSecondary};\n  position: relative;\n\n  &.layer-0 {\n    .MuiButtonBase-root {\n      opacity: 1;\n      color: inherit;\n      &:hover{\n        color: ${({theme}) => theme.colorBase.primaryLight};\n      }\n    }\n    \n\n    \n      .MuiTab-root{\n        &:hover {\n          color: ${({theme}) => theme.colorBase.textPrimary};\n        }\n      }\n     \n     \n\n      //.MuiButtonBase-root {\n      //  opacity: 1;\n      //  color: inherit;\n      //}\n    }\n    svg {\n      width: var(--header-menu-icon-size);\n      height: var(--header-menu-icon-size);\n    }\n\n    &&.layer-next {\n      display: flex;\n    }\n\n  }\n` as typeof Link;\nconst StyledLayer2Item = styled(MenuItem)<any>`\n  padding: 0 1.2rem;\n  border-left-color: transparent;\n  height: 100%;\n\n  p {\n    font-size: ${({theme}) => theme.fontDefault.h5};\n    line-height: 2em;\n  }\n\n  h5 {\n    color: ${({theme}) => theme.colorBase.textPrimary};\n    text-transform: capitalize;\n    line-height: 2em;\n  }\n\n  &:hover {\n    border-left-color: transparent;\n\n    h5 {\n      color: ${({theme}) => theme.colorBase.primaryLight};\n    }\n\n    background: ${({theme}) => theme.colorBase.background().hover};\n  }\n\n  // .dot {\n  //   width: 24px;\n  //   text-align: center;\n  //   text-indent: .3em;\n  //   //font-size:1.1em;\n  //   transform: scale(1.2) translateY(5px);\n    //   color: ${({theme}) => theme.colorBase.primaryLight};\n  //\n  // }\n` as typeof MenuItem;\n\n\nconst StyledHeaderMenuSub = styled(Menu)`\n  && {\n    color: ${({theme}) => theme.colorBase.textSecondary};\n\n    ul {\n      background-color: ${({theme}) => theme.colorBase.background().default};\n      padding: 0;\n\n      .layer-1 {\n        height: var(--header-menu-list-height)\n      }\n    }\n\n\n  }` as typeof Menu;\nconst StyledTabBtn = styled(Button)`\n  && {\n    text-transform: capitalize;\n    display: flex;\n    padding: initial;\n    height: 100%;\n    color: ${({theme}) => theme.colorBase.textSecondary};\n    font-size: ${({theme}) => theme.fontDefault.h5};\n    padding: 0 16px;\n\n    svg {\n      transition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n    }\n\n    &:hover {\n      background-color: inherit;\n      color: ${({theme}) => theme.colorBase.textPrimary};\n\n      svg {\n        transform: rotate(180deg);\n      }\n\n    }\n\n    &.Mui-selected {\n      color: ${({theme}) => theme.colorBase.textPrimary};\n\n      &:after {\n        ${hr}\n      }\n    }\n\n`;\n\nexport const HeadMenuItem = React.memo(React.forwardRef(<I extends BasicHeaderItem>({\n                                                                                        className,\n                                                                                        layer,\n                                                                                        handleListKeyDown,\n                                                                                        children,\n                                                                                        router,\n                                                                                    }: MenuItemLink<I>, ref: ForwardedRef<any>) => {\n    return <StyledHeadMenuItem\n        className={clsx([`layer-${layer}`, className])} ref={ref}\n        onClick={handleListKeyDown ? handleListKeyDown : undefined}\n        // disabled={status === HeaderMenuTabStatus.disabled}\n        {...{\n            component: RouterLink,\n            to: router ? router.path : '',\n            style: {textDecoration: \"none\"},\n            // ...props\n        }} >  {children}</StyledHeadMenuItem>;\n}));\n\n\nexport const Layer2Item = <I extends BasicHeaderItem>({t, label}: MenuItemProps<I> & WithTranslation) => {\n    return <StyledLayer2Item key={label.id}>\n        {/*<Box className={'dot'} paddingTop={0}>&#x25CF;</Box>*/}\n        <Box display={\"flex\"} paddingRight={1.5} flexDirection={\"column\"} justifyContent={\"space-around\"}>\n            <Box paddingTop={0.5} lineHeight={'1.1'}><Typography component={'h5'}\n                                                                 variant=\"h5\">{t(label.i18nKey)}</Typography></Box>\n            <Box><Typography component={'p'}\n                             variant={'body2'}>{label?.description ? t(label.description) : ''}</Typography></Box>\n        </Box>\n    </StyledLayer2Item>\n}\n\n\nexport const HeaderMenuSub = React.memo(React.forwardRef(<I extends BasicHeaderItem>({\n                                                                                         t,\n                                                                                         label,\n                                                                                         className,\n                                                                                         renderList,\n                                                                                         layer = 0\n                                                                                     }: HeadMenuType<I> & WithTranslation, ref: ForwardedRef<any>) => {\n\n    const popupState = usePopupState({variant: 'popover', popupId: `popupId: 'tradeHeaderSubMenu'`});\n    return <><StyledTabBtn {...bindHover(popupState)} key={label.id} className={className} ref={ref}> <Typography\n        component={'span'}\n        variant={'body1'} paddingRight={1}>{t(label.i18nKey)}</Typography><DropDownIcon/></StyledTabBtn>\n        <StyledHeaderMenuSub key={`menu-${layer}-${label.id}`}\n                             {...bindMenu(popupState)}\n                             getContentAnchorEl={null}\n                             anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                             transformOrigin={{vertical: 'top', horizontal: 'left'}}\n                             className={`menu-${layer}-${label.id}`}>\n            {renderList && renderList({handleListKeyDown: popupState.close})}\n        </StyledHeaderMenuSub>\n        {/*</ParentPopupState.Provider>*/}\n    </>\n})) as <I extends BasicHeaderItem> (props: HeadMenuType<I> & WithTranslation & RefAttributes<any>) => JSX.Element;\n\n\n\n\n\n\n","import { Avatar, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core/';\nimport { WithTranslation } from \"react-i18next\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { CoinItemProps, CoinMenuProps } from \"./Interface\";\nimport { CoinInfo, CoinKey, WalletCoin } from 'static-resource';\nimport { useImage } from '../resource';\nimport { Virtuoso } from 'react-virtuoso';\n\n\nfunction _CoinMenu<C, I extends CoinInfo<C>>({\n                                                 coinMap = {}, walletMap = {}, filterBy = (ele, filterString) => {\n        return filterString && filterString.length ? RegExp(filterString).test(ele.simpleName) : true\n    }, filterString, handleSelect, allowScroll = true, selected = null,\n                                                 listProps = {},\n                                                 height = '100px',\n                                                 ...rest\n                                             }: CoinMenuProps<C, I> & WithTranslation, _ref: React.Ref<HTMLUListElement>) {\n    const [select, setSelect] = React.useState<CoinKey<C> | null>(selected as CoinKey<C>);\n    const virtuoso = React.useRef(null);\n    let rowIndex = 0;\n    React.useEffect(() => {\n        if (select !== selected) {\n            setSelect(selected);\n        }\n    }, [select, selected])\n    //const list = React.useMemo(() =>\n    const list = Object.keys(coinMap).reduce((list: Array<{ walletCoin: WalletCoin<C>, key: string }>, key) => {\n        if (filterBy(coinMap[ key ], filterString)) {\n            const walletCoin: WalletCoin<C> = walletMap[ key ] ? walletMap[ key ] : {belong: key, count: 0}\n            list.push({walletCoin, key: key});\n            if (select === key) {\n                rowIndex = list.length - 1;\n            }\n        }\n        return list;\n    }, [])\n    const handleListItemClick = React.useCallback((_event: React.MouseEvent, select: CoinKey<C>) => {\n        setSelect(select);\n        handleSelect && handleSelect(_event, select);\n    }, [handleSelect])\n    return <Virtuoso<{ walletCoin: WalletCoin<C>, key: string }> data={list}\n                                                                 style={{minHeight: height, height: height}}\n                                                                 ref={virtuoso}\n                                                                 initialTopMostItemIndex={rowIndex}\n                                                                 itemContent={(index, item) => {\n                                                                     let {walletCoin, key} = item;//list[ index ];\n                                                                     return <CoinItem<C> key={index} {...{\n                                                                         coinInfo: coinMap[ key ] as CoinInfo<C>,\n                                                                         walletCoin,\n                                                                         select: select,\n                                                                         handleListItemClick,\n                                                                         itemKey: key as CoinKey<C>, ...rest\n                                                                     }} ></CoinItem>\n\n                                                                 }}\n    />\n\n}\n\nexport const CoinMenu = React.memo(React.forwardRef(_CoinMenu)) as <C, I = CoinInfo<C>>(props: CoinMenuProps<C, I> & WithTranslation & React.RefAttributes<HTMLDivElement>) => JSX.Element;\n\nconst StyledCoinItem = styled(ListItem)`\n  && {\n    width: 100%;\n    display: flex;\n    justify-content: stretch;\n    justify-items: center;\n    height: var(--list-coin-item);\n    box-sizing: border-box;\n    padding-left: ${({theme}) => theme.unit / 2 * 5}px;\n    padding-right: ${({theme}) => theme.unit / 2 * 5}px;\n  }\n\n  .MuiListItemIcon-root {\n    height: var(--btn-icon-size);\n    width: var(--btn-icon-size);\n    min-width: var(--btn-icon-size);\n    margin-right: ${({theme}) => theme.unit}px;\n    display: flex;\n    justify-content: center;\n    justify-items: center;\n    align-items: center\n  }\n\n  .MuiListItemText-multiline {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n  .MuiAvatar-root{\n      width: var(--list-menu-coin-size);\n      height: var(--list-menu-coin-size);\n  }\n\n`\n\nexport const CoinItem = React.memo(React.forwardRef(<C extends any>({\n                                                                        t,\n                                                                        coinInfo,\n                                                                        walletCoin,\n                                                                        select,\n                                                                        itemKey,\n                                                                        handleListItemClick\n                                                                    }: CoinItemProps<C> & WithTranslation, ref: React.ForwardedRef<any>) => {\n    const {simpleName} = coinInfo;\n    const hasLoaded = useImage(coinInfo.icon ? coinInfo.icon : '').hasLoaded;\n\n    return <StyledCoinItem\n        button\n        ref={ref}\n        key={itemKey}\n        selected={select === simpleName}\n        onClick={(event: React.MouseEvent) => handleListItemClick(event, itemKey)}\n    >\n        <ListItemIcon>\n            {/*<img src={coinInfo.icon} alt={t(simpleName)}/>*/}\n            {/*<Avatar alt={simpleName}*/}\n            {/*        src={coinInfo.icon}*/}\n            {/*        srcSet={`${coinInfo.icon},./images/icon-default.png`}/>*/}\n            <Avatar variant=\"square\" alt={coinInfo?.simpleName}\n                // src={sellData?.icon}\n                    src={hasLoaded ? coinInfo.icon : 'static/images/icon-default.png'}/>\n        </ListItemIcon>\n        <ListItemText primary={t(simpleName)} secondary={\n            <>\n                <Typography sx={{display: 'block'}} component=\"span\" color=\"textSecondary\" variant=\"body1\">\n                    {walletCoin.count}\n                </Typography>\n            </>\n        }/>\n    </StyledCoinItem>\n})) as unknown as <C>(props: CoinItemProps<C> & WithTranslation & React.RefAttributes<any>) => JSX.Element;\n\n//  <C>(props: CoinItemProps<C> & RefAttributes<HTMLElement>) => JSX.Element;\n//as React.ComponentType<InputButtonProps<coinType,CoinInfo> & RefAttributes<HTMLDivElement>>;\n\n\n\n","import styled from \"@emotion/styled\";\nimport { MenuItem } from \"@material-ui/core\";\n\nexport const TabItemPlus = styled(MenuItem)<any>`\n  && {\n    &.Mui-focusVisible {\n      background-color: transparent;\n    }\n\n    padding: 0;\n    margin: 0;\n    padding-left: 1.6rem;\n\n    &:hover {\n      background-color: transparent;\n      border-left-color: transparent;\n    }\n\n    .MuiIconButton-root {\n      svg {\n        width: var(--header-menu-icon-size);\n        height: var(--header-menu-icon-size);\n        color: ${({theme}) => theme.colorBase.textPrimaryLight};\n      }\n\n      :hover {\n        svg {\n          color: ${({theme}) => theme.colorBase.textPrimary};\n        }\n\n        color: ${({theme}) => theme.colorBase.textPrimary};\n      }\n    }\n\n  }\n` as typeof MenuItem;\n\n\n","import styled from \"@emotion/styled\";\nimport { Divider, ListItem, ListItemAvatar, ListItemProps, ListItemText, Typography } from '@material-ui/core';\nimport { WithTranslation } from 'react-i18next';\nimport { SubMenuListProps } from './Interface';\n\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport const SubMenuItem = styled(ListItem)<ListItemProps>`\n  border-left: 0px solid transparent;\n  border-right: 1px solid transparent;\n  padding: 0 0 0 ${({theme}) => theme.unit / 2 * 5}px;\n  width: var(--sub-menuItem-width);\n  min-width: var(--sub-menuItem-width);\n  height: var(--sub-menuItem-height);\n\n  .MuiTypography-body1 {\n    line-height: 1.6em;\n    text-transform: capitalize;\n  }\n\n  .MuiListItemAvatar-root {\n\n    svg {\n      width: var(--header-menu-icon-size);\n      height: var(--header-menu-icon-size);\n      color: ${({theme}) => theme.colorBase.textPrimaryLight};\n    }\n\n    :hover {\n      svg {\n        color: ${({theme}) => theme.colorBase.textPrimary};\n      }\n\n      color: ${({theme}) => theme.colorBase.textPrimary};\n    }\n  }\n\n  &.Mui-selected, &.Mui-selected.Mui-focusVisible {\n    background-color: ${({theme}) => theme.colorBase.background().hover};\n    border-color: ${({theme}) => theme.colorBase.primaryLight};\n\n  }\n`\nexport const SubMenuList = <I extends any>({\n                                               t,\n                                               selected,\n                                               subMenu,\n\n                                           }: SubMenuListProps<I> & WithTranslation<'layout'>) => {\n    return <>{Object.keys(subMenu).map((list: any, index) => {\n        const subList = subMenu[ list ].map((item: any) => {\n            return <SubMenuItem button selected={new RegExp(item.label.id,'ig').test(selected)}\n                                alignItems={item.label.description ? 'flex-start' : 'center'}\n                                key={item.label.id}\n                                {...{\n                                    component: RouterLink,\n                                    to: item.router ? item.router.path : '',\n                                    style: {textDecoration: \"none\"},\n                                    // ...props\n                                }}\n            >\n                <ListItemAvatar>\n                    <item.icon></item.icon>\n                </ListItemAvatar>\n                {item.label.description ? <ListItemText\n                    primary={<Typography sx={{display: 'block'}} component=\"span\" variant=\"body1\"\n                                         color=\"text.primary\">{t(item.label.i18nKey)}</Typography>}\n                    secondary={<Typography sx={{display: 'inline'}} component=\"span\" variant=\"body2\"\n                                           color=\"text.primary\">{t(item.label.description)}</Typography>}\n                /> : <ListItemText\n                    primary={<Typography sx={{display: 'block'}} component=\"span\" variant=\"body1\"\n                                         color=\"text.primary\">{t(item.label.i18nKey)}</Typography>}\n                />}\n            </SubMenuItem>\n\n        });\n        return <div key={`group-${list}`}>{subList} {index + 1 !== Object.keys(subMenu).length ?\n            <Divider/> : ''}</div>\n    })}</>\n};\n\n","import { MenuItem as MuiMenuItem, Select, SelectProps } from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport { MuiMenuItemProps } from './Interface';\nimport React from 'react';\n\n//backgroundColor: ${theme.colorBase.primaryLight};\nexport const MenuItem = styled(MuiMenuItem)<MuiMenuItemProps>`\n \n   ${({withNoCheckIcon, theme}) => {\n    return withNoCheckIcon === 'true' ? `        \n        &.Mui-selected, &.Mui-selected.Mui-focusVisible {\n            background-color: ${theme.colorBase.background().hover};\n            color: ${theme.colorBase.primaryLight};\n            &:after{\n             display:none;\n            }\n        }\n     ` : ''\n}}\n  \n` as React.ComponentType<MuiMenuItemProps>;\n\nexport const OutlineSelect = styled(Select)`\n  padding: 0;\n  border: transparent;\n  background-color: transparent;\n  color: ${({theme}) => theme.colorBase.textSecondary};\n\n  &.MuiInputBase-root {\n    min-width: auto;\n    width: auto;\n  }\n\n  svg {\n    right: .4rem;\n    top:  ${({theme}) => theme.unit }px;\n    position: absolute;\n    pointer-events: none;\n    transition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  }\n\n  .MuiSelect-iconOpen {\n    transform: rotate(180deg)\n  }\n\n  .MuiSelect-select, &.Mui-selected.Mui-focusVisible {\n    &:focus {\n      background-color: transparent;\n    }\n\n    &:before {\n      content: '';\n      display: none;\n    }\n  }\n\n  &:hover {\n    color: ${({theme}) => theme.colorBase.textPrimary};\n    border-left-color: transparent;\n  }\n\n  input {\n    padding-right: 0;\n  }\n\n  &:hover:not(.Mui-disabled):before,\n  &:after, &:before {\n    margin: 0 auto;\n    width: 60%;\n    border: 0;\n  }\n` as React.ComponentType<SelectProps>;\n\n\nexport const OutlineSelectItem = styled(MenuItem)<any>`\n  padding: ${({theme}) => `0 ${theme.unit * 1} $0 ${theme.unit * 1} `};\n  padding-right: ${({theme}) => `${theme.unit * 2}`};\n\n  &.Mui-selected, &.Mui-selected.Mui-focusVisible {\n    padding: ${({theme}) => `${theme.unit * 1} ${theme.unit * 1} 0 ${theme.unit * 1} `};\n    padding-right: ${({theme}) => `${theme.unit * 2}`};\n\n    &:after {\n      content: '';\n    }\n  }\n\n  &:hover {\n    color: ${({theme}) => theme.colorBase.textPrimary};\n    border-left-color: transparent;\n  }\n` as typeof MenuItem;\n\nexport * from './HeadMenuItem'\nexport * from './Interface'\nexport * from './CoinList'\nexport * from './HeadToolbar'\nexport * from './SubMenuList'\nexport * from './Notification';\n\n\n// export * from './SimpleSelectItem'\n\n\n\n","import { WithTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { NotificationItem } from './Interface';\nimport styled from '@emotion/styled';\n\nconst ListItemStyled = styled(ListItem)`\n  font-size: ${({theme}) => theme.fontDefault.h5};\n\n  width: 100%;\n  padding: ${({theme}) => theme.unit}px ${({theme}) => theme.unit * 2}px;\n  height: auto;\n  min-height: 1.2em;\n\n  &:not(:last-child) {\n    :after {\n      content: '';\n      display: inline-block;\n      width: 100%;\n      height: 1px;\n      background-color: ${({theme}) => theme.colorBase.blur};\n      position: absolute;\n      bottom: 0;\n      left: 0px;\n      padding: 0  ${({theme}) => theme.unit / 2}px\n    }\n  }\n\n  &:hover {\n    border-left-color: transparent;\n\n    // h5 {\n      //   color: ${({theme}) => theme.colorBase.primaryLight};\n    // }\n\n    background: ${({theme}) => theme.colorBase.background().hover};\n  }\n\n  .MuiListItemText-root {\n    .MuiTypography-root {\n      display: -webkit-box;\n      display: -moz-box;\n      line-height: 1em;\n      white-space: normal;\n      word-break: break-all;\n      text-overflow: ellipsis;\n      -webkit-box-orient: vertical;\n      -webkit-line-clamp: 2;\n    }\n\n    margin: 0;\n    overflow: hidden;\n\n  }\n\n  .MuiListItemIcon-root {\n    min-width: auto;\n    margin-top: 0;\n    padding-right: ${({theme}) => theme.unit}px;\n  }\n\n  &.error {\n    .MuiListItemIcon-root {\n      color: ${({theme}) => theme.colorBase.error};\n    }\n  }\n\n  &.pending {\n    .MuiListItemIcon-root {\n      color: ${({theme}) => theme.colorBase.secondary};\n    }\n  }\n\n  &.success {\n    .MuiListItemIcon-root {\n      color: ${({theme}) => theme.colorBase.success};\n    }\n  }\n\n`\n// export const MenuStyled  = styled.div`\n//    width: 280px;\n//    height: 100px;\n//    display: flex;\n//    flex-direction: column;\n//    overflow-y: scroll;\n//    justify-content: space-around;\n//    align-items: stretch ;\n//    align-content: center;\n//   .wallet-alert{\n//     height: auto;\n//     text-overflow: ellipsis;\n//     line-height: 1em;\n//     .MuiListItemIcon-root{\n//       min-width: auto;\n//     }\n//     .MuiListItemText{\n//       height: 2.4em;\n//     }\n//\n//   }\n// `\nexport const WalletNotificationListItem = ({t, label, startIcon, handleClick}: NotificationItem & WithTranslation) => {\n    return <ListItemStyled button alignItems=\"flex-start\" onClick={handleClick ? handleClick : undefined}\n                           className={`wallet-alert wallet-${startIcon.className}`}>\n        <ListItemIcon>{startIcon.iconItem}</ListItemIcon>\n        <ListItemText primary={t(label.i18nKey)}/>\n    </ListItemStyled>\n}\n","import { WithTranslation } from \"react-i18next\";\nimport SwipeableViews, { SwipeableViewsProps } from 'react-swipeable-views';\n\nimport React, { RefAttributes } from 'react';\nimport { useTheme } from '@emotion/react';\nimport { Grid, Toolbar } from '@material-ui/core';\nimport styled from '@emotion/styled';\n\n\nexport type PanelContent<T extends string> = {\n    key: T,\n    element: () => React.ElementType<any> | JSX.Element,\n    toolBarItem: () => React.ElementType<any> | JSX.Element,\n}\nexport type SwitchPanelProps<T extends string> = {\n    // swipedBy: T,\n    index: number,\n    // defaultIndex: number,\n    panelList: Array<PanelContent<T>>,\n    // onChangeIndex?: (index: number,data:any) => void,\n    // onTransitionEnd?: () => void,\n    height?: number | string;\n    // width?: number | string;\n\n}\n//${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\nexport const WrapStyled = styled(SwipeableViews)<SwipeableViewsProps>`\n  border-radius: ${({ theme }) => theme.unit}px;\n  ${({height, width, theme}) => `       \n    background-color: ${theme.colorBase.background().default};\n    width: ${typeof width === 'string' ? width : typeof width === 'number' ? width + 'px' : `var(--swap-box-width)`}; \n    .container{\n       padding:0 0 ${theme.unit * 3 + 'px'};\n       min-height: var(--swap-box-height);\n       height:100%;\n       // height: ${typeof height === 'string' ? height : typeof height === 'number' ? height + 'px' : `var(--swap-box-height)`};\n       // width: 100%;\n    }\n     .MuiToolbar-root {\n        align-content: stretch;\n        justify-content: flex-end;\n        padding:0 ${theme.unit / 2 * 5 + 'px'} ${theme.unit / 2 + 'px'};    \n        box-sizing: border-box;\n        height: var(--toolbar-row-height);\n        min-height:  var(--toolbar-row-height);\n        max-height:  var(--toolbar-row-height);\n        .MuiIconButton-root {\n            height: var(--btn-icon-size);\n            width: var(--btn-icon-size);\n            min-width: var(--btn-icon-size);\n            margin: 0;\n            display: flex;\n            padding: 0;\n            justify-content: center;\n            justify-items: center;\n            align-items: center;\n            font-size: ${theme.fontDefault.h4}; \n        }\n        // .go-back{\n        //   font-size: ${theme.fontDefault.h4}; \n        //   margin-right: ${theme.unit + 'px'}; \n        //   transform: rotate(90deg);\n        // }\n    }\n     `};\n\n\n` as React.ElementType<SwipeableViewsProps>;\n\nfunction _SwitchPanel<T extends string>({\n                                            index,\n                                            panelList,\n                                        }: SwitchPanelProps<T> & WithTranslation, _ref: React.ForwardedRef<any>) {\n    const theme = useTheme();\n    return <WrapStyled axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={index}>\n        {panelList.map((panel: PanelContent<T>) => {\n            return <Grid container key={panel.key} className={'container'} direction={'column'}\n                         justifyContent={\"start\"} flexWrap={'nowrap'}>\n                <Toolbar variant={'dense'}>\n                    {panel.toolBarItem()}\n                </Toolbar>\n                <Grid item flex={1}>{panel.element()}</Grid>\n            </Grid>\n        })}\n    </WrapStyled>\n}\n\nexport const SwitchPanel = React.memo(React.forwardRef(_SwitchPanel)) as <T extends string>(props: SwitchPanelProps<T> & WithTranslation & RefAttributes<any>) => JSX.Element;\n","import styled from \"@emotion/styled\";\nimport { List, ListProps } from \"@material-ui/core\";\n\nexport const SubMenu = styled(List)<ListProps>`\n  width: 100%;\n  flex: 1;\n  padding: ${({theme}) => theme.unit / 2 * 5}px 0;\n  background-color: ${({theme}) => theme.colorBase.background().default};\n  border-radius: ${({theme}) => theme.unit}px;\n` as typeof List;\n\n","import React from 'react'\nimport { Box, Pagination } from '@material-ui/core'\nimport styled from '@emotion/styled'\n\nconst StyledPaginationWrapper = styled(Box)`\n    height: 36px;\n    position: relative;\n`\n\nconst StyledPagination = styled(Pagination)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport type PaginationProps = {\n    page: number;\n    pageSize: number;\n    total: number;\n    onPageChange: (page: number) => void;\n}\n\nexport const TablePagination = ({onPageChange, page, pageSize, total}: PaginationProps) => {\n    const getCount = React.useCallback(() => {\n        if (!total) return 0\n        return total % pageSize > 0\n            ? parseInt(String(total / pageSize)) + 1\n            : parseInt(String(total / pageSize))\n    }, [pageSize, total])\n\n    const handleChange = React.useCallback((_, value: number) => {\n        onPageChange(value)\n    }, [onPageChange]);\n\n    return (\n        <StyledPaginationWrapper>\n            <StyledPagination color={'primary'} count={getCount()} page={page} onChange={handleChange}/>\n        </StyledPaginationWrapper>\n    );\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport enUS from './en_US'\nimport zhCN from './zh_CN'\n// import { localStore } from '../storage';\n// the translations\n// (tip move them in a JSON file and import them)\nexport enum LanguageType {\n    en_US = 'en_US',\n    zh_CN = 'zh_CN',\n}\n\nexport type LanguageKeys = keyof typeof LanguageType\n\nexport const resources = {\n    en_US: {...enUS},\n    zh_CN: {...zhCN},\n};\n\ni18n.use(initReactI18next).init({\n    resources,\n    ns: ['common', 'layout', 'tables','error'],\n    defaultNS: 'common',\n    lng: LanguageType.en_US,\n    load: 'currentOnly',\n    fallbackLng: LanguageType.en_US,\n    supportedLngs: [LanguageType.en_US,LanguageType.zh_CN],\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n        escapeValue: false // react already safes from xss\n    },\n    // debug:true,\n    react: {\n        bindI18n: 'languageChanged',\n        // bindI18nStore: '',\n        transEmptyNodeValue: '',\n        transSupportBasicHtmlNodes: true,\n        transKeepBasicHtmlNodesFor: ['br', 'strong', 'i'],\n        useSuspense: true,\n    }\n});\n// i18n.languages = [LanguageType.en_US,LanguageType.zh_CN];\nexport default i18n;","import common from './common';\nimport layout from './layout';\nimport tables from './tables';\nimport error from './error';\n\nexport default {\n    common,\n    layout,\n    tables,\n    error,\n}","export default {\n    tokenEnter: 'Enter Token',\n    tokenEnterPaymentToken: 'Enter Payment Token',\n    tokenMax: 'Max',\n    tokenHave: 'Save',\n    tokenEnterReceiveToken: 'Enter Receive Token',\n    tokenSelectToken: 'Select Token',\n    tokenExchange: 'exchange',\n    tokenNotEnough: 'Not enough {{belong}} perform a deposit',\n    tokenSearchCoin: 'Search Coin',\n    swapTolerance: 'Slippage Tolerance',\n    swapPriceImpact: 'Price Impact',\n    swapMinReceive: 'Minimum Received',\n    swapFee: 'Fee',\n    swapBtn: 'swap',\n    goBack: 'go back',\n    resetTitle: 'Reset Layer-2 Keypair',\n    restLabelEnterToken: 'Select Reset cause token',\n    resetDescription: 'Create a new signing key for layer-2 authentication (no backup needed). This will <1>cancel all your pending orders</1>.',\n    resetFee: 'Fee {{count}} GAS ≈ ${{price}}',\n    resetLabelBtn: 'Reset',\n    depositTitle: 'Deposit',\n    depositTitleAndActive: 'Deposit & Activate Layer2',\n    depositLabelEnterToken: 'Enter Deposit token',\n    depositDescription: 'Once your deposit is <1>confirmed on Ethereum</1>, it will be added to your balance within <3>2 minutes</3>.',\n    depositAndActiveDescription: 'Make a deposit to activate your Loopring layer-2 account. Once your deposit is <1>confirmed on Ethereum</1>, it will be added to your balance within <3>2 minutes</3>.',\n    depositLabelBtn: 'Deposit',\n    depositLabelLinkRecent: 'Recent deposits history',\n    withdrawTitle: 'Withdraw',\n    withdrawLabelEnterToken: 'Enter withdraw token',\n    withdrawDescription: 'Your withdrawal will be processed in the next batch, which usually takes <1>30 minutes to 2 hours</1>. (There will be <3>a large delay</3> if the Ethereum gas price <5>exceeds 500 GWei</5>.）',\n    withdrawLabelBtn: 'Withdraw',\n    withdrawLabelAddress: 'Withdraw address',\n    withdrawLabelAddressInput: 'Please input the address',\n    withdrawLabelFee: 'Select payment token',\n    withdrawTypeLabelFast: 'Fast',\n    withdrawTypeLabelStandard: 'Standard',\n    withdrawLabelLinkRecent: 'Recent withdraws history',\n    transferTitle: 'Transfer',\n    transferLabelEnterToken: 'Enter transfer token',\n    transferDescription: 'Transfer to any valid Ethereum addresses instantly. Please <1>make sure</1> the recipient address <3>accepts Loopring layer-2 </3> payments before you proceed.',\n    transferLabelBtn: 'Transfer',\n    transferLabelAddress: 'Transfer address',\n    transferLabelAddressInput: 'Please input the address',\n    transferLabelFee: 'Select payment token',\n    transferLabelLinkRecent: 'Recent transfers history',\n    labelConnectWallet: 'Connect wallet',\n    labelCustomer: 'Custom',\n    labelChange24h: '{{timeUnit}} Change',\n    labelDepth: 'Depth',\n    labelTrend: 'Price',\n    label1W: 'W1',\n    label1H: 'H1',\n    label1D: 'D1',\n    labelCopyAddress: 'Copy address',\n    labelDisconnect:'Disconnect',\n    labelLockLayer2:'Lock',\n    labelUnLockLayer2:'Unlock',\n    labelActiveLayer2:'Active l2',\n    labelSwitchAccount: 'Switch W',\n    labelViewEth: 'View on Etherscan',\n    labelQRCode: 'View QR Code',\n    labelShowAccountInfo: 'Show account information',\n    labelAssetTitle: 'Total Assets ( Layer 2 Account)',\n    labelShowAccount: 'Show or Hide Assets',\n    labelBtnDeposit: 'Deposit',\n    labelBtnTransfer: 'Transfer',\n    labelBtnWithdraw: 'Withdraw',\n    labelLevel: 'Level',\n    labelOrderbook: 'Order Book',\n    labelDeposit: 'Deposit',\n    labelWithdraw: 'WidthDraw',\n    labelSetPublicKey: 'Set EdDSA Public Key',\n    labelTitleSecurity: 'Security',\n    labelTitleResetL2Keypair: 'Reset Layer-2 Keypair',\n    labelBtnReset: 'Reset',\n    labelHadChangPassword: 'You changed your password {{passDay}} ago',\n    labelTitleForceWithdraw: 'Force Withdraw',\n    descriptionForceWithdraw: 'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnForceWithdraw: 'Force Withdraw',\n    labelTitleExportAccount: 'Export Account',\n    descriptionExportAccount: 'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnExportAccount: 'Export Account',\n    labelTitlePreferences: 'Preferences',\n    labelTitleLayout: 'Custom Setting',\n    whichColorIsUp: '<0>{{up}} up</0> and <2>{{down}} down</2> ',\n    labelTradeFeeLevel: 'Your Trading Fee Level:',\n    labelLanguage: 'Language',\n    labelCurrency: 'Currency',\n    currencySetting: 'Currency setting',\n    labelColors: 'Colors',\n    labelthemeLight: 'light',\n    labelthemeDark: 'dark',\n    labelgreen: 'green',\n    labelred: 'red',\n    langZH: 'Chinese',\n    langEN: 'English',\n    labelUSDollar: 'US Dollar',\n    labelCNYYuan: 'CNY Yuan',\n    labelMaker: 'Maker',\n    labelTaker: 'Taker',\n    labelAssetsTitle: 'Assets',\n    labelVolume: 'volume',\n    labelLiquidityDeposit: 'Add Liquidity',\n    labelLiquidityWithdraw: 'Remove Liquidity',\n    labelAvailable: 'Available',\n    labelTokenAmount: 'Amount',\n    labelRemoveLiquidityBtn: 'Remove Liquidity',\n    labelAddLiquidityBtn: 'Add Liquidity',\n    labelTradePanelHideOtherPairs: 'Hide other pairs',\n    labelLPTokens:'LP Tokens',\n    labelTrade: 'Trade',\n    labelAmmList: 'Amm List',\n    labelMyPoolShare: 'My Pool Share',\n    labelFee: 'Fee',\n    labelLPTotal: 'Total ',\n    labelLiquidity: 'Liquidity',\n    labelReward:'Reward',\n    labelMyReward: 'My Reward',\n    labelDate: 'Date',\n    labelBack: 'Back',\n    labelAPY: 'APY',\n    labelNew: 'New',\n    labelAccount: 'Account',\n    labelAll:'All',\n    labelMe:'Me',\n    labelMyTrade:'My Trade',\n    labelRecent:'Recent',\n    labelMyAmm:'My Amm',\n    labelMyAmmRecord: 'My Amm Record',\n    labelCurrentActivities:'Current Activities',\n    labelPastActivities:'Past Activities',\n    labelTotalPositionValue:'Total Position Value',\n    labelFeeRewards:'Fee Rewards',\n    labelMiningRewards:'Mining Rewards',\n    labelLiquidityValue:'Liquidity Value',\n    labelCopyAddClip:' Address Copied to Clipboard!',\n    labelPleaseInputWalletAddress:'Please Input Address'\n}\n\n","export default {\n    labelMarkets: 'markets',\n    labelTrade: 'trade',\n    labelLiquidity: 'liquidity',\n    labelLayer2: 'layer2',\n    loopringDomain: 'Exchange Loopring',\n    labelClassic: 'classic',\n    labelClassicDescription: 'The easiest to trade',\n    labelAdvanced: 'advanced',\n    labelAdvancedDescription: 'Full access to all trading tools',\n    labelDownloadApp: 'Download Loopring Wallet Mobile Application',\n    labelDownloadAppTitle: 'Download Loopring Wallet',\n    labelDownloadBtn: 'Go to app store',\n    labelNotification: 'Notification Information',\n    themeSetting: 'theme setting',\n    languageSetting: 'Language setting',\n    labelConnectWallet: 'Connect Wallet',\n    notificationApprove: 'approving',\n    notificationPending: 'pending',\n    labelMyTrades: 'my trades',\n    labelRecentTrades: 'Recent Trades',\n    // layer2 submenu\n    labelAssets: 'assets',\n    labelTransactions: 'transactions',\n    labelTrades: 'trades',\n    labelAmmRecords: 'Amm records',\n    labelAmmRecordsDes: '(Join & Exits)',\n    rewards: 'rewards',\n    labelOrders: 'orders',\n    selectLanguage: 'select language',\n    labelPools:'Pools',\n    labelAmmMining:'Amm Mining',\n    labelMyLiquidity:'My Liquidity',\n    labelOrderBookMining:'Orderbook Mining ',\n    labelMakerRebates:'Maker Rebates',\n    labelSetting:'Setting',\n}","export default {\n    labelStatus:'Status',\n    labelAMM: 'AMM',\n    labelTransfer: 'Transfer',\n    labelWithdraw: 'Withdraw',\n    labelDeposit: 'Deposit',\n    labelToken: 'Token',\n    labelAmount: 'Amount',\n    labelAvailable: 'Available',\n    labelLocked: 'Locked',\n    labelActions: 'Actions',\n    labelAllToken: 'All Tokens',\n    labelHideSmallBalances: 'Hide Small Balances',\n    labelHideLPToken: 'Hide LP Token',\n    labelOrderFilterAllTypes: 'All Types',\n    labelOrderFilterBuy: 'Buy',\n    labelOrderFilterSell: 'Sell',\n    labelFilterReset: 'Reset',\n    labelFilterSearch: 'Search',\n    labelOrderSide: 'Side',\n    labelOrderAmount: 'Amount',\n    labelOrderAverage: 'Average',\n    labelOrderFilledAmount: 'Filled Amount',\n    labelOrderFilledPrice: 'Filled Price',\n    labelOrderTime: 'Time',\n    labelOrderStatus: 'Status',\n    labelOrderTradingPrice: 'Trading Price',\n    labelOrderTotal: 'Total',\n    labelQuotaPair: 'Pair',\n    labelQuotaLastPrice: 'Last Price',\n    labelQuota24hChange: '24h Change',\n    labelQuota24hHigh: '24h High',\n    labelQuota24hLow: '24h Low',\n    labelQuota24Volume: '24h Volume',\n    labelTradeFilterAllTypes: 'All Types',\n    labelTradeFilterBuy: 'Buy',\n    labelTradeFilterSell: 'Sell',\n    labelTradeSide: 'Side',\n    labelTradeAmount: 'Amount',\n    labelTradePrice: 'Price',\n    labelTradeFee: 'Fee',\n    labelTradeTime: 'Time',\n    labelTxFilterAllTypes: 'All Types',\n    labelTxFilterDeposit: 'Deposit',\n    labelTxFilterWithdraw: 'Withdraw',\n    labelTxFilterTransfer: 'Transfer',\n    labelTxFilterAllTokens: 'All Tokens',\n    labelTxToken: 'Token',\n    labelTxFrom: 'From',\n    labelTxTo: 'To',\n    labelTxAmount: 'Amount',\n    labelTxFee: 'Fee',\n    labelTxMemo: 'Memo',\n    labelTxTime: 'Time',\n    labelTxTxnHash: 'Txn Hash',\n    labelTxStatus: 'Status',\n    labelVolume:'volume',\n    labelTradePair:'Trade Pair',\n    labelPool: 'Pool',\n    labelLiquidity: 'Liquidity',\n    label24TradeVolume: '24h Trade Volume',\n    label24Reward: '24h Reward',\n    labelAPY: 'APY',\n    labelTradePool:'Trade Pool',\n    labelAction:'Action',\n    labelFilter:'Filter',\n    valueAddTOAMM: `Add <1></1> and <3></3>`,\n    valueSwapForAMM: `Swap <1></1> for <3></3>`,\n    valueRemoveTOAMM:  `Remove <1></1> and <3></3>`,\n    labelAmmTotalValue:'Total Value',\n    labelAmmTokenAmount: 'Token Amount',\n    labelAmmTime:'Time',\n    labelFeeEarned:'Fee Earned',\n    labelBuy:'buy',\n    labelSell:'sell',\n    labelAmmSide: 'Side',\n    labelAmmAmount: 'Amount',\n    labelAmmLpTokenAmount: 'LP Token Amount',\n    labelAmmFee: 'Fee',\n    labelAmmRecordTime: 'Time',\n    labelAmmExit: 'Exit',\n    labelAmmJoin: 'Join',\n    labelAmmFilterTypes: 'All Types',\n    labelAmmFilterJoin: 'Join',\n    labelAmmFilterExit: 'Exit',\n}\n","export default {\n    labelConnectUs:'If you believe this is indeed a bug, please <1>contact us</1> <2/> We would appreciate your feedback',\n    errorBase:'Oops! Something went wrong.',\n    errorLoading:'Loading! Please wait for a while.',\n    error404:'404! page can\\'t be reached',\n}","import common from './common';\nimport layout from './layout';\nimport tables from './tables';\nimport error from './error';\n\nexport default {\n    common,\n    layout,\n    tables,\n    error,\n}","export default {\n    tokenEnter: '输入币种',\n    tokenEnterPaymentToken: '交易支付币种',\n    tokenMax: '最大',\n    tokenHave: '拥有',\n    tokenEnterReceiveToken: '交易获取币种',\n    tokenSelectToken: '选择币种',\n    tokenExchange: '转换',\n    tokenNotEnough: '{{belong}}余额不足无法交易',\n    tokenSearchCoin: '搜索交易币种',\n    swapTolerance: '划点范围',\n    swapPriceImpact: '价格区间',\n    swapMinReceive: '最小获得数量',\n    swapFee: '手续费用',\n    swapBtn: '兑换',\n    goBack: '返回',\n    resetTitle: '重置二层秘钥',\n    restLabelEnterToken: '请选择消耗代币',\n    resetDescription: '创建一个新的二层身份验证签名密钥（无需备份），该操作将会<1>取消您的所有待定指令</1>。',\n    resetFee: '{{count}} GAS ≈ ${{price}} 费用',\n    resetLabelBtn: '重置',\n    depositTitle: '充值',\n    depositTitleAndActive: '充值并激活二层账号',\n    depositLabelEnterToken: '选择充值代币',\n    depositDescription: '您的充值将会在以太坊<1>确认</1>后<3>两分钟</3>内到账。',\n    depositAndActiveDescription: '完成一次充值来激活您的路印二层账号。您的充值将会在以太坊<1>确认</1>后<3>两分钟</3>内到账。',\n    depositLabelBtn: '充值',\n    depositLabelLinkRecent: '最近充值记入',\n    withdrawTitle: '提现',\n    withdrawLabelEnterToken: '选择提现代币',\n    withdrawDescription: '提现操作会被提交到以太坊的下一个区块，一般会在<1>30分钟到2小时</1>内到账。（如果以太坊的GAS价格<5>超过500GWei</5>的话，可能会存在<3>长时间的延迟</3>）',\n    withdrawLabelBtn: '提现',\n    withdrawLabelAddress: '提现到该账号地址',\n    withdrawLabelAddressInput: '输入地址',\n    withdrawLabelFee: '请选付费代币',\n    withdrawTypeLabelFast: '快速',\n    withdrawTypeLabelStandard: '普通',\n    withdrawLabelLinkRecent: '最近提现记入',\n    transferTitle: '转账',\n    transferLabelEnterToken: '选择转账代币',\n    transferDescription: '迅速转账到任何有效的以太坊地址。转账前请务必<1>确认</1>该地址可以<3>接受路印的二层<3>转账。',\n    transferLabelBtn: '转账',\n    transferLabelAddress: '转账到该账号地址',\n    transferLabelAddressInput: '输入地址',\n    transferLabelFee: '请选付费代币',\n    transferLabelLinkRecent: '最近转账记入',\n    labelConnectWallet: '链接钱包',\n    labelCustomer: '自定义',\n    labelChange24h: '{{timeUnit}} 涨幅',\n    labelDepth: '深度',\n    labelTrend: '价格',\n    label1W: '1周',\n    label1H: '1小时',\n    label1D: '1日',\n    labelCopyAddress: '复制地址到剪切板',\n    labelDisconnect:'断开钱包',\n    labelLockLayer2:'锁定钱包',\n    labelUnLockLayer2:'解锁钱包',\n    labelActiveLayer2:'激活二层',\n    labelSwitchAccount: '切换钱包',\n    labelViewEth: '跳转至以太网查看',\n    labelQRCode: '查看二维码',\n    labelShowAccountInfo: '查看,设置账号信息',\n    labelAssetTitle: '资产总量 ( 路印二层 )',\n    labelShowAccount: '显示或隐藏资产总量',\n    labelBtnDeposit: '充值',\n    labelBtnTransfer: '转账',\n    labelBtnWithdraw: '提现',\n    labelLevel:'VIP等级',\n    labelOrderbook:'订单本',\n    labelDeposit:'充值',\n    labelWithdraw:'提现',\n    labelSetPublicKey :'设置 EdDSA 公钥',\n    labelTitleSecurity:'安全设置',\n    labelTitleResetL2Keypair:'重置 二层密钥',\n    labelBtnReset:'重置',\n    labelHadChangPassword:'您在{{passDay}}修改了密码',\n    labelTitleForceWithdraw:'强制提现',\n    descriptionForceWithdraw:'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnForceWithdraw:'强制提现',\n    labelTitleExportAccount:'导出账号',\n    descriptionExportAccount:'xxxxxxxxxxxxxxxxxxxx,xxxxxxxxxxxxxxxx,xxxxxxxxxx,xxxxxxxxxx',\n    labelBtnExportAccount:'导出账号',\n    labelTitlePreferences:'设置选项',\n    labelTitleLayout:'个性化设置',\n    whichColorIsUp:'<0>{{up}} 上涨</0> -- <2>{{down}} 下跌</2>',\n    labelTradeFeeLevel: '您的交易等级评定:',\n    labelLanguage:'显示语言',\n    labelCurrency:'结算货币',\n    currencySetting:'货币设置',\n    labelColors:'选择颜色',\n    labelthemeLight: '明亮模式',\n    labelthemeDark: '暗黑模式',\n    labelgreen:'绿色',\n    labelred:'红色',\n    langZH: '中文',\n    langEN: '英语',\n    labelUSDollar: '美金结算',\n    labelCNYYuan:'人民币结算',\n    labelMaker:'做市商返佣',\n    labelTaker:'吃单费率',\n    labelAssetsTitle:'资产清单',\n    labelVolume:'总量',\n    labelLiquidityDeposit:'放入流动池',\n    labelLiquidityWithdraw:'移出流动池',\n    labelAvailable:'可用额度',\n    labelTokenAmount:'数量',\n    labelRemoveLiquidityBtn:'立刻移出',\n    labelAddLiquidityBtn:'立刻放入',\n    labelTradePanelHideOtherPairs: '隐藏其他交易对',\n    labelLPTokens:'权益代币',\n    labelTrade: '兑换',\n    labelAmmList: 'Amm 列表',\n    labelMyPoolShare: '我的份额',\n    labelFee: '费用',\n    labelLPTotal: '资金池中',\n    labelLiquidity: '流动性矿池',\n    labelReward:'奖励池',\n    labelMyReward: '我的奖励',\n    labelDate: '日期',\n    labelBack: '返回',\n    labelAPY: 'APY',\n    labelNew: '新的',\n    labelAccount: '账户信息',\n    labelAll:'所有',\n    labelMe:'我的',\n    labelMyTrade:'我的交易',\n    labelRecent:'最近交易',\n    labelMyAmm:'我的Amm',\n    labelMyAmmRecord: '我的Amm记录',\n    labelCurrentActivities:'当前活动',\n    labelPastActivities:'往期活动',\n    labelTotalPositionValue:'我的流动性总价值',\n    labelFeeRewards:'获得费用',\n    labelMiningRewards:'活动奖励',\n    labelLiquidityValue:'流动性价值',\n    labelCopyAddClip:'复制黏贴到剪切板!',\n    labelPleaseInputWalletAddress:'请输入地址'\n}\n\n","export default {\n    labelMarkets: '市场',\n    labelTrade: '交易',\n    labelLiquidity: '流动矿池',\n    labelLayer2: '二层账号',\n    loopringDomain: '路印交易所',\n    labelClassic: '简洁版',\n    labelClassicDescription: '快捷交易平台',\n    labelAdvanced: '专业版',\n    labelAdvancedDescription: '提供更丰富的交易模式',\n    labelDownloadApp: '下载手机客户端',\n    labelDownloadAppTitle: '下载钱包',\n    labelDownloadBtn: '转去 APP 商店',\n    labelNotification: '消息提醒',\n    themeSetting: '主题模版',\n    languageSetting: '语言设置',\n    labelConnectWallet: '链接钱包',\n    notificationApprove: '验证中',\n    notificationPending: '进行中',\n    labelMyTrades: '交易历史',\n    labelRecentTrades: '最近交易',\n    // layer2 submenu\n    labelAssets: '资产信息',\n    labelTransactions: '充值提现',\n    labelTrades: '交易记录',\n    labelAmmRecords: 'Amm记录',\n    labelAmmRecordsDes: '(出金和入金)',\n    rewards: '推荐奖励',\n    labelOrders: '挂单记录',\n    selectLanguage: '语言设置',\n    labelPools:'流动性挖矿池',\n    labelAmmMining:'交易大赛',\n    labelMyLiquidity:'我的流动性',\n    labelOrderBookMining:'订单本挖矿排名',\n    labelMakerRebates:'做市收益',\n    labelSetting:'高级设置',\n}\n\n","export default {\n    labelStatus:'状态',\n    labelAMM: 'AMM',\n    labelTransfer: '转账',\n    labelWithdraw: '提现',\n    labelDeposit: '充值',\n    labelToken: '币种',\n    labelAmount: '总量',\n    labelAvailable: '可用额度',\n    labelLocked: '冻结',\n    labelActions: '操作',\n    labelAllToken: '所有币种',\n    labelHideSmallBalances: '隐藏小额资产',\n    labelHideLPToken: '隐藏流动性凭证',\n    labelOrderFilterAllTypes: '所有类型',\n    labelOrderFilterBuy: '买入',\n    labelOrderFilterSell: '卖出',\n    labelFilterReset: '重置',\n    labelFilterSearch: '搜索',\n    labelOrderSide: '卖/买',\n    labelOrderAmount: '订单总量',\n    labelOrderAverage: '均值',\n    labelOrderFilledAmount: '成交部分',\n    labelOrderFilledPrice: '成交价格',\n    labelOrderTime: '成交时间',\n    labelOrderStatus: '状态',\n    labelOrderTradingPrice: '交易价格',\n    labelOrderTotal: '全部数量',\n    labelQuotaPair: '交易对',\n    labelQuotaLastPrice: '最新价',\n    labelQuota24hChange: '24h 涨跌',\n    labelQuota24hHigh: '24h 最高',\n    labelQuota24hLow: '24h 最低',\n    labelQuota24Volume: '24h 交易量',\n    labelTradeFilterAllTypes: '所有类型',\n    labelTradeFilterBuy: '买入',\n    labelTradeFilterSell: '卖出',\n    labelTradeSide: '卖/买',\n    labelTradeAmount: '交易总额',\n    labelTradePrice: '价格',\n    labelTradeFee: '费用',\n    labelTradeTime: '交易时间',\n    labelTxFilterAllTypes: '所有类型',\n    labelTxFilterDeposit: '充值',\n    labelTxFilterWithdraw: '提现',\n    labelTxFilterTransfer: '转账',\n    labelTxFilterAllTokens: '所有类型',\n    labelTxToken: '币种',\n    labelTxFrom: '起始',\n    labelTxTo: '完结',\n    labelTxAmount: '总额',\n    labelTxFee: '费用',\n    labelTxMemo: '备注',\n    labelTxTime: '时间',\n    labelTxTxnHash: '交易哈希',\n    labelTxStatus: '状态',\n    labelVolume:'交易量',\n    labelTradePair:'交易对',\n    labelPool: '资金池',\n    labelLiquidity: '流动性',\n    label24TradeVolume: '24h 交易量',\n    label24Reward: '24h 奖励',\n    labelAPY: 'APY',\n    labelTradePool:'放入池子',\n    labelAction:'操作',\n    labelFilter:'搜索',\n    valueAddTOAMM: `添加 <1></1> 和 <3></3>`,\n    valueSwapForAMM: `<1></1> 和 <3></3> 兑换`,\n    valueRemoveTOAMM:  `移出 <1></1> 和 <3></3>`,\n    labelAmmTotalValue:'价值总和',\n    labelAmmTokenAmount: '代币数量',\n    labelAmmTime:'时间',\n    labelFeeEarned:'赚取费用',\n    labelBuy:'买',\n    labelSell:'卖',\n    labelAmmSide: '入金/出金',\n    labelAmmAmount: '交易总额',\n    labelAmmLpTokenAmount: '流动性资产价格',\n    labelAmmFee: '费用',\n    labelAmmRecordTime: '交易时间',\n    labelAmmExit: '出金',\n    labelAmmJoin: '入金',\n    labelAmmFilterTypes: '所有类型',\n    labelAmmFilterJoin: '入金',\n    labelAmmFilterExit: '出金',\n}\n","export default {\n    labelConnectUs:'这有可能时候一个错误,<2/> 如需帮助请<1>联系我们</1>~',\n    errorBase:'奥哦! 遇到了一些问题',\n    errorLoading:'不要着急, 不要着急马上就好',\n    error404:'四〇四! 这是页面不存在呢.'\n\n}","import clsx from 'clsx';\nimport styled from \"@emotion/styled\";\nimport { CalculatedColumn, Cell, RowRendererProps } from \"react-data-grid\";\nimport React from \"react\";\n// import type { Column } from 'react-data-grid';\n\nconst RowDepthStyled = styled.div`\n  contain: strict;\n  contain: size layout style paint;\n  display: grid;\n  grid-template-rows: var(--row-height);\n  grid-template-columns: var(--template-columns);\n  position: absolute;\n  left: 0;\n  width: var(--row-width);\n  height: var(--row-height);\n  line-height: var(--row-height);\n  background-color: var(--background-color);\n\n  .row-background-value {\n    opacity: .06;\n    height: var(--row-height);\n    width: var(--row-width);\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n\n    .rgb-depth-row {\n      float: right;\n      height: var(--row-height);\n      background: ${({theme}) => theme.colorBase.success};\n\n      &.rgb-depth-red {\n        background: ${({theme}) => theme.colorBase.error};\n          //background: ${({theme, style}) => theme.colorBase[ style === 'good' ? 'success' : 'error' ]};;\n      }\n    }\n  }\n}\n`;\n\n\nexport interface IDepthRendererProps<R, SR> extends RowRendererProps<R, SR> {\n    depthKey: string,\n    rowBeforeRender: (prors: { depthKey: string, row: R, column: readonly CalculatedColumn<R, SR>[], className: any, [ key: string ]: any }) => JSX.Element\n}\n\nfunction _DepthRow<R, SR = unknown>({\n                                        cellRenderer:\n                                        CellRenderer = Cell,\n                                        className,\n                                        rowIdx,\n                                        isRowSelected,\n                                        copiedCellIdx,\n                                        draggedOverCellIdx,\n                                        row, viewportColumns,\n                                        selectedCellProps,\n                                        onRowClick,\n                                        rowClass,\n                                        setDraggedOverRowIdx,\n                                        onMouseEnter,\n                                        top,\n                                        onRowChange,\n                                        selectCell,\n                                        selectRow,\n                                        rowBeforeRender,\n                                        depthKey,\n                                        'aria-rowindex': ariaRowIndex,\n                                        'aria-selected': ariaSelected,\n                                        ...props\n                                    }: IDepthRendererProps<R, SR> & {selectRow:any}, ref: React.Ref<HTMLDivElement>) {\n    function handleDragEnter(event: React.MouseEvent<HTMLDivElement>) {\n        setDraggedOverRowIdx?.(rowIdx);\n        onMouseEnter?.(event);\n    }\n\n    className = clsx(\n        `rdg-row`,\n        `rdg-row-${rowIdx % 2 === 0 ? 'even' : 'odd'}`,\n        {\n            'rdg-cell-selected': isRowSelected,\n            'rdg-group-row-selected': selectedCellProps?.idx === -1\n        },\n        rowClass?.(row),\n        className\n    );\n    return (\n        <RowDepthStyled\n            role=\"row\"\n            aria-rowindex={ariaRowIndex}\n            aria-selected={ariaSelected}\n            ref={ref}\n            className={className}\n            onMouseEnter={handleDragEnter}\n            style={{top}}\n\n            {...props}\n        >\n            <div className={'row-background-value'}>\n                {rowBeforeRender({row, depthKey, column: viewportColumns, className, ...props})}\n            </div>\n            {\n                viewportColumns.map(column => {\n                const isCellSelected = selectedCellProps?.idx === column.idx;\n\n                return CellRenderer&&<CellRenderer\n                        {...props}\n                        colSpan={undefined}\n                        key={column.key}\n                        rowIdx={rowIdx}\n                        column={column}\n                        row={row}\n                        isCopied={copiedCellIdx === column.idx}\n                        isDraggedOver={draggedOverCellIdx === column.idx}\n                        isCellSelected={isCellSelected}\n                        // isRowSelected={isRowSelected}\n                        dragHandleProps={isCellSelected ? (selectedCellProps as any).dragHandleProps : undefined}\n                        onFocus={isCellSelected ? (selectedCellProps as any).onFocus : undefined}\n                        onKeyDown={isCellSelected ? selectedCellProps!.onKeyDown : undefined}\n                        onRowClick={onRowClick}\n                        onRowChange={onRowChange}\n                        selectCell={selectCell}\n                        // selectRow={selectRow}\n                    />\n\n            })\n            }\n\n        </RowDepthStyled>\n    );\n}\n\nexport const DepthRow = React.memo(React.forwardRef(_DepthRow)) as unknown as <R, SR = unknown>(props: IDepthRendererProps<R, SR> & React.RefAttributes<HTMLDivElement>) => JSX.Element;\n\nexport const RowBefore = <R, SR>(\n    {\n        row,\n        // isRowSelected,\n        className,\n        column,\n        depthKey,\n        width,\n        // onRowReorder,\n        ...props\n    }: { column: any, width: string } & IDepthRendererProps<R, SR>) => {\n    return <div className={`rgb-depth-row ${className}`} style={{width: width}} {...props}></div>\n}\n","import {\n    AmmInData,\n    CoinInfo,\n    CoinMap,\n    HeaderMenuItemInterface,\n    TradeCalcData,\n    WalletCoin,\n    WalletMap\n} from 'static-resource';\nimport { List } from 'immutable';\n\nexport const coinMap: CoinMap<CoinType, CoinInfo<CoinType>> = {\n    ETH: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'ETH',\n        simpleName: 'ETH',\n        description: '',\n        company: 'ETH'\n    },\n    LRC: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'LRC',\n        simpleName: 'LRC',\n        description: '',\n        company: 'LRC'\n    },\n    USDT: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'USDT',\n        simpleName: 'USDT',\n        description: '',\n        company: 'USDT'\n    },\n    USDC: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'USDC',\n        simpleName: 'USDC',\n        description: '',\n        company: 'USDC'\n    },\n    LRCA: {\n        icon: 'red',\n        name: 'LRCA',\n        simpleName: 'LRCA',\n        description: '',\n        company: 'LRC'\n    },\n    LRCB: {\n        icon: 'red',\n        name: 'LRCA',\n        simpleName: 'LRCB',\n        description: '',\n        company: 'LRC'\n    },\n    DPR: {\n        icon: 'blue',\n        name: 'DPR',\n        simpleName: 'DPR',\n        description: '',\n        company: 'DPR'\n    },\n    CCB: {\n        icon: 'blue',\n        name: 'CCB',\n        simpleName: 'CCB',\n        description: '',\n        company: 'ETH'\n    },\n    OKB: {\n        icon: 'blue',\n        name: 'OKB',\n        simpleName: 'OKB',\n        description: '',\n        company: 'ETH'\n    },\n    CRV: {\n        icon: 'blue',\n        name: 'CRV',\n        simpleName: 'CRV',\n        description: '',\n        company: 'CRV'\n    },\n    TEST: {\n        icon: 'blue',\n        name: 'TEST',\n        simpleName: 'TEST',\n        description: '',\n        company: 'TEST'\n    },\n    TEST2: {\n        icon: 'blue',\n        name: 'TEST3',\n        simpleName: 'TEST2',\n        description: '',\n        company: 'CRV'\n    },\n    TEST3: {\n        icon: 'blue',\n        name: 'TEST3',\n        simpleName: 'TEST3',\n        description: '',\n        company: 'TEST3'\n    },\n\n}\nexport const walletMap = {\n    ETH: {\n        belong: 'ETH',\n        count: 11,\n    },\n    LRC: {\n        belong: 'LRC',\n        count: 11111111111111,\n    },\n}\n\nexport enum ButtonComponentsMap {\n    Download,\n    Notification,\n    Theme,\n    Language\n}\n\nexport const inputProps = {\n    label: 'Enter Payment Token',\n    subLabel: 'Max',\n    emptyText: 'Select Token',\n    placeholderText: '0.00',\n    coinMap: coinMap,\n}\n\nexport const coinType = {\n    ETH: 'ETH',\n    USDT:'USDT',\n    USDC:'USDC',\n    LRC: 'LRC',\n    CRV: 'CRV',\n    DPR: 'DPR',\n    CCB: 'CCB',\n    OKB: 'OKB',\n    LRCA: 'LRCA',\n    LRCB: 'LRCB',\n    TEST: 'TEST',\n    TEST2: 'TEST2',\n    TEST3: 'TEST3',\n}\n\nexport const tradeCalcData: TradeCalcData<CoinType> = {\n    coinSell: 'ETH', //name\n    coinBuy: 'LRC',\n    BtoS: 0,\n    StoB: 0,\n    sellCoinInfoMap: coinMap,\n    buyCoinInfoMap: coinMap,\n    walletMap: walletMap as WalletMap<CoinType, WalletCoin<CoinType>>,\n    slippage: 0.5,\n    priceImpact: '12',\n    minimumReceived: '1%',\n    fee: '1%'\n}\nexport const ammCalcData: AmmInData<CoinType> = {\n    myCoinA: {belong:'ETH',balance:1000,tradeValue:0},\n    myCoinB: {belong:'LRC',balance:1000,tradeValue:0},\n    AtoB:50,\n    coinInfoMap: coinMap,\n    slippage: 0.5,\n    fee: '1%'\n}\n\n\nexport const layer2ItemData = List<HeaderMenuItemInterface>([{\n    label: {\n        id: 'classic',\n        i18nKey:'labelClassic',\n        description: 'Simple and easy-to-user interface',\n    },\n    router: {path: ''},\n}, {\n    label: {\n        id: 'advanced',\n        i18nKey:'labelAdvanced',\n        //TODO: translate id\n        description: 'Full access to all trading tools',\n    },\n    router: {path: ''},\n},\n])\n\nexport type CoinType = typeof coinType;","export const globalSetup = Object.freeze({\n        wait: 100\n    }\n)","import { PopoverOrigin } from '@material-ui/core';\nimport { OneOf } from 'static-resource';\n\nimport * as React from 'react';\nimport { PopupState as InjectedProps } from 'material-ui-popup-state/core';\n\n\nexport enum PopoverType {\n    hover = 'hover',\n    click = 'click'\n}\n\ntype HorizonLeft = {\n    left: number\n}\n\ntype HorizonRight = {\n    right: number\n}\n\n\n// export type PopoverProps = MuiPopoverProps & {\n//     arrowHorizon?: OneOf<[HorizonLeft, HorizonRight]>;\n// }\nexport type PopoverWrapProps = {\n    type: keyof typeof PopoverType;\n    // children: React.ReactNode;\n    popupId: string;\n    children: JSX.Element | undefined | React.ReactElement;\n    popoverContent: React.ReactNode;\n    popoverStyle?: React.CSSProperties;\n    anchorOrigin?: PopoverOrigin;\n    transformOrigin?: PopoverOrigin;\n    popoverTop?: number;\n    handleStateChange?: (state: boolean) => void;\n    // variant: Variant\n    parentPopupState?: InjectedProps | null | undefined\n    disableAutoFocus?: boolean | null\n    arrowHorizon?: OneOf<[HorizonLeft, HorizonRight]>;\n}","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport { Popover as MuiPopover, PopoverOrigin, PopoverProps } from '@material-ui/core'\nimport { PopoverWrapProps } from './Interface';\nimport { bindHover, bindMenu, bindPopover, bindTrigger, usePopupState } from 'material-ui-popup-state/hooks';\nimport HoverMenu from 'material-ui-popup-state/HoverMenu';\nimport HoverPopover from 'material-ui-popup-state/HoverPopover';\n\nconst DEFAULT_ANCHOR_ORIGIN: PopoverOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left',\n}\n\nconst DEFAULT_TRANSFORM_ORIGIN: PopoverOrigin = {\n    vertical: 'top',\n    horizontal: 'left',\n}\nconst POPOVER_TOP = 8;\n\n\nexport const Popover: React.FC<PopoverWrapProps> = ({\n                                                        type,\n                                                        popupId,\n                                                        children,\n                                                        popoverContent,\n                                                        popoverStyle,\n                                                        anchorOrigin = DEFAULT_ANCHOR_ORIGIN,\n                                                        transformOrigin = DEFAULT_TRANSFORM_ORIGIN,\n                                                        popoverTop = POPOVER_TOP,\n                                                        arrowHorizon = {\n                                                            left: 10,\n                                                        },\n                                                        handleStateChange\n                                                    }) => {\n    const arrowLeft = arrowHorizon?.left\n    const arrowRight = arrowHorizon?.right\n    const popupState = usePopupState({variant: 'popover', popupId})\n    const {isOpen} = popupState\n\n    React.useEffect(() => {\n        if (handleStateChange) {\n            handleStateChange(isOpen)\n        }\n    }, [handleStateChange, isOpen])\n\n    const RenderPopover = styled.div`\n      .arrowPopover {\n        position: absolute;\n        top: -16px;\n        right: ${() => arrowRight ? `${arrowRight}px` : undefined};\n        left: ${() => arrowLeft ? `${arrowLeft}px` : undefined};\n        width: 0;\n        height: 0;\n        border-top: 8px solid transparent;\n        border-right: 8px solid transparent;\n        border-bottom: ${({theme}) => `8px solid ${theme.colorBase.backgroundSecondary}`};\n        border-left: 8px solid transparent;\n      }\n    `\n    const isHover = type === 'hover'\n    const bindAction = isHover ? bindHover(popupState) : bindTrigger(popupState)\n    const bindContent = isHover ? bindMenu(popupState) : bindPopover(popupState)\n    const CustomPopover = isHover ? HoverMenu : MuiPopover\n\n    const getRenderChild = React.useCallback((popoverChildren: React.ReactNode) => {\n        if (React.isValidElement(popoverChildren)) {\n            return React.Children.map(popoverChildren, (child) => React.cloneElement(child, {\n                    ...bindAction,\n                })\n            )\n        }\n        throw new Error('Invalid popover element!')\n    }, [bindAction])\n\n    return <>\n        {getRenderChild(children)}\n        <CustomPopover\n            {...bindContent}\n            anchorReference='anchorEl'\n            anchorOrigin={anchorOrigin}\n            transformOrigin={transformOrigin}\n            sx={{\n                '.MuiPopover-paper': {\n                    display: popoverContent ? 'block' : 'none',\n                    overflow: 'unset',\n                    marginTop: `${popoverTop}px`,\n                }\n            }}\n        >\n            <RenderPopover style={popoverStyle}>\n                <div className=\"arrowPopover\"/>\n                {popoverContent}\n            </RenderPopover>\n        </CustomPopover>\n    </>\n}\n\n// export interface PopoverOrigin {\n//     vertical: 'top' | 'center' | 'bottom' | number;\n//     horizontal: 'left' | 'center' | 'right' | number;\n// }\n\n\nexport const PopoverPure = styled(HoverPopover)<PopoverProps>`\n  &.MuiModal-root {\n    &.arrow-center .MuiPopover-paper {\n      // border-image-slice: 12 20 6 20 fill;\n      // border-image-width: 12px 0px 6px 0px;\n      // border-image-repeat:round;\n      border: 1px solid rgba(235, 235, 235, 0.1);\n      border-radius: 4px;\n      margin-top: 12px;\n      border-radius: 4px;\n      overflow: visible;\n      background-color: ${({theme}) => theme.colorBase.background().secondary};\n\n      &:before {\n        content: '';\n        display: block;\n        width: 18px;\n        height: 12px;\n        position: absolute;\n        top: -8px;\n        transform: translateX(-50%);\n        left: 50%;\n        border-image-slice: 12 20 15 20 fill;\n        border-image-width: 12px 0px 0px 0px;\n        border-image-repeat: round;\n        border-image-source: url(\"./static/images/modalBg.png\");\n      }\n    }\n\n    &.arrow-right .MuiPopover-paper {\n\n\n      border-image-slice: 12 40 6 6 fill;\n      border-image-width: 12px 40px 6px 6px;\n      border-image-repeat: round;\n      padding-top: 12px;\n      background-color: initial;\n      background-image: none;\n      border-image-source: url(\"/static/images/modalBg.png\");\n    }\n\n    &.arrow-left .MuiPopover-paper {\n      border-image-slice: 12 6 6 40 fill;\n      border-image-width: 12px 6px 6px 40px;\n      border-image-repeat: round;\n      padding-top: 12px;\n      background-color: initial;\n      background-image: none;\n      border-image-source: url(\"/static/images/modalBg.png\");\n    }\n  }\n\n\n` as React.ElementType<PopoverProps>\n\n// export const PopoverPure = ({anchorOrigin,className,children,...rest}:PopoverProps)=>{\n//     return  <PopoverStyled {...{...rest}} className={clsx(className,` arrow-${anchorOrigin?.horizontal}`)} >{children}</PopoverStyled>\n// }","import { SvgIcon } from '@material-ui/core';\n\nexport const  NewTagIcon = ()=> <SvgIcon className={'tag'} width=\"25\" height=\"12\" viewBox=\"0 0 25 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 6C0 2.68629 2.68629 0 6 0H19C22.3137 0 25 2.68629 25 6C25 9.31371 22.3137 12 19 12H6C2.68629 12 0 9.31371 0 6Z\" fill=\"#F46253\"/>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.53831 2.54004H8.38131V6.88422L5.38532 2.54004H4.46631V9.16004H5.62331V4.80767L8.6192 9.16004H9.53831V2.54004Z\" fill=\"white\"/>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.8229 8.21904C12.4264 8.21904 12.1019 8.11638 11.84 7.91884C11.6327 7.75888 11.4848 7.54497 11.3988 7.27004H15.1027L15.1231 7.13377C15.1423 7.00642 15.1519 6.88147 15.1519 6.75904C15.1519 6.0677 14.9287 5.47103 14.4811 4.97824C14.0349 4.4743 13.4535 4.22304 12.7509 4.22304C12.0169 4.22304 11.4068 4.46199 10.9353 4.94644C10.4657 5.42883 10.2329 6.03401 10.2329 6.75004C10.2329 7.4723 10.4689 8.08088 10.945 8.56342L10.9465 8.56493C11.4305 9.04239 12.0548 9.27704 12.8049 9.27704C13.7352 9.27704 14.4487 8.9153 14.9193 8.18686L15.0113 8.04453L14.0637 7.50672L13.9827 7.63808C13.7468 8.0208 13.3715 8.21904 12.8229 8.21904ZM14.7849 8.10009C14.7849 8.10007 14.7849 8.10011 14.7849 8.10009ZM11.393 6.26604C11.4701 5.99196 11.61 5.773 11.8104 5.60308L11.8119 5.60178C12.0545 5.39082 12.3634 5.28104 12.7509 5.28104C13.0751 5.28104 13.3539 5.37992 13.5943 5.57763C13.7894 5.73807 13.9285 5.96388 14.0047 6.26604H11.393ZM14.1999 6.42604C14.1914 6.371 14.1812 6.31767 14.1692 6.26604C14.1014 5.9724 13.9785 5.73383 13.8005 5.55032C14.0098 5.76611 14.1429 6.05791 14.1999 6.42604L11.1941 6.4262C11.1941 6.42625 11.1941 6.42614 11.1941 6.4262L14.1999 6.42604Z\" fill=\"white\"/>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M22.0533 4.34004H20.8969L20.0218 7.37085L19.0832 4.34004H18.0914L17.1526 7.3632L16.2775 4.34004H15.1211L16.6153 9.16004H17.6514L18.5872 6.20072L19.523 9.16004H20.5591L22.0533 4.34004Z\" fill=\"white\"/>\n</SvgIcon>\n\n","import styled from \"@emotion/styled\";\n\n\nconst WrapperClassname = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst ImageCellClassname = styled.div`\n  background: #efefef;\n  background-size: 100%;\n  display: inline-block;\n  height: 28px;\n  width: 28px;\n  vertical-align: middle;\n  background-position: center;\n`;\n\ninterface Props {\n    /** image url, used as background-image */\n    value: string;\n}\n\nexport function ImageFormatter({value}: Props) {\n    return (\n        <WrapperClassname>\n            <ImageCellClassname style={{backgroundImage: `url(${value})`}}/>\n        </WrapperClassname>\n    );\n}\n","import { useLayoutEffect, useRef } from 'react';\nimport styled from \"@emotion/styled\";\n\nexport function useFocusRef<T extends HTMLOrSVGElement>(isCellSelected: boolean | undefined) {\n    const ref = useRef<T>(null);\n    useLayoutEffect(() => {\n        if (!isCellSelected) return;\n        ref.current?.focus({preventScroll: true});\n    }, [isCellSelected]);\n\n    return ref;\n}\n\nconst CellExpandClassname = styled.div`\n  float: right;\n  display: table;\n  height: 100%;\n\n  > span {\n    display: table-cell;\n    vertical-align: middle;\n    cursor: pointer;\n  }\n`;\n\ninterface CellExpanderFormatterProps {\n    isCellSelected: boolean;\n    expanded: boolean;\n    onCellExpand: () => void;\n}\n\nexport function CellExpanderFormatter({isCellSelected, expanded, onCellExpand}: CellExpanderFormatterProps) {\n    const iconRef = useFocusRef<HTMLSpanElement>(isCellSelected);\n\n    function handleClick(e: React.MouseEvent<HTMLSpanElement>) {\n        e.stopPropagation();\n        onCellExpand();\n    }\n\n    function handleKeyDown(e: React.KeyboardEvent<HTMLSpanElement>) {\n        if (e.key === ' ' || e.key === 'Enter') {\n            e.preventDefault();\n            onCellExpand();\n        }\n    }\n\n    return (\n        <CellExpandClassname>\n      <span\n          onClick={handleClick}\n          onKeyDown={handleKeyDown}\n      >\n        <span\n            ref={iconRef}\n            tabIndex={-1}\n        >\n          {expanded ? '\\u25BC' : '\\u25B6'}\n        </span>\n      </span>\n        </CellExpandClassname>\n    );\n}\n","import styled from \"@emotion/styled\";\nimport { useFocusRef } from \"../../hook\";\n\nconst ChildRowActionCrossClassname = styled.div`\n  &::before,\n  &::after {\n    content: \"\";\n    position: absolute;\n    background: grey;\n  }\n\n  &::before {\n    left: 21px;\n    width: 1px;\n    height: 100%;\n  }\n\n  &::after {\n    top: 50%;\n    left: 20px;\n    height: 1px;\n    width: 15px;\n  }\n\n  &:hover {\n    background: red;\n  }\n`;\n\nconst ChildRowButtonClassname = styled.div`\n  cursor: pointer;\n  position: absolute;\n  left: 21px;\n  transform: translateX(-50%);\n  filter: grayscale(1);\n`;\n\ninterface ChildRowDeleteButtonProps {\n    isCellSelected: boolean;\n    isDeleteSubRowEnabled: boolean;\n    onDeleteSubRow: () => void;\n}\n\nexport function ChildRowDeleteButton({\n                                         isCellSelected,\n                                         onDeleteSubRow,\n                                         isDeleteSubRowEnabled\n                                     }: ChildRowDeleteButtonProps) {\n    const iconRef = useFocusRef<HTMLSpanElement>(isCellSelected);\n\n    function handleKeyDown(e: React.KeyboardEvent<HTMLSpanElement>) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            onDeleteSubRow();\n        }\n    }\n\n    return (\n        <>\n            <ChildRowActionCrossClassname/>\n            {isDeleteSubRowEnabled && (\n                <ChildRowButtonClassname onClick={onDeleteSubRow}>\n          <span\n              ref={iconRef}\n              tabIndex={-1}\n              onKeyDown={handleKeyDown}\n          >\n            ❌\n          </span>\n                </ChildRowButtonClassname>\n            )}\n        </>\n    );\n}\n","import clsx from 'clsx';\nimport styled from \"@emotion/styled\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { CellRendererProps } from \"react-data-grid\";\n\nconst StyleDepth = styled.div`\n  position: absolute;\n  right: 0;\n  height: 100%;\n  z-index: -1;\n  opacity: .06;\n\n  .rgb-depth-cell {\n    width: 100%;\n    background: ${({theme}) => theme.colorBase.success};\n\n    &.rgb-depth-red {\n      background: ${({theme}) => theme.colorBase.error};\n        //background: ${({theme, style}) => theme.colorBase[ style === 'good' ? 'success' : 'error' ]};;\n    }\n  }\n\n\n`;\n\n\ninterface IDepthRendererProps<R, SR> extends CellRendererProps<R, SR> {\n    depthKey: string\n}\n\nexport const CellDepthFormatter = <R, SR>({\n                                              t,\n                                              row,\n                                              column,\n                                              className,\n                                              depthKey,\n                                              ...props\n                                          }: WithTranslation & IDepthRendererProps<R, SR>) => {\n    className = clsx(className, {'rgb-depth-cell': true});\n    const style = {width: `${Number((row as any)[ depthKey ]) * 100}%`}\n    return <StyleDepth {...props}>\n        <div className={className} style={style}></div>\n    </StyleDepth>\n}\nexport default withTranslation()(CellDepthFormatter);\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { Button, TablePagination, TableProps } from '../../basic-lib'\nimport { Column, Table, } from '../../basic-lib/'\nimport { Currency, EmptyValueTag, getThousandFormattedNumbers, globalSetup, PriceTag } from 'static-resource'\nimport { Method, MyPoolRow as Row, MyPoolTableProps } from './Interface'\nimport { FormatterProps } from 'react-data-grid';\nimport styled from '@emotion/styled';\nimport { TablePaddingX } from '../../styled';\nimport { useDeepCompareEffect } from 'react-use';\nimport { IconColumn } from '../poolsTable';\n\nexport enum PoolTradeType {\n    add = 'add',\n    swap = 'swap',\n    remove = 'remove'\n}\n\n// enum ActionType {\n//     // filter = 'filter',\n//     page = 'page'\n// }\nconst rowHeight=86;\n\nconst TableStyled = styled(Box)`\n  .rdg {\n    --template-columns: 280px auto auto  !important;\n    height: calc(86px * 5 + var(--header-row-height));\n    .rdg-cell.action {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n  .textAlignRight{\n    text-align: right;\n  }\n\n  ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as typeof Box\nconst TypogStyle = styled(Typography)`\n  font-size: ${({theme})=>theme.fontDefault.body1};\n` as typeof Typography;\n\nconst PoolStyle = styled(Box)`\n  height: calc(${rowHeight}px - 8px);\n  & .MuiTypography-body1 {\n    font-size: ${({theme}) => theme.fontDefault.body1};\n  }\n  \n  .MuiButton-root:not(:first-of-type){\n    margin-left:  ${({theme})=>theme.unit}px;\n  }\n` as typeof Box;\nconst columnMode = ({\n                        t,\n                        handleWithdraw,\n                        handleDeposit\n                    }: WithTranslation & Method<Row<any>>, currency: 'USD'|'CYN'): Column<Row<any>, unknown>[] => [\n    {\n        key: 'pools',\n        sortable: false,\n        width: 'auto',\n        minWidth: 240,\n        name: t('labelPool'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            return <PoolStyle display={'flex'} flexDirection={'column'} alignContent={'flex-start'}\n                              justifyContent={'center'} >\n                <IconColumn row={row.ammDetail as any}/>\n                <Box marginLeft={7} display={'flex'}>\n                    <Button variant={'outlined'} size={'small'}\n                            onClick={() => {\n                                handleDeposit(row)\n                            }}>{t('labelDeposit')}</Button>\n                    <Button variant={'outlined'} size={'small'}\n                            onClick={() => {\n                                handleWithdraw(row)\n                            }}>{t('labelWithdraw')}</Button>\n                </Box>\n            </PoolStyle>\n\n        }\n    },\n    {\n        key: 'liquidity',\n        sortable: false,\n        width: 'auto',\n        headerCellClass:'textAlignRight',\n        name: t('labelLiquidity'),\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            const {ammDetail:{coinAInfo, coinBInfo}, balanceA, balanceB,balanceYuan,balanceDollar} = row;\n            return <Box display={'flex'} flexDirection={'column'} alignItems={'flex-end'}\n                        justifyContent={'space-around'} marginY={1}>\n                <TypogStyle variant={'body1'} component={'span'} color={'textPrimary'}>\n                    {balanceDollar === undefined ? EmptyValueTag : currency === Currency.dollar ? 'US' + PriceTag.Dollar + getThousandFormattedNumbers(balanceDollar)\n                        : 'CNY' + PriceTag.Yuan + getThousandFormattedNumbers(balanceYuan)}\n                </TypogStyle>\n                <Typography variant={'body2'} component={'p'} color={'textSecondary'} marginTop={1/2}>\n\n                    <Typography component={'span'}\n                                color={'textSecondary'}>{getThousandFormattedNumbers(balanceA)}</Typography>\n                    <Typography component={'span'}  marginLeft={1/2}\n                                color={'textSecondary'}>{' ' + coinAInfo?.simpleName}</Typography>\n                </Typography>\n                <Typography variant={'body2'} component={'p'} color={'textSecondary'} marginTop={0}>\n                    <Typography component={'span'}\n                                color={'textSecondary'}>{getThousandFormattedNumbers(balanceB)}</Typography>\n                    <Typography component={'span'}  marginLeft={1/2}\n                                color={'textSecondary'}>{' ' + coinBInfo?.simpleName}</Typography>\n\n                </Typography>\n            </Box>\n\n        }\n    },\n    {\n        key: 'feesEarned',\n        sortable: false,\n        width: 'auto',\n        name: t('labelFeeEarned'),\n        headerCellClass:'textAlignRight',\n        formatter: ({row}: FormatterProps<Row<any>, unknown>) => {\n            const {ammDetail:{coinAInfo, coinBInfo}, feeA, feeB,feeYuan,feeDollar} = row;\n            return <Box display={'flex'} flexDirection={'column'} alignItems={'flex-end'}\n                        justifyContent={'space-around'} marginY={1}>\n                <TypogStyle variant={'body1'} component={'span'} color={'textPrimary'}>\n                    {feeDollar === undefined ? EmptyValueTag : currency === Currency.dollar ? 'US' + PriceTag.Dollar + getThousandFormattedNumbers(feeDollar)\n                        : 'CNY' + PriceTag.Yuan + getThousandFormattedNumbers(feeYuan as number)}\n                </TypogStyle>\n                <Typography variant={'body2'} component={'p'} color={'textSecondary'}  marginTop={1/2}>\n\n                    <Typography component={'span'}\n                                color={'textSecondary'}>{getThousandFormattedNumbers(feeA)}</Typography>\n                    <Typography component={'span'} marginLeft={1/2}\n                                color={'textSecondary'}>{' ' + coinAInfo?.simpleName}</Typography>\n                </Typography>\n                <Typography variant={'body2'} component={'p'} color={'textSecondary'}  marginTop={0}>\n                    <Typography component={'span'}  marginLeft={1/2}\n                                color={'textSecondary'}>{getThousandFormattedNumbers(feeB)}</Typography>\n                    <Typography component={'span'}\n                                color={'textSecondary'}>{' ' + coinBInfo?.simpleName}</Typography>\n\n                </Typography>\n            </Box>\n\n        }\n    },\n]\n\n\nexport const MyPoolTable = withTranslation('tables')(<T extends {[key:string]:any}>({\n                                                                            t, i18n,\n                                                                            tReady,\n                                                                            handlePageChange,\n                                                                            pagination,\n                                                                            showFilter = true,\n                                                                            rawData,\n                                                                            handleWithdraw,\n                                                                            handleDeposit,\n                                                                            wait = globalSetup.wait,\n                                                                            ...rest\n                                                                        }: MyPoolTableProps<T> & WithTranslation) => {\n    const [page, setPage] = React.useState(rest?.page ? rest.page : 1);\n    const [totalData, setTotalData] = React.useState<Row<T>[]>(rawData && Array.isArray(rawData) ? rawData : []);\n    useDeepCompareEffect(() => {\n        setTotalData(rawData)\n    }, [rawData])\n\n    const defaultArgs: TableProps<any, any> = {\n        rawData,\n        columnMode: columnMode({t, i18n, tReady, handleWithdraw, handleDeposit}, Currency.dollar),\n        generateRows: (rawData: any) => rawData,\n        generateColumns: ({columnsRaw}) => columnsRaw as Column<Row<any>, unknown>[],\n    }\n\n\n    const pageSize = pagination ? pagination.pageSize : 10;\n\n    const getRenderData = React.useCallback(() => pagination\n        ? totalData.slice((page - 1) * pageSize, page * pageSize)\n        : totalData\n        , [page, pageSize, pagination, totalData])\n\n    const _handlePageChange = React.useCallback((page: number) => {\n        setPage(page);\n        // updateData({actionType: ActionType.page, currPage: page})\n        handlePageChange(page);\n    }, [handlePageChange])\n\n    return <TableStyled>\n        <Table\n            rowHeight={rowHeight}\n            headerRowHeight={44}\n            {...{\n                ...defaultArgs, t, i18n, tReady, ...rest,\n                rawData: getRenderData()\n            }}/>\n        {pagination && (\n            <TablePagination page={page} pageSize={pageSize} total={totalData.length} onPageChange={_handlePageChange}/>\n        )}\n    </TableStyled>\n})\n","import React from 'react'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { debounce } from 'lodash'\nimport { Button, Column, NewTagIcon, Table, TablePagination, TableProps, useImage } from '../../basic-lib'\nimport {\n    AmmDetail,\n    Currency, EmptyValueTag,\n    getThousandFormattedNumbers,\n    globalSetup,\n    MiningIcon,\n    PriceTag,\n    SearchIcon, TableType,\n} from 'static-resource';\nimport { Avatar, Box, InputAdornment, OutlinedInput, Typography } from '@material-ui/core/';\nimport { PoolTableProps, Row } from './Interface';\nimport styled from '@emotion/styled';\nimport { AvatarIconPair, TablePaddingX } from '../../styled';\nimport { useDeepCompareEffect } from 'react-use';\nimport { useHistory } from 'react-router-dom';\nimport { FormatterProps } from 'react-data-grid';\n\n\n// export enum TradeTypes {\n//     buy = 'Buy',\n//     sell = 'Sell'\n// }\n\n// export type RawDataTradeItem = {\n//     side: TradeTypes;\n//     amount: {\n//         from: {\n//             key: string;\n//             value: number;\n//         },\n//         to: {\n//             key: string;\n//             value: number\n//         }\n//     };\n//     price: {\n//         key: string;\n//         value: number;\n//     };\n//     fee: {\n//         key: string;\n//         value: number;\n//     };\n//     time: number;\n// }\n\n\n// enum TableType {\n//     filter = 'filter',\n//     page = 'page'\n// }\n\nconst BoxStyled = styled(Box)`\n  ${({theme}) => AvatarIconPair({theme})}\n\n` as typeof Box\nconst TableStyled = styled(Box)`\n  .rdg {\n    --template-columns: 240px auto auto  68px 120px !important;\n\n    .rdg-cell.action {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n  ${({theme}) => TablePaddingX({pLeft: theme.unit * 3, pRight: theme.unit * 3})}\n` as typeof Box\n\n\nexport const IconColumn = React.memo(<R extends AmmDetail<T>,T>({row}: { row: R }) => {\n    const {coinAInfo, coinBInfo, isNew, isActivity} = row;\n    const coinAIconHasLoaded = useImage(coinAInfo?.icon ? coinAInfo?.icon : '').hasLoaded;\n    const coinBIconHasLoaded = useImage(coinBInfo?.icon ? coinBInfo?.icon : '').hasLoaded;\n    return <BoxStyled display={'flex'} flexDirection={'row'} justifyContent={'space-between'} alignItems={'center'}>\n\n        <Box display={'flex'} flexDirection={'row'} justifyContent={'center'} alignItems={'center'}>\n            <Avatar variant=\"square\" alt={coinAInfo?.simpleName}\n                // src={sellData?.icon}\n                    src={coinAIconHasLoaded ? coinAInfo?.icon : 'static/images/icon-default.png'}/>\n            <Avatar variant=\"square\" alt={coinBInfo?.simpleName} className={'icon-next'}\n                // src={buyData?.icon}\n                    src={coinBIconHasLoaded ? coinBInfo?.icon : 'static/images/icon-default.png'}/>\n            <Typography variant={'inherit'} display={'flex'} flexDirection={'column'} marginLeft={1} component={'div'} paddingRight={1}>\n                <Typography component={'h3'} color={'textPrimary'} title={'sell'}>\n                    <Typography component={'span'} className={'next-coin'}>\n                        {coinAInfo?.simpleName}\n                    </Typography>\n                    <Typography component={'i'}>/</Typography>\n                    <Typography component={'span'} title={'buy'}>\n                        {coinBInfo?.simpleName}\n                    </Typography>\n                </Typography>\n                {/*<Typography variant={'body2'} component={'span'} color={'textSecondary'}>*/}\n                {/*    {t('labelLiquidity') + ' ' + currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(amountDollar)*/}\n                {/*        : PriceTag.Yuan + getThousandFormattedNumbers(amountYuan)}*/}\n                {/*</Typography>*/}\n            </Typography>\n            {isActivity ? <Typography component={'span'} paddingRight={1}><MiningIcon/> </Typography> : undefined}\n            {isNew ? <NewTagIcon/> : undefined}\n        </Box>\n    </BoxStyled>\n\n}) as <R extends AmmDetail<T>,T>(props: { row: R }) => JSX.Element;\n\nconst columnMode = <R extends Row<T>,T>({t}: WithTranslation, currency: 'USD'|'CYN'): Column<R, unknown>[] => [\n    {\n        key: 'pools',\n        sortable: false,\n        width: 'auto',\n        minWidth: 240,\n        name: t('labelPool'),\n        formatter: ({row}:FormatterProps<R, unknown>) => {\n            return <Box flex={1} height={'100%'} alignContent={'center'} display={'flex'}>\n                <IconColumn row={row as any}/>\n            </Box>\n\n        }\n    },\n    {\n        key: 'liquidity',\n        sortable: false,\n        width: 'auto',\n        name: t('labelLiquidity'),\n        formatter: ({row}) => {\n            const {amountDollar , amountYuan = 0} = row\n            return <Typography\n                component={'span'}> {\n                typeof amountDollar === 'undefined' ? EmptyValueTag :\n                    typeof amountDollar === 'undefined'?EmptyValueTag: currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(amountDollar) : PriceTag.Yuan + getThousandFormattedNumbers(amountYuan)}\n            </Typography>\n\n        }\n    },\n    {\n        key: 'volume24',\n        sortable: false,\n        width: 'auto',\n        minWidth: 156,\n        name: t('label24TradeVolume'),\n        formatter: ({row}) => {\n            //priceDollar, priceYuan, ,priceDollar: EmptyValueTag, priceYuan: EmptyValueTag\n            // typeof priceDollar === 'undefined' ? EmptyValueTag :\n            //     currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(Number(priceDollar)) : PriceTag.Yuan + getThousandFormattedNumbers(Number(priceYuan))}\n\n            const { volume } = row.tradeFloat ? row.tradeFloat : {volume:EmptyValueTag};\n            return <Typography\n                component={'span'}> {volume}  {row.coinAInfo.simpleName}\n                </Typography>\n        }\n    },\n    // {\n    //     key: 'reward24',\n    //     sortable: false,\n    //     minWidth: 136,\n    //     width: 'auto',\n    //     name: t('label24Reward'),\n    //     formatter: ({row}) => {\n    //         const reward: EmptyValueTag | number = (row.tradeFloat && typeof row.tradeFloat.reward !== 'undefined') ? row.tradeFloat.reward : EmptyValueTag;\n    //         return <Typography\n    //             component={'span'}> {\n    //             reward === EmptyValueTag ? reward :\n    //                 currency === Currency.dollar ?\n    //                     PriceTag.Dollar + getThousandFormattedNumbers(reward)\n    //                     : PriceTag.Yuan + getThousandFormattedNumbers(reward)}\n    //         </Typography>\n    //     }\n    // },\n    {\n        key: 'APY',\n        sortable: false,\n        name: t('labelAPY'),\n        width: 'auto',\n        maxWidth: 68,\n        formatter: ({row}) => {\n            const APY = typeof row.APY !== undefined && row.APY? row?.APY : EmptyValueTag;\n            return <Typography component={'span'}> {APY === EmptyValueTag || typeof APY === 'undefined' ? EmptyValueTag : APY + '%'}</Typography>\n        }\n    },\n    {\n        key: 'trade',\n        name: t('labelAction'),\n        maxWidth: 120,\n        width: 'auto',\n        headerCellClass: `action`,\n        cellClass: () => `action`,\n        formatter: ({row}) => {\n            return <Button\n                href={`/#/liquidity/pools/coinPair/${row?.coinAInfo?.simpleName + '-' + row?.coinBInfo?.simpleName}`}\n                className={'btn'} variant={'outlined'} size={'small'}>\n                {t('labelTradePool')}</Button>\n        }\n    },\n]\n\n\nexport const PoolsTable = withTranslation('tables')(\n    <T extends {[key:string]:any}>({\n                           t, i18n,\n                           tReady,\n                           handlePageChange,\n                           pagination,\n                           showFilter = true,\n                           rawData,\n                           wait = globalSetup.wait,\n                           ...rest\n                       }: WithTranslation & PoolTableProps<T>) => {\n        const [filterBy, setFilterBy] = React.useState<string>('');\n        const [page, setPage] = React.useState(rest?.page ? rest.page : 1);\n        const [totalData, setTotalData] = React.useState<Row<T>[]>(rawData && Array.isArray(rawData) ? rawData : []);\n        let history = useHistory();\n        useDeepCompareEffect(() => {\n            setTotalData(rawData)\n        }, [rawData])\n\n        const defaultArgs: TableProps<any, any> = {\n            rawData,\n            columnMode: columnMode({t, i18n, tReady}, Currency.dollar),\n            generateRows: (rawData: any) => rawData,\n            generateColumns: ({columnsRaw}) => columnsRaw as Column<Row<any>, unknown>[],\n        }\n\n\n        const pageSize = pagination ? pagination.pageSize : 10;\n\n        const getRenderData = React.useCallback(() => pagination\n            ? totalData.slice((page - 1) * pageSize, page * pageSize)\n            : totalData\n            , [page, pageSize, pagination, totalData])\n\n        const updateData = React.useCallback(({TableType, filterBy}) => {\n            if (TableType === 'filter') {\n                setPage(1)\n            }\n            // @ts-ignore\n            let newData = rawData.filter((row) => {\n                if (row && row.coinAInfo) {\n                    // @ts-ignore\n                    return RegExp(filterBy, 'ig').test(row.coinAInfo.simpleName) || RegExp(filterBy, 'ig').test(row.coinBInfo.simpleName);\n                }\n            })\n            setTotalData(newData);\n        }, [rawData]);\n        const doUpdate = (filterBy: string) => {\n            updateData({TableType: TableType.filter, filterBy})\n        }\n\n        const handleFilterChange = React.useCallback(debounce(doUpdate, wait), [doUpdate]);\n\n\n        const _handlePageChange = React.useCallback((page: number) => {\n            setPage(page);\n            updateData({TableType: TableType.page, currPage: page})\n            handlePageChange(page);\n        }, [updateData,handlePageChange])\n\n        return <TableStyled flex={1} flexDirection={'column'} display={'flex'}>\n            {showFilter && <Box display={'flex'} margin={3}>\n              <OutlinedInput\n                  {...{\n                      placeholder: t('labelFilter'),\n                      value: filterBy,\n                      onChange: (event: any) => {\n                          setFilterBy(event.currentTarget?.value);\n                          handleFilterChange(event.currentTarget?.value);\n                      }\n                  }\n                  }\n                  key={'search'}\n                  className={'search'}\n                  aria-label={'search'}\n                  startAdornment={<InputAdornment position=\"start\">\n                      <SearchIcon/>\n                  </InputAdornment>}\n              />\n            </Box>}\n            <Table {...{\n                ...defaultArgs, t, i18n, tReady, ...rest,\n                rawData: getRenderData(),\n                onRowClick: (_rowIdx: any, row: any) => {\n                    history && history.push(`/liquidity/pools/coinPair/${row?.coinAInfo?.simpleName + '-' + row?.coinBInfo?.simpleName}`)\n                }\n                // sortMethod: (sortedRows: Row<T>[], sortColumn) => {\n                //     switch (sortColumn) {\n                //         case 'pools':\n                //             sortedRows = sortedRows.sort((a, b) => a?.coinAInfo?.simpleName.localeCompare(b?.coinAInfo?.simpleName))\n                //             break;\n                //         case 'liquidity':\n                //             sortedRows = sortedRows.sort((a, b) => a.amountDollar - b.amountDollar)\n                //             break;\n                //         case 'volume24':\n                //             sortedRows = sortedRows.sort((a, b) => a.tradeFloat.priceDollar - b.tradeFloat.priceDollar)\n                //             break;\n                //         case 'reward24':\n                //             sortedRows = sortedRows.sort((a, b) => a.tradeFloat.reward - b.tradeFloat.reward)\n                //             break;\n                //         case 'APY':\n                //             sortedRows = sortedRows.sort((a, b) => a.tradeFloat.APY - b.tradeFloat.APY)\n                //             break;\n                //         default:\n                //             break;\n                //     }\n                //     return sortedRows;\n                // }\n            }}/>\n            {pagination && rawData && rawData.length > 0 && (\n                <TablePagination page={page} pageSize={pageSize} total={totalData.length}\n                                 onPageChange={_handlePageChange}/>\n            )}\n        </TableStyled>\n    })\n","export default __webpack_public_path__ + \"static/media/loading.02349004.svg\";","import { Theme } from '@material-ui/core';\nimport { ColorBaseInterface } from './css/color-lib';\n\nexport enum ThemeType {\n    dark = 'dark',\n    light = 'light',\n}\n\nexport type ThemeKeys = keyof typeof ThemeType;\nexport type LoopringTheme = Theme & {\n    colorBase: ColorBaseInterface\n    fontDefault: { h1: string, h2: string, h3: string, h4: string, h5: string, h6: string, body1:string},\n    unit: number,\n    mode: ThemeKeys,\n    border: {\n        defaultBorder: string,\n        defaultRadius: string,\n        defaultFrame: (props: { d_W?: number, d_R?: number, c_key?: 'primary' | 'selected' | 'blur' | 'focus' | string }) => string,\n        borderConfig: (props: { d_W?: number, c_key?: 'primary' | 'selected' | 'blur' | 'focus' | string }) => string,\n    }\n}\ndeclare module '@emotion/react' {\n    export interface Theme extends LoopringTheme {\n    }\n}\n\n","import { SvgIcon, SvgIconProps } from \"@material-ui/core\";\n\nexport const DropDownIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox={\"0 0 24 24\"}>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.14645 10.1464C8.34171 9.95118 8.6583 9.95118 8.85356 10.1464L11.5 12.7929L14.1465 10.1464C14.3417 9.95118 14.6583 9.95118 14.8536 10.1464C15.0488 10.3417 15.0488 10.6583 14.8536 10.8536L11.8536 13.8536C11.6583 14.0488 11.3417 14.0488 11.1465 13.8536L8.14645 10.8536C7.95118 10.6583 7.95118 10.3417 8.14645 10.1464Z\" />\n    </SvgIcon>\n}\n\n\n\nexport const CalendarIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox={\"0 0 24 24\"}>\n        <path\n            d=\"M11.9636 16.4545C12.0895 16.4545 12.2125 16.4173 12.3172 16.3473C12.4218 16.2774 12.5034 16.178 12.5516 16.0617C12.5997 15.9455 12.6123 15.8175 12.5878 15.694C12.5632 15.5706 12.5026 15.4572 12.4136 15.3682C12.3247 15.2792 12.2113 15.2186 12.0878 15.194C11.9643 15.1695 11.8364 15.1821 11.7201 15.2302C11.6038 15.2784 11.5044 15.36 11.4345 15.4646C11.3646 15.5693 11.3273 15.6923 11.3273 15.8182C11.3273 15.9869 11.3944 16.1488 11.5137 16.2682C11.633 16.3875 11.7949 16.4545 11.9636 16.4545ZM15.1455 16.4545C15.2713 16.4545 15.3943 16.4173 15.499 16.3473C15.6036 16.2774 15.6852 16.178 15.7334 16.0617C15.7816 15.9455 15.7939 15.8175 15.7696 15.694C15.745 15.5706 15.6845 15.4572 15.5954 15.3682C15.5065 15.2792 15.3931 15.2186 15.2696 15.194C15.1462 15.1695 15.0182 15.1821 14.9019 15.2302C14.7857 15.2784 14.6863 15.36 14.6163 15.4646C14.5465 15.5693 14.5091 15.6923 14.5091 15.8182C14.5091 15.9869 14.5762 16.1488 14.6955 16.2682C14.8148 16.3875 14.9767 16.4545 15.1455 16.4545ZM15.1455 13.9091C15.2713 13.9091 15.3943 13.8718 15.499 13.8019C15.6036 13.7319 15.6852 13.6325 15.7334 13.5163C15.7816 13.4 15.7939 13.272 15.7696 13.1486C15.745 13.0251 15.6845 12.9117 15.5954 12.8228C15.5065 12.7337 15.3931 12.6731 15.2696 12.6486C15.1462 12.624 15.0182 12.6366 14.9019 12.6848C14.7857 12.733 14.6863 12.8145 14.6163 12.9192C14.5465 13.0238 14.5091 13.1469 14.5091 13.2727C14.5091 13.4415 14.5762 13.6034 14.6955 13.7227C14.8148 13.842 14.9767 13.9091 15.1455 13.9091ZM11.9636 13.9091C12.0895 13.9091 12.2125 13.8718 12.3172 13.8019C12.4218 13.7319 12.5034 13.6325 12.5516 13.5163C12.5997 13.4 12.6123 13.272 12.5878 13.1486C12.5632 13.0251 12.5026 12.9117 12.4136 12.8228C12.3247 12.7337 12.2113 12.6731 12.0878 12.6486C11.9643 12.624 11.8364 12.6366 11.7201 12.6848C11.6038 12.733 11.5044 12.8145 11.4345 12.9192C11.3646 13.0238 11.3273 13.1469 11.3273 13.2727C11.3273 13.4415 11.3944 13.6034 11.5137 13.7227C11.633 13.842 11.7949 13.9091 11.9636 13.9091ZM16.4182 6.27273H15.7818V5.63636C15.7818 5.46759 15.7148 5.30573 15.5954 5.18638C15.4761 5.06705 15.3142 5 15.1455 5C14.9767 5 14.8148 5.06705 14.6955 5.18638C14.5762 5.30573 14.5091 5.46759 14.5091 5.63636V6.27273H9.41819V5.63636C9.41819 5.46759 9.35111 5.30573 9.2318 5.18638C9.11248 5.06705 8.95059 5 8.78182 5C8.61306 5 8.45117 5.06705 8.33185 5.18638C8.21253 5.30573 8.14546 5.46759 8.14546 5.63636V6.27273H7.5091C7.00281 6.27273 6.5172 6.47386 6.15918 6.83189C5.80116 7.18991 5.60001 7.6755 5.60001 8.18182V17.0909C5.60001 17.5972 5.80116 18.0828 6.15918 18.4408C6.5172 18.7988 7.00281 19 7.5091 19H16.4182C16.9247 19 17.4103 18.7988 17.7679 18.4408C18.1262 18.0828 18.3273 17.5972 18.3273 17.0909V8.18182C18.3273 7.6755 18.1262 7.18991 17.7679 6.83189C17.4103 6.47386 16.9247 6.27273 16.4182 6.27273ZM17.0546 17.0909C17.0546 17.2597 16.9877 17.4216 16.8681 17.5409C16.7491 17.6602 16.5868 17.7273 16.4182 17.7273H7.5091C7.34033 17.7273 7.17844 17.6602 7.05912 17.5409C6.93981 17.4216 6.87273 17.2597 6.87273 17.0909V11.3636H17.0546V17.0909ZM17.0546 10.0909H6.87273V8.18182C6.87273 8.01304 6.93981 7.85118 7.05912 7.73184C7.17844 7.6125 7.34033 7.54545 7.5091 7.54545H8.14546V8.18182C8.14546 8.35059 8.21253 8.51245 8.33185 8.6318C8.45117 8.75113 8.61306 8.81818 8.78182 8.81818C8.95059 8.81818 9.11248 8.75113 9.2318 8.6318C9.35111 8.51245 9.41819 8.35059 9.41819 8.18182V7.54545H14.5091V8.18182C14.5091 8.35059 14.5762 8.51245 14.6955 8.6318C14.8148 8.75113 14.9767 8.81818 15.1455 8.81818C15.3142 8.81818 15.4761 8.75113 15.5954 8.6318C15.7148 8.51245 15.7818 8.35059 15.7818 8.18182V7.54545H16.4182C16.5868 7.54545 16.7491 7.6125 16.8681 7.73184C16.9877 7.85118 17.0546 8.01304 17.0546 8.18182V10.0909ZM8.78182 13.9091C8.9077 13.9091 9.03071 13.8718 9.13539 13.8019C9.24001 13.7319 9.32159 13.6325 9.36976 13.5163C9.41793 13.4 9.43053 13.272 9.40597 13.1486C9.3814 13.0251 9.32082 12.9117 9.2318 12.8228C9.14283 12.7337 9.02943 12.6731 8.90598 12.6486C8.78252 12.624 8.65455 12.6366 8.53829 12.6848C8.42203 12.733 8.32263 12.8145 8.25269 12.9192C8.18282 13.0238 8.14546 13.1469 8.14546 13.2727C8.14546 13.4415 8.21253 13.6034 8.33185 13.7227C8.45117 13.842 8.61306 13.9091 8.78182 13.9091ZM8.78182 16.4545C8.9077 16.4545 9.03071 16.4173 9.13539 16.3473C9.24001 16.2774 9.32159 16.178 9.36976 16.0617C9.41793 15.9455 9.43053 15.8175 9.40597 15.694C9.3814 15.5706 9.32082 15.4572 9.2318 15.3682C9.14283 15.2792 9.02943 15.2186 8.90598 15.194C8.78252 15.1695 8.65455 15.1821 8.53829 15.2302C8.42203 15.2784 8.32263 15.36 8.25269 15.4646C8.18282 15.5693 8.14546 15.6923 8.14546 15.8182C8.14546 15.9869 8.21253 16.1488 8.33185 16.2682C8.45117 16.3875 8.61306 16.4545 8.78182 16.4545Z\"\n            />\n    </SvgIcon>\n}\n\n\nexport const SearchIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M6.40001 11.3C6.40001 8.59383 8.59383 6.40001 11.3 6.40001C14.0063 6.40001 16.2001 8.59383 16.2001 11.3C16.2001 12.6187 15.6792 13.8158 14.8319 14.6966C14.8066 14.7158 14.7823 14.7369 14.7593 14.76C14.7362 14.7831 14.715 14.8074 14.6958 14.8326C13.8151 15.6795 12.6184 16.2001 11.3 16.2001C8.59383 16.2001 6.40001 14.0063 6.40001 11.3ZM15.2321 16.2228C14.1544 17.0847 12.7875 17.6001 11.3 17.6001C7.82032 17.6001 5 14.7795 5 11.3C5 7.82063 7.82032 5 11.3 5C14.7798 5 17.6001 7.82063 17.6001 11.3C17.6001 12.7878 17.0844 14.1552 16.2221 15.233L18.7941 17.805C19.0678 18.0784 19.0678 18.5216 18.7941 18.795C18.5211 19.0683 18.0773 19.0683 17.8043 18.795L15.2321 16.2228Z\"\n              />\n    </SvgIcon>\n}\n\n\nexport const StarIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"14\" height=\"13\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M12.1264 5C12.3801 5 12.6112 5.14391 12.7238 5.37123L14.6266 9.22695L18.8832 9.84905C19.1337 9.8857 19.3421 10.0615 19.4201 10.3027C19.4987 10.5438 19.4327 10.8083 19.2516 10.9852L16.1725 13.9844L16.8991 18.2214C16.9418 18.4712 16.8392 18.7238 16.6341 18.8728C16.4289 19.0218 16.1565 19.0415 15.9327 18.9234L12.1264 16.9218L8.32 18.9234C8.09621 19.0415 7.8238 19.0218 7.61866 18.8728C7.41352 18.7238 7.31096 18.4712 7.35358 18.2214L8.08023 13.9844L5.00116 10.9852C4.82 10.8083 4.75406 10.5438 4.83265 10.3027C4.91058 10.0615 5.11905 9.8857 5.36948 9.84905L9.62608 9.22695L11.5289 5.37123C11.6415 5.14391 11.8726 5 12.1264 5Z\"\n              />\n\n    </SvgIcon>\n}\n\n\nexport const DownloadIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"12\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M7 5C5.89543 5 5 5.89543 5 7V17C5 18.1046 5.89543 19 7 19H17C18.1046 19 19 18.1046 19 17V7C19 5.89543 18.1046 5 17 5H7ZM12.6576 14.0489L14.5273 12.4543C14.5763 12.4125 14.633 12.3808 14.6943 12.3609C14.7555 12.3411 14.8201 12.3335 14.8843 12.3386C14.9484 12.3438 15.011 12.3615 15.0683 12.3909C15.1256 12.4202 15.1765 12.4605 15.2182 12.5096C15.3026 12.6085 15.3442 12.7368 15.334 12.8664C15.3238 12.9959 15.2625 13.1161 15.1636 13.2005L12.778 15.2354C12.5932 15.3929 12.3629 15.4713 12.1326 15.4713C11.8974 15.4713 11.6622 15.3894 11.476 15.2256L9.16674 13.1956C8.96304 13.0171 8.94344 12.707 9.12194 12.504C9.30044 12.3003 9.61054 12.2807 9.81354 12.4592L11.6776 14.0972V8.99C11.6776 8.7191 11.8967 8.5 12.1676 8.5C12.4385 8.5 12.6576 8.7191 12.6576 8.99V14.0489Z\"\n              />\n    </SvgIcon>\n}\n\n\nexport const NotificationIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"12\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M9.21404 6.3049C10.0497 5.46939 11.1826 5 12.3645 5C13.5464 5 14.6793 5.46939 15.515 6.3049C16.35 7.14042 16.8198 8.27363 16.8198 9.45522C16.8198 11.5891 17.2761 12.9141 17.6968 13.6852C17.9081 14.0724 18.1137 14.3264 18.2562 14.4771C18.3282 14.5527 18.3842 14.6028 18.4179 14.631C18.4297 14.6408 18.4388 14.6479 18.4448 14.6526C18.4475 14.6547 18.4496 14.6563 18.451 14.6575L18.4529 14.6588C18.6814 14.8156 18.782 15.1022 18.7018 15.3678C18.6203 15.6362 18.3734 15.8198 18.0927 15.8198H6.63638C6.35571 15.8198 6.10876 15.6362 6.02729 15.3678C5.9471 15.1022 6.04765 14.8156 6.27614 14.6588L6.27806 14.6575C6.27946 14.6563 6.28154 14.6547 6.28426 14.6526C6.29025 14.6479 6.29935 14.6408 6.31116 14.631C6.34489 14.6028 6.4009 14.5527 6.47282 14.4771C6.61539 14.3264 6.82096 14.0724 7.03227 13.6852C7.45297 12.9141 7.90931 11.5891 7.90931 9.45522C7.90931 8.27362 8.37901 7.14042 9.21404 6.3049ZM12.3008 19C11.1962 19 10.3008 18.1046 10.3008 17H14.3008C14.3008 18.1046 13.4054 19 12.3008 19Z\"\n              />\n    </SvgIcon>\n}\n\nexport const ThemeDarkIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M19.1227 12.7035C19.0191 12.6176 18.8931 12.5626 18.7592 12.5448C18.6253 12.527 18.49 12.547 18.367 12.6027C17.6062 12.951 16.7784 13.1302 15.9413 13.1281C14.3931 13.1262 12.9083 12.5123 11.8106 11.4202C10.713 10.3281 10.0918 8.84633 10.0825 7.29805C10.0861 6.8128 10.1458 6.32964 10.2624 5.85852C10.2869 5.73295 10.2775 5.60307 10.2358 5.48227C10.1933 5.36146 10.1199 5.2541 10.022 5.17125C9.92486 5.08839 9.80682 5.03303 9.68087 5.01087C9.55491 4.98871 9.42535 5.00056 9.30515 5.04519C8.17656 5.55256 7.19625 6.33843 6.4549 7.32898C5.71355 8.31954 5.23634 9.48225 5.06792 10.7079C4.8995 11.9335 5.0456 13.1819 5.49185 14.3357C5.9381 15.4895 6.67082 16.5108 7.62019 17.3038C8.57027 18.0968 9.70533 18.6353 10.9203 18.8688C12.1352 19.1023 13.3898 19.0232 14.5659 18.6387C15.742 18.2544 16.8008 17.5774 17.6429 16.6714C18.4857 15.7653 19.0838 14.66 19.3818 13.4592C19.4178 13.3217 19.4128 13.1766 19.3667 13.0421C19.3206 12.9076 19.2357 12.7898 19.1227 12.7035Z\"\n            />\n    </SvgIcon>\n}\n\nexport const ThemeLightIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" focusable=\"false\" viewBox=\"0 0 24 24\"\n                    aria-hidden=\"true\">\n        <path\n            d=\"M7.548 15.5L7.051 15.997C6.92062 16.1279 6.84745 16.3057 6.84745 16.4905C6.84745 16.6753 6.92062 16.8531 7.051 16.984C7.18215 17.1142 7.35957 17.1877 7.5445 17.1877C7.72943 17.1877 7.90685 17.1142 8.038 16.984L8.535 16.487C8.64968 16.3533 8.70961 16.1811 8.7028 16.0047C8.69599 15.8283 8.62296 15.6617 8.4983 15.5364C8.37363 15.4118 8.20651 15.339 8.03034 15.332C7.85417 15.3257 7.68191 15.3852 7.548 15.5ZM7.1 12C7.1 11.8144 7.02626 11.6363 6.89498 11.505C6.7637 11.3738 6.58565 11.3 6.4 11.3H5.7C5.51435 11.3 5.3363 11.3738 5.20503 11.505C5.07375 11.6363 5 11.8144 5 12C5 12.1856 5.07375 12.3637 5.20503 12.495C5.3363 12.6262 5.51435 12.7 5.7 12.7H6.4C6.58565 12.7 6.7637 12.6262 6.89498 12.495C7.02626 12.3637 7.1 12.1856 7.1 12ZM12 7.1C12.1856 7.1 12.3637 7.02622 12.495 6.89497C12.6262 6.76372 12.7 6.58564 12.7 6.4V5.7C12.7 5.51436 12.6262 5.33628 12.495 5.20503C12.3637 5.07378 12.1856 5 12 5C11.8144 5 11.6363 5.07378 11.505 5.20503C11.3738 5.33628 11.3 5.51436 11.3 5.7V6.4C11.3 6.58564 11.3738 6.76372 11.505 6.89497C11.6363 7.02622 11.8144 7.1 12 7.1ZM7.548 8.535C7.67838 8.66429 7.85436 8.73723 8.038 8.738C8.13013 8.73856 8.22145 8.72085 8.30674 8.68606C8.39202 8.6512 8.46959 8.59989 8.535 8.535C8.66538 8.40382 8.73856 8.22644 8.73856 8.0415C8.73856 7.85656 8.66538 7.67918 8.535 7.548L8.038 7.051C7.90409 6.93634 7.73184 6.87642 7.55567 6.88321C7.37949 6.89 7.21237 6.96301 7.08771 7.08768C6.96304 7.21235 6.89001 7.37951 6.8832 7.55563C6.8764 7.73182 6.93633 7.90409 7.051 8.038L7.548 8.535ZM15.948 8.738C16.1316 8.73723 16.3076 8.66429 16.438 8.535L16.935 8.038C17.0083 7.97528 17.0678 7.898 17.1098 7.8112C17.1519 7.72433 17.1754 7.62976 17.1792 7.53337C17.1829 7.43691 17.1666 7.3408 17.1314 7.25099C17.0963 7.16111 17.0429 7.07956 16.9747 7.01138C16.9064 6.94313 16.8249 6.88972 16.735 6.85458C16.6452 6.81937 16.5491 6.80313 16.4527 6.80684C16.3562 6.81055 16.2617 6.83421 16.1748 6.87621C16.088 6.91821 16.0108 6.97771 15.948 7.051L15.5 7.548C15.3697 7.67918 15.2964 7.85656 15.2964 8.0415C15.2964 8.22644 15.3697 8.40382 15.5 8.535C15.6234 8.65778 15.7881 8.73016 15.962 8.738H15.948ZM18.3 11.3H17.6C17.4144 11.3 17.2363 11.3738 17.105 11.505C16.9738 11.6363 16.9 11.8144 16.9 12C16.9 12.1856 16.9738 12.3637 17.105 12.495C17.2363 12.6262 17.4144 12.7 17.6 12.7H18.3C18.4856 12.7 18.6637 12.6262 18.795 12.495C18.9262 12.3637 19 12.1856 19 12C19 11.8144 18.9262 11.6363 18.795 11.505C18.6637 11.3738 18.4856 11.3 18.3 11.3ZM12 16.9C11.8144 16.9 11.6363 16.9735 11.505 17.1051C11.3738 17.236 11.3 17.4145 11.3 17.6V18.3C11.3 18.4855 11.3738 18.664 11.505 18.7949C11.6363 18.9265 11.8144 19 12 19C12.1856 19 12.3637 18.9265 12.495 18.7949C12.6262 18.664 12.7 18.4855 12.7 18.3V17.6C12.7 17.4145 12.6262 17.236 12.495 17.1051C12.3637 16.9735 12.1856 16.9 12 16.9ZM16.452 15.5C16.319 15.4258 16.1656 15.3971 16.0148 15.4188C15.8641 15.4398 15.7243 15.5091 15.6168 15.6169C15.5092 15.7247 15.4395 15.864 15.4184 16.0145C15.3974 16.1657 15.426 16.319 15.5 16.452L15.997 16.949C16.1282 17.0792 16.3056 17.1527 16.4905 17.1527C16.6754 17.1527 16.8528 17.0792 16.984 16.949C17.1144 16.8181 17.1876 16.6403 17.1876 16.4555C17.1876 16.2707 17.1144 16.0929 16.984 15.962L16.452 15.5ZM12 8.15C11.2385 8.15 10.4942 8.37582 9.86106 8.79883C9.22793 9.22191 8.73446 9.82314 8.44307 10.5266C8.15167 11.2301 8.07543 12.0043 8.22398 12.7511C8.37253 13.4979 8.73921 14.1839 9.27764 14.7224C9.81607 15.2606 10.5021 15.6274 11.2489 15.7758C11.9957 15.9249 12.7699 15.8486 13.4734 15.5567C14.1769 15.2655 14.7781 14.7721 15.2012 14.1389C15.6242 13.5058 15.85 12.7615 15.85 12C15.8482 10.9795 15.4419 10.0013 14.7203 9.27966C13.9987 8.5581 13.0205 8.15182 12 8.15Z\"\n            />\n    </SvgIcon>\n}\n\n\nexport const CheckIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.7722 7.22781C19.0759 7.53155 19.0759 8.02401 18.7722 8.32775L10.2166 16.8833C9.9129 17.187 9.42044 17.187 9.11669 16.8833L5.22781 12.9944C4.92406 12.6907 4.92406 12.1982 5.22781 11.8945C5.53155 11.5907 6.02401 11.5907 6.32775 11.8945L9.66667 15.2334L13.6695 11.2306L17.6723 7.22781C17.976 6.92406 18.4685 6.92406 18.7722 7.22781Z\"/>\n    </SvgIcon>\n}\n\n\nexport const CheckBoxIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M18.3333 6.66667V18.3333H6.66667V6.66667H18.3333ZM18.3333 5H6.66667C5.75 5 5 5.75 5 6.66667V18.3333C5 19.25 5.75 20 6.66667 20H18.3333C19.25 20 20 19.25 20 18.3333V6.66667C20 5.75 19.25 5 18.3333 5Z\"\n             />\n\n    </SvgIcon>\n}\n\n\nexport const CheckedIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.3333 18.3333V6.66667H6.66667V18.3333H18.3333ZM6.66667 5H18.3333C19.25 5 20 5.75 20 6.66667V18.3333C20 19.25 19.25 20 18.3333 20H6.66667C5.75 20 5 19.25 5 18.3333V6.66667C5 5.75 5.75 5 6.66667 5ZM16.8386 10.1726C17.164 9.84715 17.164 9.31951 16.8386 8.99408C16.5132 8.66864 15.9855 8.66864 15.6601 8.99408L10.8327 13.8215L9.3386 12.3274C9.01317 12.002 8.48553 12.002 8.16009 12.3274C7.83466 12.6528 7.83466 13.1805 8.16009 13.5059L10.2434 15.5893C10.5689 15.9147 11.0965 15.9147 11.4219 15.5893L16.8386 10.1726Z\" />\n    </SvgIcon>\n}\n\n\n\nexport const PendingIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"11\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path d=\"M12 5C10.6155 5 9.26215 5.41054 8.11101 6.17971C6.95987 6.94888 6.06266 8.04213 5.53285 9.32121C5.00303 10.6003 4.86441 12.0078 5.13451 13.3656C5.4046 14.7235 6.07129 15.9708 7.05026 16.9497C8.02922 17.9287 9.2765 18.5954 10.6344 18.8655C11.9922 19.1356 13.3997 18.997 14.6788 18.4672C15.9579 17.9373 17.0511 17.0401 17.8203 15.889C18.5895 14.7378 19 13.3845 19 12C19 11.0807 18.8189 10.1705 18.4672 9.32121C18.1154 8.47194 17.5998 7.70026 16.9497 7.05025C16.2997 6.40024 15.5281 5.88463 14.6788 5.53284C13.8295 5.18106 12.9193 5 12 5ZM12 17.6C10.8924 17.6 9.80972 17.2716 8.88881 16.6562C7.96789 16.0409 7.25013 15.1663 6.82628 14.143C6.40243 13.1198 6.29153 11.9938 6.50761 10.9075C6.72368 9.8212 7.25703 8.82337 8.0402 8.0402C8.82338 7.25703 9.8212 6.72368 10.9075 6.5076C11.9938 6.29153 13.1198 6.40242 14.143 6.82627C15.1663 7.25012 16.0409 7.96789 16.6562 8.88881C17.2716 9.80972 17.6 10.8924 17.6 12C17.6 13.4852 17.01 14.9096 15.9598 15.9598C14.9096 17.01 13.4852 17.6 12 17.6ZM14.17 12.441L12.7 11.594V8.5C12.7 8.31435 12.6263 8.1363 12.495 8.00502C12.3637 7.87375 12.1857 7.8 12 7.8C11.8144 7.8 11.6363 7.87375 11.505 8.00502C11.3738 8.1363 11.3 8.31435 11.3 8.5V12C11.3 12 11.3 12.056 11.3 12.084C11.3041 12.1322 11.316 12.1795 11.335 12.224C11.3494 12.2655 11.3682 12.3054 11.391 12.343C11.4102 12.3828 11.4336 12.4203 11.461 12.455L11.573 12.546L11.636 12.609L13.456 13.659C13.5627 13.7195 13.6834 13.7508 13.806 13.75C13.961 13.7511 14.112 13.7007 14.2352 13.6067C14.3585 13.5128 14.4471 13.3806 14.4871 13.2308C14.5272 13.0811 14.5164 12.9223 14.4565 12.7794C14.3965 12.6364 14.2909 12.5174 14.156 12.441H14.17Z\" />\n\n    </SvgIcon>\n}\n\n\n\nexport const AlertIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M11.7012 14.8143C11.5632 14.8143 11.4283 14.8552 11.3136 14.9319C11.1989 15.0085 11.1095 15.1175 11.0567 15.2449C11.0039 15.3724 10.9901 15.5127 11.017 15.648C11.0439 15.7833 11.1103 15.9076 11.2079 16.0052C11.3055 16.1027 11.4298 16.1692 11.5651 16.1961C11.7004 16.223 11.8407 16.2092 11.9681 16.1564C12.0956 16.1036 12.2046 16.0142 12.2812 15.8995C12.3579 15.7847 12.3988 15.6499 12.3988 15.5119C12.3988 15.3269 12.3253 15.1494 12.1945 15.0186C12.0636 14.8878 11.8862 14.8143 11.7012 14.8143ZM19.1446 15.8398L13.5289 6.07335C13.3474 5.74793 13.0823 5.47687 12.761 5.28818C12.4397 5.09949 12.0738 5 11.7012 5C11.3286 5 10.9627 5.09949 10.6414 5.28818C10.3201 5.47687 10.055 5.74793 9.87347 6.07335L4.29266 15.8398C4.10486 16.1565 4.00395 16.5172 4.00011 16.8853C3.99628 17.2535 4.08965 17.6162 4.27081 17.9368C4.45197 18.2574 4.7145 18.5245 5.03189 18.7111C5.34929 18.8978 5.71031 18.9974 6.07852 18.9999H17.3238C17.695 19.0036 18.0605 18.9084 18.3827 18.7243C18.705 18.5401 18.9725 18.2736 19.1578 17.952C19.3431 17.6304 19.4396 17.2652 19.4372 16.8941C19.4349 16.5229 19.3339 16.159 19.1446 15.8398ZM17.9377 17.235C17.8766 17.3438 17.7874 17.4342 17.6794 17.4967C17.5714 17.5593 17.4486 17.5918 17.3238 17.5907H6.07852C5.95372 17.5918 5.83094 17.5593 5.72296 17.4967C5.61498 17.4342 5.52577 17.3438 5.46463 17.235C5.4034 17.1289 5.37117 17.0086 5.37117 16.8862C5.37117 16.7637 5.4034 16.6434 5.46463 16.5374L11.0454 6.77095C11.104 6.65668 11.1929 6.56079 11.3025 6.49382C11.412 6.42686 11.5379 6.39143 11.6663 6.39143C11.7947 6.39143 11.9206 6.42686 12.0301 6.49382C12.1397 6.56079 12.2286 6.65668 12.2872 6.77095L17.9029 16.5374C17.9721 16.6419 18.0118 16.7631 18.018 16.8884C18.0241 17.0136 17.9964 17.1381 17.9377 17.2489V17.235ZM11.7012 9.23348C11.5162 9.23348 11.3387 9.30698 11.2079 9.43781C11.0771 9.56863 11.0036 9.74607 11.0036 9.93108V12.7215C11.0036 12.9065 11.0771 13.0839 11.2079 13.2148C11.3387 13.3456 11.5162 13.4191 11.7012 13.4191C11.8862 13.4191 12.0636 13.3456 12.1945 13.2148C12.3253 13.0839 12.3988 12.9065 12.3988 12.7215V9.93108C12.3988 9.74607 12.3253 9.56863 12.1945 9.43781C12.0636 9.30698 11.8862 9.23348 11.7012 9.23348Z\"\n            />\n    </SvgIcon>\n}\n\n// export const LoadingIcon = (props: SvgIconProps) => {\n//     return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n//     >\n//         <path\n//             d=\"M12 24C10.3805 24 8.80781 23.6836 7.32891 23.0578C5.89922 22.4531 4.61719 21.5859 3.51563 20.4844C2.41406 19.3828 1.54688 18.1008 0.942188 16.6711C0.316406 15.1922 0 13.6195 0 12C0 11.5336 0.377344 11.1562 0.84375 11.1562C1.31016 11.1562 1.6875 11.5336 1.6875 12C1.6875 13.3922 1.95938 14.7422 2.49844 16.0148C3.01875 17.243 3.76172 18.3469 4.70859 19.2938C5.65547 20.2406 6.75938 20.9859 7.9875 21.5039C9.25781 22.0406 10.6078 22.3125 12 22.3125C13.3922 22.3125 14.7422 22.0406 16.0148 21.5016C17.243 20.9813 18.3469 20.2383 19.2938 19.2914C20.2406 18.3445 20.9859 17.2406 21.5039 16.0125C22.0406 14.7422 22.3125 13.3922 22.3125 12C22.3125 10.6078 22.0406 9.25781 21.5016 7.98516C20.983 6.75998 20.2325 5.64659 19.2914 4.70625C18.3521 3.76387 17.2385 3.01321 16.0125 2.49609C14.7422 1.95938 13.3922 1.6875 12 1.6875C11.5336 1.6875 11.1563 1.31016 11.1563 0.84375C11.1563 0.377344 11.5336 0 12 0C13.6195 0 15.1922 0.316406 16.6711 0.942188C18.1008 1.54688 19.3828 2.41406 20.4844 3.51562C21.5859 4.61719 22.4508 5.90156 23.0555 7.32891C23.6813 8.80781 23.9977 10.3805 23.9977 12C23.9977 13.6195 23.6813 15.1922 23.0555 16.6711C22.4531 18.1008 21.5859 19.3828 20.4844 20.4844C19.3828 21.5859 18.0984 22.4508 16.6711 23.0555C15.1922 23.6836 13.6195 24 12 24Z\">\n//         </path>\n//     </SvgIcon>\n// }\nexport const CloseIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M16.7071 8.70711C17.0976 8.31658 17.0976 7.68342 16.7071 7.29289C16.3166 6.90237 15.6834 6.90237 15.2929 7.29289L12 10.5858L8.70711 7.29289C8.31658 6.90237 7.68342 6.90237 7.29289 7.29289C6.90237 7.68342 6.90237 8.31658 7.29289 8.70711L10.5858 12L7.29289 15.2929C6.90237 15.6834 6.90237 16.3166 7.29289 16.7071C7.68342 17.0976 8.31658 17.0976 8.70711 16.7071L12 13.4142L15.2929 16.7071C15.6834 17.0976 16.3166 17.0976 16.7071 16.7071C17.0976 16.3166 17.0976 15.6834 16.7071 15.2929L13.4142 12L16.7071 8.70711Z\"/>\n\n    </SvgIcon>\n}\n\n\nexport const LockIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox=\"0 0 24 24\" aria-hidden=\"true\" data-testid=\"LockIcon\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M12.3641 6.27273C11.689 6.27273 11.0416 6.54091 10.5642 7.01827C10.0869 7.49564 9.81868 8.14309 9.81868 8.81818V10.7273H14.9096V8.81818C14.9096 8.14309 14.6414 7.49564 14.164 7.01827C13.6867 6.54091 13.0392 6.27273 12.3641 6.27273ZM9.18232 12L9.1831 12H15.5452L15.546 12L15.5467 12H16.8182C17.1696 12 17.4545 12.2849 17.4545 12.6364V17.0909C17.4545 17.4424 17.1696 17.7273 16.8182 17.7273H7.90909C7.55764 17.7273 7.27273 17.4424 7.27273 17.0909V12.6364C7.27273 12.2849 7.55764 12 7.90909 12H9.18153L9.18232 12ZM16.1823 8.81818V10.7273H16.8182C17.8725 10.7273 18.7273 11.582 18.7273 12.6364V17.0909C18.7273 18.1453 17.8725 19 16.8182 19H7.90909C6.85473 19 6 18.1453 6 17.0909V12.6364C6 11.582 6.85473 10.7273 7.90909 10.7273H8.54595V8.81818C8.54595 7.80554 8.94822 6.83437 9.66427 6.11832C10.3803 5.40227 11.3515 5 12.3641 5C13.3768 5 14.3479 5.40227 15.064 6.11832C15.78 6.83437 16.1823 7.80554 16.1823 8.81818ZM13.001 13.9088C13.001 13.5574 12.7161 13.2725 12.3646 13.2725C12.0132 13.2725 11.7283 13.5574 11.7283 13.9088V15.8179C11.7283 16.1694 12.0132 16.4543 12.3646 16.4543C12.7161 16.4543 13.001 16.1694 13.001 15.8179V13.9088Z\"\n              />\n\n    </SvgIcon>\n}\n\n\nexport const UnLockIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox=\"0 0 24 24\" aria-hidden=\"true\" data-testid=\"LockIcon\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M15.612 6.10622C14.9369 6.10622 14.2894 6.3744 13.8121 6.85177C13.3347 7.32914 13.0665 7.97658 13.0665 8.65168V10.5608H15.4842C16.5386 10.5608 17.3933 11.4155 17.3933 12.4699V16.9244C17.3933 17.9788 16.5386 18.8335 15.4842 18.8335H6.57511C5.52074 18.8335 4.66602 17.9788 4.66602 16.9244V12.4699C4.66602 11.4155 5.52074 10.5608 6.57511 10.5608H11.7938V8.65168C11.7938 7.63903 12.1961 6.66786 12.9121 5.95182C13.6282 5.23577 14.5993 4.8335 15.612 4.8335C16.6246 4.8335 17.5958 5.23577 18.3118 5.95182C19.0279 6.66786 19.4302 7.63903 19.4302 8.65168V9.54246H18.1574V8.65168C18.1574 7.97658 17.8892 7.32914 17.4119 6.85177C16.9345 6.3744 16.2871 6.10622 15.612 6.10622ZM12.4294 11.8335H6.57511C6.22365 11.8335 5.93874 12.1184 5.93874 12.4699V16.9244C5.93874 17.2759 6.22365 17.5608 6.57511 17.5608H15.4842C15.8357 17.5608 16.1206 17.2759 16.1206 16.9244V12.4699C16.1206 12.1184 15.8357 11.8335 15.4842 11.8335H12.4309C12.4307 11.8335 12.4304 11.8335 12.4301 11.8335C12.4299 11.8335 12.4296 11.8335 12.4294 11.8335ZM18.7938 11.8335L18.781 11.8334H18.8065L18.7938 11.8335ZM11.0306 13.106C11.3821 13.106 11.667 13.3909 11.667 13.7423V15.6514C11.667 16.0029 11.3821 16.2878 11.0306 16.2878C10.6792 16.2878 10.3943 16.0029 10.3943 15.6514V13.7423C10.3943 13.3909 10.6792 13.106 11.0306 13.106Z\"\n              />\n\n    </SvgIcon>\n}\n\n\nexport const ActiveIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M18.775 8.17266L17.7828 7.18603L18.775 6.19941C18.9066 6.06765 18.9805 5.88894 18.9805 5.7026C18.9805 5.51626 18.9066 5.33755 18.775 5.20579C18.6435 5.07402 18.465 5 18.2789 5C18.0928 5 17.9144 5.07402 17.7828 5.20579L10.4179 12.581C9.69537 12.1036 8.82166 11.9119 7.96602 12.0428C7.11039 12.1737 6.33375 12.6181 5.7866 13.2897C5.23944 13.9613 4.96073 14.8124 5.00447 15.6781C5.0482 16.5438 5.41127 17.3624 6.02332 17.9753C6.63536 18.5882 7.45282 18.9517 8.31728 18.9955C9.18174 19.0393 10.0317 18.7602 10.7024 18.2123C11.3731 17.6644 11.8168 16.8867 11.9475 16.0299C12.0783 15.173 11.8868 14.2981 11.4101 13.5746L14.8201 10.1529L15.8053 11.1465C15.8706 11.2114 15.948 11.2627 16.0332 11.2975C16.1183 11.3323 16.2095 11.35 16.3014 11.3494C16.3934 11.35 16.4846 11.3323 16.5697 11.2975C16.6548 11.2627 16.7323 11.2114 16.7976 11.1465C16.863 11.0815 16.915 11.0041 16.9505 10.9188C16.986 10.8335 17.0042 10.7421 17.0042 10.6497C17.0042 10.5573 16.986 10.4659 16.9505 10.3806C16.915 10.2953 16.863 10.218 16.7976 10.1529L15.8053 9.20127L16.7976 8.20764L17.7828 9.20127C17.8481 9.26612 17.9255 9.31743 18.0107 9.35225C18.0958 9.38707 18.187 9.40472 18.2789 9.40419C18.3709 9.40472 18.462 9.38707 18.5472 9.35225C18.6323 9.31743 18.7098 9.26612 18.775 9.20127C18.846 9.13574 18.9026 9.05622 18.9413 8.9677C18.98 8.87918 19 8.7836 19 8.68696C19 8.59033 18.98 8.49474 18.9413 8.40622C18.9026 8.31771 18.846 8.23818 18.775 8.17266V8.17266ZM8.49626 17.5981C8.08166 17.5981 7.67636 17.475 7.33163 17.2443C6.9869 17.0136 6.71821 16.6858 6.55955 16.3022C6.40089 15.9186 6.35937 15.4965 6.44026 15.0893C6.52114 14.6821 6.7208 14.3081 7.01397 14.0145C7.30714 13.7209 7.68066 13.521 8.0873 13.44C8.49394 13.359 8.91543 13.4006 9.29848 13.5595C9.68152 13.7183 10.0089 13.9874 10.2393 14.3326C10.4696 14.6778 10.5925 15.0837 10.5925 15.4989C10.5925 16.0556 10.3717 16.5896 9.97856 16.9832C9.58543 17.3769 9.05223 17.5981 8.49626 17.5981Z\"/>\n    </SvgIcon>\n}\n\n// export const TaskIcon = (props: SvgIconProps) => {\n//     return <SvgIcon {...props} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"\n//                     data-testid=\"TaskAltIcon\">\n//         <path\n//             d=\"M22 5.18L10.59 16.6l-4.24-4.24 1.41-1.41 2.83 2.83 10-10L22 5.18zm-2.21 5.04c.13.57.21 1.17.21 1.78 0 4.42-3.58 8-8 8s-8-3.58-8-8 3.58-8 8-8c1.58 0 3.04.46 4.28 1.25l1.44-1.44C16.1 2.67 14.13 2 12 2 6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10c0-1.19-.22-2.33-.6-3.39l-1.61 1.61z\"></path>\n//     </SvgIcon>\n// }\n\n\nexport const ReverseIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.41602 6.62412C9.76067 6.39435 9.8538 5.9287 9.62403 5.58405C9.39427 5.23941 8.92862 5.14628 8.58397 5.37604L5.58397 7.37604C5.30898 7.55937 5.1864 7.9011 5.28218 8.21742C5.37795 8.53374 5.6695 8.75008 6 8.75008H14.5C16.5711 8.75008 18.25 10.429 18.25 12.5001H19.75C19.75 9.60058 17.3995 7.25008 14.5 7.25008H8.47708L9.41602 6.62412ZM15.584 18.8759C15.2393 19.1056 15.1462 19.5713 15.376 19.9159C15.6057 20.2606 16.0714 20.3537 16.416 20.124L19.416 18.124C19.691 17.9406 19.8136 17.5989 19.7178 17.2826C19.622 16.9663 19.3305 16.7499 19 16.7499H10.5C8.42894 16.7499 6.75 15.071 6.75 12.9999H5.25C5.25 15.8994 7.60051 18.2499 10.5 18.2499H16.5229L15.584 18.8759Z\" />\n    </SvgIcon>\n}\n\n\nexport const ProToLiteIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"20\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.75836 13.7023H1.82227V4.54492H5.43485C7.51426 4.54492 8.71619 5.8282 8.71619 7.64805C8.71619 9.47661 7.49102 10.7337 5.38546 10.7337H3.75836V13.7023ZM3.75836 6.12844V9.18218H5.07263C6.18158 9.18218 6.72202 8.55555 6.72202 7.64805C6.72202 6.7357 6.18158 6.12844 5.06391 6.12844H3.75836ZM11.6013 13.7025H9.69715V6.83469H11.5431V8.03274H11.6148C11.8657 7.18335 12.4962 6.73591 13.2652 6.73591C13.4569 6.73591 13.6942 6.76302 13.8637 6.8037V8.49376C13.6855 8.43565 13.3233 8.39111 13.0589 8.39111C12.2192 8.39111 11.6013 8.97222 11.6013 9.81676V13.7025ZM17.3902 13.8359C19.4735 13.8359 20.7703 12.4102 20.7703 10.295C20.7703 8.16715 19.4735 6.74537 17.3902 6.74537C15.3069 6.74537 14.0101 8.16715 14.0101 10.295C14.0101 12.4102 15.3069 13.8359 17.3902 13.8359ZM17.3989 12.3608C16.4381 12.3608 15.9461 11.4805 15.9461 10.2814C15.9461 9.08337 16.4381 8.19814 17.3989 8.19814C18.3423 8.19814 18.8343 9.08337 18.8343 10.2814C18.8343 11.4805 18.3423 12.3608 17.3989 12.3608ZM3.93144 16.6079C3.39682 16.6079 2.96292 17.0418 2.96292 17.5764C2.96292 18.111 3.39682 18.5449 3.93144 18.5449H17.4907C18.0253 18.5449 18.4592 18.111 18.4592 17.5764C18.4592 17.0418 18.0253 16.6079 17.4907 16.6079H3.93144Z\" />\n    </SvgIcon>\n}\n\n\n\nexport const RefreshIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n        <path\n            d=\"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"></path>\n    </SvgIcon>\n}\nexport const ExchangeIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.9993 5.99984C8.68564 5.99984 5.99935 8.68613 5.99935 11.9998C5.99935 15.3135 8.68564 17.9998 11.9993 17.9998C15.3131 17.9998 17.9993 15.3135 17.9993 11.9998C17.9993 8.68613 15.3131 5.99984 11.9993 5.99984ZM4.66602 11.9998C4.66602 7.94975 7.94926 4.6665 11.9993 4.6665C16.0494 4.6665 19.3327 7.94975 19.3327 11.9998C19.3327 16.0499 16.0494 19.3332 11.9993 19.3332C7.94926 19.3332 4.66602 16.0499 4.66602 11.9998ZM8.86128 11.5288C9.12163 11.2684 9.54374 11.2684 9.80409 11.5288L11.334 13.0587V9.33317C11.334 8.96498 11.6325 8.6665 12.0007 8.6665C12.3688 8.6665 12.6673 8.96498 12.6673 9.33317V13.0561L14.1946 11.5288C14.455 11.2684 14.8771 11.2684 15.1374 11.5288C15.3978 11.7891 15.3978 12.2112 15.1374 12.4716L12.4931 15.1159C12.3995 15.2184 12.2742 15.2917 12.1327 15.3201C11.9209 15.3631 11.6922 15.3025 11.5279 15.1382L8.86128 12.4716C8.60093 12.2112 8.60093 11.7891 8.86128 11.5288Z\" />\n    </SvgIcon>\n}\n\n\n\n\n// export const ClockIcon = (props: SvgIconProps) => {\n//     return <SvgIcon {...props} width=\"13\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\"\n//     >\n//         <path\n//             d=\"M6.53256 0.166504C5.37883 0.166504 4.25102 0.508623 3.29173 1.1496C2.33244 1.79057 1.58477 2.70161 1.14326 3.76752C0.701746 4.83342 0.586227 6.00631 0.811307 7.13786C1.03639 8.26942 1.59196 9.30882 2.40777 10.1246C3.22357 10.9404 4.26297 11.496 5.39453 11.7211C6.52608 11.9462 7.69897 11.8306 8.76488 11.3891C9.83078 10.9476 10.7418 10.2 11.3828 9.24066C12.0238 8.28138 12.3659 7.15356 12.3659 5.99984C12.3659 5.23379 12.215 4.47525 11.9219 3.76752C11.6287 3.05978 11.199 2.41672 10.6573 1.87505C10.1157 1.33337 9.47261 0.903692 8.76488 0.61054C8.05714 0.317388 7.2986 0.166504 6.53256 0.166504ZM6.53256 10.6665C5.60958 10.6665 4.70732 10.3928 3.93989 9.88003C3.17246 9.36725 2.57433 8.63842 2.22112 7.78569C1.86791 6.93297 1.77549 5.99466 1.95556 5.08942C2.13562 4.18417 2.58008 3.35265 3.23272 2.70001C3.88537 2.04736 4.71689 1.6029 5.62213 1.42284C6.52738 1.24278 7.46569 1.33519 8.31841 1.6884C9.17113 2.04161 9.89997 2.63975 10.4127 3.40718C10.9255 4.17461 11.1992 5.07686 11.1992 5.99984C11.1992 7.23751 10.7076 8.4245 9.83239 9.29967C8.95722 10.1748 7.77023 10.6665 6.53256 10.6665ZM8.34089 6.36734L7.11589 5.6615V3.08317C7.11589 2.92846 7.05443 2.78009 6.94503 2.67069C6.83564 2.5613 6.68727 2.49984 6.53256 2.49984C6.37785 2.49984 6.22947 2.5613 6.12008 2.67069C6.01068 2.78009 5.94922 2.92846 5.94922 3.08317V5.99984C5.94922 5.99984 5.94922 6.0465 5.94922 6.06984C5.95268 6.11003 5.96252 6.14941 5.97839 6.1865C5.9904 6.22111 6.00604 6.25435 6.02506 6.28567C6.04102 6.31883 6.06058 6.35013 6.08339 6.379L6.17672 6.45484L6.22922 6.50734L7.74589 7.38234C7.83479 7.43273 7.93537 7.45888 8.03756 7.45817C8.16672 7.45907 8.29252 7.41708 8.39525 7.33879C8.49797 7.26049 8.57181 7.15031 8.60517 7.02553C8.63854 6.90075 8.62954 6.76843 8.5796 6.64931C8.52966 6.53019 8.4416 6.43102 8.32922 6.36734H8.34089Z\"\n//         />\n//     </SvgIcon>\n// }\n\nexport const EmptyIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"89\" height=\"111\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M55.3825 11.456C54.4289 11.456 53.5664 10.8019 53.3413 9.83333L51.6759 2.68333C51.4132 1.55472 52.1149 0.427377 53.2429 0.164584C54.3715 -0.0982088 55.499 0.603461 55.7618 1.73157L57.4271 8.8822C57.6898 10.0108 56.9886 11.1382 55.8601 11.4009C55.7035 11.4373 55.5432 11.4558 55.3825 11.456ZM78.7304 29.896C78.5923 29.896 78.4527 29.8828 78.3125 29.8541L71.116 28.4009C69.9807 28.1717 69.246 27.0652 69.4749 25.9295C69.7047 24.7937 70.8111 24.0594 71.9467 24.2886L79.1434 25.7417C80.2785 25.9708 81.0134 27.0779 80.7843 28.2132C80.5827 29.209 79.7082 29.896 78.7304 29.896ZM67.2589 15.4749C66.6548 15.4749 66.0553 15.2156 65.6404 14.7137C64.9029 13.8203 65.0288 12.4978 65.9216 11.7602L72.0927 6.66192C72.9859 5.92368 74.3078 6.04975 75.046 6.94299C75.7842 7.83585 75.6576 9.15807 74.7649 9.89643L68.5938 14.9946C68.2185 15.3054 67.7463 15.4753 67.2589 15.4749ZM87.5219 108.139H38.0479L72.7267 95.5689C74.875 94.7905 76.5915 93.2218 77.5605 91.152C78.5291 89.082 78.6333 86.7588 77.8548 84.6102L75.6065 78.4086C75.3305 77.6462 74.488 77.252 73.7259 77.5286C72.9635 77.8046 72.5694 78.6471 72.8459 79.4092L75.0935 85.6107C75.6047 87.0219 75.5364 88.5474 74.9004 89.9073C74.2643 91.2665 73.1367 92.2968 71.7255 92.8081L32.6996 106.954C31.2877 107.465 29.7622 107.397 28.4029 106.76C27.0436 106.124 26.0133 104.997 25.502 103.586L3.93877 44.094C2.88316 41.1817 4.39377 37.9527 7.30684 36.8971L46.333 22.7509C47.7442 22.2397 49.2697 22.3086 50.6295 22.9447C51.9888 23.5807 53.0191 24.7083 53.53 26.1172L62.338 50.5036C62.6135 51.2666 63.4548 51.6615 64.2182 51.386C64.9805 51.1105 65.3752 50.269 65.0997 49.5065L56.2909 25.1182C55.5123 22.9699 53.9438 21.2534 51.874 20.2844C49.8039 19.3158 47.4806 19.2116 45.3323 19.9901L6.30569 34.1357C1.87032 35.7436 -0.429812 40.6597 1.17754 45.0948L22.7409 104.586C23.7898 107.48 26.2462 109.463 29.059 110.047C29.2266 110.157 29.4225 110.215 29.6227 110.214H30.3581C30.5028 110.222 30.6474 110.227 30.7932 110.227C30.9384 110.227 31.0836 110.222 31.2294 110.214H87.5222C88.0958 110.214 88.5602 109.75 88.5602 109.176C88.5602 108.603 88.0954 108.139 87.5219 108.139ZM77.3346 45.3143L75.0539 44.0761C74.143 43.5827 72.8388 44.2253 72.1398 45.5129L53.1571 80.5007C53.0726 80.6565 53.0289 80.8283 53.0346 80.9861L53.1588 84.8571C53.0997 84.8609 53.0406 84.873 52.9827 84.8952L47.086 87.0927C46.9296 87.1509 46.8027 87.2689 46.7333 87.4207C46.6639 87.5725 46.6577 87.7457 46.7159 87.902C46.7742 88.0584 46.8922 88.1853 47.044 88.2547C47.1958 88.3241 47.3689 88.3303 47.5253 88.272L53.2009 86.1568L53.2024 86.202C53.2164 86.6288 53.5673 86.8192 53.9323 86.5978L58.3962 83.8951C58.5314 83.8133 58.6519 83.6836 58.7364 83.5278L77.719 48.5395C78.4175 47.2528 78.2456 45.8083 77.3346 45.3143ZM34.8992 91.6357L30.5716 93.2484C30.4942 93.2772 30.4232 93.321 30.3627 93.3773C30.3022 93.4336 30.2534 93.5012 30.219 93.5764C30.1847 93.6516 30.1655 93.7327 30.1625 93.8153C30.1596 93.8979 30.1729 93.9803 30.2018 94.0577C30.2601 94.2141 30.3781 94.3409 30.5299 94.4102C30.6817 94.4796 30.8548 94.4859 31.0111 94.4276L35.3386 92.8148C35.416 92.786 35.4871 92.7422 35.5476 92.6859C35.6081 92.6296 35.6569 92.562 35.6913 92.4868C35.7257 92.4117 35.7449 92.3305 35.7479 92.2479C35.7508 92.1653 35.7375 92.0829 35.7087 92.0055C35.6799 91.928 35.6361 91.8569 35.5798 91.7963C35.5235 91.7358 35.4558 91.6869 35.3806 91.6526C35.3054 91.6182 35.2242 91.599 35.1415 91.5961C35.0589 91.5932 34.9766 91.6067 34.8992 91.6357ZM43.9408 88.2648L38.0441 90.4629C37.9667 90.4917 37.8956 90.5355 37.8351 90.5918C37.7746 90.6481 37.7258 90.7157 37.6914 90.7909C37.6571 90.8661 37.6379 90.9472 37.6349 91.0298C37.6319 91.1124 37.6453 91.1948 37.6742 91.2722C37.7324 91.4286 37.8504 91.5554 38.0022 91.6248C38.154 91.6941 38.3271 91.7004 38.4835 91.6422L44.3802 89.4443C44.4577 89.4155 44.5288 89.3717 44.5893 89.3154C44.6499 89.2591 44.6987 89.1915 44.7331 89.1163C44.7674 89.0411 44.7866 88.9598 44.7896 88.8772C44.7925 88.7946 44.7791 88.7122 44.7501 88.6348C44.7213 88.5573 44.6775 88.4862 44.6213 88.4257C44.565 88.3652 44.4973 88.3163 44.4221 88.2819C44.3469 88.2476 44.2657 88.2284 44.1831 88.2254C44.1005 88.2225 44.0183 88.2359 43.9408 88.2648ZM26.5847 78.538C26.4562 78.5381 26.3308 78.4989 26.2253 78.4256C26.1198 78.3524 26.0392 78.2486 25.9943 78.1283C25.9362 77.9719 25.9425 77.7988 26.0118 77.6471C26.0812 77.4953 26.2079 77.3773 26.3642 77.3189L30.0646 75.9397C30.2204 75.8839 30.3919 75.8918 30.542 75.9615C30.692 76.0313 30.8086 76.1573 30.8664 76.3124C30.9242 76.4675 30.9186 76.6391 30.8508 76.79C30.783 76.941 30.6584 77.0592 30.5041 77.119L26.8038 78.4982C26.7337 78.5246 26.6595 78.538 26.5847 78.538ZM33.4295 75.9865C33.1743 75.9865 32.9342 75.8296 32.8398 75.5762C32.8109 75.4988 32.7976 75.4164 32.8005 75.3339C32.8035 75.2513 32.8227 75.1701 32.857 75.0949C32.8914 75.0197 32.9402 74.9521 33.0007 74.8958C33.0612 74.8395 33.1322 74.7956 33.2096 74.7668L39.1063 72.5687C39.1837 72.5398 39.2661 72.5265 39.3487 72.5295C39.4312 72.5325 39.5124 72.5517 39.5876 72.586C39.6627 72.6203 39.7304 72.6692 39.7867 72.7296C39.843 72.7901 39.8868 72.8611 39.9156 72.9385C39.9446 73.016 39.958 73.0984 39.9551 73.181C39.9521 73.2636 39.933 73.3448 39.8986 73.42C39.8643 73.4952 39.8154 73.5629 39.7549 73.6192C39.6944 73.6755 39.6233 73.7193 39.5458 73.7481L33.6491 75.9462C33.5789 75.9727 33.5045 75.9864 33.4295 75.9865ZM42.471 72.6165C42.3427 72.6163 42.2175 72.577 42.1121 72.5038C42.0068 72.4306 41.9263 72.327 41.8814 72.2068C41.8525 72.1293 41.8391 72.047 41.842 71.9644C41.8449 71.8818 41.8641 71.8006 41.8985 71.7254C41.9328 71.6502 41.9817 71.5825 42.0422 71.5262C42.1027 71.4699 42.1737 71.4261 42.2512 71.3973L48.1479 69.1986C48.2253 69.1698 48.3077 69.1564 48.3903 69.1594C48.4729 69.1624 48.5541 69.1816 48.6292 69.216C48.7044 69.2503 48.772 69.2991 48.8283 69.3596C48.8846 69.4201 48.9284 69.4911 48.9572 69.5686C48.9862 69.646 48.9996 69.7284 48.9966 69.811C48.9937 69.8936 48.9745 69.9748 48.9402 70.05C48.9058 70.1251 48.857 70.1928 48.7965 70.2491C48.7359 70.3054 48.6649 70.3492 48.5874 70.378L42.6906 72.5761C42.6204 72.6025 42.546 72.6162 42.471 72.6165ZM51.5126 69.2456C51.365 69.2456 51.222 69.1938 51.1088 69.0992C50.9955 69.0045 50.9192 68.8731 50.893 68.7279C50.8668 68.5826 50.8925 68.4328 50.9656 68.3046C51.0388 68.1764 51.1546 68.0779 51.2929 68.0265L57.1895 65.8285C57.2669 65.7996 57.3493 65.7863 57.4319 65.7892C57.5145 65.7922 57.5957 65.8114 57.6709 65.8457C57.746 65.8801 57.8137 65.9289 57.87 65.9894C57.9263 66.0499 57.9701 66.1209 57.999 66.1983C58.0279 66.2758 58.0412 66.3581 58.0383 66.4407C58.0353 66.5233 58.0161 66.6045 57.9818 66.6796C57.9474 66.7548 57.8986 66.8225 57.8381 66.8787C57.7776 66.935 57.7066 66.9788 57.6292 67.0077L51.7324 69.2059C51.6621 69.2321 51.5876 69.2456 51.5126 69.2456Z\"\n        />\n    </SvgIcon>\n}\nexport const ArrowDownIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M9.29 13.71C9.3851 13.801 9.49725 13.8724 9.62 13.92C9.86346 14.02 10.1365 14.02 10.38 13.92C10.5028 13.8724 10.6149 13.801 10.71 13.71L13.71 10.71C13.8983 10.5217 14.0041 10.2663 14.0041 10C14.0041 9.7337 13.8983 9.47831 13.71 9.29C13.5217 9.1017 13.2663 8.99591 13 8.99591C12.7337 8.99591 12.4783 9.1017 12.29 9.29L11 10.59V7C11 6.73479 10.8946 6.48043 10.7071 6.2929C10.5196 6.10536 10.2652 6 10 6C9.73478 6 9.48043 6.10536 9.29289 6.2929C9.10536 6.48043 9 6.73479 9 7V10.59L7.71 9.29C7.61704 9.19628 7.50644 9.12188 7.38458 9.07111C7.26272 9.02034 7.13201 8.99421 7 8.99421C6.86799 8.99421 6.73728 9.02034 6.61542 9.07111C6.49356 9.12188 6.38296 9.19628 6.29 9.29C6.19627 9.38297 6.12188 9.49357 6.07111 9.61543C6.02034 9.73729 5.9942 9.86799 5.9942 10C5.9942 10.132 6.02034 10.2627 6.07111 10.3846C6.12188 10.5064 6.19627 10.617 6.29 10.71L9.29 13.71ZM10 20C11.9778 20 13.9112 19.4135 15.5557 18.3147C17.2002 17.2159 18.4819 15.6541 19.2388 13.8268C19.9957 11.9996 20.1937 9.98891 19.8079 8.0491C19.422 6.10929 18.4696 4.32746 17.0711 2.92894C15.6725 1.53041 13.8907 0.578004 11.9509 0.192152C10.0111 -0.193701 8.00043 0.00433284 6.17317 0.761209C4.3459 1.51809 2.78412 2.79981 1.6853 4.4443C0.58649 6.08879 0 8.02219 0 10C0 12.6522 1.05357 15.1957 2.92893 17.0711C3.85752 17.9997 4.95991 18.7363 6.17317 19.2388C7.38642 19.7413 8.68678 20 10 20ZM10 2C11.5823 2 13.129 2.4692 14.4446 3.34825C15.7602 4.2273 16.7855 5.47673 17.391 6.93854C17.9965 8.40035 18.155 10.0089 17.8463 11.5607C17.5376 13.1126 16.7757 14.538 15.6569 15.6569C14.538 16.7757 13.1126 17.5376 11.5607 17.8463C10.0089 18.155 8.40034 17.9965 6.93853 17.391C5.47672 16.7855 4.22729 15.7602 3.34824 14.4446C2.46919 13.129 2 11.5823 2 10C2 7.87827 2.84285 5.84344 4.34315 4.34315C5.84344 2.84286 7.87827 2 10 2Z\"\n        />\n    </SvgIcon>\n}\nexport const ViewIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"22\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.93033 12.5303C4.79608 12.3225 4.68731 12.1418 4.60557 12C4.68731 11.8582 4.79608 11.6775 4.93033 11.4697C5.27608 10.9342 5.78833 10.2217 6.45358 9.51299C7.79683 8.08049 9.67482 6.75 11.9998 6.75C14.3248 6.75 16.2028 8.08049 17.5461 9.51299C18.2113 10.2217 18.7236 10.9342 19.0693 11.4697C19.2036 11.6775 19.3123 11.8582 19.3941 12C19.3123 12.1418 19.2036 12.3225 19.0693 12.5303C18.7236 13.0658 18.2113 13.7783 17.5461 14.487C16.2028 15.9195 14.3248 17.25 11.9998 17.25C9.67482 17.25 7.79683 15.9195 6.45358 14.487C5.78833 13.7783 5.27608 13.0658 4.93033 12.5303ZM20.2498 12C20.9203 11.6648 20.9203 11.664 20.9203 11.664L20.2498 12ZM20.9203 11.664C21.0261 11.8755 21.0261 12.1245 20.9203 12.3352L20.2498 12C20.9203 12.3352 20.9203 12.3368 20.9203 12.3368L20.9188 12.3382L20.9166 12.3435L20.9083 12.36C20.9008 12.3743 20.8911 12.3938 20.8776 12.4185C20.874 12.4252 20.8702 12.4322 20.8662 12.4397C20.8409 12.4868 20.8071 12.5497 20.7643 12.6255C20.6653 12.801 20.5198 13.0485 20.3293 13.3447C19.9483 13.9342 19.3821 14.7217 18.6411 15.513C17.1718 17.0805 14.9248 18.75 11.9998 18.75C9.07482 18.75 6.82781 17.0805 5.35856 15.513C4.61756 14.7217 4.05133 13.9342 3.67033 13.3447C3.47983 13.0485 3.33432 12.801 3.23532 12.6255C3.19261 12.5498 3.15884 12.4869 3.13351 12.4398C3.12948 12.4323 3.12567 12.4252 3.12207 12.4185C3.11274 12.4014 3.10522 12.3868 3.09898 12.3747C3.09618 12.3693 3.09365 12.3644 3.09133 12.36L3.08307 12.3435L3.08082 12.3382L3.07931 12.3352C2.97356 12.1245 2.97356 11.8755 3.07931 11.6648L3.74982 12C3.07932 11.6648 3.07931 11.6632 3.07931 11.6632L3.08082 11.6618L3.08307 11.6565L3.09133 11.64C3.09365 11.6356 3.09618 11.6307 3.09898 11.6253C3.10522 11.6132 3.11274 11.5986 3.12207 11.5815C3.12567 11.5748 3.12948 11.5677 3.13351 11.5602C3.15884 11.5131 3.19261 11.4502 3.23532 11.3745C3.33432 11.199 3.47983 10.9515 3.67033 10.6553C4.05133 10.0658 4.61756 9.27826 5.35856 8.48701C6.82781 6.91951 9.07482 5.25 11.9998 5.25C14.9248 5.25 17.1718 6.91951 18.6411 8.48701C19.3821 9.27826 19.9483 10.0658 20.3293 10.6553C20.5198 10.9515 20.6653 11.199 20.7643 11.3745C20.8071 11.4503 20.8409 11.5132 20.8662 11.5603C20.8702 11.5678 20.874 11.5748 20.8776 11.5815C20.8869 11.5986 20.8944 11.6132 20.9007 11.6253C20.9035 11.6307 20.906 11.6356 20.9083 11.64L20.9166 11.6565L20.9188 11.6618L20.9203 11.664ZM10.4985 12C10.4985 11.1712 11.1698 10.5 11.9985 10.5C12.8273 10.5 13.4985 11.1712 13.4985 12C13.4985 12.8287 12.8273 13.5 11.9985 13.5C11.1698 13.5 10.4985 12.8287 10.4985 12ZM11.9985 9C10.3418 9 8.99854 10.3433 8.99854 12C8.99854 13.6567 10.3418 15 11.9985 15C13.6553 15 14.9985 13.6567 14.9985 12C14.9985 10.3433 13.6553 9 11.9985 9Z\" />\n    </SvgIcon>\n}\n\nexport const HideIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"22\" height=\"19\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.28041 3.21993C3.98792 2.92669 3.51243 2.92669 3.21993 3.21993C2.92669 3.51243 2.92669 3.98792 3.21993 4.28041L6.4264 7.48688C5.06987 8.65452 3.93775 10.0636 3.08932 11.6453C2.97383 11.8598 2.97008 12.1178 3.07957 12.3353L3.75007 12C3.07958 12.3353 3.07957 12.3368 3.07957 12.3368L3.08108 12.3383L3.08333 12.3435L3.09159 12.36C3.09391 12.3644 3.09645 12.3693 3.09924 12.3748C3.10548 12.3868 3.11301 12.4014 3.12233 12.4185C3.12593 12.4252 3.12975 12.4323 3.13377 12.4398C3.1591 12.4869 3.19287 12.5498 3.23558 12.6255C3.33457 12.801 3.48008 13.0485 3.67058 13.3447C4.05157 13.9342 4.61779 14.7217 5.35878 15.5129C6.828 17.0804 9.07496 18.7499 11.9999 18.7499H12.0119C13.5636 18.7243 15.0721 18.2651 16.3694 17.4299L19.7196 20.7801C20.0121 21.0733 20.4876 21.0733 20.7801 20.7801C21.0733 20.4876 21.0733 20.0121 20.7801 19.7196L10.9412 9.88069C10.9401 9.8795 10.939 9.87816 10.9376 9.8771L4.28041 3.21993ZM10.5959 6.91062C11.0557 6.80262 11.5259 6.74938 11.9984 6.75013H11.9999C14.3248 6.75013 16.2028 8.08059 17.546 9.51306C18.2113 10.2218 18.7235 10.9343 19.0692 11.4698C19.2027 11.6768 19.3115 11.8568 19.3932 11.9985C19.0055 12.6735 18.5578 13.3132 18.056 13.9095C17.789 14.2267 17.8303 14.7 18.1468 14.9662C18.464 15.2332 18.9373 15.192 19.2035 14.8755C19.859 14.0962 20.4312 13.251 20.9112 12.3533C21.0259 12.1388 21.029 11.8823 20.9202 11.6648L20.2496 11.9998C20.9201 11.6646 20.9202 11.6633 20.9202 11.6633L20.9187 11.6618L20.9165 11.6565L20.9082 11.64C20.9007 11.6258 20.891 11.6063 20.8775 11.5815C20.8739 11.5748 20.87 11.5677 20.866 11.5602C20.8407 11.5131 20.8069 11.4502 20.7642 11.3745C20.6652 11.199 20.5197 10.9515 20.3292 10.6553C19.9482 10.0658 19.382 9.27833 18.641 8.4871C17.1719 6.92052 14.9252 5.25045 12.0014 5.25016L11.9999 6.00014V5.25016H12.0007C11.4127 5.24866 10.8269 5.31616 10.2539 5.44966C9.85044 5.54416 9.59994 5.94764 9.69444 6.35113C9.78894 6.75462 10.1924 7.00512 10.5959 6.91062ZM19.574 12.3255C19.5768 12.3311 19.5277 12.242 19.4798 12.1552C19.4385 12.0802 19.3981 12.007 19.3932 11.9985C19.4165 12.039 19.4375 12.0758 19.457 12.1103C19.4997 12.186 19.5312 12.2445 19.5515 12.2835L19.574 12.3255ZM4.93055 12.5303C4.79705 12.3233 4.68905 12.144 4.60731 12.0023C5.36179 10.6935 6.33752 9.52582 7.49024 8.55084L9.40196 10.4626C9.32771 10.5818 9.26095 10.7063 9.2032 10.8353C9.03971 11.2035 8.95121 11.6003 8.94446 12.003C8.93696 12.4058 9.01121 12.8063 9.16196 13.1797C9.31271 13.5532 9.53769 13.8922 9.82268 14.1772C10.1077 14.4622 10.4467 14.6872 10.8202 14.838C11.1937 14.9887 11.5942 15.063 11.9969 15.0555C12.3996 15.0487 12.7964 14.9602 13.1646 14.7967C13.2936 14.739 13.4181 14.6722 13.5374 14.598L15.2781 16.3394C14.2829 16.9139 13.1526 17.2297 11.9939 17.2499C9.6712 17.2477 7.79549 15.9187 6.45377 14.487C5.78854 13.7782 5.27629 13.0657 4.93055 12.5303ZM10.4437 12.03C10.4467 11.877 10.4729 11.7263 10.5209 11.5815L12.4184 13.479C12.2737 13.527 12.1229 13.5532 11.9699 13.5562C11.7689 13.5592 11.5687 13.5225 11.3819 13.4467C11.1952 13.3717 11.0257 13.2593 10.8832 13.1168C10.7407 12.9743 10.6282 12.8048 10.5532 12.618C10.4774 12.4313 10.4407 12.231 10.4437 12.03Z\" />\n    </SvgIcon>\n}\n\nexport const CopyIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M7.69167 15.6456V14.9164H6.9625V6.89583H6.96159V14.9167H7.69076V15.6456H7.69167ZM15.7116 7.62477H15.7125V6.16644H6.23333V6.16667H15.7116V7.62477ZM7.925 14.6831H7.19583V7.12893H14.75V7.8581H15.9458V5.93311H6V15.8789H7.925V14.6831ZM18.1341 8.43297H8.50081V18.0663H18.1341V8.43297ZM8.73414 8.66653H17.8999V17.833H17.9008V8.66631H8.73414V8.66653ZM16.9623 16.8945H9.67261V9.60476H16.9623V16.8945ZM9.43927 9.37166V17.1278H17.1948V17.1281H9.43836V9.37166H9.43927Z\"\n              fill=\"white\"/>\n    </SvgIcon>\n}\n\nexport const LinkIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M15.3434 8.17098L9.3423 14.1939L10.1718 15.0204L16.1689 9.00159V11.0984H17.3398V7H13.2414V8.17098H15.3434ZM11.6839 9.34213V8.17115H7V17.539H16.3678V12.8551H15.1969V16.368H8.17098V9.34213H11.6839Z\"/>\n    </SvgIcon>\n}\n\nexport const QRIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"10\" height=\"10\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.66666 19L5 19V14.3333H9.66666V19ZM8.5 15.5H6.16667V17.8333H8.5L8.5 15.5ZM5 5H9.66666V9.66666H5V5ZM6.16667 8.5H8.5V6.16667H6.16667V8.5ZM14.3333 19V14.3333H19V19H14.3333ZM17.8333 15.5H15.5V17.8333H17.8333V15.5ZM14.3333 5H19L19 9.66666H14.3333V5ZM15.5 8.5L17.8333 8.5V6.16667H15.5V8.5ZM11.4167 19H12.5833V17.8333H11.4167V19ZM6.75 12.5833H7.91666V11.4167H6.75V12.5833ZM16.0833 12H17.25V10.8333H16.0833V12ZM14.3333 13.1667H17.25V12H14.3333V13.1667ZM12.5833 16.9583H11.4167V13.75H9.66666V9.66666H10.8333V12.5833H12.5833V13.1667H14.3333V14.3333H12.5833V16.9583ZM10.8333 9.66666H12V6.16667H10.8333V9.66666Z\" />\n    </SvgIcon>\n}\n\n\nexport const LinkedIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"26\" height=\"26\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <g clipRule=\"url(#clip0)\">\n            <path\n                d=\"M4.92202 13.0861C4.90829 11.3762 6.28708 9.97508 7.99703 9.96135L11.9969 9.92924L11.9816 8.0293L7.98177 8.06142C5.22186 8.08358 2.99992 10.3415 3.02208 13.1014C3.04424 15.8613 5.30215 18.0833 8.06207 18.0611L12.0619 18.029L12.0467 16.129L8.04681 16.1612C6.33687 16.1749 4.93575 14.7961 4.92202 13.0861ZM9.02992 14.0532L17.0297 13.989L17.0136 11.989L9.01386 12.0533L9.02992 14.0532ZM17.9814 7.98112L13.9816 8.01324L13.9968 9.91318L17.9967 9.88106C19.7066 9.86733 21.1078 11.2461 21.1215 12.9561C21.1352 14.666 19.7564 16.0671 18.0465 16.0809L14.0466 16.113L14.0619 18.0129L18.0617 17.9808C20.8217 17.9586 23.0436 15.7007 23.0214 12.9408C22.9993 10.1809 20.7414 7.95896 17.9814 7.98112Z\"\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"24\" height=\"24\" transform=\"translate(0.925781 1.11768) rotate(-0.460053)\"/>\n            </clipPath>\n        </defs>\n    </SvgIcon>\n}\nexport const PoolsIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.1837 4.58978C16.964 5.02344 18.5432 6.5898 19.0818 8.481L19.5047 9.85554H14.5687L14.3576 9.74997C14.2268 9.67155 14.043 9.50334 13.9837 9.4264C13.9494 9.37355 13.8994 9.28032 13.8821 9.24117C13.8503 9.16525 13.8353 9.1024 13.83 9.07917C13.8177 9.02562 13.8126 8.98263 13.8111 8.97045C13.8072 8.93784 13.8057 8.911 13.8052 8.90236C13.8039 8.87933 13.8033 8.85681 13.8029 8.84183C13.8021 8.80857 13.8015 8.76579 13.8011 8.71872C13.8003 8.6228 13.8 8.48895 13.8 8.33196C13.8 8.01708 13.8013 7.59909 13.8031 7.18271C13.8048 6.76601 13.807 6.34966 13.8088 6.03757L13.8201 4.2002L15.1837 4.58978ZM14.8658 8.85255C14.8658 8.85255 14.862 7.53879 14.867 6.56298L14.8728 5.52073L14.9708 5.54855C15.2857 5.63792 15.5869 5.75892 15.8705 5.90804C16.7007 6.34449 17.3813 7.02187 17.8202 7.85255C17.9713 8.13857 18.0938 8.44276 18.1838 8.76155V8.85255H14.8658ZM14.8728 5.52055C14.8728 5.52055 14.709 5.47419 14.8728 5.52073L14.8728 5.52055ZM19.39 11.9999C19.39 16.1421 16.0322 19.4999 11.89 19.4999C7.74788 19.4999 4.39001 16.1421 4.39001 11.9999C4.39001 7.85778 7.74788 4.49992 11.89 4.49992C11.9529 4.49992 12.0354 4.49843 12.1257 4.49681C12.3362 4.49301 12.5887 4.48846 12.7324 4.50026V10.9898H19.3226C19.3452 11.1582 19.3736 11.4999 19.3736 11.4999C19.3845 11.6652 19.39 11.8319 19.39 11.9999ZM11.3047 6.20012L11.2067 6.21412C8.45574 6.59912 6.26474 8.82512 6.08274 11.5971C5.85874 15.0201 8.62374 17.8971 12.0397 17.8201C14.9307 17.7571 17.3037 15.5101 17.6817 12.6541L17.6957 12.5491H12.8307C12.0257 12.5491 11.3607 11.9261 11.3047 11.1211V11.0231V6.20012Z\" />\n    </SvgIcon>\n}\n\n\n\n\nexport const MiningIcon = () => {\n    return <SvgIcon width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.0273 3.91406L12.5417 7.20561L14.6093 9.23934L13.4155 10.4331L9.88443 6.34619L6.17153 10.1299L6.11507 10.2038C5.56228 10.9279 5.17112 11.5666 4.91464 12.2357C4.65466 12.914 4.56657 13.538 4.51544 14.1637C4.43 15.2073 4.7132 16.6663 5.19215 18.3728L5.4352 19.2387L6.31357 19.4323C7.9572 19.7945 9.31738 19.9979 10.2753 19.9468C11.4947 19.8817 13.2507 19.5252 14.3719 18.4041L18.2341 14.5419L14.1279 11.1897L15.3498 9.9678L17.3579 11.943L20.8738 8.70782L16.0273 3.91406ZM17.3924 9.87288L14.7031 7.22764L16.0032 5.99998L18.7012 8.66861L17.3924 9.87288ZM10.4825 13.9032L11.793 11.7387L12.1095 11.2159L9.81426 8.55934L7.30734 11.1141C6.50373 12.1667 6.21581 12.8401 6.08541 13.6406C6.05217 13.8446 6.02916 14.0569 6.01046 14.2858C5.94906 15.0348 6.1577 16.262 6.63635 17.9674C8.27181 18.3278 9.45813 18.4883 10.1953 18.4489C11.3011 18.3899 12.5893 18.0654 13.3112 17.3434L16.0001 14.6545L13.365 12.5033L10.4825 13.9032Z\" />\n    </SvgIcon>\n}\n\n\n\n\nexport const MyLiquidityIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.5008 9.5C17.5008 10.7901 17.0566 11.9765 16.3128 12.9145C16.4161 12.9599 16.5174 13.0105 16.6161 13.0664L16.619 13.068C17.1399 13.3657 17.7287 13.5245 18.3286 13.5292C18.8963 13.5274 19.4529 13.3712 19.9387 13.0774L19.9515 13.0699C20.1796 12.938 20.4227 12.8338 20.6756 12.7596L20.6769 12.7592C20.7405 12.7406 20.7942 12.6975 20.8261 12.6394L22.1413 13.3606C21.9182 13.7673 21.5429 14.0688 21.0977 14.1989C20.9616 14.2389 20.8308 14.2947 20.7078 14.3653C19.9895 14.7979 19.1671 15.0274 18.3284 15.0292L18.3218 15.0292V15.0292C17.4637 15.0233 16.6215 14.7968 15.8763 14.3713C15.5989 14.2146 15.2858 14.1323 14.9672 14.1323C14.119 14.6766 13.1115 14.9943 12.0301 14.9999C11.8963 15.011 11.7618 15.0165 11.6269 15.0165C10.7743 15.0165 9.93654 14.7941 9.19629 14.3712C8.91879 14.2146 8.60553 14.1323 8.28686 14.1323C7.97022 14.1323 7.65892 14.2135 7.38275 14.3682C6.64874 14.8043 5.81072 15.0344 4.95686 15.0344C4.10166 15.0344 3.26237 14.8035 2.52755 14.3662C2.40413 14.2953 2.27278 14.2391 2.1362 14.199C1.91583 14.1346 1.71027 14.0275 1.53125 13.8838L2.47034 12.7141C2.49594 12.7347 2.52534 12.75 2.55686 12.7592L2.55817 12.7595C2.81101 12.8338 3.05409 12.938 3.28223 13.0699L3.29127 13.0751L3.29123 13.0752C3.79483 13.3757 4.37038 13.5344 4.95686 13.5344C5.54333 13.5344 6.11888 13.3757 6.62248 13.0752L6.63763 13.0664C6.92079 12.9062 7.22456 12.7888 7.5391 12.7168C6.88579 11.8122 6.5008 10.7011 6.5008 9.5C6.5008 6.46243 8.96323 4 12.0008 4C15.0384 4 17.5008 6.46243 17.5008 9.5ZM16.0008 9.5C16.0008 10.7936 15.3868 11.9437 14.4343 12.6749C14.0432 12.7379 13.6649 12.8699 13.3176 13.0664L13.3176 13.0663L13.3146 13.0681C12.8985 13.306 12.438 13.4526 11.9636 13.4998C9.77158 13.4799 8.0008 11.6967 8.0008 9.5C8.0008 7.29086 9.79166 5.5 12.0008 5.5C14.2099 5.5 16.0008 7.29086 16.0008 9.5ZM4.95686 19.0344C5.81072 19.0344 6.64874 18.8043 7.38275 18.3682C7.65892 18.2135 7.97022 18.1323 8.28686 18.1323C8.60553 18.1323 8.91879 18.2146 9.19629 18.3712C9.93654 18.7941 10.7743 19.0165 11.6269 19.0165C12.4795 19.0165 13.3173 18.7941 14.0576 18.3711C14.3351 18.2145 14.6483 18.1323 14.9669 18.1323C15.2855 18.1323 15.5988 18.2146 15.8763 18.3713C16.6215 18.7968 17.4637 19.0233 18.3218 19.0292V19.0292L18.3284 19.0292C19.1671 19.0274 19.9895 18.7979 20.7078 18.3653C20.8308 18.2947 20.9616 18.2389 21.0977 18.1989C21.5429 18.0688 21.9182 17.7673 22.1413 17.3606L20.8261 16.6394C20.7942 16.6975 20.7405 16.7406 20.6769 16.7592L20.6756 16.7596C20.4227 16.8338 20.1796 16.938 19.9515 17.0699L19.9387 17.0774C19.4529 17.3712 18.8963 17.5274 18.3286 17.5292C17.7287 17.5245 17.1399 17.3657 16.619 17.068L16.6161 17.0664C16.113 16.7818 15.5448 16.6323 14.9669 16.6323C14.3889 16.6323 13.8207 16.7818 13.3176 17.0664L13.3176 17.0663L13.3146 17.0681C12.8006 17.362 12.2189 17.5165 11.6269 17.5165C11.0348 17.5165 10.4531 17.362 9.93915 17.0681L9.93609 17.0664C9.433 16.7818 8.86484 16.6323 8.28686 16.6323C7.70887 16.6323 7.14072 16.7818 6.63763 17.0664L6.62248 17.0752C6.11888 17.3757 5.54333 17.5344 4.95686 17.5344C4.37038 17.5344 3.79483 17.3757 3.29123 17.0752L3.29127 17.0751L3.28223 17.0699C3.05409 16.938 2.81101 16.8338 2.55817 16.7595L2.55686 16.7592C2.52534 16.75 2.49594 16.7347 2.47034 16.7141L1.53125 17.8838C1.71027 18.0275 1.91583 18.1346 2.1362 18.199C2.27278 18.2391 2.40413 18.2953 2.52755 18.3662C3.26237 18.8035 4.10166 19.0344 4.95686 19.0344ZM10.9752 8.417C10.9752 8.73418 11.2618 8.93736 12.1539 9.13427V9.134C13.0457 9.33091 14.0008 9.65436 14.0008 10.6013C14.0008 11.2847 13.3918 11.6616 12.6254 11.7849V12.5H11.4469V11.7765C10.6924 11.6395 10.0477 11.2294 10.0008 10.4993H10.8653C10.9083 10.8928 11.2265 11.1994 12.0363 11.1994C12.9043 11.1994 13.0968 10.8323 13.0968 10.6032C13.0968 10.2939 12.9004 10.0002 11.918 9.80027C10.8222 9.57773 10.0715 9.19427 10.0715 8.42409C10.0715 7.78045 10.6847 7.36045 11.4469 7.22V6.5H12.6263V7.23009C12.9752 7.28903 13.2901 7.44693 13.5193 7.67784C13.7484 7.90874 13.8782 8.19893 13.8874 8.50073H13.0181C12.9946 8.084 12.7356 7.80036 12.036 7.80036C11.372 7.80036 10.9752 8.05345 10.9752 8.417Z\" />\n    </SvgIcon>\n}\n\n\nexport const OrderMinIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.1267 9.44667C16.1463 9.50509 16.1597 9.56542 16.1667 9.62667V9.66667V11.3627C17.5437 11.9947 18.5 13.3857 18.5 15C18.5 17.2091 16.7091 19 14.5 19C13.6822 19 12.9217 18.7546 12.2881 18.3333H7.5C6.96957 18.3333 6.46086 18.1226 6.08579 17.7475C5.71071 17.3725 5.5 16.8638 5.5 16.3333V7C5.5 6.46957 5.71071 5.96086 6.08579 5.58579C6.46086 5.21071 6.96957 5 7.5 5H11.5333C11.6108 5.00956 11.6856 5.03449 11.7533 5.07333H11.8133C11.8819 5.10539 11.9449 5.14814 12 5.2L16 9.2C16.0519 9.25511 16.0946 9.31812 16.1267 9.38667V9.44667ZM14.8333 10.3333V11.0137C14.7234 11.0046 14.6123 11 14.5 11C12.2909 11 10.5 12.7909 10.5 15C10.5 15.7286 10.6948 16.4117 11.0351 17H7.5C7.32319 17 7.15362 16.9298 7.0286 16.8047C6.90357 16.6797 6.83333 16.5101 6.83333 16.3333V7C6.83333 6.82319 6.90357 6.65362 7.0286 6.5286C7.15362 6.40357 7.32319 6.33333 7.5 6.33333H10.8333V8.33333C10.8333 8.86377 11.044 9.37247 11.4191 9.74755C11.7942 10.1226 12.3029 10.3333 12.8333 10.3333H14.8333ZM13.8933 9L12.1667 7.27333V8.33333C12.1667 8.51014 12.2369 8.67971 12.3619 8.80474C12.487 8.92976 12.6565 9 12.8333 9H13.8933ZM14.5 18C16.1569 18 17.5 16.6569 17.5 15C17.5 13.3431 16.1569 12 14.5 12C12.8431 12 11.5 13.3431 11.5 15C11.5 16.6569 12.8431 18 14.5 18ZM13.4504 13.4256C13.5691 13.4085 13.6893 13.4 13.8111 13.4C14.3136 13.3992 14.8047 13.5494 15.2208 13.831L15.2522 13.8529L15.475 13.6313H15.5739L16.069 14.1265V14.2254L15.8511 14.4424L15.9108 14.5264C16.1541 14.8919 16.2972 15.3148 16.3256 15.7529L16.3311 15.92C16.3311 16.0415 16.3223 16.162 16.3052 16.2807L16.2361 16.3406L15.5258 16.3403L15.4573 16.2563C15.4795 16.1465 15.4911 16.0342 15.4911 15.92C15.4911 15.5785 15.3888 15.252 15.2007 14.9759L15.2455 15.0478L13.5941 16.7004H13.4952L13 16.2052V16.1063L14.6435 14.4613L14.6015 14.4372C14.3998 14.3295 14.1781 14.2643 13.9502 14.2458L13.8111 14.24C13.6967 14.24 13.5843 14.2513 13.4745 14.2738L13.3905 14.205L13.3902 13.495L13.4504 13.4256Z\" />\n    </SvgIcon>\n}\n\n\nexport const MakerRebatesIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7 6.5H17C17.2761 6.5 17.5 6.72386 17.5 7V17C17.5 17.2761 17.2761 17.5 17 17.5H7C6.72386 17.5 6.5 17.2761 6.5 17V7C6.5 6.72386 6.72386 6.5 7 6.5ZM5 7C5 5.89543 5.89543 5 7 5H17C18.1046 5 19 5.89543 19 7V17C19 18.1046 18.1046 19 17 19H7C5.89543 19 5 18.1046 5 17V7ZM16.5 8.59985V8.5H13.0708L12.7934 8.85895L14.0108 9.89105L12.4843 11.8649L10.8446 10.429L7.5 14.7348L8.39899 15.5L11.0021 12.1472L12.6393 13.5804L12.7649 13.422L12.7675 13.4238L12.8814 13.2774L13.3816 12.6499L13.3724 12.6413L16.5 8.59985Z\" />\n\n    </SvgIcon>\n}\n\nexport const AssetsIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M15.4311 3.63902C16.4363 3.2573 17.5573 3.78128 17.9057 4.7957L18.6258 6.89305H18.6787C19.7833 6.89305 20.6787 7.78848 20.6787 8.89305V17.2545C20.6787 18.3591 19.7833 19.2545 18.6787 19.2545H6C4.89543 19.2545 4 18.3591 4 17.2545V8.89305C4 7.78848 4.89543 6.89305 6 6.89305H6.8616L15.4311 3.63902ZM16.1053 5.41387L16.6133 6.89305H12.2099L16.1053 5.41387ZM6.93932 8.89442L6.9388 8.89305H6V17.2545H18.6787V15.9329H17.0888C15.5074 15.9329 14.2253 14.6509 14.2253 13.0695C14.2253 11.488 15.5074 10.206 17.0888 10.206H18.6787V8.89305H6.94294L6.93932 8.89442ZM18.6787 12.206H17.8279H17.0888C16.6119 12.206 16.2253 12.5926 16.2253 13.0695C16.2253 13.5464 16.6119 13.9329 17.0888 13.9329H17.8279H18.6787V12.206Z\"/>\n    </SvgIcon>\n}\n\n\nexport const TransactionsIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M19.975 12.3816C19.4212 12.3869 16.7056 10.8186 16.6198 10.7368C16.4136 10.5402 16.4915 10.2954 16.702 10.2619C16.9124 10.2284 18.0942 10.0879 18.0942 10.0879C17.3679 8.14661 15.7472 6.59624 13.6201 6.09373C10.2251 5.29141 6.7142 7.56725 5.93825 11.0406C5.93157 11.0703 5.88468 11.4244 5.60347 11.4131C5.4131 11.4055 4.78944 11.1576 4.56397 11.0518C4.30656 10.9311 4.237 10.9623 4.31506 10.5737C5.1981 6.15801 9.72029 3.18211 14.0607 4.20032C17.6628 5.04518 20.1651 8.17083 20.44 11.7321C20.486 12.2094 20.2431 12.379 19.975 12.3816ZM14.3058 13.3494C14.6624 13.3494 14.9514 13.6382 14.9514 13.995C14.9514 14.3512 14.6624 14.6406 14.3058 14.6406H13.0146V15.4476C13.0146 15.8934 12.6534 16.2547 12.2076 16.2547C11.7618 16.2547 11.4006 15.8934 11.4006 15.4476V14.6406H10.1093C9.75279 14.6406 9.46375 14.3512 9.46375 13.995C9.46375 13.6381 9.7528 13.3494 10.1093 13.3494H11.4006V12.7038H10.1093C9.75279 12.7038 9.46375 12.4144 9.46375 12.0582C9.46375 11.7014 9.7528 11.4126 10.1093 11.4126H11.4006V11.3684L9.9678 9.93596C9.71389 9.68187 9.71389 9.27019 9.9678 9.01639C10.2217 8.7626 10.6333 8.76262 10.8872 9.01639L12.1967 10.3256L13.5113 9.01101C13.7652 8.75756 14.1768 8.75756 14.4307 9.01101C14.6846 9.26509 14.6846 9.67682 14.4307 9.93058L13.0147 11.3467V11.4126H14.3059C14.6624 11.4126 14.9515 11.7013 14.9515 12.0582C14.9515 12.4144 14.6624 12.7038 14.3059 12.7038H13.0147V13.3494L14.3058 13.3494ZM7.82879 14.2605C8.11201 14.4415 8.04375 14.8053 7.73251 14.8377C7.42128 14.87 6.44662 14.9559 6.44662 14.9559C7.21929 16.7667 8.78527 18.1944 10.8101 18.6726C14.2051 19.4746 17.677 17.3089 18.4532 13.8355C18.4691 13.7642 18.4686 13.7754 18.4964 13.6224C18.5241 13.4694 18.5691 13.2367 18.868 13.3402C19.1669 13.4438 19.8959 13.6581 20.123 13.7189C20.3501 13.7796 20.3245 13.8691 20.296 14.0801C20.2874 14.1443 20.2743 14.2031 20.2606 14.2649C19.2444 18.7811 14.821 21.5984 10.3808 20.5565C6.78298 19.7126 4.28214 16.5939 4.00233 13.0379C3.96438 12.4269 4.39608 12.3021 4.83738 12.5356C5.18455 12.7192 7.54557 14.0794 7.82879 14.2605Z\"/>\n    </SvgIcon>\n}\n\nexport const TradeIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M13.6517 15.8163C13.9445 15.5234 13.9445 15.0485 13.6517 14.7557C13.3588 14.4628 12.8839 14.4628 12.591 14.7557C11.7123 15.6343 10.2877 15.6343 9.40901 14.7557C9.11612 14.4628 8.64124 14.4628 8.34835 14.7557C8.05546 15.0485 8.05546 15.5234 8.34835 15.8163C9.81282 17.2808 12.1872 17.2808 13.6517 15.8163Z\"/>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M14.0443 4C11.7428 4 9.74576 5.29595 8.73991 7.19369C5.98293 8.13365 4 10.7457 4 13.8208C4 17.6868 7.13401 20.8208 11 20.8208C14.622 20.8208 17.6015 18.0699 17.9631 14.5435C19.2363 13.4443 20.0443 11.8166 20.0443 10C20.0443 6.68629 17.358 4 14.0443 4ZM14.0443 6C13.1176 6 12.2638 6.31508 11.585 6.8449C14.4504 7.08199 16.8261 9.04488 17.6703 11.6916C17.9104 11.1776 18.0443 10.6044 18.0443 10C18.0443 7.79086 16.2534 6 14.0443 6ZM11 8.8208C8.23858 8.8208 6 11.0594 6 13.8208C6 16.5822 8.23858 18.8208 11 18.8208C13.7614 18.8208 16 16.5822 16 13.8208C16 11.0594 13.7614 8.8208 11 8.8208Z\"/>\n    </SvgIcon>\n}\n\nexport const AmmIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M11.4214 14.8426V11.1267H8V9.12671H11.4214V6H13.4214V9.12671H16.8426V11.1267H13.4214V14.8426H11.4214ZM8 18H16.8426V16H8V18Z\"/>\n    </SvgIcon>\n}\n\nexport const OrderIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M5 5H19V19.3874L12 17.0541L5 19.3874V5ZM7 7V16.6126L12 14.9459L17 16.6126V7H7Z\"/>\n    </SvgIcon>\n}\nexport const SettingIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M17.0152 12.6854C17.0444 12.4667 17.059 12.2406 17.059 12C17.059 11.7667 17.0444 11.5333 17.0079 11.3146L18.4881 10.1625C18.6194 10.0604 18.6558 9.86354 18.5756 9.71771L17.1756 7.29687C17.0881 7.13646 16.9058 7.08542 16.7454 7.13646L15.0027 7.83646C14.6381 7.55937 14.2517 7.32604 13.8215 7.15104L13.559 5.29896C13.5298 5.12396 13.384 5 13.209 5H10.409C10.234 5 10.0954 5.12396 10.0662 5.29896L9.80375 7.15104C9.37354 7.32604 8.97979 7.56667 8.6225 7.83646L6.87979 7.13646C6.71937 7.07812 6.53708 7.13646 6.44958 7.29687L5.05688 9.71771C4.96938 9.87083 4.99854 10.0604 5.14438 10.1625L6.62458 11.3146C6.58813 11.5333 6.55896 11.774 6.55896 12C6.55896 12.226 6.57354 12.4667 6.61 12.6854L5.12979 13.8375C4.99854 13.9396 4.96208 14.1365 5.04229 14.2823L6.44229 16.7031C6.52979 16.8635 6.71208 16.9146 6.8725 16.8635L8.61521 16.1635C8.97979 16.4406 9.36625 16.674 9.79646 16.849L10.059 18.701C10.0954 18.876 10.234 19 10.409 19H13.209C13.384 19 13.5298 18.876 13.5517 18.701L13.8142 16.849C14.2444 16.674 14.6381 16.4406 14.9954 16.1635L16.7381 16.8635C16.8985 16.9219 17.0808 16.8635 17.1683 16.7031L18.5683 14.2823C18.6558 14.1219 18.6194 13.9396 18.4808 13.8375L17.0152 12.6854V12.6854ZM11.809 14.625C10.3652 14.625 9.18396 13.4437 9.18396 12C9.18396 10.5562 10.3652 9.375 11.809 9.375C13.2527 9.375 14.434 10.5562 14.434 12C14.434 13.4437 13.2527 14.625 11.809 14.625Z\"/>\n    </SvgIcon>\n}\n\n\nexport const RewardIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path  fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.5 5.00021L8.12127 4.51514L12 5.48482L15.8787 4.51514L16.5 5.00021V9.00021C16.5 9.0103 16.4997 9.02032 16.4991 9.03026C17.4332 10.0881 18 11.4778 18 13C18 16.3137 15.3137 19 12 19C8.68629 19 6 16.3137 6 13C6 11.4778 6.56681 10.0881 7.50089 9.03026C7.5003 9.02032 7.5 9.0103 7.5 9.00021V5.00021ZM15.5 5.6406V8.12605C14.5149 7.41738 13.3062 7 12 7C10.6938 7 9.48512 7.41738 8.5 8.12605V5.6406L11.8787 6.48528H12.1213L15.5 5.6406ZM12 17.5C14.4853 17.5 16.5 15.4853 16.5 13C16.5 10.5147 14.4853 8.5 12 8.5C9.51472 8.5 7.5 10.5147 7.5 13C7.5 15.4853 9.51472 17.5 12 17.5ZM13.0864 15.0914C12.9768 15.1125 12.8611 15.0938 12.762 15.0388L12 14.6116L11.2381 15.0387C11.1665 15.0787 11.0861 15.0999 11.0041 15.1C10.9123 15.1001 10.8226 15.0738 10.7451 15.0244C10.6694 14.9762 10.6085 14.9079 10.5685 14.8274C10.5206 14.731 10.5047 14.6216 10.5228 14.5146L10.6788 13.6114L10.0464 12.9787C9.85839 12.7904 9.85054 12.4833 10.0283 12.285C10.1046 12.2002 10.2076 12.1444 10.3206 12.1282C10.7325 12.0695 11.0098 12.0294 11.1803 12.0039L11.5585 11.1857C11.6382 11.0133 11.8099 10.9 11.9999 10.9C12.0765 10.9 12.1523 10.9185 12.2208 10.9539C12.3179 11.0043 12.3952 11.086 12.4414 11.1858L12.8197 12.0039C12.9901 12.0294 13.2672 12.0694 13.6793 12.1282C13.948 12.1664 14.1301 12.4188 14.0959 12.6872C14.0817 12.7973 14.0319 12.9 13.9534 12.9787L13.3211 13.6114L13.477 14.5137C13.488 14.5765 13.4871 14.6408 13.4743 14.7034C13.4614 14.7663 13.4367 14.8262 13.4023 14.8783C13.3667 14.9329 13.3208 14.9799 13.2668 15.0166C13.2121 15.0538 13.1503 15.0794 13.0864 15.0914ZM11.2965 13.5604L11.1516 14.3994L11.8533 14.006C11.9445 13.9549 12.0556 13.9549 12.1467 14.006L12.8484 14.3993L12.7034 13.5603C12.6868 13.4643 12.7179 13.3662 12.7869 13.2972L13.3907 12.6931C12.9357 12.6279 12.6806 12.5905 12.5669 12.572C12.4685 12.556 12.3845 12.4923 12.3426 12.4018L12.3309 12.3765L11.9999 11.6607L11.6573 12.4018C11.6155 12.4923 11.5315 12.556 11.4331 12.572C11.3193 12.5905 11.0638 12.628 10.6093 12.6931L11.2131 13.2972C11.282 13.3662 11.3131 13.4643 11.2965 13.5604Z\" />\n    </SvgIcon>\n}\n\n\n\nexport const RedPockIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path\n            d=\"M5.54199 7C5.54199 5.48121 6.77321 4.25 8.29199 4.25H15.3834C16.9022 4.25 18.1334 5.48122 18.1334 7V16.5778C18.1334 18.0966 16.9022 19.3278 15.3834 19.3278H8.29199C6.77321 19.3278 5.54199 18.0966 5.54199 16.5778V7ZM8.29199 5.75C7.60164 5.75 7.04199 6.30964 7.04199 7V8.11942C7.7581 8.41592 8.63926 8.71732 9.57124 8.94215C9.98492 8.02838 10.8925 7.38867 11.9559 7.38867C13.0696 7.38867 14.0124 8.09033 14.396 9.07361C14.7112 9.00099 15.0121 8.9138 15.3 8.81557C15.5154 8.73785 15.6926 8.67531 15.8428 8.62235V8.62232C16.2201 8.48924 16.4258 8.41667 16.6334 8.31579V7C16.6334 6.30965 16.0738 5.75 15.3834 5.75H8.29199ZM16.6334 9.93382C16.5369 9.96866 16.4322 10.0055 16.3155 10.0466L16.3154 10.0466C16.1668 10.0989 15.9988 10.1581 15.8032 10.2287L15.7912 10.233C15.3928 10.3692 14.9726 10.4873 14.5288 10.5802C14.2896 11.7957 13.2356 12.722 11.9559 12.722C10.6252 12.722 9.5384 11.7202 9.35826 10.4332C8.52336 10.2391 7.73079 9.98884 7.04199 9.73112V16.5778C7.04199 17.2681 7.60164 17.8278 8.29199 17.8278H15.3834C16.0738 17.8278 16.6334 17.2681 16.6334 16.5778V9.93382ZM11.9559 8.38867C11.0684 8.38867 10.332 9.12542 10.332 10.0553C10.332 10.9853 11.0684 11.722 11.9559 11.722C12.8434 11.722 13.5798 10.9853 13.5798 10.0553C13.5798 9.12542 12.8434 8.38867 11.9559 8.38867Z\"/>\n    </SvgIcon>\n}\n\nexport const NoNetWorkIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M3.20711 8.52081C2.93096 8.79696 2.93096 9.24467 3.20711 9.52081C3.48325 9.79696 3.93096 9.79696 4.20711 9.52081C6.19623 7.53169 8.89406 6.41421 11.7071 6.41421C14.5202 6.41421 17.218 7.53169 19.2071 9.52081C19.4832 9.79696 19.931 9.79696 20.2071 9.52081C20.4832 9.24467 20.4832 8.79696 20.2071 8.52081C17.9528 6.26647 14.8952 5 11.7071 5C8.51899 5 5.46145 6.26647 3.20711 8.52081ZM6.5 12.5803C6.10948 12.9708 6.10948 13.604 6.5 13.9945C6.89052 14.385 7.52369 14.385 7.91421 13.9945C8.92015 12.9886 10.2845 12.4235 11.7071 12.4235C13.1297 12.4235 14.4941 12.9886 15.5 13.9945C15.8905 14.385 16.5237 14.385 16.9142 13.9945C17.3047 13.604 17.3047 12.9708 16.9142 12.5803C15.5332 11.1993 13.6602 10.4235 11.7071 10.4235C9.75406 10.4235 7.88101 11.1993 6.5 12.5803ZM13.6723 15.6419C13.9652 15.9347 13.9652 16.4096 13.6723 16.7025L12.7884 17.5864L13.6723 18.4703C13.9652 18.7632 13.9652 19.238 13.6723 19.5309C13.3794 19.8238 12.9045 19.8238 12.6116 19.5309L11.7278 18.6471L10.8439 19.5309C10.551 19.8238 10.0761 19.8238 9.78322 19.5309C9.49033 19.238 9.49033 18.7632 9.78322 18.4703L10.6671 17.5864L9.78322 16.7025C9.49033 16.4096 9.49033 15.9347 9.78322 15.6419C10.0761 15.349 10.551 15.349 10.8439 15.6419L11.7278 16.5257L12.6116 15.6419C12.9045 15.349 13.3794 15.349 13.6723 15.6419Z\"/>\n    </SvgIcon>\n}\n\n\nexport const PowerIcon = (props: SvgIconProps) => {\n    return <SvgIcon {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n    >\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n              d=\"M8.09968 8.00857L8.09972 8.0086L8.10277 8.00555C8.37315 7.73517 8.37315 7.32039 8.10277 7.05001C7.83239 6.77963 7.41761 6.77963 7.14723 7.05001C5.84734 8.3499 5.09986 10.0975 5.00027 11.9898L5 11.9898V12C5 15.8504 8.14956 19 12 19C15.8504 19 19 15.8504 19 12C19 10.0029 18.2006 8.15074 16.7479 6.84828L16.7415 6.8426L16.7347 6.8375C16.4687 6.63798 16.0679 6.63627 15.8 6.90417L15.7902 6.91395L15.7819 6.925C15.5824 7.19103 15.5807 7.59182 15.8486 7.85972L15.8483 7.86L15.8577 7.86819C17.0292 8.89911 17.6875 10.4006 17.6875 12C17.6875 15.1009 15.1496 17.6389 12.0486 17.6389C8.94767 17.6389 6.40972 15.1009 6.40972 12C6.40972 10.4963 7.02081 9.04053 8.09968 8.00857ZM12.7778 5.68056C12.7778 5.49054 12.7136 5.31708 12.5871 5.19063C12.4607 5.06419 12.2872 5 12.0972 5C11.9072 5 11.7337 5.06419 11.6073 5.19063C11.4809 5.31708 11.4167 5.49054 11.4167 5.68056V11.5139C11.4167 11.7039 11.4809 11.8774 11.6073 12.0038C11.7337 12.1303 11.9072 12.1944 12.0972 12.1944C12.2872 12.1944 12.4607 12.1303 12.5871 12.0038C12.7136 11.8774 12.7778 11.7039 12.7778 11.5139V5.68056ZM7.28472 7.1875C7.47917 6.99306 7.77083 6.99306 7.96528 7.1875C8.15972 7.38194 8.15972 7.67361 7.96528 7.86806C6.84722 8.9375 6.21528 10.4444 6.21528 12C6.21528 13.554 6.83115 14.9712 7.83088 16.0195C6.83126 14.9712 6.21547 13.5541 6.21547 12.0002C6.21547 10.4446 6.84741 8.93769 7.96547 7.86825C8.15991 7.6738 8.15991 7.38213 7.96547 7.18769C7.77102 6.99325 7.47936 6.99325 7.28491 7.18769C6.02102 8.45158 5.29186 10.153 5.19463 12.0002C5.19463 13.8064 5.90777 15.4542 7.0664 16.6758C5.90766 15.4542 5.19444 13.8063 5.19444 12C5.29167 10.1528 6.02083 8.45139 7.28472 7.1875ZM7.22257 16.8352C8.45369 18.052 10.1432 18.8057 12.0002 18.8057C15.7432 18.8057 18.8057 15.7432 18.8057 12.0002C18.8057 10.2354 18.165 8.5907 16.9926 7.35692C18.1649 8.59068 18.8056 10.2353 18.8056 12C18.8056 15.7431 15.7431 18.8056 12 18.8056C10.1431 18.8056 8.45368 18.0518 7.22257 16.8352ZM16.8121 7.17427C16.7488 7.11272 16.6841 7.0523 16.6181 6.99306C16.4236 6.84722 16.1319 6.84722 15.9375 7.04167C15.7917 7.23611 15.7917 7.52778 15.9861 7.72222C15.9862 7.72228 15.9862 7.72235 15.9863 7.72241C16.0361 7.7662 16.0849 7.8108 16.1329 7.85619C16.0849 7.81073 16.0359 7.76607 15.9861 7.72222C15.7919 7.52778 15.7919 7.23624 15.9377 7.04186C16.1321 6.84741 16.4238 6.84741 16.6182 6.99325C16.6843 7.05243 16.7489 7.11278 16.8121 7.17427ZM16.3137 8.0355C17.323 9.08419 17.8819 10.5022 17.8819 12C17.8819 15.2083 15.2569 17.8333 12.0486 17.8333C10.457 17.8333 9.00891 17.1873 7.95367 16.1445C9.00892 17.1874 10.4571 17.8335 12.0488 17.8335C15.2571 17.8335 17.8821 15.2085 17.8821 12.0002C17.8821 10.5023 17.3231 9.08421 16.3137 8.0355ZM12.4477 5.32623C12.534 5.41139 12.5833 5.53364 12.5833 5.68056V11.5139C12.5833 11.8056 12.3889 12 12.0972 12C11.9514 12 11.83 11.9514 11.7449 11.8664C11.6599 11.7813 11.6113 11.6599 11.6113 11.5141V5.68075C11.6113 5.38908 11.8057 5.19463 12.0974 5.19463C12.2421 5.19463 12.3628 5.24245 12.4477 5.32623ZM12.0972 5.19444C12.242 5.19444 12.3628 5.24233 12.4477 5.32623C12.5341 5.4114 12.5835 5.53372 12.5835 5.68075V11.5141C12.5835 11.8057 12.3891 12.0002 12.0974 12.0002C11.9515 12.0002 11.83 11.9515 11.7449 11.8664C11.6598 11.7813 11.6111 11.6598 11.6111 11.5139V5.68056C11.6111 5.38889 11.8056 5.19444 12.0972 5.19444Z\"/>\n    </SvgIcon>\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\nexport const ColorDarkDefault = Object.freeze({\n    primary: '#1C42FF',\n    primaryLight: '#1C96FF',\n    primaryDark: '#0426CC',\n    secondary: '#F0B90B',\n    secondaryLight: '#F0B90B',\n    secondaryDark: '#F3A008',\n    success: '#00BBA8',\n    error: '#FF5677',\n    textPrimary: \"#FFFFFF\",\n    textPrimaryLight: \"#E6EEFF\",\n    textSecondary: \"#A1A7BB\",\n    textDisable: \"#282C48\",\n    textHint: \"rgba(255, 255, 255, 0.38)\",\n    backgroundGlobal: 'linear-gradient(0deg, rgba(20, 23, 44, 0.8), rgba(20, 23, 44, 0.68)), linear-gradient(106.98deg, rgba(32, 51, 143, 1) -0.48%, rgba(15, 30, 100, 1) 52.64%,  rgba(114, 44, 115, 1) 100.5%)',\n    backgroundBox: 'rgba(0,0,0,.44)',  //#191C30\n    backgroundHeader: '#070a21',\n    backgroundSecondary: '#0D1746', //'#1F2126',\n    backgroundHover: 'rgba(235, 238, 255, 0.1)',\n    blur: 'rgba(255,255,255,.1)',\n    borderColor: '#252842',\n    // outline: 'rgba(235, 238, 255, 0.1)',\n    focus: \"rgba(235, 238, 255, 0.6)\",\n    vipBgColor: \"rgba(255, 242, 202, 0.2)\",\n    shadowBox: \"0px 4px 38px rgba(0, 0, 0, 0.16)\",\n    background: () => {\n        return {\n            default: ColorDarkDefault.backgroundBox,\n            bg: ColorDarkDefault.backgroundGlobal,\n            active: ColorDarkDefault.textSecondary,\n            secondary: ColorDarkDefault.backgroundSecondary,\n            outline: ColorDarkDefault.backgroundHover,\n            backDrop: ColorDarkDefault.blur,\n            hover: ColorDarkDefault.backgroundHover,\n        }\n    },\n    border: () => {\n        return {\n            default: ColorDarkDefault.borderColor,\n            selected: ColorDarkDefault.primaryLight,//'#1C96FF',\n            blur: ColorDarkDefault.blur,//ColorDarkDefault.textDisable\n            focus: ColorDarkDefault.focus,\n        }\n    }\n})\nexport const ColorLightDefault = Object.freeze({...ColorDarkDefault})\nexport type ColorBaseInterface = typeof ColorDarkDefault\n\n\n","import { css } from \"@emotion/react\";\n\nexport default css`\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  box-sizing: border-box;\n}\n\naddress,\ncaption,\ncite,\ncode,\ndfn,\nem,\nstrong,\nth,\nvar,\nb {\n  font-weight: normal;\n  font-style: normal;\n}\n\nabbr,\nacronym {\n  border: 0;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\nhtml {\n  text-size-adjust: 100%;\n  box-sizing: border-box;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote {\n  &:before,\n  &:after {\n    content: '';\n    content: none;\n  }\n}\nq {\n  &:before,\n  &:after {\n    content: '';\n    content: none;\n  }\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ncaption,\nth {\n  text-align: left;\n}\ntextarea {\n  resize: none;\n}\na {\n  text-decoration: none;\n  cursor: pointer;\n}\nbutton {\n  padding: 0;\n  border: none;\n  background: none;\n}\n  html{\n    overscroll-behavior-x:none;\n    overscroll-behavior-y:none;\n  }\n`","export default __webpack_public_path__ + \"static/media/Inter-Medium.18b8c68e.ttf\";","export default __webpack_public_path__ + \"static/media/Gilroy-Medium.1b4da658.ttf\";","import { css } from \"@emotion/react\";\nimport reset from './reset';\n// @ts-ignore\nimport InterMedium from '../fonts/english/Inter-Medium.ttf';\n// @ts-ignore\nimport GilroyMedium from '../fonts/english/Gilroy-Medium.ttf';\n\nexport const fontDefault = {\n    h1: '4.8rem',\n    h2: '3.6rem',\n    h3: '2.4rem',\n    h4: '2rem',\n    h5: '1.4rem',\n    h6: '1.2rem',\n    body1: '1.6rem'\n}\n\n\nexport const scrollbarDefault = ({theme}: any) => css`\n  html {\n    scrollbar-face-color: ${theme.colorBase.backgroundBox};\n    scrollbar-base-color: ${theme.colorBase.backgroundBox};\n    scrollbar-3dlight-color: ${theme.colorBase.backgroundBox};\n    scrollbar-highlight-color: ${theme.colorBase.backgroundBox};\n    scrollbar-track-color: ${theme.colorBase.backgroundBox};\n    scrollbar-arrow-color: ${theme.colorBase.backgroundBox};\n    scrollbar-shadow-color: ${theme.colorBase.backgroundBox};\n    scrollbar-dark-shadow-color: ${theme.colorBase.backgroundBox};\n  }\n\n  //::-webkit-scrollbar { width: 8px; height: 3px; position: absolute}\n    // ::-webkit-scrollbar-button {  background-color: ${theme.colorBase.textHint};}\n  ::-webkit-scrollbar-track {\n    background-color: ${theme.colorBase.backgroundBox};\n    border-radius: 3px;\n  }\n\n  ::-webkit-scrollbar-track-piece {\n    background-color: ${theme.colorBase.backgroundBox};\n    border-radius: 3px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    height: 50px;\n    background-color: ${theme.colorBase.blur};\n    border-radius: 3px;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background-color: ${theme.colorBase.backgroundBox};\n  }\n\n  ::-webkit-resizer {\n    background-color: ${theme.colorBase.backgroundBox};\n  }\n`;\n\nexport const globalCss = ({theme}: any) => css`\n  ${scrollbarDefault({theme})};\n\n  ${reset}\n  html, body {\n    @font-face {\n      font-family: 'Inter-Medium';\n      src: url(${InterMedium}) format('truetype');\n      font-weight: normal;\n      font-style: normal;\n    }\n    @font-face {\n      font-family: 'Gilroy-Medium';\n      src: url(${GilroyMedium}) format('truetype');\n      font-weight: normal;\n      font-style: normal;\n    }\n    height: 100%;\n    box-sizing: border-box;\n    -moz-box-sizing: border-box; /* Firefox */\n    -webkit-box-sizing: border-box; /* Safari */\n    font-family: Gilroy-Medium, Helvetica, Arial, \"华文细黑\", \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"宋体\", Heiti, \"黑体\", sans-serif;\n    font-size: 62.5%; /* 62.5% of 16px = 10px */\n\n  }\n\n  body {\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n\n    &:before {\n      content: '';\n      position: fixed;\n      z-index: -1;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n  }\n\n  h1 {\n    font-size: ${fontDefault.h1};\n  }\n\n  h2 {\n    font-size: ${fontDefault.h2};\n  }\n\n  h3 {\n    font-size: ${fontDefault.h3};\n  }\n\n  h4 {\n    font-size: ${fontDefault.h4};\n  }\n\n  h5 {\n    font-size: ${fontDefault.h5};\n  }\n\n  h6 {\n    font-size: ${fontDefault.h6};\n  }\n\n  html {\n    overflow-y: scroll;\n    --header-row-height: 44px;\n    --header-height: 64px;\n    --header-menu-list-height: 72px;\n    --header-menu-list-width: 250px;\n    --desktop-max-width: 1200px;\n    --desktop-min-width: 1024px;\n    --btn-Input-height: 48px;\n    //--btn-max-width: 160px;\n    --btn-min-width: 100px;\n    --coin-min-width: 80px;\n    --datePicker-width: 320px;\n    --datePicker-height: 232px;\n    --list-coin-item: 44px;\n    --header-menu-icon-size:28px;\n    --list-menu-coin-size: 24px;\n    --chart-title-coin-size: 28px;\n    --btn-icon-size-small: 24px;\n    --btn-icon-size: 36px;\n    --svg-size: 24px;\n    --svg-size-large: 36px;\n    --swap-box-height: 540px; /** js used also **/\n    --panel-setting-height: 680px;\n    --panel-setting-width: 800px;\n    --swap-box-width: 338px;\n    --toolbar-row-height: 56px; /** js used also  40 + 56 = 96  CoinList.tsx **/\n    --sub-menuItem-width: 200px;\n    --sub-menuItem-height: 52px;\n    --transfer-modal-width: 480px;\n    --modal-width: 480px;\n    --gateway-icon-size: 56px;\n    --account-button-fixed-width:88px;\n    --account-button-fixed-height:72px;\n\n  }\n\n  div {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    user-select: none;\n  }\n\n  select {\n\n    appearance: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n\n    &::-ms-expand {\n      display: none;\n    }\n\n  }\n\n  . draggable_panel {\n    border: 1px solid #777777;\n    height: 100%;\n  }\n\n  . draggable_header {\n    display: none;\n    cursor: move;\n    height: 0px;\n    width: 100%;\n  }\n\n  .rdg.rdg {\n    --background-color: inherit;\n  }\n`\n","import { ColorDarkDefault, ColorLightDefault } from \"../css/color-lib\";\nimport { fontDefault } from \"../css/global\";\nimport { ThemeKeys } from '../interface';\n\n\nexport const pxToRem = (px: any, oneRemPx = 10) => `${px / oneRemPx}rem`;\nexport const unit: number = 8;\nexport const borderFunc = (themeMode: ThemeKeys) => {\n    const colorBase = themeMode === 'dark' ? ColorDarkDefault : ColorLightDefault\n    const borderColor = colorBase?.border() as any;\n    return {\n        defaultBorder: `1px solid ${borderColor?.default}`,\n        defaultRadius: `${unit / 2}px`,\n        FontDefault: fontDefault,\n        defaultFrame: ({\n                           d_W = 1,\n                           d_R = 1,\n                           c_key = 'primary'\n                       }: { d_W?: number, d_R?: number, c_key?: 'primary' | 'selected' | 'blur' | 'focus' | 'outline' | string }) => {\n            let color;\n            switch (c_key) {\n                case 'primary':\n                case 'selected':\n                case 'blur':\n                case 'focus':\n                    color = borderColor[ c_key ];\n                    break;\n                default:\n                    color = c_key;\n            }\n            return `\n        border: ${d_W}px solid ${color};\n        border-radius: ${d_R * unit}px;\n       `\n        },\n        borderConfig: ({\n                           d_W = 1,\n                           c_key = 'primary'\n                       }: { d_W?: number, c_key?: 'primary' | 'selected' | 'blur' | 'focus' | string }) => {\n            let color;\n            switch (c_key) {\n                case 'primary':\n                case 'selected':\n                case 'focus':\n                case 'blur':\n                    color = borderColor[ c_key ];\n                    break;\n                default:\n                    color = c_key;\n            }\n            return `${d_W}px solid ${color}`;\n        }\n    }\n}\n","import { borderFunc, pxToRem } from './utils';\nimport { ComponentsOverrides } from '@material-ui/core/';\nimport { rgba } from 'polished';\nimport { fontDefault } from '../css/global';\n\nconst opacity = 1;\nexport const unit = 8;\nexport const radius = 4;\nexport const checboxSize = 18;\nconst hr = ({colorBase}: any) => {\n    return {\n        borderRadius: `${radius}px`,\n        content: '\\\"\\\"',\n        margin: `0 ${unit}px`,\n        display: 'block',\n        height: '4px',\n        backgroundColor: colorBase.primaryLight,\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n    }\n}\n\nexport const MuiCheckbox = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiCheckbox'] } => {\n    const width = pxToRem(checboxSize);\n    const height = pxToRem(checboxSize);\n    return {\n        styleOverrides: {\n            root: {\n                height: pxToRem(32),\n                ' svg': {\n                    width,\n                    height\n                },\n                '&.MuiCheckbox-colorDefault': {\n                    color: colorBase.textPrimary,\n                },\n\n\n            }\n        }\n    }\n}\nexport const MuiCard = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                backgroundColor: colorBase.background().default\n            }\n        }\n    }\n}\n\nexport const MuiLink = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                color: colorBase.primaryLight\n            }\n        }\n    }\n}\n\n\nexport const MuiTextField = (): { styleOverrides: ComponentsOverrides['MuiTextField'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                '.MuiFormHelperText-root': {\n                    marginLeft: 0,\n                    marginRight: 0,\n                    textAlign: 'right',\n                }\n            }\n        }\n    }\n}\n\n\nexport const MuiModal = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                color: colorBase.textPrimary,\n                ' .MuiBackdrop-root': {\n                    zIndex: -1,\n                    backgroundColor: colorBase.background().backDrop,\n                },\n            }\n\n        }\n    }\n}\n\nexport const MuiToolbar = () => {\n    return {\n        styleOverrides: {\n            root: {height: 'var(--header-height)'}\n        }\n    }\n}\nexport const MuiSwitch = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiSwitch'] } => {\n    const borderWidth = 3.5;\n    const width = pxToRem(56);\n    const height = pxToRem(34);\n    const size = pxToRem(22);\n    const gap = (34 - 22) / 2;\n    return {\n        styleOverrides: {\n            root: {\n                width,\n                height,\n                padding: 0,\n                margin: pxToRem(8),\n                overflow: 'unset',\n                '& .MuiIconButton-root': {\n                    padding: pxToRem(gap),\n                    height: 'auto',\n                    width: 'auto'\n                },\n                '& .Mui-checked': {\n                    color: colorBase.textPrimary,\n                    transform: `translateX(calc(${width} - ${size} - ${pxToRem(2 * gap)}))`,\n                    '& + .MuiSwitch-track.MuiSwitch-track': {\n                        backgroundColor: 'transparent',\n                        opacity: opacity,\n                        borderWidth,\n                        border: `solid ${colorBase.primaryLight}`,\n                    },\n                    '& .MuiSwitch-thumb': {\n                        backgroundColor: colorBase.primaryLight,\n                        opacity: opacity,\n                    }\n                },\n                '& .MuiIconButton-root.Mui-disabled': {\n                    '&.Mui-checked .MuiSwitch-thumb': {\n                        backgroundColor: colorBase.primaryLight,\n                    },\n                    '& + .MuiSwitch-track': {\n                        backgroundColor: colorBase.border().blur,\n                        border: 'none',\n                        opacity: 0.6 * opacity,\n                    },\n                    '& .MuiSwitch-thumb': {\n                        backgroundColor: colorBase.textSecondary,\n                        opacity: .6 * opacity,\n                    }\n                }\n\n            },\n            colorPrimary: {},\n            track: {\n                borderRadius: 40,\n                border: `solid ${colorBase.textSecondary}`,\n                borderWidth,\n                backgroundColor: 'transparent', //${colorBase.textSecondary},\n                '&&': {\n                    opacity: opacity,\n                },\n                //transition: theme.transitions.create(['background-color', 'border']),\n                boxSizing: 'border-box',\n            },\n\n            thumb: {\n                boxShadow: 'none',\n                backgroundColor: colorBase.textSecondary, // this.palette.grey[400],\n                width: size,\n                height: size,\n            },\n\n        }\n    }\n}\n\nexport const MuiButton = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiButton'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                'textTransform': 'capitalize',\n                '&:not($sizeLarge):not($sizeSmall) $label': {\n                    fontSize: '1.4rem',\n\n                    // font: 'normal normal 700 0.875rem/1.6875rem Open Sans',\n                    // color: 'green'\n                },\n                borderRadius: pxToRem(4),\n                fontWeight: 'normal',\n                paddingLeft: pxToRem(12),\n                paddingRight: pxToRem(12)\n            },\n            contained: {\n                '&:hover': {\n                    // backgroundColor: colorBase.hoverSecondary,\n                },\n                height: pxToRem(44),\n                fontSize: '1.6rem',\n                '&.Mui-disabled': {\n                    backgroundColor: colorBase.border().blur,\n                    color: colorBase.textSecondary,\n                    // backgroundImage: `url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='4' ry='4' stroke='%23FFFFFF33' stroke-width='1' stroke-dasharray='4%25%2c 8%25' stroke-dashoffset='5' stroke-linecap='square'/%3e%3c/svg%3e\")`\n\n                },\n            },\n            sizeLarge: {\n                height: pxToRem(52),\n                fontSize: '1.6rem',\n                fontWeight: 'normal',\n                //     '& .MuiButton-label': {\n                //\n                // }\n            },\n            sizeSmall: {\n                height: pxToRem(32),\n                fontSize: '1.4rem'\n                //     '& $label': {\n                //\n                // },\n\n            },\n            outlinedSizeSmall: {\n                height: pxToRem(28),\n                fontSize: '1.4rem'\n            },\n            outlined: {\n                height: pxToRem(32),\n                // boxShadow: '0px 4px 62px rgba(0, 0, 0, 0.25)',\n                fontSize: '1.4rem',\n                fontWeight: 'normal',\n                color: colorBase.textPrimary,\n                borderColor: colorBase.border().blur,\n                backgroundColor: colorBase.background().outline,\n                '&:hover': {borderColor: colorBase.textPrimary},\n                '&.Mui-disabled': {\n                    backgroundColor: colorBase.border().blur,\n                    color: colorBase.textSecondary,\n                    border: 0,\n                    backgroundImage: `url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='4' ry='4' stroke='%23FFFFFF33' stroke-width='1' stroke-dasharray='4%25%2c 8%25' stroke-dashoffset='5' stroke-linecap='square'/%3e%3c/svg%3e\")`\n                },\n            },\n            // outlinedSecondary:{\n            //     borderColor: colorBase.primaryLight,\n            //     color: colorBase.primaryLight,\n            //     '&:hover': {borderColor: colorBase.primary},\n            // },\n        }\n\n    }\n}\n\n\n// @ts-ignore\nexport const MuiPopover = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiPopover'] } => {\n    return {\n        styleOverrides: {}\n\n    }\n}\n// export const MuiBackdrop = ({colorBase}: any) => {\n//     return {\n//         styleOverrides: {\n//             root: {\n//                 zIndex: -1,\n//\n//             }\n//         }\n//     }\n// }\n\nexport const MuiPaper = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiPaper'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                borderRadius: pxToRem(8),\n                backgroundImage: 'none',\n                backgroundColor: colorBase.background().secondary,\n                '&.MuiPopover-paper': {\n                    backgroundImage: 'none',\n                    backgroundColor: colorBase.background().secondary,\n                },\n            }\n        }\n\n    }\n}\nexport const MuiSvgIcon = () => {\n    return {\n        styleOverrides: {\n            root: {\n                height: 'var(--svg-size)',\n                width: 'var(--svg-size)',\n                margin: '-4px',\n                '&.MuiSvgIcon-fontSizeLarge': {\n                    height: 'var(--svg-size-large)',\n                    width: 'var(--svg-size-large)',\n                    margin: '-6px',\n                },\n                '&.tag': {\n                    width: 'auto',\n                    height: 'auto',\n                }\n            },\n\n        }\n    }\n}\n//@ts-ignore\nexport const MuiRadio = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                ' svg': {\n                    height: 'var(--svg-size)',\n                    width: 'var(--svg-size)',\n                }\n            }\n        }\n\n    }\n}\n\n\nexport const MuiIconButton = {\n    styleOverrides: {\n        root: {\n            height: 'var(--btn-icon-size)',\n            width: 'var(--btn-icon-size)',\n            ' svg': {\n                height: 'var(--svg-size-large)',\n                width: 'var(--svg-size-large)',\n            },\n            '&.MuiIconButton-sizeSmall': {\n                height: 'var(--btn-icon-size-small)',\n                width: 'var(--btn-icon-size-small)',\n                ' svg': {\n                    height: 'var(--svg-size)',\n                    width: 'var(--svg-size)',\n                },\n            },\n            // margin: 0,\n            // display: 'flex',\n            // justifyContent: 'center',\n            // justifyItems: 'center',\n            // alignItems: 'center'\n        },\n        label: {\n            width: 'auto'\n        }\n\n    },\n}\n\n\nexport const MuiInputLabel = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiInputBase'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                fontSize: '1.4rem',\n                height: 20,\n                transform: 'none',\n                top: 0,\n                left: 0,\n                '&.Mui-focused': {\n                    color: colorBase.textSecondary,\n                },\n                '&.Mui-disabled ': {\n                    color: colorBase.textSecondary,\n                }\n            }\n        }\n    }\n}\nexport const MuiInputBase = ({colorBase}: any): { styleOverrides: ComponentsOverrides['MuiInputBase'] } => {\n    return {\n        styleOverrides: {\n            root: {\n                'label + &': {\n                    marginTop: 24,\n                },\n                position: 'relative',\n                border: `1px solid ${colorBase.border().blur}`,\n                fontSize: '1.4rem',\n                backgroundColor: colorBase.background().outline,\n                borderRadius: 4,\n                '&:not(.MuiFormControl-fullWidth)': {\n                    // width: 'var(--btn-min-width)',\n                    minWidth: 'var(--btn-min-width)',\n                    // maxWidth: 'var(--btn-max-width)',\n                },\n                '& .MuiListItemText-multiline': {\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'space-between',\n                    flexWrap: 'noWrap',\n                    justifyContent: 'space-between',\n                    margin: 0,\n                },\n                '& fieldset': {\n                    display: 'none',\n                },\n                '& svg': {\n                    pointerEvents: 'none',\n                },\n                paddingRight: 0\n                // padding: '10px 12px',\n\n                // transition: theme.transitions.create([\n                //                 //     'border-color',\n                //                 //     'background-color',\n                //                 //     'box-shadow',\n                //                 // ]),\n            },\n            input: {\n                padding: '.6rem 2.4rem .6rem .8rem',\n            },\n\n        }\n    }\n}\nexport const MuiToggleButton = ({colorBase, themeMode}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                '&.MuiToggleButton-sizeSmall': {\n                    height: pxToRem(24),\n                    fontSize: '1.2rem'\n                },\n                height: pxToRem(28),\n                boxShadow: '0px 4px 62px rgba(0, 0, 0, 0.25)',\n                borderRadius: '4px !important',\n                margin: '0 8px',\n                fontSize: '1.4rem',\n                color: colorBase.textPrimary,\n                borderColor: colorBase.border().blur,\n                '&&:not(:first-of-type), &&:not(:last-child)': {\n                    borderColor: colorBase.border().blur,\n                },\n                backgroundColor: colorBase.background().outline,\n                '&:hover': {\n                    borderColor: colorBase.textPrimary,\n                    '&:not(:last-child), &:not(:first-of-type)': {\n                        borderColor: colorBase.textPrimary,\n                    },\n                    '&.Mui-selected,&.Mui-selected': {\n                        borderColor: colorBase.primaryLight,\n                    }\n                },\n                '&.Mui-disabled': {\n                    backgroundColor: colorBase.border().blur,\n                    color: colorBase.textSecondary,\n                    border: 0,\n                    backgroundImage: `url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='4' ry='4' stroke='%23FFFFFF33' stroke-width='1' stroke-dasharray='4%25%2c 8%25' stroke-dashoffset='5' stroke-linecap='square'/%3e%3c/svg%3e\")`\n                },\n                '&&.Mui-selected, &&.Mui-selected + &.Mui-selected': {\n                    color: colorBase.primaryLight,\n                    backgroundColor: rgba(colorBase.primaryLight, 0.1),\n                    border: borderFunc(themeMode).borderConfig({c_key: rgba(colorBase.primaryDark, 0.5)})\n                }\n            }\n        }\n\n    }\n}\nexport const MuiButtonBase = {\n    defaultProps: {\n        disableRipple: true,\n    },\n}\nexport const MuiPaginationItem = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                fontSize: '1.4rem',\n                color: colorBase.textSecondary,\n                borderRadius: '4px',\n            },\n            icon: {\n                fontSize: '2rem',\n            },\n            textPrimary: {\n                '&.Mui-selected': {\n                    backgroundColor: 'transparent',\n                    color: colorBase.primaryLight,\n                    '&:hover': {\n                        backgroundColor: colorBase.background().hover,\n                    }\n                }\n\n\n            },\n            selected: {}\n        }\n    }\n}\nexport const MuiFormLabel = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                padding: '1.2rem 0',\n                display: 'inline-block',\n                position: 'relative',\n                fontSize: '1.4rem',\n                lineHeight: 1,\n                height: '38px',\n                boxSizing: 'border-box',\n                '&.MuiInputLabel-shrink': {\n                    transform: 'none'\n                },\n                '&$focused': {\n                    color: colorBase.textSecondary,\n                }\n            },\n        }\n\n\n    }\n}\nexport const MuiListItem = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                height: pxToRem(32),\n                borderLeft: '1px solid',\n                borderColor: 'transparent',\n                paddingLeft: pxToRem(20),\n                paddingRight: pxToRem(20),\n                '&:hover, &.Mui-selected:hover': {\n                    borderColor: colorBase.primaryLight,\n                    backgroundColor: colorBase.background().hover,\n                },\n                '&.Mui-selected, &.Mui-selected.Mui-focusVisible': {\n                    backgroundColor: 'transparent',\n                    color: colorBase.primaryLight,\n                }\n            },\n        }\n    }\n}\nexport const MuiMenuItem = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                height: pxToRem(32),\n                borderLeft: '1px solid',\n                borderLeftColor: 'transparent',\n                paddingLeft: pxToRem(12),\n                paddingRight: pxToRem(12),\n                '&:hover, &.Mui-selected:hover': {\n                    borderColor: colorBase.primaryLight,\n                },\n                '& .MuiListItemText-multiline': {\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'space-between',\n                    flexWrap: 'noWrap',\n                    justifyContent: 'space-between',\n                    '&.Mui-selected, &.Mui-selected.Mui-focusVisible': {\n                        '&:after': {\n                            display: 'none'\n                        }\n                    }\n                },\n                '&.Mui-selected, &.Mui-selected.Mui-focusVisible': {\n                    backgroundColor: 'transparent',\n                    color: colorBase.primaryLight,\n                    '&:after': {\n                        fontSize: '1.6rem',\n                        height: '1em',\n                        width: '1em',\n                        right: '1em',\n                        position: 'absolute',\n                        display: 'block',\n                        content: `url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 18 13' fill='` + encodeURIComponent(colorBase.primaryLight) + `'><path fill-rule='evenodd' clip-rule='evenodd' d='M17.7071 0.292893C18.0976 0.683417 18.0976 1.31658 17.7071 1.70711L6.70711 12.7071C6.31658 13.0976 5.68342 13.0976 5.29289 12.7071L0.292893 7.70711C-0.0976311 7.31658 -0.0976311 6.68342 0.292893 6.29289C0.683417 5.90237 1.31658 5.90237 1.70711 6.29289L6 10.5858L11.1464 5.43934L16.2929 0.292893C16.6834 -0.0976311 17.3166 -0.0976311 17.7071 0.292893Z' /></svg>\\\")`\n                    }\n                }\n            },\n        }\n    }\n}\nexport const MuiTab = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n\n            root: {\n                padding: `0 ${unit * 2}px`,\n                maxWidth: 'initial',\n                minWidth: 'auto !important',\n                fontSize: fontDefault.h5,\n                color: colorBase.textSecondary,\n                '&:hover': {\n                    backgroundColor: 'transparent',\n                },\n                '.MuiTab-wrapper': {\n                    textTransform: 'capitalize',\n                },\n                '&.Mui-selected': {\n                    color: colorBase.textPrimary,\n                    '&:after': hr({colorBase}),\n                },\n                '&:focus-visible::after, &:active::after, &.Mui-selected:after': hr({colorBase}),\n                '> div, > button': {\n                    height: 'calc(100% - 2px)',\n                    textTransform: 'capitalize'\n                },\n                '.MuiTabs-indicator': {\n                    display: 'none',\n                }\n            },\n\n        }\n    }\n}\nexport const MuiTabs = () => {\n    return {\n        styleOverrides: {\n            root: {\n                '& .MuiTabs-indicator': {\n                    display: 'none',\n                    background: 'red'\n                }\n\n            },\n\n        }\n    }\n}\nexport const MuiDivider = ({colorBase}: any) => {\n    return {\n        styleOverrides: {\n            root: {\n                borderColor: `${colorBase.border().blur}`,\n                margin: `${unit / 2 * 5}px 0`,\n            },\n\n        }\n    }\n}\n\n\nexport const MuiListItemAvatar = () => {\n    return {\n        styleOverrides: {\n            root: {\n                minWidth: 'auto',\n                marginRight: `${unit}px`,\n                '.MuiAvatar-root': {\n                    height: `var(--list-menu-coin-size)`,\n                    width: `var(--list-menu-coin-size)`,\n                    'svg': {\n                        height: `var(--header-menu-icon-size)`,\n                        width: `var(--header-menu-icon-size)`,\n                    }\n                }\n            },\n\n        }\n    }\n}\n","import { borderFunc } from './utils';\nimport { ColorDarkDefault } from '../css/color-lib';\nimport { radius } from './overrides-mui';\nimport { fontDefault } from \"../css/global\";\nimport { ThemeKeys } from '../interface';\n\nexport const MuPickDate = ({colorBase, themeMode}: { colorBase: typeof ColorDarkDefault, themeMode: ThemeKeys }) => {\n    return {\n        MuiPickersBasePicker: {\n            styleOverrides: {\n                root: {\n                    width: `var(--datePicker-width)`,\n                    background: colorBase.backgroundBox,\n                    boxShadow: colorBase.shadowBox,\n                    borderRadius: radius * 2 + 'px',\n                    border: borderFunc(themeMode).borderConfig({c_key: 'blur'}),\n                    '& svg': {\n                        fontSize: '2rem',\n                        color: colorBase.textSecondary\n                    },\n                    '& .MuiPickersCalendar-weekDayLabel': {\n                        fontSize: '1rem',\n                    },\n                    '& .MuiPickersArrowSwitcher-root .MuiIconButton-edgeEnd': {\n                        position: 'relative',\n                        padding: 3,\n                    }\n                },\n\n            }\n        },\n        MuiPicker: {\n            styleOverrides: {\n                root: {\n                    width: `var(--datePicker-width)`,\n                    background: colorBase.backgroundBox,\n                    boxShadow: colorBase.shadowBox,\n                    borderRadius: radius * 2 + 'px',\n                    border: borderFunc(themeMode).borderConfig({c_key: 'blur'}),\n                    '& svg': {\n                        fontSize: '2rem',\n                        color: colorBase.textSecondary\n                    },\n                    '& .MuiPickersCalendar-weekDayLabel': {\n                        fontSize: '1rem',\n                    },\n                    '& .MuiPickersArrowSwitcher-root .MuiIconButton-edgeEnd': {\n                        position: 'relative',\n                        padding: 3,\n                    }\n                },\n\n            }\n        },\n        MuiDateRangePickerViewDesktop: {\n            styleOverrides: {\n                root: {\n                    '& svg': {\n                        fontSize: '2rem',\n                        color: colorBase.textSecondary\n                    },\n                    background: colorBase.backgroundBox,\n                    boxShadow: colorBase.shadowBox,\n                    borderRadius: radius * 2 + 'px',\n                    border: borderFunc(themeMode).borderConfig({c_key: 'blur'}),\n                    fontSize: 1.6,\n                    \"& .MuiDateRangePickerViewDesktop-rangeCalendarContainer:not(:last-child)\": {\n                        borderColor: colorBase.border().blur,\n                    },\n                    \"& .MuiPickersArrowSwitcher-root\": {\n                        border: borderFunc(themeMode).borderConfig({c_key: \"rgba(0,0,0,0)\"}),\n                        borderBottomColor:colorBase.border().blur,\n                        boxSizing: \"border-box\",\n                        height: 52,\n                        minHeight: 52,\n                        maxHeight: 52,\n                        margin: 0,\n                        marginBottom: 0,\n                        '& .MuiIconButton-root': {\n                            color: colorBase.textSecondary\n                        },\n                        '& .MuiTypography-subtitle1,& .MuiTypography-subtitle2': {\n                            fontSize: '1.4rem'\n                        },\n\n                    },\n                    '& .MuiPickersCalendar-weekDayLabel': {\n                        fontSize: '1rem',\n                    },\n                    '& .MuiDateRangePickerDay-rangeIntervalPreview,& .MuiDateRangePickerDay-rangeIntervalDayPreview': {\n                        borderWidth: 0,\n                    },\n                    \"& .MuiDateRangePickerDay-day\": {\n                        transform: 'none',\n                    },\n                    '& .MuiDateRangePickerViewDesktop-calendar': {\n                        width: `var(--datePicker-width)`,\n                        minHeight: `var(--datePicker-height)`,\n                        marginBottom: '.8rem',\n                    },\n                    \"& .MuiDateRangePickerDay-dayOutsideRangeInterval:hover\": {\n                        borderColor: 'transparent'\n                    },\n\n                }\n            }\n        },\n        MuiPickersDesktopDateRangeCalendar: {\n            styleOverrides: {\n                root: {\n                    '& svg': {\n                        fontSize: '2rem',\n                        color: colorBase.textSecondary\n                    },\n                    background: colorBase.backgroundBox,\n                    boxShadow: colorBase.shadowBox,\n                    borderRadius: radius * 2 + 'px',\n                    border: borderFunc(themeMode).borderConfig({c_key: 'blur'}),\n                    fontSize: 1.6,\n                    \"& .MuiTypography-subtitle1\": {\n                        fontSize: fontDefault.h4\n                    },\n                    \"& .MuiPickersDesktopDateRangeCalendar-rangeCalendarContainer:not(:last-child)\": {\n                        borderColor: colorBase.border().blur,\n                    },\n                    \"& .MuiPickersArrowSwitcher-root\": {\n                        border: borderFunc(themeMode).borderConfig({c_key: \"rgba(0,0,0,0)\"}),\n                        borderBottomColor: colorBase.border().blur,\n                        boxSizing: \"border-box\",\n                        height: 52,\n                        minHeight: 52,\n                        maxHeight: 52,\n                        margin: 0,\n                        marginBottom: 0,\n                        '& .MuiIconButton-root': {\n                            color: colorBase.textSecondary\n                        },\n                        '& .MuiTypography-subtitle1,& .MuiTypography-subtitle2': {\n                            fontSize: '1.4rem'\n                        },\n\n                    },\n                    '& .MuiPickersCalendar-weekDayLabel': {\n                        fontSize: '1rem',\n                    },\n                    '& .MuiPickersDateRangeDay-rangeIntervalPreview,& .MuiPickersDateRangeDay-rangeIntervalDayPreview': {\n                        borderWidth: 0,\n                    },\n                    \"& .MuiPickersDateRangeDay-day\": {\n                        transform: 'none',\n                    },\n                    '& .MuiPickersDesktopDateRangeCalendar-calendar': {\n                        width: `var(--datePicker-width)`,\n                        minHeight: `var(--datePicker-height)`,\n                        marginBottom: '.8rem',\n                    },\n                    \"& .MuiPickersDateRangeDay-dayOutsideRangeInterval:hover\": {\n                        borderColor: 'transparent'\n                    }\n\n                }\n            }\n        },\n        MuiPickersDateRangeDay: {\n            styleOverrides: {\n                root: {\n                    \"&.MuiPickersDateRangeDay-rangeIntervalDayHighlight:last-child, &.MuiPickersDateRangeDay-rangeIntervalDayHighlightEnd\": {\n                        borderTopRightRadius: radius * 2 + 'px',\n                        borderBottomRightRadius: radius * 2 + 'px',\n                    },\n                    '&.MuiPickersDateRangeDay-rangeIntervalDayHighlight:first-of-type, &.MuiPickersDateRangeDay-rangeIntervalDayHighlightStart': {\n                        borderTopLeftRadius: radius * 2 + 'px',\n                        borderBottomLeftRadius: radius * 2 + 'px',\n                    },\n                    '& .MuiPickersDay-root:focus.Mui-selected': {\n                        backgroundColor: colorBase.primaryLight,\n                    },\n                    '& .MuiPickersDay-root:focus.Mui-selected,& .MuiPickersDay-root.Mui-selected,& .MuiPickersDay-root': {\n                        '&:hover': {\n                            borderColor: 'transparent'\n                        }\n                    }\n                }\n            }\n        },\n        MuiDateRangePickerDay: {\n            styleOverrides: {\n                root: {\n                    '&.MuiDateRangePickerDay-rangeIntervalDayHighlight:last-child, &.MuiDateRangePickerDay-rangeIntervalDayHighlightEnd': {\n                        borderTopRightRadius: radius * 2 + 'px',\n                        borderBottomRightRadius: radius * 2 + 'px',\n                    },\n                    '&.MuiDateRangePickerDay-rangeIntervalDayHighlight:first-of-type, &.MuiDateRangePickerDay-rangeIntervalDayHighlightStart': {\n                        borderTopLeftRadius: radius * 2 + 'px',\n                        borderBottomLeftRadius: radius * 2 + 'px',\n                    },\n                    '& .MuiPickersDay-root:focus.Mui-selected': {\n                        backgroundColor: colorBase.primaryLight,\n                    }\n                }\n            }\n        },\n        MuiPickersToolbarButton: {\n            styleOverrides: {\n                root: {\n                    fontSize: 1.6,\n                }\n            }\n        },\n        MuiPickersToolbar: {\n            root: {},\n        },\n        MuiPickersDay: {\n            styleOverrides: {\n                root: {\n                    '&&': {\n                        fontSize: '1.4rem',\n                        borderRadius: radius * 2 + 'px',\n                        border: borderFunc(themeMode).borderConfig({c_key: \"rgba(0,0,0,0)\"}),\n                    },\n\n                    \"&.Mui-selected,&:focus.Mui-selected \": {\n                        backgroundColor: colorBase.primaryLight,\n                        color: colorBase.textPrimaryLight,\n\n                    },\n                    \"&.Mui-disabled\": {\n                        //backgroundColor: colorBase.primaryLight,\n                        color: colorBase.textHint,\n\n                    },\n                    \"&.MuiPickersDay-today\": {\n                        \"&:not(.Mui-selected)\": {\n                            backgroundColor: 'transparent',\n                            color: colorBase.primaryLight,\n                            borderColor: 'transparent'\n                        },\n\n                        // borderColor: colorBase.primaryLight,\n                        \"&.Mui-selected\": {\n                            //backgroundColor: colorBase.primaryLight,\n                            color: colorBase.textPrimary,\n                            backgroundColor: colorBase.primaryLight,\n\n                        },\n                    },\n\n                    \"&:hover.Mui-selected, &:hover\": {\n                        backgroundColor: colorBase.backgroundHover,\n                    }\n\n\n                }\n            }\n        },\n        MuiPickersCalendar: {\n            styleOverrides: {\n                root: {\n                    minHeight: `var(--datePicker-height)`,\n                    marginBottom: '.8rem',\n                }\n            }\n        },\n        MuiPickersCalendarHeader: {\n            styleOverrides: {\n                root: {\n                    '&&': {\n                        border: borderFunc(themeMode).borderConfig({c_key: \"rgba(0,0,0,0)\"}),\n                        borderBottomColor: colorBase.border().blur,\n                        boxSizing: \"border-box\",\n                        height: 52,\n                        minHeight: 52,\n                        maxHeight: 52,\n                        margin: 0,\n                        marginBottom: 0,\n                        // margin:0,\n                    },\n                    '& .MuiButtonBase': {\n                        color: colorBase.textSecondary\n                    },\n                    '& .MuiTypography-subtitle1': {\n                        fontSize: fontDefault.h4\n                    }\n                }\n            }\n        },\n        MuiPickersYear: {\n            styleOverrides: {\n                root: {\n                    '&&': {\n                        fontSize: '1.4rem'\n                    },\n                    '&& .MuiPickersYear-yearButton': {\n                        color: colorBase.textSecondary,\n                        fontSize: '1.4rem',\n                        \"&.Mui-selected\": {\n                            backgroundColor: colorBase.primaryLight,\n                            color: colorBase.textPrimaryLight,\n                            borderRadius: radius * 2 + 'px',\n                        }\n                    }\n                }\n            }\n        },\n        MuiPickersModalDialog: {\n            dialogAction: {},\n        },\n    }\n}\n\n\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { ColorDarkDefault, ColorLightDefault } from \"../css/color-lib\";\nimport { borderFunc, unit } from \"./utils\";\nimport {\n    // MuiBackdrop,\n    MuiButton,\n    MuiButtonBase, MuiCard,\n    MuiCheckbox,\n    MuiDivider,\n    MuiIconButton,\n    MuiInputBase,\n    MuiInputLabel,\n    MuiLink,\n    MuiListItem,\n    MuiListItemAvatar,\n    MuiMenuItem,\n    MuiModal,\n    MuiPaginationItem,\n    MuiPaper, MuiPopover, MuiRadio, MuiSvgIcon,\n    MuiSwitch,\n    MuiTab,\n    MuiTabs,\n    MuiTextField,\n    MuiToggleButton,\n    MuiToolbar,\n    radius,\n} from \"./overrides-mui\";\nimport { MuPickDate } from './overrides-date-pick';\nimport { fontDefault } from \"../css/global\";\nimport { LoopringTheme, ThemeKeys } from '../interface';\n\nexport { unit };\nexport const getTheme = (themeMode: ThemeKeys): LoopringTheme => {\n    const colorBase: typeof ColorDarkDefault = themeMode === 'dark' ? ColorDarkDefault : ColorLightDefault\n    const theme = createMuiTheme({\n        spacing: unit,\n        palette: {\n            mode: themeMode,\n            primary: {\n                light: colorBase.primaryLight,\n                main: colorBase.primary,\n                dark: colorBase.primaryDark,\n                contrastText: \"#fff\"\n            },\n            secondary: {\n                light: colorBase.secondary,\n                main: colorBase.secondary,\n                dark: colorBase.primaryDark,\n                contrastText: \"#fff\",\n                // light:\n            },\n            contrastThreshold: 3,\n            tonalOffset: 0.2,\n            background: {\n                paper: colorBase.background().bg,\n                default: colorBase.background().default,\n            },\n            text: {\n                primary: colorBase.textPrimary,\n                secondary: colorBase.textSecondary,\n                disabled: colorBase.textDisable,\n                //hint: colorBase.textHint,\n            },\n            // divider: \"rgba(0, 0, 0, 0.12)\",\n            common: {\"black\": \"#000\", \"white\": \"#fff\"},\n            action: {\n                hoverOpacity: 0.05,\n                hover: colorBase.textPrimary,\n                selected: colorBase.textPrimary,\n                // disabledBackground: \"rgba(0, 0, 0, 0.12)\",\n                disabled: colorBase.textDisable,\n                active:colorBase.textPrimaryLight,\n            },\n            error: {\n                main: colorBase.error,\n                dark: colorBase.error,\n                contrastText: \"#fff\",\n            },\n        },\n        typography: {\n            fontFamily: `Gilroy-Medium, Helvetica, Arial, \"华文细黑\", \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"宋体\", Heiti, \"黑体\", sans-serif`,\n            fontSize: 12,\n            h1: {\n                fontSize: 48,\n            },\n            h2: {\n                fontSize: 36,\n            },\n            h3: {\n                fontSize: 16,\n            },\n            h4: {\n                fontSize: 20,\n            },\n            h5: {\n                fontSize: 14,\n                margin: 0,\n            },\n            h6: {\n                fontSize: 12,\n                margin: 0,\n            },\n            subtitle1: {\n                fontSize: 24,\n            },\n            button: {\n                fontSize: 20,\n            },\n            body1: {\n                fontSize: 14,\n                fontColor: colorBase.textPrimary,\n            },\n            body2: {\n                fontSize: 12,\n                fontColor: colorBase.textSecondary,\n            },\n        },\n        components: {\n            MuiCard:MuiCard({colorBase}),\n            MuiCheckbox: MuiCheckbox({colorBase}),\n            MuiLink: MuiLink({colorBase}),\n            MuiModal: MuiModal({colorBase}),\n            // MuiBackdrop:MuiBackdrop({colorBase}),\n            MuiPopover:MuiPopover({colorBase}),\n            MuiToolbar: MuiToolbar(),\n            MuiSvgIcon:MuiSvgIcon(),\n            MuiTabs: MuiTabs(),\n\n            MuiTab: MuiTab({colorBase}),\n            MuiButtonBase: MuiButtonBase,\n            MuiRadio:MuiRadio({colorBase}),\n            MuiButton: MuiButton({colorBase, themeMode}),\n            MuiToggleButton: MuiToggleButton({colorBase}),\n            MuiSwitch: MuiSwitch({colorBase}),\n            MuiIconButton: MuiIconButton,\n            MuiPaginationItem: MuiPaginationItem({colorBase}),\n            MuiTextField: MuiTextField(),\n            MuiInputBase: MuiInputBase({colorBase}),\n            MuiMenuItem: MuiMenuItem({colorBase}),\n            MuiListItem: MuiListItem({colorBase}),\n            MuiListItemAvatar: MuiListItemAvatar(),\n            MuiInputLabel: MuiInputLabel({colorBase}),\n            // MuiPopover: MuiPopover({colorBase, themeMode}),\n            MuiPaper: MuiPaper({colorBase, themeMode}),\n            MuiDivider: MuiDivider({colorBase}),\n            ...MuPickDate({colorBase, themeMode})\n        },\n        shape: {borderRadius: radius}\n    });\n    return {\n        ...theme, ...{\n            unit,\n            mode: themeMode,\n            border: borderFunc(themeMode), fontDefault,\n            colorBase: themeMode === 'dark' ? ColorDarkDefault : ColorLightDefault\n        }\n    }\n}\n\n\n","export enum HeaderMenuTabStatus {\n    hidden = 'hidden',\n    disabled = 'disabled',\n    default = 'default'\n}\n\nexport interface HeaderMenuItemInterface {\n    label: {\n        icon?: any,\n        id: string,\n        style?: any,\n        description?: string,\n        i18nKey:string\n    },\n    child?: Array<HeaderMenuItemInterface>,\n    router?: { path: string, [ key: string ]: any },\n    status?: keyof typeof HeaderMenuTabStatus\n    extender?: React.ElementType<any>|JSX.Element | undefined,\n}\n\n\n","export enum WalletStatus {\n    disabled = 'disabled',\n    loading = 'loading',\n    unlock = 'unlock',\n    connect = 'connect',\n    noAccount = 'noAccount',\n    accountPending = 'accountPending',\n    noNetwork='noNetwork',\n    default = 'default',\n}\n\nexport interface GatewayItem {\n    key: string\n    imgSrc: string\n    handleSelect?: (event: React.MouseEvent) => void\n}","import { GatewayItem } from '../loopring-interface';\n\nexport const gatewayList: GatewayItem[] = [\n    {\n        key: 'MetaMask',\n        imgSrc: 'static/svg/meta-mask.svg',\n    },\n    {\n        key: 'WalletConnect',\n        imgSrc: 'static/svg/wallet-connect.svg',\n    },\n    {\n        key: 'Ledger',\n        imgSrc: 'static/svg/ledger.svg',\n    },\n    {\n        key: 'Trezor',\n        imgSrc: 'static/svg/trezor.svg',\n    },\n]\n","export enum UpColor {\n    green = 'green',\n    red = 'red'\n}\n\nexport enum Currency {\n    dollar='USD',\n    yen='CNY',\n}\n\nexport const  SlippageTolerance:Array<0.1|0.5|1|string> =  [0.1, 0.5, 1]","export enum FloatTag {\n    increase = 'increase',\n    decrease = 'decrease',\n    none = 'none'\n}\n","export enum ChartType {\n    Depth = 'Depth',\n    Trend = 'Trend',\n    Kline = 'Kline',\n}\n\nexport enum ChartUnit {\n    W1 = '1W',\n    H1 = '1H',\n    D1 = '1D',\n}\n","export enum WithdrawType {\n    'Fast' = 'Fast',\n    'Standard' = 'Standard',\n}\n\nexport const WithdrawTypes: {\n    [P in keyof typeof WithdrawType]: string | number\n} = {\n    'Fast': '',\n    'Standard': '',\n}\n\nexport  type PriceTagType = '$'|'￥';\n\nexport enum PriceTag {\n    Dollar='$',\n    Yuan='￥'\n}\n\n\nexport enum TradeTypes {\n    Buy = 'Buy',\n    Sell = 'Sell'\n}\n\nexport enum TradeStatus {\n    // Filled = 'Filled',\n    // Cancelled = 'Cancelled',\n    // Succeeded = 'Succeeded',\n    Processing = 'processing',\n    Processed = 'processed',\n    Cancelling = 'cancelling',\n    Cancelled = 'cancelled',\n    Expired = 'expired',\n    Waiting = 'waiting'\n}\nexport const EmptyValueTag = 'N/a'\n\n\n","import {\n    AssetsIcon,\n    AmmIcon,\n    // MakerRebatesIcon,\n    MiningIcon,\n    MyLiquidityIcon,\n    OrderIcon,\n    // OrderMinIcon,\n    PoolsIcon, SettingIcon,\n    TradeIcon,\n    TransactionsIcon\n} from '../svg';\n\nimport { ThemeType } from '../themes';\nimport { HeaderMenuItemInterface, HeaderMenuTabStatus } from '../loopring-interface';\n\nexport enum ButtonComponentsMap {\n    Download = 0,\n    Notification = 1,\n    Theme = 2,\n    Language = 3,\n    WalletConnect = 4,\n}\n\nexport const ToolBarAvailableItem = [\n    ButtonComponentsMap.Download,\n    // ButtonComponentsMap.Notification,\n    ButtonComponentsMap.Theme,\n    ButtonComponentsMap.Language,\n    ButtonComponentsMap.WalletConnect\n]\n\nexport let headerToolBarData: Array<{ buttonComponent: number, handleClick?: (props: any) => void, [ key: string ]: any }> = [\n    {\n        buttonComponent: ButtonComponentsMap.Download,\n        url: 'https://apps.apple.com/us/app/loopring-smart-wallet/id1550921126',\n        i18nTitle: 'labelDownloadAppTitle',\n        i18nDescription: 'labelDownloadBtn',\n    },\n    {buttonComponent: ButtonComponentsMap.Notification, label: 'labelNotification',},\n    {\n        buttonComponent: ButtonComponentsMap.Theme,\n        themeMode: ThemeType.dark,\n        label: 'themeSetting',\n        handleClick: undefined\n    },\n    {\n        buttonComponent: ButtonComponentsMap.Language,\n        // language: LanguageType.en_US,\n        label: 'languageSetting',\n        handleClick: undefined,\n    },\n    {\n        buttonComponent: ButtonComponentsMap.WalletConnect,\n        label: 'labelConnectWallet',\n        status: undefined,\n        notificationList: [],\n        handleClick: undefined\n    }];\nexport let layer2ItemData: Array<HeaderMenuItemInterface> = [{\n    label: {\n        id: 'Classic', i18nKey: 'labelClassic',\n        description: 'labelClassicDescription',\n    },\n    router: {path: '/trading/lite'},\n}, {\n    label: {\n        id: 'Advanced', i18nKey: 'labelAdvanced',\n        //TODO: translate id\n        description: 'labelAdvancedDescription',\n    },\n    router: {path: '/trading/pro'},\n},\n]\n\n\nexport enum HeadMenuTabKey {\n    markets,\n    trade,\n    liquidity,\n    Layer2,\n}\n\nexport enum NavListIndex {\n    markets,\n    trade,\n    liquidity,\n    layer2\n}\n\nexport let headerMenuData: Array<HeaderMenuItemInterface> = [\n    {\n        label: {\n            id: 'Markets', i18nKey: 'labelMarkets',\n        },\n        router: {path: '/markets'},\n        status: HeaderMenuTabStatus.default,\n    },\n    {\n        label: {\n            id: 'Trading', i18nKey: 'labelTrade',\n        },\n        router: {path: '/trading'},\n        child: layer2ItemData,\n        status: HeaderMenuTabStatus.default,\n    },\n    {\n        label: {\n            id: 'Liquidity', i18nKey: 'labelLiquidity',\n        },\n        router: {path: '/liquidity'},\n        status: HeaderMenuTabStatus.default,\n    },\n    {\n        label: {\n            id: 'Layer2', i18nKey: 'labelLayer2',\n        },\n        router: {path: '/layer2'},\n        status: HeaderMenuTabStatus.default,\n\n    }\n];\n\nexport const subMenuLayer2 = {\n    assetsGroup: [{\n        icon: AssetsIcon,\n        router: {path: '/layer2/assets'},\n        label: {\n            id: 'assets', i18nKey: 'labelAssets',\n        },\n    }],\n    transactionsGroup: [{\n        icon: TransactionsIcon,\n        router: {path: '/layer2/transactions'},\n        label: {\n            id: 'transactions', i18nKey: 'labelTransactions',\n        },\n    }, {\n        icon: TradeIcon,\n        router: {path: '/layer2/trades'},\n        label: {\n            id: 'trades', i18nKey: 'labelTrades',\n        },\n    },\n        {\n            icon: AmmIcon,\n            router: { path: '/layer2/ammRecords' },\n            label: {\n                id: 'AmmRecords', i18nKey: 'labelAmmRecords',\n                description: 'labelAmmRecordsDes',\n            },\n        }\n    ],\n    countInfoGroup: [{\n        icon: OrderIcon,\n        router: {path: '/layer2/orders'},\n        label: {\n            id: 'orders', i18nKey: 'labelOrders',\n        },\n    },\n    \n    ],\n    settingGroup: [{\n        icon: SettingIcon,\n        router: {path: '/layer2/setting'},\n        label: {\n            id: 'setting',\n            i18nKey: 'labelSetting',\n        },\n    },\n\n    ]\n}\n\n\nexport const subMenuLiquidity = {\n    poolsGroup: [{\n        icon: PoolsIcon,\n        router: {path: '/liquidity/pools'},\n        label: {\n            id: 'pools',\n            i18nKey: 'labelPools',\n        },\n    }, {\n        icon: MiningIcon,\n        router: {path: '/liquidity/amm-mining'},\n        label: {\n            id: 'amm-mining',\n            i18nKey: 'labelAmmMining',\n        },\n    }, {\n        icon: MyLiquidityIcon,\n        router: {path: '/liquidity/my-liquidity'},\n        label: {\n            id: 'my-liquidity',\n            i18nKey: 'labelMyLiquidity',\n        },\n    }],\n    // bookGroup: [{\n    //     icon: OrderMinIcon,\n    //     router: {path: '/liquidity/orderBook-Mining'},\n    //     label: {\n    //         id: 'orderBook-Mining',\n    //         i18nKey: 'labelOrderBookMining',\n    //     }\n    // },\n    //     {\n    //     icon: MakerRebatesIcon,\n    //     router: {path: '/liquidity/maker-rebates'},\n    //     label: {\n    //         id: 'maker-rebates',\n    //         i18nKey: 'labelMakerRebates',\n    //     },\n    // }\n    // ]\n}\nexport const headerRoot = 'trade'\n","export enum TableType {\n    filter = 'filter',\n    page = 'page'\n}\n","/**\n *\n * @param value\n * @param minFractionDigits default = 6\n * @returns\n */\nexport const getThousandFormattedNumbers = (value: undefined|number, minFractionDigits: number = 6 , option?:{isAbbreviate:boolean}) => {\n    if (!Number.isFinite(value)) return value\n    let result =  value!==undefined?value.toLocaleString('en', {\n        minimumFractionDigits: minFractionDigits\n    }).replace(/(\\.\\d+?)0*$/, '$1'):undefined\n    return value == undefined? undefined :option && option.isAbbreviate? abbreviateNumber(value):result;\n\n\n\n}\n\nexport function abbreviateNumber(value: number) {\n    let newValue = value,result:string = '';\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue >= 1000) {\n        newValue /= 1000;\n        suffixNum++;\n    }\n\n    result = newValue.toPrecision(3);\n\n    result += suffixes[suffixNum];\n    return result;\n}","import type { Provider as TProvider } from \"react\";\n\nexport const provider = (Provider: TProvider<any>, props: any = {}) => [Provider, props];\n\n/**\n * @param providers  inner -> outer\n * @param children\n * @constructor\n * example\n *  <ProviderComposer  providers={[\n *     provider(LocalizationProvider,{dateAdapter:MomentUtils}),\n *     provider(I18nextProvider,{i18n}),\n *     provider(ThemeProvider),\n *   ]}>\n *     <App />\n *  </ProviderComposer>\n */\nexport const ProviderComposer = ({providers, children}: { providers: Array<[TProvider<any>, any]>, children: any }) => {\n    // @ts-ignore\n    return providers.reduce((children, [Provider, props]: [TProvider<any>, any]) => {\n            // @ts-ignore\n            return <Provider {...props}>{children}</Provider>\n        }\n        , children)\n    // return children;\n}\n\n","export const ErrorMap  = {\n    LOADING_WHOLE_SITE : {\n        id:'LOADING_WHOLE_SITE',\n        messageKey: 'errorLoading'\n    },\n    NO_SUPPORT_PAIR: {\n        id:'NO_SUPPORT_PAIR',\n        messageKey: 'no support base/quote pair!'\n    },\n    NO_SDK:{\n        id:'NO_SDK',\n        messageKey: 'errorBase'\n    },\n    NO_NETWORK_ERROR : {\n        id:'NO_NETWORK_ERROR',\n        messageKey: 'errorMessageNoNetwork'\n    },\n    NO_TOKEN_MAP : {\n        id:'NO_TOKEN_MAP',\n        messageKey: 'errorMessageTokenMapIsEmpty'\n    },\n    NO_ENOUGH_BALANCE:{\n        id:'NO_ENOUGH_BALANCE',\n        messageKey: 'errorTokenNotEnough'\n    },\n    NO_TOKEN_KEY_LIST:{\n        id:'NO_TOKEN_KEY_LIST',\n        messageKey: 'errorRequiredTokenKeyList'\n    },\n    GET_X_TOKEN_TICKER_ERROR:{\n        id:'NO_TOKEN_KEY_LIST',\n        messageKey: 'errorRequiredTokenKeyList',\n        options:{}\n    },\n    BUILD_AMM_MAP_WITH_TICKER:{\n        id:'BUILD_AMM_MAP_WITH_TICKER',\n        messageKey: 'errorBase',\n        options:{}\n    },\n    TRADE_LITE_SET_PAIR_ERROR:{\n        id:'TRADE_LITE_SET_PAIR_ERROR',\n        messageKey: 'errorBase',\n        options:{}\n    },\n    SOCKET_ERROR:{\n        id:'SOCKET_ERROR',\n        messageKey: 'errorBase',\n        options:{}\n    },\n    TRADE_404:{\n        id:'404',\n        messageKey: 'error404',\n        options:{}\n    }\n\n\n}\nexport type ErrorObject =  {\n    from?:string,\n    timestamp?:number,\n    messageKey:string\n    [key:string]:any,\n}","export * from './errorMap'\n\nexport type ErrorType = {\n    id: string,\n    messageKey: string,\n    options?: any\n}\n\nexport class CustomError extends Error {\n    get options(): any {\n        return this._options;\n    }\n\n    private _options: any;\n\n    get messageKey(): string {\n        return this._messageKey;\n    }\n\n    get date(): number {\n        return this._date;\n    }\n\n    private _date: number;\n    private _messageKey: string;\n\n    constructor(error: ErrorType) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(error.id)\n\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, CustomError)\n        }\n\n        this.name = error.id;\n        this.message = error.id;\n        this._date = Date.now();\n        this._messageKey = error.messageKey;\n        this._options = error.options\n        // Custom debugging information\n        // this.foo = foo\n        // this.date = new Date()\n    }\n}\n","import { ModalProvider } from 'styled-react-modal'\nimport RouterView from './routers'\nimport { Avatar, GlobalStyles } from '@material-ui/core';\nimport { css, Theme, useTheme } from '@emotion/react';\nimport { globalCss,ErrorMap } from '@loopring-web/component-lib/static-resource';\nimport { GlobalProvider, Web3ReactManager } from './provider/';\nimport React, { useEffect } from 'react';\nimport { useInit } from './hook';\nimport { STATUS } from 'stores/constant';\nimport loadingSvg from 'common-resources/assets/svg/loading.svg';\nimport { ErrorPage } from './pages/ErrorPage';\n\nconst App =  () => {\n    const theme: Theme = useTheme();\n    const { state } = useInit();\n    const [status,setStatus] = React.useState<keyof typeof STATUS>('PENDING');\n    // check all status be\n    //TODO  demo if  tokenMapStatus is unset and tokenMap is empty. show error\n    //TODO tokenMapObj.status is pending, show global loading\n    //console.log(tokenMapObj.tokenMap && Object.keys(tokenMapObj.tokenMap).length>0,tokenMapObj.status, tokenMapObj.errorMessage)\n\n    useEffect(() => {\n      if (state === STATUS.PENDING || state === STATUS.ERROR) {\n          setStatus(state)\n      } else {\n          setStatus('DONE')\n      }\n    }, [state, setStatus])\n    \n    return <><GlobalStyles styles={css` \n      ${globalCss({theme})};\n      body{\n          ${theme.mode === 'dark' ? `\n            color: ${theme.colorBase.textPrimary};\n          `:``}\n      }\n      body:before {\n        ${theme.mode === 'dark' ? `\n            background: #191C30;\n            background: ${theme.colorBase.background().bg};\n       ` : ''}\n      }\n      //#root{\n      //  display: flex;\n      //  flex-direction: column;\n      //}\n}`}></GlobalStyles>\n  <ModalProvider>\n      <GlobalProvider>\n          <Web3ReactManager>\n              { status === 'PENDING' ?\n                  <ErrorPage {...ErrorMap.LOADING_WHOLE_SITE}/>\n                  // <Avatar src={loadingSvg}/>\n                  : status === 'ERROR'? <ErrorPage {...ErrorMap.NO_NETWORK_ERROR}/> : <>\n                  <RouterView />\n                  {/*    <ErrorPage {...ErrorMap.LOADING_WHOLE_SITE}/>*/}\n                  </>  }\n          </Web3ReactManager>\n      </GlobalProvider>\n  </ModalProvider></>\n\n     \n}\n\n// const mapStateToProps = state => {\n//     ,\n//         status,\n//         updateTokenMap\n//     return {\n//         tokenMap: state.tokenMap.tokenMap,\n//         tokenMap: state.tokenMap.t,\n//         actionCreated: state.posts.newAction\n//     };\n// };\n\n\nexport default App;\n\n// connect(\n//     mapStateToProps,\n//     null // Generaly its the place of mapStateToDispatch\n// )(App);\n\n"],"sourceRoot":""}