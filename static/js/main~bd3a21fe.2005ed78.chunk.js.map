{"version":3,"sources":["../node_modules/bip39/index.js","../node_modules/blake2b/index.js","../node_modules/blake-hash/js.js","../node_modules/blake-hash/lib/blake256.js","../node_modules/blake-hash/lib/blake.js","../node_modules/blake-hash/lib/blake512.js","../node_modules/bip66/index.js","../node_modules/blake2b-wasm/index.js","../node_modules/blake2b-wasm/blake2b.js","../node_modules/blake-hash/lib/api/index.js","../node_modules/blake-hash/lib/api/blake.js","../node_modules/blake-hash/lib/index.js","../node_modules/blake-hash/lib/blake224.js","../node_modules/blake-hash/lib/blake384.js"],"names":["Buffer","require","createHash","_pbkdf2","pbkdf2","pbkdf2Sync","pbkdf2Async","randomBytes","unorm","CHINESE_SIMPLIFIED_WORDLIST","CHINESE_TRADITIONAL_WORDLIST","ENGLISH_WORDLIST","FRENCH_WORDLIST","ITALIAN_WORDLIST","JAPANESE_WORDLIST","KOREAN_WORDLIST","SPANISH_WORDLIST","DEFAULT_WORDLIST","INVALID_MNEMONIC","INVALID_ENTROPY","lpad","str","padString","length","binaryToByte","bin","parseInt","bytesToBinary","bytes","map","x","toString","join","deriveChecksumBits","entropyBuffer","CS","hash","update","digest","slice","call","salt","password","mnemonicToSeed","mnemonic","mnemonicBuffer","from","nfkd","saltBuffer","mnemonicToSeedAsync","Promise","resolve","reject","error","err","data","mnemonicToEntropy","wordlist","words","split","Error","bits","word","index","indexOf","dividerIndex","Math","floor","entropyBits","checksumBits","entropyBytes","match","entropy","entropyToMnemonic","isBuffer","TypeError","binary","module","exports","mnemonicToSeedHex","mnemonicToSeedHexAsync","then","buf","generateMnemonic","strength","rng","validateMnemonic","e","wordlists","EN","JA","chinese_simplified","chinese_traditional","english","french","italian","japanese","korean","spanish","assert","b2wasm","ADD64AA","v","a","b","o0","o1","ADD64AC","b0","b1","B2B_GET32","arr","i","B2B_G","c","d","ix","iy","x0","m","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA82","Uint8Array","blake2bCompress","ctx","last","h","t","parameter_block","Blake2b","outlen","key","personal","fill","this","set","blake2bUpdate","input","toHex","n","prototype","out","blake2bFinal","hexSlice","final","ready","cb","Proto","noAssert","BYTES_MIN","BYTES_MAX","KEYBYTES_MIN","KEYBYTES_MAX","SALTBYTES","PERSONALBYTES","WASM_SUPPORTED","SUPPORTED","WASM_LOADED","BYTES","KEYBYTES","Blake","zo","oo","rot","g","sigma","u256","_h","_s","_block","alloc","_blockOffset","_length","_nullt","_zo","_oo","Array","readUInt32BE","lo","hi","msglen","writeUInt32BE","padding","_padding","buffer","j","block","offset","_lengthCarry","_compress","u512","len","check","lenR","lenS","decode","r","s","encode","signature","allocUnsafe","copy","wasm","head","freeList","digestLength","push","finalized","pointer","pop","memory","realloc","blake2b_init","noop","blake2b_update","enc","blake2b_final","start","WASM","WebAssembly","onload","loadWebAssembly","opts","supported","imp","imports","atob","charCodeAt","mod","size","grow","ceil","abs","bind","catch","async","setup","instance","Instance","Module","instantiate","w","engines","algorithm","options","Engine","toLowerCase","Blake224","Blake256","Blake384","Blake512","getEngine","Transform","engine","_engine","_finalized","chunk","encoding","callback","undefined"],"mappings":"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AG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACnD,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GACpD,CAAC,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GACpD,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GACpD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,IACnD,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GACpD,CAAC,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACnD,CAAC,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IACnD,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GACpD,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GACpD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACnD,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GACpD,CAAC,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GACpD,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GACpD,CAAC,EAAG,EAAG,EAA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","file":"static/js/main~bd3a21fe.2005ed78.chunk.js","sourcesContent":["var Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar _pbkdf2 = require('pbkdf2')\nvar pbkdf2 = _pbkdf2.pbkdf2Sync\nvar pbkdf2Async = _pbkdf2.pbkdf2\nvar randomBytes = require('randombytes')\n\n// use unorm until String.prototype.normalize gets better browser support\nvar unorm = require('unorm')\n\nvar CHINESE_SIMPLIFIED_WORDLIST = require('./wordlists/chinese_simplified.json')\nvar CHINESE_TRADITIONAL_WORDLIST = require('./wordlists/chinese_traditional.json')\nvar ENGLISH_WORDLIST = require('./wordlists/english.json')\nvar FRENCH_WORDLIST = require('./wordlists/french.json')\nvar ITALIAN_WORDLIST = require('./wordlists/italian.json')\nvar JAPANESE_WORDLIST = require('./wordlists/japanese.json')\nvar KOREAN_WORDLIST = require('./wordlists/korean.json')\nvar SPANISH_WORDLIST = require('./wordlists/spanish.json')\nvar DEFAULT_WORDLIST = ENGLISH_WORDLIST\n\nvar INVALID_MNEMONIC = 'Invalid mnemonic'\nvar INVALID_ENTROPY = 'Invalid entropy'\nvar INVALID_CHECKSUM = 'Invalid mnemonic checksum'\n\nfunction lpad (str, padString, length) {\n  while (str.length < length) str = padString + str\n  return str\n}\n\nfunction binaryToByte (bin) {\n  return parseInt(bin, 2)\n}\n\nfunction bytesToBinary (bytes) {\n  return bytes.map(function (x) {\n    return lpad(x.toString(2), '0', 8)\n  }).join('')\n}\n\nfunction deriveChecksumBits (entropyBuffer) {\n  var ENT = entropyBuffer.length * 8\n  var CS = ENT / 32\n  var hash = createHash('sha256').update(entropyBuffer).digest()\n\n  return bytesToBinary([].slice.call(hash)).slice(0, CS)\n}\n\nfunction salt (password) {\n  return 'mnemonic' + (password || '')\n}\n\nfunction mnemonicToSeed (mnemonic, password) {\n  var mnemonicBuffer = Buffer.from(unorm.nfkd(mnemonic), 'utf8')\n  var saltBuffer = Buffer.from(salt(unorm.nfkd(password)), 'utf8')\n\n  return pbkdf2(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512')\n}\n\nfunction mnemonicToSeedHex (mnemonic, password) {\n  return mnemonicToSeed(mnemonic, password).toString('hex')\n}\n\nfunction mnemonicToSeedAsync (mnemonic, password) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var mnemonicBuffer = Buffer.from(unorm.nfkd(mnemonic), 'utf8')\n      var saltBuffer = Buffer.from(salt(unorm.nfkd(password)), 'utf8')\n    } catch (error) {\n      return reject(error)\n    }\n\n    pbkdf2Async(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512', function (err, data) {\n      if (err) return reject(err)\n      else return resolve(data)\n    })\n  })\n}\n\nfunction mnemonicToSeedHexAsync (mnemonic, password) {\n  return mnemonicToSeedAsync(mnemonic, password)\n    .then(function (buf) { return buf.toString('hex') })\n}\n\nfunction mnemonicToEntropy (mnemonic, wordlist) {\n  wordlist = wordlist || DEFAULT_WORDLIST\n\n  var words = unorm.nfkd(mnemonic).split(' ')\n  if (words.length % 3 !== 0) throw new Error(INVALID_MNEMONIC)\n\n  // convert word indices to 11 bit binary strings\n  var bits = words.map(function (word) {\n    var index = wordlist.indexOf(word)\n    if (index === -1) throw new Error(INVALID_MNEMONIC)\n\n    return lpad(index.toString(2), '0', 11)\n  }).join('')\n\n  // split the binary string into ENT/CS\n  var dividerIndex = Math.floor(bits.length / 33) * 32\n  var entropyBits = bits.slice(0, dividerIndex)\n  var checksumBits = bits.slice(dividerIndex)\n\n  // calculate the checksum and compare\n  var entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte)\n  if (entropyBytes.length < 16) throw new Error(INVALID_ENTROPY)\n  if (entropyBytes.length > 32) throw new Error(INVALID_ENTROPY)\n  if (entropyBytes.length % 4 !== 0) throw new Error(INVALID_ENTROPY)\n\n  var entropy = Buffer.from(entropyBytes)\n  var newChecksum = deriveChecksumBits(entropy)\n  if (newChecksum !== checksumBits) throw new Error(INVALID_CHECKSUM)\n\n  return entropy.toString('hex')\n}\n\nfunction entropyToMnemonic (entropy, wordlist) {\n  if (!Buffer.isBuffer(entropy)) entropy = Buffer.from(entropy, 'hex')\n  wordlist = wordlist || DEFAULT_WORDLIST\n\n  // 128 <= ENT <= 256\n  if (entropy.length < 16) throw new TypeError(INVALID_ENTROPY)\n  if (entropy.length > 32) throw new TypeError(INVALID_ENTROPY)\n  if (entropy.length % 4 !== 0) throw new TypeError(INVALID_ENTROPY)\n\n  var entropyBits = bytesToBinary([].slice.call(entropy))\n  var checksumBits = deriveChecksumBits(entropy)\n\n  var bits = entropyBits + checksumBits\n  var chunks = bits.match(/(.{1,11})/g)\n  var words = chunks.map(function (binary) {\n    var index = binaryToByte(binary)\n    return wordlist[index]\n  })\n\n  return wordlist === JAPANESE_WORDLIST ? words.join('\\u3000') : words.join(' ')\n}\n\nfunction generateMnemonic (strength, rng, wordlist) {\n  strength = strength || 128\n  if (strength % 32 !== 0) throw new TypeError(INVALID_ENTROPY)\n  rng = rng || randomBytes\n\n  return entropyToMnemonic(rng(strength / 8), wordlist)\n}\n\nfunction validateMnemonic (mnemonic, wordlist) {\n  try {\n    mnemonicToEntropy(mnemonic, wordlist)\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n\nmodule.exports = {\n  mnemonicToSeed: mnemonicToSeed,\n  mnemonicToSeedAsync: mnemonicToSeedAsync,\n  mnemonicToSeedHex: mnemonicToSeedHex,\n  mnemonicToSeedHexAsync: mnemonicToSeedHexAsync,\n  mnemonicToEntropy: mnemonicToEntropy,\n  entropyToMnemonic: entropyToMnemonic,\n  generateMnemonic: generateMnemonic,\n  validateMnemonic: validateMnemonic,\n  wordlists: {\n    EN: ENGLISH_WORDLIST,\n    JA: JAPANESE_WORDLIST,\n\n    chinese_simplified: CHINESE_SIMPLIFIED_WORDLIST,\n    chinese_traditional: CHINESE_TRADITIONAL_WORDLIST,\n    english: ENGLISH_WORDLIST,\n    french: FRENCH_WORDLIST,\n    italian: ITALIAN_WORDLIST,\n    japanese: JAPANESE_WORDLIST,\n    korean: KOREAN_WORDLIST,\n    spanish: SPANISH_WORDLIST\n  }\n}\n","var assert = require('nanoassert')\nvar b2wasm = require('blake2b-wasm')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  for (i = 0; i < 12; i++) {\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n}\n\n// reusable parameter_block\nvar parameter_block = new Uint8Array([\n  0, 0, 0, 0,      //  0: outlen, keylen, fanout, depth\n  0, 0, 0, 0,      //  4: leaf length, sequential mode\n  0, 0, 0, 0,      //  8: node offset\n  0, 0, 0, 0,      // 12: node offset\n  0, 0, 0, 0,      // 16: node depth, inner length, rfu\n  0, 0, 0, 0,      // 20: rfu\n  0, 0, 0, 0,      // 24: rfu\n  0, 0, 0, 0,      // 28: rfu\n  0, 0, 0, 0,      // 32: salt\n  0, 0, 0, 0,      // 36: salt\n  0, 0, 0, 0,      // 40: salt\n  0, 0, 0, 0,      // 44: salt\n  0, 0, 0, 0,      // 48: personal\n  0, 0, 0, 0,      // 52: personal\n  0, 0, 0, 0,      // 56: personal\n  0, 0, 0, 0       // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction Blake2b (outlen, key, salt, personal) {\n  // zero out parameter_block before usage\n  parameter_block.fill(0)\n  // state, 'param block'\n\n  this.b = new Uint8Array(128)\n  this.h = new Uint32Array(16)\n  this.t = 0 // input count\n  this.c = 0 // pointer within buffer\n  this.outlen = outlen // output length in bytes\n\n  parameter_block[0] = outlen\n  if (key) parameter_block[1] = key.length\n  parameter_block[2] = 1 // fanout\n  parameter_block[3] = 1 // depth\n\n  if (salt) parameter_block.set(salt, 32)\n  if (personal) parameter_block.set(personal, 48)\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    this.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameter_block, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(this, key)\n    // at the end\n    this.c = 128\n  }\n}\n\nBlake2b.prototype.update = function (input) {\n  assert(input != null, 'input must be Uint8Array or Buffer')\n  blake2bUpdate(this, input)\n  return this\n}\n\nBlake2b.prototype.digest = function (out) {\n  var buf = (!out || out === 'binary' || out === 'hex') ? new Uint8Array(this.outlen) : out\n  assert(buf.length >= this.outlen, 'out must have at least outlen bytes of space')\n  blake2bFinal(this, buf)\n  if (out === 'hex') return hexSlice(buf)\n  return buf\n}\n\nBlake2b.prototype.final = Blake2b.prototype.digest\n\nBlake2b.ready = function (cb) {\n  b2wasm.ready(function () {\n    cb() // ignore the error\n  })\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx, out) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\nfunction hexSlice (buf) {\n  var str = ''\n  for (var i = 0; i < buf.length; i++) str += toHex(buf[i])\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nvar Proto = Blake2b\n\nmodule.exports = function createHash (outlen, key, salt, personal, noAssert) {\n  if (noAssert !== true) {\n    assert(outlen >= BYTES_MIN, 'outlen must be at least ' + BYTES_MIN + ', was given ' + outlen)\n    assert(outlen <= BYTES_MAX, 'outlen must be at most ' + BYTES_MAX + ', was given ' + outlen)\n    if (key != null) assert(key.length >= KEYBYTES_MIN, 'key must be at least ' + KEYBYTES_MIN + ', was given ' + key.length)\n    if (key != null) assert(key.length <= KEYBYTES_MAX, 'key must be at most ' + KEYBYTES_MAX + ', was given ' + key.length)\n    if (salt != null) assert(salt.length === SALTBYTES, 'salt must be exactly ' + SALTBYTES + ', was given ' + salt.length)\n    if (personal != null) assert(personal.length === PERSONALBYTES, 'personal must be exactly ' + PERSONALBYTES + ', was given ' + personal.length)\n  }\n\n  return new Proto(outlen, key, salt, personal)\n}\n\nmodule.exports.ready = function (cb) {\n  b2wasm.ready(function () { // ignore errors\n    cb()\n  })\n}\n\nmodule.exports.WASM_SUPPORTED = b2wasm.SUPPORTED\nmodule.exports.WASM_LOADED = false\n\nvar BYTES_MIN = module.exports.BYTES_MIN = 16\nvar BYTES_MAX = module.exports.BYTES_MAX = 64\nvar BYTES = module.exports.BYTES = 32\nvar KEYBYTES_MIN = module.exports.KEYBYTES_MIN = 16\nvar KEYBYTES_MAX = module.exports.KEYBYTES_MAX = 64\nvar KEYBYTES = module.exports.KEYBYTES = 32\nvar SALTBYTES = module.exports.SALTBYTES = 16\nvar PERSONALBYTES = module.exports.PERSONALBYTES = 16\n\nb2wasm.ready(function (err) {\n  if (!err) {\n    module.exports.WASM_LOADED = true\n    Proto = b2wasm\n  }\n})\n","module.exports = require('./lib/api')(require('./lib'))\n","const Blake = require('./blake')\n\nconst zo = Buffer.from([0x01])\nconst oo = Buffer.from([0x81])\n\nconst rot = (x, n) => ((x << (32 - n)) | (x >>> n)) >>> 0\n\nfunction g (v, m, i, a, b, c, d, e) {\n  const sigma = Blake.sigma\n  const u256 = Blake.u256\n\n  v[a] = (v[a] + ((m[sigma[i][e]] ^ u256[sigma[i][e + 1]]) >>> 0) + v[b]) >>> 0\n  v[d] = rot(v[d] ^ v[a], 16)\n  v[c] = (v[c] + v[d]) >>> 0\n  v[b] = rot(v[b] ^ v[c], 12)\n  v[a] = (v[a] + ((m[sigma[i][e + 1]] ^ u256[sigma[i][e]]) >>> 0) + v[b]) >>> 0\n  v[d] = rot(v[d] ^ v[a], 8)\n  v[c] = (v[c] + v[d]) >>> 0\n  v[b] = rot(v[b] ^ v[c], 7)\n}\n\nmodule.exports = class Blake256 extends Blake {\n  constructor () {\n    super()\n\n    this._h = [\n      0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n      0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n    ]\n\n    this._s = [0, 0, 0, 0]\n\n    this._block = Buffer.alloc(64)\n    this._blockOffset = 0\n    this._length = [0, 0]\n\n    this._nullt = false\n\n    this._zo = zo\n    this._oo = oo\n  }\n\n  _compress () {\n    const u256 = Blake.u256\n    const v = new Array(16)\n    const m = new Array(16)\n    let i\n\n    for (i = 0; i < 16; ++i) m[i] = this._block.readUInt32BE(i * 4)\n    for (i = 0; i < 8; ++i) v[i] = this._h[i] >>> 0\n    for (i = 8; i < 12; ++i) v[i] = (this._s[i - 8] ^ u256[i - 8]) >>> 0\n    for (i = 12; i < 16; ++i) v[i] = u256[i - 8]\n\n    if (!this._nullt) {\n      v[12] = (v[12] ^ this._length[0]) >>> 0\n      v[13] = (v[13] ^ this._length[0]) >>> 0\n      v[14] = (v[14] ^ this._length[1]) >>> 0\n      v[15] = (v[15] ^ this._length[1]) >>> 0\n    }\n\n    for (i = 0; i < 14; ++i) {\n      /* column step */\n      g(v, m, i, 0, 4, 8, 12, 0)\n      g(v, m, i, 1, 5, 9, 13, 2)\n      g(v, m, i, 2, 6, 10, 14, 4)\n      g(v, m, i, 3, 7, 11, 15, 6)\n      /* diagonal step */\n      g(v, m, i, 0, 5, 10, 15, 8)\n      g(v, m, i, 1, 6, 11, 12, 10)\n      g(v, m, i, 2, 7, 8, 13, 12)\n      g(v, m, i, 3, 4, 9, 14, 14)\n    }\n\n    for (i = 0; i < 16; ++i) this._h[i % 8] = (this._h[i % 8] ^ v[i]) >>> 0\n    for (i = 0; i < 8; ++i) this._h[i] = (this._h[i] ^ this._s[i % 4]) >>> 0\n  }\n\n  _padding () {\n    let lo = this._length[0] + this._blockOffset * 8\n    let hi = this._length[1]\n    if (lo >= 0x0100000000) {\n      lo -= 0x0100000000\n      hi += 1\n    }\n\n    const msglen = Buffer.alloc(8)\n    msglen.writeUInt32BE(hi, 0)\n    msglen.writeUInt32BE(lo, 4)\n\n    if (this._blockOffset === 55) {\n      this._length[0] -= 8\n      this.update(this._oo)\n    } else {\n      if (this._blockOffset < 55) {\n        if (this._blockOffset === 0) this._nullt = true\n        this._length[0] -= (55 - this._blockOffset) * 8\n        this.update(Blake.padding.slice(0, 55 - this._blockOffset))\n      } else {\n        this._length[0] -= (64 - this._blockOffset) * 8\n        this.update(Blake.padding.slice(0, 64 - this._blockOffset))\n        this._length[0] -= 55 * 8\n        this.update(Blake.padding.slice(1, 1 + 55))\n        this._nullt = true\n      }\n\n      this.update(this._zo)\n      this._length[0] -= 8\n    }\n\n    this._length[0] -= 64\n    this.update(msglen)\n  }\n\n  digest () {\n    this._padding()\n\n    const buffer = Buffer.alloc(32)\n    for (let i = 0; i < 8; ++i) buffer.writeUInt32BE(this._h[i], i * 4)\n    return buffer\n  }\n}\n","class Blake {\n  _lengthCarry (arr) {\n    for (let j = 0; j < arr.length; ++j) {\n      if (arr[j] < 0x0100000000) break\n      arr[j] -= 0x0100000000\n      arr[j + 1] += 1\n    }\n  }\n\n  update (data) {\n    const block = this._block\n    let offset = 0\n\n    while (this._blockOffset + data.length - offset >= block.length) {\n      for (let i = this._blockOffset; i < block.length;) block[i++] = data[offset++]\n\n      this._length[0] += block.length * 8\n      this._lengthCarry(this._length)\n\n      this._compress()\n      this._blockOffset = 0\n    }\n\n    while (offset < data.length) block[this._blockOffset++] = data[offset++]\n  }\n}\n\nBlake.sigma = [\n  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n  [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n  [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n  [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n  [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n  [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9],\n  [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11],\n  [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10],\n  [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5],\n  [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0],\n  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n  [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n  [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n  [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n  [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n  [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9]\n]\n\nBlake.u256 = [\n  0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344,\n  0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89,\n  0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n  0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917\n]\n\nBlake.u512 = [\n  0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344,\n  0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89,\n  0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n  0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917,\n  0x9216d5d9, 0x8979fb1b, 0xd1310ba6, 0x98dfb5ac,\n  0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96,\n  0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7,\n  0x0801f2e2, 0x858efc16, 0x636920d8, 0x71574e69\n]\n\nBlake.padding = Buffer.from([\n  0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n])\n\nmodule.exports = Blake\n","const Blake = require('./blake')\n\nconst zo = Buffer.from([0x01])\nconst oo = Buffer.from([0x81])\n\nfunction rot (v, i, j, n) {\n  let hi = v[i * 2] ^ v[j * 2]\n  let lo = v[i * 2 + 1] ^ v[j * 2 + 1]\n\n  if (n >= 32) {\n    lo = lo ^ hi\n    hi = lo ^ hi\n    lo = lo ^ hi\n    n -= 32\n  }\n\n  if (n === 0) {\n    v[i * 2] = hi >>> 0\n    v[i * 2 + 1] = lo >>> 0\n  } else {\n    v[i * 2] = ((hi >>> n) | (lo << (32 - n))) >>> 0\n    v[i * 2 + 1] = ((lo >>> n) | (hi << (32 - n))) >>> 0\n  }\n}\n\nfunction g (v, m, i, a, b, c, d, e) {\n  const sigma = Blake.sigma\n  const u512 = Blake.u512\n  let lo\n\n  // v[a] += (m[sigma[i][e]] ^ u512[sigma[i][e+1]]) + v[b];\n  lo = v[a * 2 + 1] + ((m[sigma[i][e] * 2 + 1] ^ u512[sigma[i][e + 1] * 2 + 1]) >>> 0) + v[b * 2 + 1]\n  v[a * 2] = (v[a * 2] + ((m[sigma[i][e] * 2] ^ u512[sigma[i][e + 1] * 2]) >>> 0) + v[b * 2] + ~~(lo / 0x0100000000)) >>> 0\n  v[a * 2 + 1] = lo >>> 0\n\n  // v[d] = ROT( v[d] ^ v[a],32);\n  rot(v, d, a, 32)\n\n  // v[c] += v[d];\n  lo = v[c * 2 + 1] + v[d * 2 + 1]\n  v[c * 2] = (v[c * 2] + v[d * 2] + ~~(lo / 0x0100000000)) >>> 0\n  v[c * 2 + 1] = lo >>> 0\n\n  // v[b] = ROT( v[b] ^ v[c],25);\n  rot(v, b, c, 25)\n\n  // v[a] += (m[sigma[i][e+1]] ^ u512[sigma[i][e]])+v[b];\n  lo = v[a * 2 + 1] + ((m[sigma[i][e + 1] * 2 + 1] ^ u512[sigma[i][e] * 2 + 1]) >>> 0) + v[b * 2 + 1]\n  v[a * 2] = (v[a * 2] + ((m[sigma[i][e + 1] * 2] ^ u512[sigma[i][e] * 2]) >>> 0) + v[b * 2] + ~~(lo / 0x0100000000)) >>> 0\n  v[a * 2 + 1] = lo >>> 0\n\n  // v[d] = ROT( v[d] ^ v[a],16);\n  rot(v, d, a, 16)\n\n  // v[c] += v[d];\n  lo = v[c * 2 + 1] + v[d * 2 + 1]\n  v[c * 2] = (v[c * 2] + v[d * 2] + ~~(lo / 0x0100000000)) >>> 0\n  v[c * 2 + 1] = lo >>> 0\n\n  // v[b] = ROT( v[b] ^ v[c],11)\n  rot(v, b, c, 11)\n}\n\nmodule.exports = class Blake512 extends Blake {\n  constructor () {\n    super()\n\n    this._h = [\n      0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b,\n      0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n      0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f,\n      0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179\n    ]\n\n    this._s = [0, 0, 0, 0, 0, 0, 0, 0]\n\n    this._block = Buffer.alloc(128)\n    this._blockOffset = 0\n    this._length = [0, 0, 0, 0]\n\n    this._nullt = false\n\n    this._zo = zo\n    this._oo = oo\n  }\n\n  _compress () {\n    const u512 = Blake.u512\n    const v = new Array(32)\n    const m = new Array(32)\n    let i\n\n    for (i = 0; i < 32; ++i) m[i] = this._block.readUInt32BE(i * 4)\n    for (i = 0; i < 16; ++i) v[i] = this._h[i] >>> 0\n    for (i = 16; i < 24; ++i) v[i] = (this._s[i - 16] ^ u512[i - 16]) >>> 0\n    for (i = 24; i < 32; ++i) v[i] = u512[i - 16]\n\n    if (!this._nullt) {\n      v[24] = (v[24] ^ this._length[1]) >>> 0\n      v[25] = (v[25] ^ this._length[0]) >>> 0\n      v[26] = (v[26] ^ this._length[1]) >>> 0\n      v[27] = (v[27] ^ this._length[0]) >>> 0\n      v[28] = (v[28] ^ this._length[3]) >>> 0\n      v[29] = (v[29] ^ this._length[2]) >>> 0\n      v[30] = (v[30] ^ this._length[3]) >>> 0\n      v[31] = (v[31] ^ this._length[2]) >>> 0\n    }\n\n    for (i = 0; i < 16; ++i) {\n      /* column step */\n      g(v, m, i, 0, 4, 8, 12, 0)\n      g(v, m, i, 1, 5, 9, 13, 2)\n      g(v, m, i, 2, 6, 10, 14, 4)\n      g(v, m, i, 3, 7, 11, 15, 6)\n      /* diagonal step */\n      g(v, m, i, 0, 5, 10, 15, 8)\n      g(v, m, i, 1, 6, 11, 12, 10)\n      g(v, m, i, 2, 7, 8, 13, 12)\n      g(v, m, i, 3, 4, 9, 14, 14)\n    }\n\n    for (i = 0; i < 16; ++i) {\n      this._h[(i % 8) * 2] = (this._h[(i % 8) * 2] ^ v[i * 2]) >>> 0\n      this._h[(i % 8) * 2 + 1] = (this._h[(i % 8) * 2 + 1] ^ v[i * 2 + 1]) >>> 0\n    }\n\n    for (i = 0; i < 8; ++i) {\n      this._h[i * 2] = (this._h[i * 2] ^ this._s[(i % 4) * 2]) >>> 0\n      this._h[i * 2 + 1] = (this._h[i * 2 + 1] ^ this._s[(i % 4) * 2 + 1]) >>> 0\n    }\n  }\n\n  _padding () {\n    const len = this._length.slice()\n    len[0] += this._blockOffset * 8\n    this._lengthCarry(len)\n\n    const msglen = Buffer.alloc(16)\n    for (let i = 0; i < 4; ++i) msglen.writeUInt32BE(len[3 - i], i * 4)\n\n    if (this._blockOffset === 111) {\n      this._length[0] -= 8\n      this.update(this._oo)\n    } else {\n      if (this._blockOffset < 111) {\n        if (this._blockOffset === 0) this._nullt = true\n        this._length[0] -= (111 - this._blockOffset) * 8\n        this.update(Blake.padding.slice(0, 111 - this._blockOffset))\n      } else {\n        this._length[0] -= (128 - this._blockOffset) * 8\n        this.update(Blake.padding.slice(0, 128 - this._blockOffset))\n        this._length[0] -= 111 * 8\n        this.update(Blake.padding.slice(1, 1 + 111))\n        this._nullt = true\n      }\n\n      this.update(this._zo)\n      this._length[0] -= 8\n    }\n\n    this._length[0] -= 128\n    this.update(msglen)\n  }\n\n  digest () {\n    this._padding()\n\n    const buffer = Buffer.alloc(64)\n    for (let i = 0; i < 16; ++i) buffer.writeUInt32BE(this._h[i], i * 4)\n    return buffer\n  }\n}\n","// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction check (buffer) {\n  if (buffer.length < 8) return false\n  if (buffer.length > 72) return false\n  if (buffer[0] !== 0x30) return false\n  if (buffer[1] !== buffer.length - 2) return false\n  if (buffer[2] !== 0x02) return false\n\n  var lenR = buffer[3]\n  if (lenR === 0) return false\n  if (5 + lenR >= buffer.length) return false\n  if (buffer[4 + lenR] !== 0x02) return false\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) return false\n  if ((6 + lenR + lenS) !== buffer.length) return false\n\n  if (buffer[4] & 0x80) return false\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) return false\n\n  if (buffer[lenR + 6] & 0x80) return false\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) return false\n  return true\n}\n\nfunction decode (buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short')\n  if (buffer.length > 72) throw new Error('DER sequence length is too long')\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence')\n  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid')\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer')\n\n  var lenR = buffer[3]\n  if (lenR === 0) throw new Error('R length is zero')\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long')\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)')\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) throw new Error('S length is zero')\n  if ((6 + lenR + lenS) !== buffer.length) throw new Error('S length is invalid')\n\n  if (buffer[4] & 0x80) throw new Error('R value is negative')\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) throw new Error('R value excessively padded')\n\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative')\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded')\n\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR)\n  }\n}\n\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nfunction encode (r, s) {\n  var lenR = r.length\n  var lenS = s.length\n  if (lenR === 0) throw new Error('R length is zero')\n  if (lenS === 0) throw new Error('S length is zero')\n  if (lenR > 33) throw new Error('R length is too long')\n  if (lenS > 33) throw new Error('S length is too long')\n  if (r[0] & 0x80) throw new Error('R value is negative')\n  if (s[0] & 0x80) throw new Error('S value is negative')\n  if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) throw new Error('R value excessively padded')\n  if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) throw new Error('S value excessively padded')\n\n  var signature = Buffer.allocUnsafe(6 + lenR + lenS)\n\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30\n  signature[1] = signature.length - 2\n  signature[2] = 0x02\n  signature[3] = r.length\n  r.copy(signature, 4)\n  signature[4 + lenR] = 0x02\n  signature[5 + lenR] = s.length\n  s.copy(signature, 6 + lenR)\n\n  return signature\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n","var assert = require('nanoassert')\nvar wasm = require('./blake2b')()\n\nvar head = 64\nvar freeList = []\n\nmodule.exports = Blake2b\nvar BYTES_MIN = module.exports.BYTES_MIN = 16\nvar BYTES_MAX = module.exports.BYTES_MAX = 64\nvar BYTES = module.exports.BYTES = 32\nvar KEYBYTES_MIN = module.exports.KEYBYTES_MIN = 16\nvar KEYBYTES_MAX = module.exports.KEYBYTES_MAX = 64\nvar KEYBYTES = module.exports.KEYBYTES = 32\nvar SALTBYTES = module.exports.SALTBYTES = 16\nvar PERSONALBYTES = module.exports.PERSONALBYTES = 16\n\nfunction Blake2b (digestLength, key, salt, personal, noAssert) {\n  if (!(this instanceof Blake2b)) return new Blake2b(digestLength, key, salt, personal, noAssert)\n  if (!(wasm && wasm.exports)) throw new Error('WASM not loaded. Wait for Blake2b.ready(cb)')\n  if (!digestLength) digestLength = 32\n\n  if (noAssert !== true) {\n    assert(digestLength >= BYTES_MIN, 'digestLength must be at least ' + BYTES_MIN + ', was given ' + digestLength)\n    assert(digestLength <= BYTES_MAX, 'digestLength must be at most ' + BYTES_MAX + ', was given ' + digestLength)\n    if (key != null) assert(key.length >= KEYBYTES_MIN, 'key must be at least ' + KEYBYTES_MIN + ', was given ' + key.length)\n    if (key != null) assert(key.length <= KEYBYTES_MAX, 'key must be at least ' + KEYBYTES_MAX + ', was given ' + key.length)\n    if (salt != null) assert(salt.length === SALTBYTES, 'salt must be exactly ' + SALTBYTES + ', was given ' + salt.length)\n    if (personal != null) assert(personal.length === PERSONALBYTES, 'personal must be exactly ' + PERSONALBYTES + ', was given ' + personal.length)\n  }\n\n  if (!freeList.length) {\n    freeList.push(head)\n    head += 216\n  }\n\n  this.digestLength = digestLength\n  this.finalized = false\n  this.pointer = freeList.pop()\n\n  wasm.memory.fill(0, 0, 64)\n  wasm.memory[0] = this.digestLength\n  wasm.memory[1] = key ? key.length : 0\n  wasm.memory[2] = 1 // fanout\n  wasm.memory[3] = 1 // depth\n\n  if (salt) wasm.memory.set(salt, 32)\n  if (personal) wasm.memory.set(personal, 48)\n\n  if (this.pointer + 216 > wasm.memory.length) wasm.realloc(this.pointer + 216) // we need 216 bytes for the state\n  wasm.exports.blake2b_init(this.pointer, this.digestLength)\n\n  if (key) {\n    this.update(key)\n    wasm.memory.fill(0, head, head + key.length) // whiteout key\n    wasm.memory[this.pointer + 200] = 128\n  }\n}\n\n\nBlake2b.prototype.update = function (input) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  assert(input, 'input must be TypedArray or Buffer')\n\n  if (head + input.length > wasm.memory.length) wasm.realloc(head + input.length)\n  wasm.memory.set(input, head)\n  wasm.exports.blake2b_update(this.pointer, head, head + input.length)\n  return this\n}\n\nBlake2b.prototype.digest = function (enc) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  this.finalized = true\n\n  freeList.push(this.pointer)\n  wasm.exports.blake2b_final(this.pointer)\n\n  if (!enc || enc === 'binary') {\n    return wasm.memory.slice(this.pointer + 128, this.pointer + 128 + this.digestLength)\n  }\n\n  if (enc === 'hex') {\n    return hexSlice(wasm.memory, this.pointer + 128, this.digestLength)\n  }\n\n  assert(enc.length >= this.digestLength, 'input must be TypedArray or Buffer')\n  for (var i = 0; i < this.digestLength; i++) {\n    enc[i] = wasm.memory[this.pointer + 128 + i]\n  }\n\n  return enc\n}\n\n// libsodium compat\nBlake2b.prototype.final = Blake2b.prototype.digest\n\nBlake2b.WASM = wasm && wasm.buffer\nBlake2b.SUPPORTED = typeof WebAssembly !== 'undefined'\n\nBlake2b.ready = function (cb) {\n  if (!cb) cb = noop\n  if (!wasm) return cb(new Error('WebAssembly not supported'))\n\n  // backwards compat, can be removed in a new major\n  var p = new Promise(function (reject, resolve) {\n    wasm.onload(function (err) {\n      if (err) resolve()\n      else reject()\n      cb(err)\n    })\n  })\n\n  return p\n}\n\nBlake2b.prototype.ready = Blake2b.ready\n\nfunction noop () {}\n\nfunction hexSlice (buf, start, len) {\n  var str = ''\n  for (var i = 0; i < len; i++) str += toHex(buf[start + i])\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n","\nmodule.exports = loadWebAssembly\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (opts) {\n  if (!loadWebAssembly.supported) return null\n\n  var imp = opts && opts.imports\n  var wasm = toUint8Array('')\n  var ready = null\n\n  var mod = {\n    buffer: wasm,\n    memory: null,\n    exports: null,\n    realloc: realloc,\n    onload: onload\n  }\n\n  onload(function () {})\n\n  return mod\n\n  function realloc (size) {\n    mod.exports.memory.grow(Math.ceil(Math.abs(size - mod.memory.length) / 65536))\n    mod.memory = new Uint8Array(mod.exports.memory.buffer)\n  }\n\n  function onload (cb) {\n    if (mod.exports) return cb()\n\n    if (ready) {\n      ready.then(cb.bind(null, null)).catch(cb)\n      return\n    }\n\n    try {\n      if (opts && opts.async) throw new Error('async')\n      setup({instance: new WebAssembly.Instance(new WebAssembly.Module(wasm), imp)})\n    } catch (err) {\n      ready = WebAssembly.instantiate(wasm, imp).then(setup)\n    }\n\n    onload(cb)\n  }\n\n  function setup (w) {\n    mod.exports = w.instance.exports\n    mod.memory = mod.exports.memory && mod.exports.memory.buffer && new Uint8Array(mod.exports.memory.buffer)\n  }\n}\n\nfunction toUint8Array (s) {\n  if (typeof atob === 'function') return new Uint8Array(atob(s).split('').map(charCodeAt))\n  return new (require('buf' + 'fer').Buffer)(s, 'base64')\n}\n\nfunction charCodeAt (c) {\n  return c.charCodeAt(0)\n}\n","const Blake = require('./blake')\n\nmodule.exports = (engines) => {\n  const getEngine = (algorithm) => {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'blake224': return engines.Blake224\n      case 'blake256': return engines.Blake256\n      case 'blake384': return engines.Blake384\n      case 'blake512': return engines.Blake512\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n\n  return (algorithm, options) => {\n    const Engine = getEngine(algorithm)\n    return new Blake(new Engine(), options)\n  }\n}\n","const Transform = require('readable-stream').Transform\n\nmodule.exports = class Blake extends Transform {\n  constructor (engine, options) {\n    super(options)\n\n    this._engine = engine\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._engine.update(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    let digest = this._engine.digest()\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    return digest\n  }\n}\n","module.exports = {\n  Blake224: require('./blake224'),\n  Blake256: require('./blake256'),\n  Blake384: require('./blake384'),\n  Blake512: require('./blake512')\n}\n","const Blake256 = require('./blake256')\n\nconst zo = Buffer.from([0x00])\nconst oo = Buffer.from([0x80])\n\nmodule.exports = class Blake224 extends Blake256 {\n  constructor () {\n    super()\n\n    this._h = [\n      0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n      0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n    ]\n\n    this._zo = zo\n    this._oo = oo\n  }\n\n  digest () {\n    this._padding()\n\n    const buffer = Buffer.alloc(28)\n    for (let i = 0; i < 7; ++i) buffer.writeUInt32BE(this._h[i], i * 4)\n    return buffer\n  }\n}\n","const Blake512 = require('./blake512')\n\nconst zo = Buffer.from([0x00])\nconst oo = Buffer.from([0x80])\n\nmodule.exports = class Blake384 extends Blake512 {\n  constructor () {\n    super()\n\n    this._h = [\n      0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507,\n      0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n      0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511,\n      0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4\n    ]\n\n    this._zo = zo\n    this._oo = oo\n  }\n\n  digest () {\n    this._padding()\n\n    const buffer = Buffer.alloc(48)\n    for (let i = 0; i < 12; ++i) buffer.writeUInt32BE(this._h[i], i * 4)\n    return buffer\n  }\n}\n"],"sourceRoot":""}