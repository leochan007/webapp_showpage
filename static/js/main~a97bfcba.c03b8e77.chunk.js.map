{"version":3,"sources":["defs/web3_defs.ts","stores/account/hook.ts","state_machine/machine_builder.ts","stores/account/reducer.ts","storage/index.ts","stores/trading/hook.ts","stores/global/actions.ts","stores/transactions/reducer.ts","stores/Amm/AmmRecord/reducer.ts","stores/Amm/AmmTrades/reducer.ts","stores/Amm/AmmActivityMap/saga.ts","stores/apis/api.ts","stores/Amm/AmmMap/saga.ts","stores/Amm/AmmRecord/saga.ts","stores/Amm/AmmTrades/saga.ts","stores/Amm/index.ts","stores/wallet/reducer.ts","stores/token/saga.ts","stores/wallet/saga.ts","stores/ticker/saga.ts","stores/system/saga.ts","stores/rootSaga.ts","stores/index.ts","hooks/web3/useWeb3.ts","networks/web3_connectors.ts","stores/Amm/AmmMap/reducer.ts","index.tsx","stores/trading/reducer.ts","stores/ticker/reducer.ts","stores/Amm/AmmMap/hook.ts","stores/system/reducer.ts","stores/Amm/AmmActivityMap/reducer.ts","stores/token/reducer.ts","stores/system/interface.ts","stores/ticker/hook.ts","state_machine/account_machine_spec.ts","utils/web3_tools.ts","provider/global/index.tsx","provider/web3ReactManager/index.tsx","provider/dev-wrapper/index.tsx","stores/token/hook.ts","stores/Amm/AmmActivityMap/hook.ts","stores/system/hook.ts","hooks/common/useCustomDCEffect.ts","stores/constant.ts","hooks/exchange/useApi.ts","utils/swap_calc_utils.ts","hook.ts","defs/common_defs.ts","hooks/modal/useModals.ts","utils/hook_tools.ts","hooks/common/useCommon.ts","hooks/exchange/useExchangeAPI.ts","hooks/exchange/useUserAPI.ts","layouts/header/hook.tsx","utils/obj_tools.ts","pages/AccountPage/index.tsx","layouts/header/index.tsx","pages/QuotePage/index.tsx","pages/QuotePage/hook.ts","pages/SwapPage/panel/SwapPanel/index.tsx","hooks/exchange/useAmmpoolAPI.ts","hooks/exchange/useWebsocketApi.ts","hooks/exchange/useWsAPI.ts","defs/swap_defs.ts","pages/SwapPage/hook.ts","pages/SwapPage/panel/BasicInfoPanel/hook.tsx","pages/SwapPage/panel/BasicInfoPanel/index.tsx","pages/SwapPage/panel/TradePanel/TradePanel.tsx","pages/SwapPage/panel/TradePanel/index.tsx","pages/SwapPage/panel/TradePanel/hooks.ts","pages/SwapPage/index.tsx","hooks/common/useApi2.ts","hooks/common/useWebsocketApi.ts","pages/DebugPage/index.tsx","pages/Layer2Page/TxPanel/index.tsx","pages/Layer2Page/TxPanel/hooks.ts","pages/Layer2Page/AssetPanel/index.tsx","pages/Layer2Page/TradePanel/index.tsx","pages/Layer2Page/TradePanel/hooks.ts","pages/Layer2Page/OrderPanel/index.tsx","pages/SettingPage/SettingPanel.tsx","pages/Layer2Page/index.tsx","pages/LiquidityPage/PoolsPanel/hook.ts","pages/LiquidityPage/PoolsPanel/index.tsx","pages/LiquidityPage/AmmPanel/index.tsx","pages/LiquidityPage/CoinPairPanel/index.tsx","pages/LiquidityPage/AmmMining/index.tsx","pages/LiquidityPage/AmmMining/hook.ts","pages/LiquidityPage/LiquidityOverview/index.tsx","pages/LiquidityPage/index.tsx","routers/index.tsx"],"names":["connectorsByName","ConnectorNames","Unknown","undefined","Injected","injected","Network","network","WalletConnect","walletconnect","WalletLink","walletlink","Ledger","ledger","Trezor","trezor","Authereum","authereum","useWeb3Account","useActiveWeb3React","connector","library","account","chainId","active","error","isConnected","voca","isBlank","useAccount","useSelector","state","isNoAccount","status","AccountStatus","NOACCOUNT","isActivated","ACTIVATED","apiKey","eddsaKey","accountId","useStateMachine","spec","dispatch","useDispatch","machine","AccountMachineSpec","currentState","event","stateTransitions","states","Error","nextState","sendEvent","useCallback","setAccountStatus","useConnect","activate","useState","activatingConnector","setActivatingConnector","connect","item_name","isSwitch","newConnector","setConnectNameTemp","store","getState","StatusChangeEvent","Reset","Connecting","console","log","useDisconnect","deactivate","disconnect","reset","useUnlock","exchangeApi","useExchangeAPI","userApi","useUserAPI","tradingInfo","useGetTradingInfo","lock","a","Lock","unlock","exchangeInfo","exchangeAddress","LOCKED","sk","apikey","getProvider","provider","web3","Web3","sign_tools","accAddr","nonce","connectName","eddsakey","toHex","toBig","keyPair","secretKey","getUserApiKey","Unlock","setEddsaKey","setApikey","useCheckAccStatus","web3Account","lv1Acc","prevChainId","usePrevious","prevWeb3Account","useCustomDCEffect","UNCONNNECTED","cleanUp","CONNECTED","DEPOSITING","DEPOSIT_TO_CONFIREM","UNACTIVATED","ARPROVING","APPROV_TO_CONFIRM","getAccount","owner","acc","accInfo","setAccountInfo","connectNameTemp","setConnectName","HasPubkey","dumpError400","setAccAddr","response","data","resultInfo","code","ErrorResponse","FinishDeposit","UserStorage","checkTimeout","handler","setInterval","isTimeOut","clearInterval","setHandler","getHandler","checkStatus","initialState","defaultAccId","process","REACT_APP_TEST_ACCOUND_ID","getAccountId","defaultApiKey","REACT_APP_TEST_API_KEY","getApikey","defaultOwner","REACT_APP_TEST_OWNER","defaultEddsaKey","REACT_APP_TEST_EDDSA_KEY","getEddsakey","JSON","stringify","publicKey","isContractAddress","accountSlice","createSlice","name","reducers","initState","Object","assign","action","payload","setIsContractAddress","actions","CONSTANTS","rawHandler","sessionStorage","getItem","Handler","parseInt","err","setItem","removeItem","dateTimeStr","localStorage","ActiveTime","now","Date","getTime","toString","tmpDt","SESSION_TIMEOUT_SECONDS","clear","rawId","AccountId","Account","Apikey","Eddsakey","orderHash","AmmOrder","address","current","HardwareAddresses","includes","toLowerCase","newValue","getTradingInfo","trading","useUpdateChainId","useEffect","setChainId","ChainId","GORLI","useUpdateExchangeMarkets","api","getMixMarkets","setMarkets","useUpdateExchangeInfo","getExchangeInfo","setExchangeInfo","useUpdateAmmPoolConf","useAmmpoolAPI","getAmmPoolConf","ammPoolConf","setAmmPoolConf","useUpdateAmmPoolStats","getAmmPoolStats","ammPoolStats","setAmmPoolStats","useUpdateAmmActivityRules","getAmmPoolActivityRules","ammActivityRules","setAmmActivityRules","activityRules","useUpdateTokens","getTokens","tokens","setTokens","updateVersion","createAction","transactionsSlice","addTransaction","from","hash","approval","summary","claim","addedTime","clearAllTransactions","checkedTransaction","blockNumber","tx","lastCheckedBlockNumber","Math","max","finalizeTransaction","receipt","confirmedTime","ammRecordSlice","ammRecords","errorMessage","getAmmRecord","STATUS","PENDING","getAmmRecordStatus","ERROR","DONE","statusUnset","UNSET","ammTradesSlice","ammTrades","getAmmTrades","getAmmTradesStatus","getPostsSaga","ammActivityMapSaga","getAmmActivityMapApi","totalRewards","myRewards","rewardToken","coinMap","ETH","duration","to","Promise","resolve","call","put","getAmmActivityMapStatus","ammActivityMap","all","takeLatest","getAmmActivityMap","exchangeAPI","ExchangeAPI","ammpoolAPI","AmmpoolAPI","updateRealTimeSaga","ammMapInitSaga","ammMapRealTimeSaga","setAmmState","ammPoolState","forex","system","amountDollar","parseFloat","liquidityUSD","amountYuan","totalLPToken","lpLiquidity","totalA","liquidity","totalB","rewardValue","rewards","feeA","fees","feeB","tradeFloat","percent","timeUnit","APY","apyBips","apy","getAmmMapApi","ammMap","ammpools","pairs","__timer__","amm","updateRealTimeAmmMap","tokenMap","idIndex","Reflect","ownKeys","forEach","key","item","market","dataItem","coinAInfo","pooled","coinBInfo","feeDollar","feeYuan","isNew","Number","createdAt","isActivity","getAmmMapStatus","map","getAmmMap","ammMapSaga","fork","ammRecordSaga","getAmmRecordApi","side","amount","sell","belong","tradeValue","buy","time","fee","amountLP","ammTradesSaga","getAmmTradesApi","priceValue","priceToken","posts","ammReducer","combineReducers","ammRecord","reducer","ammMapSlice","ammActivityMapSlice","ammForks","walletSlice","wallet","getWallet","getWalletStatus","tokenInitSaga","getTokenMapApi","tokenSymbolMap","addressIndex","startsWith","icon","getIcon","simpleName","description","company","tokenId","getTokenMapStatus","getTokenMap","tokenSaga","walletSaga","getWalletBalance","reject","count","LRC","tickerSaga","tickersSaga","getTickersApi","list","getTicker","join","tickers","tickMap","base_token_volume","priceDollar","priceYuan","volume","floatTag","close","open","reward","tickerKey","tickerKeys","length","getTickerStatus","tickerMap","CustomError","ErrorMap","NO_TOKEN_KEY_LIST","getTickers","tickerForks","getUpdateSystem","systemSaga","getSystemsApi","env","window","location","hostname","ENV","DEV","UAT","PROD","MAINNET","NETWORKEXTEND","NONETWORK","getFiatPrice","legal","faitPrices","fiatPrices","getGasPrice","gasPrice","baseURL","updateRealTimeObj","faitPrice","getSystemStatus","updateSystem","systemForks","mySaga","sagaMiddleware","createSagaMiddleware","settings","settingsSlice","systemSlice","tradingSlice","transactions","transactionlice","modals","modalsSlice","tokenMapSlice","walletMap","tickerMapSlice","PERSISTED_KEYS","configureStore","middleware","getDefaultMiddleware","thunk","serializableCheck","save","devTools","enhancers","reduxBatch","preloadedState","load","setLanguage","language","run","context","useWeb3React","contextNetwork","NetworkContextName","useEtherscan","etherscanUrl","setEtherscanUrl","useEagerConnect","tried","setTried","isAuthorized","then","catch","useInactiveListener","onReConnectInjected","ethereum","reConnectInjected","on","handleChainChanged","handleAccountsChanged","accounts","removeListener","POLLING_INTERVAL","RPC_URLS","InjectedConnector","supportedChainIds","NetworkConnector","urls","1","5","defaultChainId","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","WalletLinkConnector","url","appName","LedgerConnector","TrezorConnector","manifestEmail","manifestAppUrl","AuthereumConnector","Web3ProviderNetwork","createWeb3ReactRoot","providers","LocalizationProvider","dateAdapter","MomentUtils","I18nextProvider","i18n","MuThemeProvider","theme","getTheme","ThemeProvider","Provider","ReactDOM","render","getLibrary","App","document","getElementById","defaultSymbol","getBaseQuote","base","quote","symbol","symbol_base","symbol_quote","interval","markets","marketTrades","refreshRate","refreshRateSlow","changeSymbol","changeTradingInterval","setTickerMap","setMarketTrades","useAmmMap","updateAmmMap","getTokenPairMap","tokenPairs","tokenPairsMap","reduce","prev","tokenList","useTicker","updateTickers","updateTicker","HasNoPubkey","IsSmartWallet","ApproveSubmit","ApproveConfirmed","Web3Provider","getShortAddr","trim","substr","WindowEvent","events","Click","Scroll","forceReset","debounce","GlobalProvider","children","addEventListener","removeEventListener","Fragment","MessageWrapper","Message","colorBase","Web3ReactManager","t","useTranslation","networkActive","networkError","activateNetwork","triedEager","showLoader","setShowLoader","timeout","setTimeout","clearTimeout","DevWrapper","useTokenMap","updateTokenMap","useAmmActivityMap","updateAmmActivityMap","useSystem","deps","useDeepCompareEffect","useApi","ApiClass","DEFAULT_TIMEOUT","genApi","useMemo","useWsAPI","WsAPI","UserAPI","SwapStatus","MULTI_FACTOR","baseAmt","MaxBaseAmt","quoteAmt","MaxQuoteAmt","newStatus","Normal","BigNumber","zero","gt","ExceedUserBalance","ExceedPoolBalance","eq","EmptyInput","isNormal","getIconByTokenInfo","token","addr","utils","getAddress","getLeft","left","coinMapLeft","getRight","right","coinMapRight","getToken","getTokenInfoByToken","ammBalance","tokenInfo","tokenVol","pooledMap","reserve","fm","getKey","key_bak","isOK","getInfoByKey","raw_data","getBalances","ammPoolsBalances","getAmmInfo","ammInfo","baseToken","quoteToken","baseBalance","quoteBalance","feeBips","getAmt","rawAmt","times","decimals","applySlippageTolerance","value","slippageTolerance","f","feeFactor","outInWei","dividedBy","out","fromWEI","applyOrderFee","feeBip","valueInWEI","precision","ceil","precisionToFixed","div","toWEI","rm","toFixed","getAmountOut","amt","takerRate","currentPrice","baseTokenInfo","reserveIn","reserveOut","amountIn","feeBipsFactor","amountInWithFee","numerator","denominator","plus","_amount1ApplyOrderFeeInWei","_amount1ApplyOrderFee","priceImpact","getAmountOut_Reverse","quoteTokenInfo","amountOut","hasError","reserveOutSubAmountOut","minus","useInit","systemState","tokenState","ammMapState","detectEthereumProvider","request","method","React","Theme","LangType","SystemStatus","MODAL_TYPE","useModals","ShowDeposit","isShow","props","title","setShowDeposit","ShowTransfer","setShowTransfer","ShowWithdraw","setShowWithdraw","ShowResetAccount","setShowResetAccount","PromiseJob","fetchPromise","setFunc","field","prefix","mounted","reason","usePromiseJob","dependencies","useGetMarkets","getMarkets","useGetExchangeInfo","useGetTokens","useGetUserBalances","balances","setBalances","keys","push","getUserBalances","total","locked","availableInWei","useChargeFeeList","tokenSymbol","requestType","chargeFeeList","setChargeFeeList","getOffchainFeeAmt","index","useModalProps","tokensAll","setCoinMap","useCoinMap","walletMap_Lv1","setWalletMap","getTokenBalances","tokenBalances","balance","useLv1WalletMap","walletMap_Lv2","useLv2WalletMap","deposit","depositAddress","sendByMetaMask","gasLimit","contract","response2","withdraw","sellTokenId","getNextStorageId","storageId","request2","exchange","offchainId","maxFee","extraData","minGas","validUntil","VALID_UNTIL","submitOffchainWithdraw","transfer","payeeAddr","walletType","payeeAcc","payeeId","payerAddr","payerId","submitInternalTransfer","depositValue","setDepositValue","depositProps","tradeData","depositBtnStatus","TradeBtnStatus","AVAILABLE","onDepositClick","handlePanelEvent","switchType","res","setTokenSymbol","withdrawValue","setWithdrawValue","withdrawalFeeList","OffchainFeeReqType","OFFCHAIN_WITHDRAWAL","withdrawProps","withdrawBtnStatus","onWithdrawClick","withdrawType","WithdrawType","Fast","withdrawTypes","WithdrawTypes","chargeFeeToken","chargeFeeTokenList","handleOnAddressChange","handleAddressError","_value","message","transferValue","setTransferValue","transferTokenSymbol","setTransferTokenSymbol","transferFeeList","TRANSFER","transferProps","transferBtnStatus","onTransferClick","resetValue","setResetValue","resetProps","resetBtnStatus","onResetClick","price","ammProps","ammDepositData","coinA","coinB","slippage","ammWithdrawData","ammCalcData","myCoinA","myCoinB","AtoB","coinInfoMap","handleDepositEvent","type","handleWithDrawEvent","onAmmWithdrawClick","onAmmDepositClick","swapProps","swapTradeData","tradeCalcData","coinSell","coinBuy","BtoS","StoB","sellCoinInfoMap","buyCoinInfoMap","minimumReceived","onSwapClick","handleSwapPanelEvent","deepClone","result","constructor","hasOwnProperty","ModalAccountInfo","withTranslation","onClose","rest","Modal","aria-labelledby","aria-describedby","style","boxShadow","Box","paddingTop","paddingBottom","display","flexDirection","minWidth","Header","useLocation","useSettings","setTheme","themeMode","setOpen","openConnect","setOpenConnect","forceUpdate","useReducer","bool","gatewayList","DefaultGatewayList","handleSelect","showAccountInfo","setShowAccountInfo","accountInfoProps","setAccountInfoProps","onNotification","onWalletBtnConnect","onThemeBtnClick","dark","light","onLangBtnClick","lang","headerToolBarData","ButtonComponentsMap","handleClick","Language","handleChange","UnlockBtn","onClick","className","startIcon","fontSize","variant","Typography","marginTop","LockBtn","updateHeaderMenuWhenHasAccountInfo","headerMenuData","HeadMenuTabKey","Layer2","HeaderMenuTabStatus","default","addressShort","level","etherscanLink","mainBtn","connectBy","label","WalletStatus","hidden","noAccount","accountPending","useHeader","onSwitch","openQRCode","setOpenQRCode","copyToastOpen","setCopyToastOpen","closeCopyToast","Snackbar","autoHideDuration","Alert","severity","withDrawProps","selected","pathname","headerRoot","Toolbar","onCopy","text","execCommand","textarea","createElement","body","appendChild","select","removeChild","clipboardData","setData","copyToClipBoard","onViewQRCode","onDisconnect","RowStyled","Grid","unit","TableWrapStyled","background","border","defaultFrame","c_key","d_R","TablePaddingX","pLeft","pRight","QuotePage","tickList","setTickList","big4","setBig4","refresh","getAllTickers","ticks","quote_token_volume","high","low","rowData","change","base_token_amt","sort","b","isNaN","slice","useQuote","formattedRawData","o","pair","first","last","lastPrice","isFinite","volumn","buyData","sellData","FloatTag","increase","flex","container","xs","none","decrease","marginY","paddingY","onVisibleRowsChange","rawData","SwapPanel","useGetAmmPools","setAmmpools","stateArr","useWebsocket","topics","verify","needApiKey","ws","useRef","wsData","setMessage","readyState","setReadyState","creatWebSocket","getWsKey","wsApiKey","basePath","WebSocket","onopen","_e","op","unsubscribeAll","flat_txt","sendMessage","subTopics","onclose","e","onerror","onmessage","webSocketInit","closeWebSocket","msg","send","reconnect","useWs","socketData","setSocketData","isLocalPage","setIsLocalPage","visibilityState","parse","useHandleSocketData","setAccount","ammPool","setAmmPool","order","setOrder","ticker","setTicker","topic","WsTopicType","Ammpool","timestamp","Candlestick","Order","OrderBook","Ticker","Trade","OrderHandling","useSwapNew","match","useRouteMatch","params","globalAcc","useGetMixMarkets","setAmmPoolsBalances","getAmmPoolBalances","useGetAmmPoolsBalances","setBase","setQuote","setLeft","setRight","setMarket","poolAddress","setPoolAddress","setBalance","availToShow","setAvailToShow","setFee","setTakerRate","setCurrentPrice","getAmmOrder","ammOrder","setAmmOrder","setPriceImpact","setBaseAmt","setQuoteAmt","amount1ApplyOrderFee","setAmount1ApplyOrderFee","quoteToShow","setSwapProps","getAccountArg","getOrderArg","getAmmpoolArg","useSwapPageWs","marketArr","getExistedMarket","ammpoolsbalances","currentBalance","totalAmount","amountLocked","newAvailable","balancesTmp","fn","getOrderDetails","orderDetail","OrderStatus","processed","clearAmmOrder","too_many_times","no_such_order","getUserFeeRate","userFreeRateMap","onBaseAmtInputChange","baseAmtVal","quoteAmtVal","onQuoteAmtInputChange","onSwap","allOrNone","orderId","amount0InBigNumber","amount1WithSlippage","amount1InBigNumber","sellToken","buyToken","maxFeeBips","fillAmountBOrS","orderType","OrderType","ClassAmm","eddsaSignature","submitOrder","swap","abs","__cache__","swapData","SwapType","SEll_CLICK","BUY_CLICK","SELL_SELECTED","BUY_SELECTED","EXCHANGE_CLICK","toggleData","ChartType","Trend","Depth","useBasicInfo","tgItemJSXs","tlabel","JSX","chartType","setChartType","setChange","setVolume","ChartUnit","D1","chartUnit","originData","setOriginData","baseVol","tgItemJSXsPriceChart","pre","tGItemData","TradingInterval","min15","limit","getCandlestick","candlesticks","timeStamp","quoteVol","getDepth","depth","bidsPrices","bids_prices","bidsAmtTotals","bids_amtTotals","asksPrices","asks_prices","asksAmtTotals","asks_amtTotals","BasicInfoPanel","upColor","getThousandFormattedNumbers","justifyContent","alignItems","exclusive","minHeight","maxHeight","height","width","riseColor","handleMove","size","StylePaper","styled","borderColor","applyProps","id","TradePanel","withRouter","trades","isAllTrade","setIsAllTrade","setValue","StyledTabsWrapper","StyledFormControlLabel","FormControlLabel","control","Checkbox","checked","checkedIcon","color","onChange","flag","Tabs","aria-label","Tab","myTrades","setMyTrades","tradesNew","getUserTrades","fillTypes","FilledType","itemTmp","baseShow","quoteShow","useGetMyTrades","recentTrades","ammPoolAddress","ammPoolApi","setRecentTrades","getAmmPoolTrades","useGetRecentTrades","FixedStyle","SwapPage","marginRight","alignContent","useAmmpoolWs","getTickerArg","DebugPage","gas","setGas","useGetGas","TxPanel","pageSize","setPageSize","offsetHeight","floor","txs","setTxs","getUserTranferList","tmpTx","senderAddress","receiverAddress","feeTokenSymbol","feeAmount","memo","txnHash","tradeType","TransactionTradeTypes","allTypes","useGetTxs","txList","ref","pagination","StyledChartWrapper","StyledBtnGroupWrapper","DoughnutData","testTrendData","random","AssetPanel","chartPeriod","setChartPeriod","AssetTitleProps","assetInfo","totalAsset","priceTag","PriceTag","Dollar","onShowDeposit","onShowTransfer","onShowWithdraw","Paper","component","OrderPanel","StyledPaper","StyledSwitch","Switch","textPrimary","success","backgroundColor","opacity","BtnCurrency","currency","Currency","dollar","setState","_handleChange","target","IconComponent","DropDownIcon","labelId","autoWidth","yen","StyledDivider","Divider","SettingPanel","focus","useTheme","setUpColor","setCurrency","direction","flexWrap","paddingLeft","marginBottom","paddingX","Trans","i18nKey","alignSelf","Button","passDay","changeLanguage","textTransform","UpColor","green","up","down","red","subMenu","subMenuLayer2","BoxStyle","SubMenuList","withRef","BasicSubMenuList","Layer2Page","accStatus","useAmmMapUI","setRawData","page","setPage","ammMapStatus","ammMapStatusUnset","tickerStatus","tickerStatusUnset","updateTickersUI","_page","i","_ammMap","tickerMapKey","ammKey","NO_TOKEN_MAP","options","updateRawData","PoolsPanel","handlePageChange","AmmPanelView","tabSelected","AmmPanelType","Deposit","USTD","coinPairInfo","activity","myAmm","ammRecordArray","AmmTradeType","add","totalDollar","totalYuan","amountA","amountB","moment","toDate","remove","BoxStyled","CoinPairPanel","_handlePageChange","Breadcrumbs","Link","href","spacing","wrap","md","paddingRight","Yuan","Hidden","mdDown","noWrap","textAlign","textOverflow","format","AmmCardWrap","forwardRef","AmmCard","AmmMiningView","ammActivities","ammActivityStatus","ammActivityStatusUnset","_ammActivityMap","mapArray","useAmmMiningUI","sm","lg","balanceA","balanceB","balanceYuan","balanceDollar","ammDetail","StyleWrapper","LiquidityOverview","totalFeeDollar","totalFeeYuan","totalMiningDollar","totalMiningYuan","padding","margin","handleDeposit","row","handleWithdraw","subMenuLiquidity","LiquidityPage","matchPair","next","RouterView","Container","maxWidth","exact","path"],"mappings":"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","file":"static/js/main~a97bfcba.c03b8e77.chunk.js","sourcesContent":["import { ConnectorNames } from 'loopring-sdk'\n\nimport {\n    injected,\n    network,\n    walletconnect,\n    walletlink,\n    ledger,\n    trezor,\n    authereum,\n} from 'networks/web3_connectors'\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n    [ConnectorNames.Unknown]: undefined,\n    [ConnectorNames.Injected]: injected,\n    [ConnectorNames.Network]: network,\n    [ConnectorNames.WalletConnect]: walletconnect,\n    [ConnectorNames.WalletLink]: walletlink,\n    [ConnectorNames.Ledger]: ledger,\n    [ConnectorNames.Trezor]: trezor,\n    [ConnectorNames.Authereum]: authereum,\n}\n","import { useState, useCallback, useMemo, useRef, useEffect, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport { useGetTradingInfo } from 'stores/trading/hook'\nimport { useActiveWeb3React, } from 'hooks/web3/useWeb3'\n\nimport { Lv2Account, } from 'defs/account_defs'\n\nimport { AccountStatus, StatusChangeEvent } from 'state_machine/account_machine_spec'\n\nimport * as sign_tools from 'loopring-sdk'\n\nimport { connectorsByName } from 'defs/web3_defs'\n\nimport { ChainId, ConnectorNames, dumpError400, ExchangeAPI, UserAPI, } from 'loopring-sdk'\n\nimport { toHex, toBig, } from 'loopring-sdk'\n\nimport { RootState } from 'stores'\n\nimport {\n    reset, setAccountStatus, setConnectName,\n    setConnectNameTemp, setAccountInfo, setEddsaKey, setApikey, setAccAddr,\n} from 'stores/account/reducer'\n\nimport { AccountMachineSpec, } from 'state_machine/account_machine_spec'\n\nimport { buildMachine } from 'state_machine/machine_builder'\n\nimport voca from 'voca'\nimport { usePrevious } from 'react-use'\n\nimport Web3 from 'web3'\n\nimport { useExchangeAPI, useUserAPI } from 'hooks/exchange/useApi'\n\nimport { UserStorage } from 'storage'\n\nimport store from 'stores'\nimport { setChainId } from 'stores/trading/reducer'\nimport { loopHooks } from 'react-table'\n\nexport function useWeb3Account() {\n\n    const {\n        connector,\n        library,\n        account,\n        chainId,\n        active,\n        error,\n    } = useActiveWeb3React()\n\n    const isConnected: boolean = active && !voca.isBlank(account as string)\n\n    return {\n        account,\n        connector,\n        library,\n        chainId,\n        active,\n        isConnected,\n        error,\n    }\n\n}\n\nexport function useAccount() {\n\n    const account: Lv2Account = useSelector((state: RootState) => state.account)\n\n    const isNoAccount = () => {\n        return account.status === AccountStatus.NOACCOUNT\n    }\n\n    const isActivated = () => {\n        return account.status === AccountStatus.ACTIVATED\n    }\n\n    return {\n        account,\n        isNoAccount,\n        isActivated,\n        apiKey: account.apiKey,\n        eddsaKey: account.eddsaKey,\n        accountId: account.accountId,\n    }\n}\n\nexport function useStateMachine() {\n    const dispatch = useDispatch()\n\n    const machine = buildMachine(AccountMachineSpec())\n\n    const sendEvent = useCallback((account: Lv2Account, event: StatusChangeEvent) => {\n        const nextState = machine(account.status, event)\n        if (nextState) {\n            dispatch(setAccountStatus(nextState))\n        }\n    }, [machine, dispatch])\n\n    return {\n        sendEvent,\n    }\n}\n\nexport function useConnect() {\n\n    const {\n        activate,\n    } = useActiveWeb3React()\n\n    const { sendEvent } = useStateMachine()\n\n    const dispatch = useDispatch()\n\n    const [activatingConnector, setActivatingConnector] = useState<any>()\n\n    const connect = useCallback((item_name: ConnectorNames, isSwitch: boolean = false) => {\n        const newConnector: any = connectorsByName[item_name]\n        setActivatingConnector(newConnector)\n        activate(newConnector)\n        dispatch(setConnectNameTemp(item_name))\n\n        if (isSwitch) {\n          //  console.log('try Connecting... isSwitch Reset')\n            sendEvent(store.getState().account, StatusChangeEvent.Reset)\n        }\n\n        sendEvent(store.getState().account, StatusChangeEvent.Connecting)\n\n        console.log('try Connecting...')\n    }, [activate, dispatch, sendEvent])\n\n    return {\n        connect,\n        activatingConnector,\n    }\n\n}\n\nexport function useDisconnect() {\n\n    const {\n        deactivate,\n    } = useActiveWeb3React()\n\n    const dispatch = useDispatch()\n\n    const disconnect = useCallback(() => {\n        deactivate()\n        dispatch(reset(undefined))\n    }, [deactivate, dispatch])\n\n    return {\n        disconnect,\n    }\n\n}\n\nexport function useUnlock() {\n\n    const dispatch = useDispatch()\n\n    const exchangeApi: any = useExchangeAPI()\n\n    const userApi: any = useUserAPI()\n\n    const { tradingInfo } = useGetTradingInfo()\n\n    const { connector, } = useWeb3Account()\n\n    const { sendEvent } = useStateMachine()\n\n    const lock = useCallback(async (account: Lv2Account) => {\n        console.log('useCallback lock:', account.status)\n        sendEvent(account, StatusChangeEvent.Lock)\n    }, [sendEvent])\n\n    const unlock = useCallback(async (account: Lv2Account) => {\n\n        if (!userApi || !exchangeApi || !connector || !account.accountId || !tradingInfo.exchangeInfo?.exchangeAddress\n            || account.status !== AccountStatus.LOCKED) {\n            console.log('accountId:', account.accountId)\n            console.log('exchangeAddress:', tradingInfo.exchangeInfo)\n            console.log('enter !! account.status:', account.status)\n            return\n        }\n\n        console.log('useUnlock useCallback:', account.status)\n\n        if (account.status !== AccountStatus.LOCKED) {\n            throw Error('unexpected status:' + account.status)\n        }\n\n        let event = undefined\n        let sk = undefined\n        let apikey: any = undefined\n\n        try {\n            const provider = await connector.getProvider()\n            const web3 = new Web3(provider as any)\n            console.log('useUnlock eddsaKey:', account.eddsaKey)\n\n            if (!account.eddsaKey) {\n                const eddsakey = await sign_tools\n                    .generateKeyPair(\n                        web3,\n                        account.accAddr,\n                        tradingInfo.exchangeInfo?.exchangeAddress as string,\n                        account.nonce - 1,\n                        account.connectName,\n                    )\n                sk = toHex(toBig(eddsakey.keyPair.secretKey))\n\n            } else {\n                sk = account.eddsaKey\n            }\n\n            apikey = await userApi.getUserApiKey({\n                accountId: account.accountId\n            }, sk)\n\n            console.log('useUnlock apikey:', apikey)\n\n            event = StatusChangeEvent.Unlock\n\n        } catch (reason) {\n            event = StatusChangeEvent.Reset\n        }\n\n        if (sk) {\n            dispatch(setEddsaKey(sk))\n        }\n\n        if (apikey?.apiKey) {\n            dispatch(setApikey(apikey.apiKey))\n        }\n\n        console.log('next event:', event)\n        if (event) {\n            sendEvent(account, event)\n        }\n\n    }\n        , [dispatch, sendEvent, exchangeApi, userApi, connector, tradingInfo.exchangeInfo])\n\n    return {\n        lock,\n        unlock,\n    }\n}\n\nasync function checkAccountAvailableAsync(exchangeApi: ExchangeAPI, userApi: UserAPI, account: Lv2Account, dispatch: any, sendEvent: any, connector: any, exchangeAddress: string) {\n\n    let accInfo = undefined\n    let event = undefined\n    let sk = undefined\n    let code = undefined\n    let apikey: any = undefined\n\n    try {\n        accInfo = (await exchangeApi.getAccount({\n            owner: account.accAddr\n        })).accInfo\n        if (accInfo.publicKey && accInfo.publicKey.x && accInfo.publicKey.y) {\n            if (account.accountId !== accInfo.accountId) {\n                const provider = await connector.getProvider()\n                const web3 = new Web3(provider as any)\n                try {\n                    code = await web3.eth.getCode(account.accAddr)\n                    // console.log('!!!!!! about to generateKeyPair!!!!!!!!!!!')\n                    try {\n                        const eddsakey = await sign_tools\n                            .generateKeyPair(\n                                web3,\n                                account.accAddr,\n                                exchangeAddress,\n                                accInfo.nonce - 1,\n                                account.connectName,\n                            )\n                        sk = toHex(toBig(eddsakey.keyPair.secretKey))\n                        const px = toHex(toBig(eddsakey.keyPair.publicKeyX))\n                        const py = toHex(toBig(eddsakey.keyPair.publicKeyY))\n\n                        try {\n                            apikey = await userApi.getUserApiKey({\n                                accountId: accInfo.accountId\n                            }, sk)\n                            event = (StatusChangeEvent.HasPubkey)\n                        } catch (reason) {\n                            dumpError400(reason)\n                            event = (StatusChangeEvent.ErrorResponse)\n                        }\n                    } catch (reason) {\n                        dumpError400(reason)\n                        event = (StatusChangeEvent.ErrorResponse)\n                    }\n\n                } catch (reason) {\n                    dumpError400(reason)\n                    event = (StatusChangeEvent.ErrorResponse)\n                }\n\n            } else {\n                console.log('already has accountId!')\n            }\n        } else {\n            console.log('2 has id but no pubkey currStatus:', account.status)\n            event = (StatusChangeEvent.HasNoPubkey)\n        }\n    } catch (reason) {\n        // 3 has none of above\n        console.log('2 has id but no pubkey currStatus:', account.status)\n        dumpError400(reason)\n        // check deposit tx (local and ethereum)\n        event = (StatusChangeEvent.ErrorResponse)\n    }\n\n    if (accInfo && accInfo.owner !== account.accAddr) {\n        dispatch(setAccountInfo(accInfo))\n    }\n\n    if (sk) {\n        dispatch(setEddsaKey(sk))\n    }\n\n    if (apikey) {\n        console.log('---------> apikey:', apikey)\n        dispatch(setApikey(apikey.apiKey))\n    }\n\n    if (event) {\n        sendEvent(event)\n    }\n\n}\n\nexport function useCheckAccStatus() {\n\n    const dispatch = useDispatch()\n\n    const { account } = useAccount()\n\n    const { sendEvent } = useStateMachine()\n\n    const exchangeApi: ExchangeAPI = useExchangeAPI()\n\n    const userApi: UserAPI = useUserAPI()\n\n    const { account: web3Account, active, isConnected, chainId, connector, } = useWeb3Account()\n\n    const lv1Acc = web3Account as string\n\n    const prevChainId = usePrevious(chainId)\n    const prevWeb3Account = usePrevious(web3Account)\n\n    // console.log('prevChainId:', prevChainId, ' chainId:', chainId)\n    // console.log('prevWeb3Account:', prevWeb3Account, ' web3Account:', web3Account)\n\n    // console.log(exchangeApi, userApi, account, 'prevChainId:', prevChainId, 'chainId:', chainId, 'web3Account:', web3Account)\n\n    const { tradingInfo } = useGetTradingInfo()\n\n    useCustomDCEffect(async () => {\n\n        const cleanUp = () => {\n            let handler = UserStorage.getHandler()\n            if (account.status !== AccountStatus.ACTIVATED && handler) {\n                clearInterval(handler)\n            }\n        }\n\n        async function checkStatus() {\n\n            if (!account || !lv1Acc || !exchangeApi || !userApi || !connector || !tradingInfo.exchangeInfo?.exchangeAddress) {\n                console.log('checkStatus return!!!!!!')\n                return\n            }\n\n            if (((prevChainId && chainId && prevChainId !== chainId)\n                || (prevWeb3Account && web3Account && prevWeb3Account !== web3Account))\n                && account.status !== AccountStatus.UNCONNNECTED) {\n\n                console.log('checkStatus try to resetFunc')\n                dispatch(reset(undefined))\n                sendEvent(account, StatusChangeEvent.Reset)\n                return\n            }\n\n            cleanUp()\n\n            switch (account.status) {\n                case AccountStatus.UNCONNNECTED:\n                    console.log('---> render UNCONNNECTED active:', active, ' isConnected:', isConnected)\n\n                    if (isConnected) {\n                        dispatch(setConnectNameTemp(ConnectorNames.Injected))\n                        sendEvent(account, StatusChangeEvent.Connecting)\n                    }\n\n                    break\n\n                case AccountStatus.CONNECTED:\n                    //check session or local storage\n\n                    console.log('---> render CONNECTED account:', account)\n\n                    try {\n\n                        const acc = (await exchangeApi.getAccount({ owner: lv1Acc })).accInfo\n\n                        // current acc is local acc info\n                        if (account.accAddr && account.eddsaKey && acc.owner === account.accAddr) {\n                            console.log('cur Eddsakey:', account.eddsaKey)\n                        } else {\n                            console.log('got a new address:', acc)\n                            // got a new address\n                            dispatch(setAccountInfo(acc))\n                            // dispatch(setEddsaKey(''))\n                        }\n\n                        if (account?.connectName !== account?.connectNameTemp) {\n                            dispatch(setConnectName(account.connectNameTemp))\n                        }\n\n                        sendEvent(account, StatusChangeEvent.HasPubkey)\n\n                    } catch (reason) {\n                        dumpError400(reason)\n\n                        if (lv1Acc) {\n                            dispatch(setAccAddr(lv1Acc))\n                        }\n\n                        if (reason.response && reason.response.data && reason.response.data.resultInfo\n                             && reason.response.data.resultInfo.code === 101002) {\n                            sendEvent(account, StatusChangeEvent.ErrorResponse)\n                        }\n                    }\n\n                    break\n\n                case AccountStatus.NOACCOUNT:\n                    break\n\n                case AccountStatus.DEPOSITING:\n                    // TODO sub contract event, check deposit.\n                    const depositFinished = true // TODO\n                    if (depositFinished) {\n                        console.log('depositFinished currStatus:', account.status)\n                        sendEvent(account, StatusChangeEvent.FinishDeposit)\n                    }\n                    break\n\n                case AccountStatus.DEPOSIT_TO_CONFIREM:\n                    // getAccount every 10s to check\n                    break\n\n                case AccountStatus.UNACTIVATED:\n                    const isSmartWallet = false // TODO\n                    if (isSmartWallet) {\n                        // TODO approve hash,\n                        console.log('approve hash, currStatus:', account.status)\n                        sendEvent(account, StatusChangeEvent.IsSmartWallet)\n                    } else {\n                        console.log('approve hash no smartwallet, account.status:', account.status)\n                    }\n                    break\n\n                case AccountStatus.ARPROVING:\n                    // TODO sub contract event, check approving.\n                    const approved = false // TODO\n                    if (approved) {\n                        console.log('sub contract event, check approving. approved! status:', account.status)\n                        sendEvent(account, StatusChangeEvent.ApproveSubmit)\n                    }\n                    break\n\n                case AccountStatus.APPROV_TO_CONFIRM:\n                    const approveConfirmed = false // TODO\n                    if (approveConfirmed) {\n                        console.log('approveConfirmed status:', account.status)\n                        sendEvent(account, StatusChangeEvent.ApproveConfirmed)\n                    }\n                    break\n\n                case AccountStatus.LOCKED:\n                    break\n\n                case AccountStatus.ACTIVATED:\n                    UserStorage.checkTimeout(true)\n                    const handler = setInterval(() => {\n                        const isTimeOut = UserStorage.checkTimeout()\n                        if (account.status === AccountStatus.ACTIVATED && isTimeOut) {\n                            clearInterval(handler)\n                            sendEvent(account, StatusChangeEvent.Lock)\n                        }\n                    }, 1000)\n                    UserStorage.setHandler(handler)\n                    break\n\n                default:\n                    break\n            }\n\n\n\n        }\n\n        checkStatus()\n\n        return () => {\n            cleanUp()\n        }\n\n    }, [exchangeApi, userApi, account, prevChainId, chainId, lv1Acc, dispatch, connector, tradingInfo.exchangeInfo?.exchangeAddress,])\n\n}\n","export const buildMachine = <S, E>(spec: any) => (currentState: S, event: E) => {\n    // We get all possible transitions for the current State\n    const stateTransitions = spec.states[currentState]\n\n    // No transitions? Error!\n    if (stateTransitions === undefined) {\n        throw new Error(`No transitions defined for ${currentState}`)\n    }\n\n    // We try to transition to the next state\n    const nextState = stateTransitions[event]\n\n    // No next state? Error!\n    if (nextState === undefined) {\n        throw new Error(\n            `Unknown transition for event ${event} in state ${currentState}`\n        )\n    }\n\n   // console.log('got nextState:', nextState)\n\n    // We return the new state\n    return nextState\n}\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\n\nimport { AccountInfo, ConnectorNames, } from 'loopring-sdk'\n\nimport { Lv2Account, } from 'defs/account_defs'\nimport { AccountStatus } from 'state_machine/account_machine_spec'\nimport { UserStorage } from 'storage'\n\n\nconst initialState = () => {\n  const defaultAccId = process.env.REACT_APP_TEST_ACCOUND_ID ? process.env.REACT_APP_TEST_ACCOUND_ID : UserStorage.getAccountId()\n  const defaultApiKey = process.env.REACT_APP_TEST_API_KEY ? process.env.REACT_APP_TEST_API_KEY : UserStorage.getApikey()\n  const defaultOwner = process.env.REACT_APP_TEST_OWNER ? process.env.REACT_APP_TEST_OWNER : UserStorage.getAccount()\n  const defaultEddsaKey = process.env.REACT_APP_TEST_EDDSA_KEY ? process.env.REACT_APP_TEST_EDDSA_KEY : UserStorage.getEddsakey()\n\n  console.log('defaultApiKey:', JSON.stringify(defaultApiKey))\n  const defaultStatus = AccountStatus.UNCONNNECTED\n  return {\n    accAddr: defaultOwner,\n    status: defaultStatus,\n    accountId: defaultAccId,\n    publicKey: {},\n    nonce: 0,\n    isContractAddress: false,\n    apiKey: defaultApiKey,\n    eddsaKey: defaultEddsaKey,\n    connectName: ConnectorNames.Unknown,\n    connectNameTemp: ConnectorNames.Unknown,\n  } as Lv2Account\n}\n\nconst accountSlice:Slice = createSlice({\n  name: 'account',\n  initialState: initialState(),\n  reducers: {\n    reset(state) {\n      const initState = initialState()\n      console.log('!!! reset account!', initState)\n      Object.assign(state, initState)\n    },\n    setAccAddr(state, action: PayloadAction<string>) {\n      state.accAddr = action.payload\n      // UserStorage.setAccount(action.payload)\n    },\n    setAccountInfo(state, action: PayloadAction<AccountInfo>) {\n      state.accAddr = action.payload.owner\n      state.accountId = action.payload.accountId\n      state.nonce = action.payload.nonce\n      state.publicKey = action.payload.publicKey\n\n      // UserStorage.setAccount(state.accAddr)\n      // UserStorage.setAccountId(state.accountId)\n      \n    },\n    setApikey(state, action: PayloadAction<string>) {\n      state.apiKey = action.payload\n      // UserStorage.setApikey(action.payload)\n    },\n    setAccountStatus(state, action: PayloadAction<AccountStatus>) {\n      state.status = action.payload\n    },\n    setEddsaKey(state, action: PayloadAction<any>) {\n      state.eddsaKey = action.payload\n      // UserStorage.setEddsakey(action.payload)\n    },\n    setConnectName(state, action: PayloadAction<ConnectorNames>) {\n      state.connectName = action.payload\n    },\n    setConnectNameTemp(state, action: PayloadAction<ConnectorNames>) {\n      state.connectNameTemp = action.payload\n    },\n    setIsContractAddress(state, action: PayloadAction<boolean>) {\n      state.isContractAddress = action.payload\n    },\n  },\n})\n\nexport const { reset, setAccAddr, setApikey, setConnectName, setConnectNameTemp, setAccountInfo, setAccountStatus, setEddsaKey, setIsContractAddress, } = accountSlice.actions\nexport default accountSlice\n","export enum CONSTANTS {\n    Handler = 'handler',\n    AccountId = 'account_id',\n    Account = 'account',\n    Apikey = 'apikey',\n    Eddsakey = 'eddsakey',\n    ActiveTime = 'active_time',\n    AmmOrder = 'amm_order',\n    HardwareAddresses = 'hardware_addresses',\n}\n\nconst SESSION_TIMEOUT_SECONDS = 600\n\nexport class UserStorage {\n\n    public static getHandler() {\n        const rawHandler = sessionStorage.getItem(CONSTANTS.Handler)\n        try {\n            if (rawHandler !== undefined && rawHandler !== null)\n                return parseInt(rawHandler)\n        } catch (err) {\n        }\n        return undefined\n    }\n\n    public static setHandler(handler: any) {\n        sessionStorage.setItem(CONSTANTS.Handler, handler)\n    }\n\n    public static clearHandler() {\n        sessionStorage.removeItem(CONSTANTS.Handler)\n    }\n\n    public static checkTimeout(reset: boolean = false) : boolean {\n        let dateTimeStr = localStorage.getItem(CONSTANTS.ActiveTime)\n        let now = new Date().getTime()\n\n        if (dateTimeStr !== null && !reset) {\n            let tmpDt = new Date(parseInt(dateTimeStr))\n\n            // console.log(`now:${now} dateTimeStr:${dateTimeStr} delta:${now - tmpDt.getTime()}`)\n\n            if(now - tmpDt.getTime() > SESSION_TIMEOUT_SECONDS * 1000) {\n                console.log(`TIMEOUT! now:${now} dateTimeStr:${dateTimeStr} delta:${now - tmpDt.getTime()}`)\n                sessionStorage.clear()\n                localStorage.setItem(CONSTANTS.ActiveTime, now.toString())\n                return true\n            }\n        } else {\n\n            if (reset) {\n                console.log('force reset!!')\n            }\n\n            localStorage.setItem(CONSTANTS.ActiveTime, now.toString())\n        }\n\n        return false\n    }\n\n\n    public static getAccountId() {\n        const rawId = sessionStorage.getItem(CONSTANTS.AccountId)\n        try {\n            if (rawId)\n                return parseInt(rawId)\n        } catch (err) {\n        }\n        return undefined\n    }\n\n    public static setAccountId(accountId: number) {\n        sessionStorage.setItem(CONSTANTS.AccountId, accountId.toString())\n    }\n\n    public static getAccount() {\n        return sessionStorage.getItem(CONSTANTS.Account)\n    }\n\n    public static setAccount(account: string) {\n        sessionStorage.setItem(CONSTANTS.Account, account)\n    }\n\n    public static getApikey() {\n        return sessionStorage.getItem(CONSTANTS.Apikey)\n    }\n\n    public static setApikey(apikey: string) {\n        sessionStorage.setItem(CONSTANTS.Apikey, apikey)\n    }\n\n    public static getEddsakey() {\n        return sessionStorage.getItem(CONSTANTS.Eddsakey)\n    }\n\n    public static setEddsakey(eddsakey: string) {\n        sessionStorage.setItem(CONSTANTS.Eddsakey, eddsakey)\n    }\n\n    public static getAmmOrder(): string {\n        var orderHash = localStorage.getItem(CONSTANTS.AmmOrder)\n        return orderHash ? orderHash : ''\n    }\n\n    public static setAmmOrder(orderHash: string) {\n        localStorage.setItem(CONSTANTS.AmmOrder, orderHash)\n    }\n\n    public static clearAmmOrder() {\n        localStorage.removeItem(CONSTANTS.AmmOrder)\n    }\n\n    public static isHardwareAddress(address: string) {\n        let current = localStorage.getItem(CONSTANTS.HardwareAddresses)\n        if (current) {\n            if (current.includes(address.toLowerCase())) {\n                return true\n            }\n        }\n        return false\n    }\n\n    public static saveHardwareAddress(address: string) {\n        let current = localStorage.getItem(CONSTANTS.HardwareAddresses);\n        if (current) {\n            if (current.includes(address.toLowerCase()) !== true) {\n                let newValue = current + ',' + address.toLowerCase();\n                localStorage.setItem(CONSTANTS.HardwareAddresses, newValue);\n            }\n        } else {\n            localStorage.setItem(CONSTANTS.HardwareAddresses, address.toLowerCase());\n        }\n\n    }\n}\n","import { useAmmpoolAPI, useExchangeAPI } from 'hooks/exchange/useApi'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport store, { RootState } from 'stores'\n\nimport { \n    setMarkets, \n    setExchangeInfo, \n    setTokens, \n    setTickerMap, \n    setAmmPoolStats,\n    setAmmPoolConf, \n    setMarketTrades,\n    setAmmActivityRules,\n    setChainId, \n} from 'stores/trading/reducer'\n\nimport { dumpError400, ChainId, AmmPoolStat, FiatType, } from 'loopring-sdk'\nimport { useActiveWeb3React } from 'hooks/web3/useWeb3'\nimport { useEffect } from 'react'\n\nimport { ammpoolAPI, exchangeAPI } from \"stores/apis/api\"\n\nexport function getTradingInfo() {\n    const tradingInfo = store.getState().trading\n    return {\n        tradingInfo,\n        chainId: tradingInfo.chainId,\n    }\n}\n\nexport function useGetTradingInfo() {\n    const tradingInfo = useSelector((state: RootState) => state.trading)\n    return {\n        tradingInfo,\n        chainId: tradingInfo.chainId,\n    }\n}\n\nexport function useUpdateChainId() {\n    const { chainId } = useActiveWeb3React()\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(setChainId(chainId ?? ChainId.GORLI))\n    }, [chainId, dispatch])\n}\n\nexport function useUpdateExchangeMarkets() {\n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const response = await api.getMixMarkets()\n            dispatch(setMarkets(response))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateExchangeInfo() {\n\n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const response = await api.getExchangeInfo()\n            dispatch(setExchangeInfo(response.exchangeInfo))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateAmmPoolConf() {\n\n    const dispatch = useDispatch()\n    const api = useAmmpoolAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const ammPoolConf = await api.getAmmPoolConf()\n            dispatch(setAmmPoolConf(ammPoolConf))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateAmmPoolStats() {\n\n    const dispatch = useDispatch()\n    const api = useAmmpoolAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const ammPoolStats = await api.getAmmPoolStats()\n            dispatch(setAmmPoolStats(ammPoolStats))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateAmmActivityRules() {\n\n    const dispatch = useDispatch()\n    const api = useAmmpoolAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const ammActivityRules = await api.getAmmPoolActivityRules()\n            dispatch(setAmmActivityRules(ammActivityRules.activityRules))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateTokens() {\n\n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const tokens = await api.getTokens()\n            dispatch(setTokens(tokens))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useUpdateTickerMap(market: string) {\n\n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const tickMap = await api.getTicker({\n                market\n              })\n            dispatch(setTickerMap(tickMap))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api])\n\n}\n\nexport function useMarketTrades(market: string) {\n  \n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const marketTrades = await api.getMarketTrades({\n                market\n              })\n            dispatch(setMarketTrades(marketTrades))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api, dispatch])\n\n}\n\nexport function useUpdateFiatPrice() {\n  \n    const dispatch = useDispatch()\n    const api = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!api) {\n            return\n        }\n\n        try {\n            const usdFiatPrices = await api.getFiatPrice({\n                legal: FiatType.USD\n            })\n            const cnyFiatPrices = await api.getFiatPrice({\n                legal: FiatType.CNY\n            })\n            dispatch(setMarketTrades({}))\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [api, dispatch])\n\n}\n\n// export const asyncGetTradingInfo = async() => {\n//\n//     const { tradingInfo } = getTradingInfo()\n//     console.log('--- tradingInfo', tradingInfo)\n//\n//     let tokens: any = undefined\n//\n//     if (tradingInfo.tokens?.tokenIdMap) {\n//         tokens = tradingInfo.tokens\n//     } else {\n//         tokens = (await exchangeAPI().getTokens())\n//     }\n//\n//     let ammpools: any = undefined\n//\n//     if (tradingInfo.ammPoolConf?.ammpools) {\n//         ammpools = tradingInfo.ammPoolConf.ammpools\n//     } else {\n//         ammpools = (await ammpoolAPI().getAmmPoolConf()).ammpools\n//     }\n//\n//     let ammPoolStats: { [key: string] : AmmPoolStat } = {}\n//\n//     if (tradingInfo.ammPoolStats.ammPoolStats) {\n//         ammPoolStats = tradingInfo.ammPoolStats.ammPoolStats\n//     } else {\n//         ammPoolStats = (await ammpoolAPI().getAmmPoolStats()).ammPoolStats\n//     }\n//\n//     return {\n//         tokens,\n//         ammpools,\n//         ammPoolStats,\n//     }\n// }","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nconst now = () => new Date().getTime()\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nconst transactionsSlice = createSlice({\n  name: 'transactions',\n  initialState,\n  reducers: {\n    reset(state) {\n      Object.assign(state, initialState)\n    },\n    addTransaction(state: TransactionState, action: PayloadAction<{\n      chainId: number, from: string,\n      hash: string, approval: any, summary: string, claim: any\n    }>) {\n      const { chainId, from, hash, approval, summary, claim} = action.payload\n      if (state[chainId]?.[hash]) {\n        throw Error('the existing TX can\\'t be added again')\n      }\n\n      const txs = state[chainId] ?? {}\n      txs[hash] = {\n        hash, \n        approval, \n        summary, \n        claim, \n        from,\n        addedTime: now(), \n      }\n      // state[chainId] = txs\n    },\n    clearAllTransactions(state: TransactionState, action: PayloadAction<number>) {\n      const chainId = action.payload\n      if (!state[chainId]) return\n      state[chainId] = {}\n    },\n    checkedTransaction(state: TransactionState, action: PayloadAction<{chainId: number,\n    hash: string, blockNumber: number}>) {\n      const { chainId, hash, blockNumber} = action.payload\n      const tx = state[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n      // state[chainId][hash] = tx\n    },\n    finalizeTransaction(state: TransactionState, action: PayloadAction<{\n      hash: string, chainId: number, receipt: any\n    }>) {\n      const { chainId, hash, receipt } = action.payload\n      \n      const tx = state[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }\n  }\n}\n)\n\nexport const { reset, addTransaction, clearAllTransactions, checkedTransaction, finalizeTransaction, } = transactionsSlice.actions\nexport default transactionsSlice\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  AmmRecordStates } from './interface';\nimport { STATUS } from '../../constant';\n\nconst initialState:Required<AmmRecordStates>  = {\n    ammRecords:[],\n    status:'UNSET',\n    errorMessage:null,\n}\nconst ammRecordSlice:Slice = createSlice({\n    name: 'ammRecord',\n    initialState,\n    reducers: {\n        getAmmRecord(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getAmmRecordStatus(state, action: PayloadAction<AmmRecordStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.ammRecords = {...action.payload.ammRecords};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n    },\n});\nexport { ammRecordSlice };\nexport const { getAmmRecord, getAmmRecordStatus,statusUnset } = ammRecordSlice.actions\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  AmmTradesStates } from './interface';\nimport { STATUS } from '../../constant';\n\n\nconst initialState:Required<AmmTradesStates>  = {\n    ammTrades:[],\n    status:'UNSET',\n    errorMessage:null,\n}\nconst ammTradesSlice:Slice = createSlice({\n    name: 'ammTrades',\n    initialState,\n    reducers: {\n        getAmmTrades(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getAmmTradesStatus(state, action: PayloadAction<AmmTradesStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.ammTrades = {...action.payload.ammTrades};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n    },\n});\nexport { ammTradesSlice };\nexport const { getAmmTrades, getAmmTradesStatus, statusUnset } = ammTradesSlice.actions\n","import { all, takeLatest, call, put } from \"redux-saga/effects\"\nimport { getAmmActivityMap, getAmmActivityMapStatus } from './reducer'\nimport { coinMap, CoinType } from '@loopring-web/component-lib/static'\nimport { AmmActivity, CoinInfo } from '@loopring-web/component-lib/src/static-resource'\nimport { useState } from \"react\"\nimport { useGetTradingInfo } from \"stores/trading/hook\"\n\n/*\nconst useGetAmmActivityMap = ()=>new Promise((resolve)=>{\n    const data:AmmActivity<any> = {\n        // @ts-ignore\n        'AMM-ETH-LRC': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-USDT-USDC': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-USDT-LRC': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-USDT-ETH': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }\n    }\n    resolve({data});\n});\n*/\nconst getAmmActivityMapApi = async () => {\n    const data:AmmActivity<any> = {\n        // @ts-ignore\n        'AMM-LRC-ETH': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-ETH-USDC': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-ETH-USDT': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }, 'AMM-LRC-USDT': {\n            totalRewards: 241232132,\n            myRewards: 1232.123,\n            rewardToken: coinMap.ETH as CoinInfo<CoinType>,\n            duration: {\n                from: new Date('2021-1-1'),\n                to: new Date()\n            },\n        }\n    }\n    return  Promise.resolve({data})\n}\n\nexport function* getPostsSaga() {\n    try {\n        //\n        const { data } = yield call(getAmmActivityMapApi);\n        yield put(getAmmActivityMapStatus({ammActivityMap:data}));\n    } catch (err) {\n        yield put(getAmmActivityMapStatus(err));\n    }\n}\n\nexport default function* ammActivityMapSaga() {\n    yield all([takeLatest(getAmmActivityMap, getPostsSaga)]);\n}\n","import { AmmpoolAPI, ExchangeAPI, UserAPI, WsAPI } from \"loopring-sdk\"\nimport { getTradingInfo } from 'stores/trading/hook'\n\nexport const userAPI = () => {\n    return new UserAPI(getTradingInfo().chainId)\n}\n\nexport const exchangeAPI = () => {\n    return new ExchangeAPI(getTradingInfo().chainId)\n}\n\nexport const ammpoolAPI = () => {\n    return new AmmpoolAPI(getTradingInfo().chainId)\n}\n\nexport const wsAPI = () => {\n    return new WsAPI(getTradingInfo().chainId)\n}\n","import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { getAmmMap, getAmmMapStatus, updateRealTimeAmmMap } from './reducer';\nimport { AmmDetail, PairKey } from '@loopring-web/component-lib/src/static-resource';\nimport store from '../../index';\nimport { AmmPoolInfoV3, AmmPoolStat, } from \"loopring-sdk\";\nimport { ammpoolAPI } from \"stores/apis/api\";\nimport { getTokenPairMap } from '../../token';\n\ntype AmmMap<R extends object> ={ [key:string]: AmmDetail<R>} | {}  //key is AMM-XXX-XXX\nexport const setAmmState = ({ammPoolState}: { ammPoolState: AmmPoolStat }) => {\n    const {system: {forex}} = store.getState().system;\n    return {\n        amountDollar: parseFloat(ammPoolState.liquidityUSD),\n        amountYuan: parseFloat(ammPoolState.liquidityUSD) / forex,\n        totalLPToken: parseFloat(ammPoolState.lpLiquidity),\n        totalA: parseInt(ammPoolState.liquidity[ 0 ]),\n        totalB: parseInt(ammPoolState.liquidity[ 1 ]),\n        rewardValue: ammPoolState.rewards[ 1 ],\n        rewardToken: ammPoolState.rewards[ 0 ],\n        feeA: parseInt(ammPoolState.fees[ 0 ]),\n        feeB: parseInt(ammPoolState.fees[ 1 ]),\n        tradeFloat: {\n            percent: '',\n            timeUnit: '24h',\n            // priceYuan: 100,\n            // priceDollar: 1.23123,\n            // floatTag: FloatTag.increase,\n            // reward: 12312,\n            APY: (parseInt(ammPoolState.apyBips) * 1.0 / 100)\n        },\n        apy: (parseInt(ammPoolState.apyBips) * 1.0 / 100)\n    }\n}\nconst getAmmMapApi = async <R extends object>() => {\n\n    let ammMap: AmmMap<R> = {}\n    const {ammpools,pairs} = (await ammpoolAPI().getAmmPoolConf());\n    const {ammPoolStats} = (await ammpoolAPI().getAmmPoolStats());\n    // store.dispatch(getTokenPairMap({tokenPairs:pairs}));\n\n    // const {\n    //     tokens,\n    //     ammpools,\n    //     ammPoolStats,\n    // } = await asyncGetTradingInfo()\n    let {__timer__} = store.getState().amm.ammMap\n    __timer__ = (() => {\n        if (__timer__ && __timer__ !== -1) {\n            clearInterval(__timer__)\n        }\n        return setInterval(async () => {\n            let ammPoolStats: { [key in keyof R]: AmmPoolStat } = (await ammpoolAPI().getAmmPoolStats()).ammPoolStats as { [key in keyof R]: AmmPoolStat }\n            store.dispatch(updateRealTimeAmmMap({ammPoolStats}))\n        }, 900000)    //15*60*1000 //900000\n    })()\n\n    const {tokenMap: {coinMap, idIndex}} = store.getState();\n\n    // const forex = faitPrice.prices['USDC']\n\n\n    Reflect.ownKeys(ammpools).forEach(async (key) => {\n        const item: AmmPoolInfoV3 = ammpools[ key as string ]\n        if (item.market === key) {\n\n            // const tokenA =  ;   //getTokenInfoById(tokens.tokenIdMap, parseInt(item.tokens.pooled[0]))\n            // const tokenB =  ; // getTokenInfoById(tokens.tokenIdMap, parseInt(item.tokens.pooled[1]))\n            const dataItem: AmmDetail<R> = {\n                coinAInfo: coinMap[ idIndex[ item.tokens.pooled[ 0 ] ] ],\n                coinBInfo: coinMap[ idIndex[ item.tokens.pooled[ 1 ] ] ],\n                feeDollar: 100,  //TODO coinA price * feeA + price * feeB\n                feeYuan: 100, //TODO coinA price * feeA + price * feeB  /forex\n                isNew: Date.now() - (Number(item.createdAt)) > 14 * 86400 * 1000 ? false : true,//14*24*60*60*1000,\n                isActivity: item.status === 7 ? true : false,\n                ...setAmmState({ammPoolState: ammPoolStats[ key ]})\n            }\n            // @ts-ignore\n            ammMap[key] = dataItem\n        }\n\n\n    })\n    return {ammMap, __timer__}\n}\n\n\nexport function* getPostsSaga() {\n    try {\n        const {ammMap, __timer__} = yield call(getAmmMapApi);\n        console.log('--- getPostsSaga:', ammMap)\n        yield put(getAmmMapStatus({ammMap, __timer__}));\n    } catch (err) {\n        yield put(getAmmMapStatus(err));\n    }\n}\n\nexport function* updateRealTimeSaga({payload}: any) {\n    try {\n        const {ammPoolStats} = payload;\n        let {ammMap}:{ammMap:AmmMap<object>} = store.getState().amm.ammMap;\n        if (ammPoolStats) {\n            Reflect.ownKeys(ammPoolStats).map((key) => {\n                // @ts-ignore\n                ammMap[ key] = {\n                    // @ts-ignore\n                    ...ammMap[ key],\n                    ...setAmmState({ammPoolState: ammPoolStats[ key as string ]})\n                }\n            })\n        }\n        yield put(getAmmMapStatus({ammMap}));\n    } catch (err) {\n        yield put(getAmmMapStatus(err));\n    }\n}\n\n\nexport function* ammMapInitSaga() {\n    yield all([takeLatest(getAmmMap, getPostsSaga)]);\n}\n\nexport function* ammMapRealTimeSaga() {\n    yield all([takeLatest(updateRealTimeAmmMap, updateRealTimeSaga)]);\n}\n\nexport const ammMapSaga = [\n    fork(ammMapInitSaga),\n    fork(ammMapRealTimeSaga),\n]\n\n","import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport { getAmmRecord, getAmmRecordStatus } from './reducer';\n\nconst getAmmRecordApi= ()=>new Promise((resolve)=>{ resolve({data:[\n        {side: 'Buy',\n            amount: {\n                sell:{ belong:'ETH', tradeValue: 0.1 },\n                buy:{ belong:'LRC', tradeValue: 123 }\n            },\n            time: Date.now(),\n            fee: 0.02,\n            amountLP:{\n                sell:{ belong:'ETH', tradeValue: 0.1 },\n                buy:{ belong:'LRC', tradeValue: 123 }\n            }\n        },{side: 'Buy',\n            amount: {\n                sell:{ belong:'ETH', tradeValue: 0.1 },\n                buy:{ belong:'LRC', tradeValue: 123 }\n            },\n            time: Date.now(),\n            fee: 0.02,\n            amountLP:{\n                sell:{ belong:'ETH', tradeValue: 0.1 },\n                buy:{ belong:'LRC', tradeValue: 123 }\n            }\n        }\n    ]})});\nexport function* getPostsSaga() {\n    try {\n        //\n        const { data } = yield call(getAmmRecordApi);\n        yield put(getAmmRecordStatus({ammRecords: data}));\n    } catch (err) {\n        yield put(getAmmRecordStatus(err));\n    }\n}\n\nexport default function* ammRecordSaga() {\n    yield all([takeLatest(getAmmRecord, getPostsSaga)]);\n}\n\n\n\n\n","import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport { getAmmTrades, getAmmTradesStatus } from './reducer';\n\nconst getAmmTradesApi = ()=>new Promise((resolve)=>{\n    //TODO: check is connect and active and assign wallet\n    //TODO: if not reject directory, any error happen will clean the\n    resolve([\n    {side: 'Buy',\n        amount: {\n            sell:{ belong:'ETH', tradeValue: 0.1 },\n            buy:{ belong:'LRC', tradeValue: 123 }\n        },\n        time: Date.now(),\n        fee: 0.02,\n        priceValue: 0.123,\n        priceToken: 'LRC'}\n    ,{side: 'Buy',\n        amount: {\n            sell:{ belong:'ETH', tradeValue: 0.1 },\n            buy:{ belong:'LRC', tradeValue: 123 }\n        },\n        time: Date.now(),\n        fee: 0.02,\n        priceValue: 0.123,\n        priceToken: 'LRC'}\n])});\nexport function* getPostsSaga() {\n    try {\n        //\n        const { data } = yield call(getAmmTradesApi);\n        const posts = data;\n        yield put(getAmmTradesStatus(posts));\n    } catch (err) {\n        yield put(getAmmTradesStatus(err));\n    }\n}\n\nexport default function* ammTradesSaga() {\n    yield all([takeLatest(getAmmTrades, getPostsSaga)]);\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { ammRecordSlice } from './AmmRecord';\nimport { ammTradesSlice, getAmmTrades } from './AmmTrades';\nimport { ammMapSlice } from './AmmMap';\nimport { ammActivityMapSlice } from './AmmActivityMap';\nimport ammActivityMapSaga from './AmmActivityMap/saga';\nimport { ammMapSaga } from './AmmMap/saga';\nimport ammRecordSaga from './AmmRecord/saga';\nimport ammTradesSaga from './AmmTrades/saga';\nimport { all, fork } from 'redux-saga/effects';\n// import tokenSaga from '../token/saga';\n// import walletSaga from '../wallet/saga';\n// export * from './AmmRecord';\n// export * from './AmmTrades';\n// export * from './AmmMap';\n// export * from './AmmActivityMap';\n\nexport const  ammReducer = combineReducers({\n    ammRecord: ammRecordSlice.reducer,\n    ammTrades: ammTradesSlice.reducer,\n    ammMap: ammMapSlice.reducer,\n    ammActivityMap:ammActivityMapSlice.reducer\n})\nexport const ammForks =  [\n    fork(ammActivityMapSaga),\n    ...ammMapSaga,\n    fork(ammRecordSaga),\n    fork(ammTradesSaga)\n]\n\n// export * from './interface'\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  WalletStates } from './interface';\nimport { STATUS } from '../constant';\n\n\nconst initialState:Required<WalletStates>  = {\n    wallet:{},\n    status:'UNSET',\n    errorMessage:null,\n}\nconst walletSlice:Slice = createSlice({\n    name: 'walletS',\n    initialState,\n    reducers: {\n        getWallet(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getWalletStatus(state, action: PayloadAction<WalletStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.wallet = {...action.payload.wallet};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n    },\n});\nexport { walletSlice };\nexport const { getWallet, getWalletStatus,statusUnset } = walletSlice.actions\n","import { all, takeLatest, call, put, fork } from \"redux-saga/effects\";\nimport { getTokenMap, getTokenMapStatus, getTokenPairMap, tokenMapSlice } from './reducer';\n\n\nimport { exchangeAPI } from '../apis/api';\nimport { getIcon } from '../../utils/swap_calc_utils';\nimport { CoinInfo, CoinMap } from '@loopring-web/component-lib/static-resource';\nimport { AddressMap, IdMap, TokenMap } from './interface';\n\nconst getTokenMapApi = async ()=>{\n    const {tokenSymbolMap: tokens} = (  await exchangeAPI().getTokens())\n    let coinMap: CoinMap<any, CoinInfo<any>> = {}\n    let tokenMap: typeof tokens = tokens;\n    let addressIndex: AddressMap  = {}\n    let idIndex: IdMap = {}\n    Reflect.ownKeys(tokens).forEach((key: any) => {\n        if (!(key as string).startsWith('LP-')) {\n            coinMap[ key ] = {\n                icon: getIcon(key, tokens),\n                name: key,\n                simpleName: key,\n                description: '',\n                company: '',\n            }\n        }\n        addressIndex = {\n            ...addressIndex,\n            [tokens[key].address]: key\n        }\n        idIndex = {\n            ...idIndex,\n            [tokens[key].tokenId]: key\n        }\n    })\n    return {data:{coinMap,addressIndex,idIndex,tokenMap}}\n };\nexport function* getPostsSaga() {\n    try {\n        const {data} = yield call(getTokenMapApi);\n        yield put(getTokenMapStatus(data));\n    } catch (err) {\n        yield put(getTokenMapStatus(err));\n    }\n}\n// export function* getPairsSaga({payload}:PayloadAction<{tokenPairs: TokenPairs }>) {\n//     try {\n//         const {tokenPairs} = payload;\n//         const tokenPairsMap =  Reflect.ownKeys(tokenPairs).reduce((prev,key)=>{\n//            // @ts-ignore\n//             return prev[key as string] =  tokenPairs[key as string].tokenList\n//         }, {} )\n//\n//         yield put(getTokenMapStatus({tokenPairsMap}));\n//     } catch (err) {\n//         yield put(getAmmMapStatus(err));\n//     }\n// }\n\n\nexport function* tokenInitSaga() {\n    yield all([takeLatest(getTokenMap, getPostsSaga)]);\n}\n// export function* tokenPairsSaga() {\n//     yield all([takeLatest(getTokenPairMap, getPairsSaga)]);\n// }\n\nexport const tokenSaga = [\n    fork(tokenInitSaga),\n    // fork(tokenPairsSaga),\n]\n\n","import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { getWallet, getWalletStatus } from './reducer';\nimport { CoinKey, ErrorObject, PairKey, WalletCoin } from '@loopring-web/component-lib/src/static-resource';\ntype WalletMap<R extends object> = {\n    [key in CoinKey<R>|PairKey<R>]?:WalletCoin<R>\n}\n\nconst getWalletBalance = async <R extends object>() => new Promise((resolve,reject) => {\n    //TODO: check is connect and active and assign wallet\n    //TODO: if not reject directory, any error happen will clean the\n    // await sdk\n    const data:WalletMap<R> = {\n        // @ts-ignore\n        ETH: {\n            belong: 'ETH',\n            count: 11,\n        },\n        LRC: {\n            belong: 'LRC',\n            count: 11111111111111,\n        },\n        'AMM-ETH-LRC':{\n            belong: 'AMM-ETH-LRC',\n            count: 11,\n        }\n    }\n    resolve({data}) ;\n    if(false){\n        const errorMessage:ErrorObject={\n            from:'get wallet balace map',\n            timestamp:Date.now(),\n            messageKey:\"translatedkey\"\n        }\n        reject(errorMessage)\n    }\n});\n\nexport function* getPostsSaga() {\n    try {\n        //\n        const {data} = yield call(getWalletBalance);\n        yield put(getWalletStatus({wallet:data}));\n    } catch (err) {\n        yield put(getWalletStatus(err));\n    }\n}\n\nexport default function* walletSaga() {\n    yield all([takeLatest(getWallet, getPostsSaga)]);\n}\n","import { all, call, fork, put, takeLatest } from \"redux-saga/effects\"\nimport { getTicker, getTickers, getTickerStatus } from './reducer'\nimport {\n    CoinKey,\n    CustomError,\n    ErrorMap,\n    FloatTag,\n    PairKey,\n    TradeFloat\n} from '@loopring-web/component-lib/src/static-resource'\n\n// import { asyncGetTradingInfo, getTradingInfo } from \"stores/trading/hook\"\nimport { TickerData, getTokenInfoById } from \"loopring-sdk\"\n\n// import { makeCoinInfo } from 'utils/swap_calc_utils'\nimport { exchangeAPI } from \"stores/apis/api\"\n\ntype TickerMap<R extends object> = {\n    [key in CoinKey<R>|PairKey<R>]?:TradeFloat & {\n    reward?:number,rewardToken?:string\n    }\n\n}\n\nconst demoTicker = [\n    ['ETH','2.4','24h','1234','3423525222','up'],\n    ['LRC','2.4','24h','1234','3423525222','up'],\n    ['DPR','2.4','24h','1234','3423525222','up'],\n    ['USDC','2.4','24h','1234','3423525222'],\n    ['USDT','2.4','24h','1234','3423525222','down'],\n    ['AMM-LRC-ETH','2.4','24h','1234','3423525222','up','23','1231','LRC'],\n    ['AMM-USDT-USDC','2.4','24h','1234','3423525222','up','23','1231','USDT'],\n    ['AMM-USDT-LRC','2.4','24h','1234','3423525222','up','23','1231'],\n    ['AMM-USDT-ETH','2.4','24h','1234','3423525222','up','23','1331'],\n    ['AMM-ETH-USDC','2.4','24h','1234','3423525222','up','12','233'],\n    ['AMM-ETH-USDT','2.4','24h','1234','3423525222','up','56','233'],\n\n]\n/*\nconst getTickersApi = async <R extends object>(list:Array<keyof R>)=>new Promise((resolve,reject)=>{\n\n    if(list.length>0){\n        const data:TickerMap<R> = {}; //= // {\n        list.map((tokenKey: keyof R) => {\n                const index = demoTicker.findIndex((item) => {\n                  return  item[ 0 ] === tokenKey\n                })\n                if (index > -1) {\n                    const ticker = demoTicker[index]\n                    data[tokenKey] = {\n                        percent: ticker[1],\n                        timeUnit: ticker[2].toString(),\n                        priceDollar: Number(ticker[3]),\n                        priceYuan:  Number(ticker[3]) * 6.3, //TODO get usdt to rmb price\n                        volume: Number(ticker[4]),\n                        floatTag: ticker[5].toString() === 'up'? FloatTag.increase:ticker[5].toString() === 'down'?FloatTag.decrease:FloatTag.none ,\n                        APY: 0,\n                        reward: ticker[7] ?  Number(ticker[7]) :undefined,\n                        rewardToken: ticker[8] ?  Number(ticker[8]) :undefined,\n                    } as TradeFloat\n                } else {\n                    throw new CustomError({...ErrorMap.GET_X_TOKEN_TICKER_ERROR, options: {token: tokenKey}});\n                    //reject(ErrorMap.GET_X_TOKEN_TICKER_ERROR)\n                }\n        })\n        resolve({data});\n    }else{\n       reject(ErrorMap.NO_TOKEN_KEY_LIST)\n    }\n\n});\n*/\nconst getTickersApi = async <R extends object>(list:Array<keyof R>)=> {\n\n    const data:TickerMap<R> = {}\n\n    const tickers = await exchangeAPI().getTicker({market: list.join(',')})\n\n    console.log('>>>tickMap:', tickers.tickMap)\n\n    //@ts-ignore\n    tickers.tickMap.forEach((item: TickerData, key: keyof R) => {\n        console.log('>>>base_token_volume:', item.base_token_volume)\n        data[key] = {\n            timeUnit: '24h',\n            priceDollar: 0,\n            priceYuan:  0,\n            volume: item.base_token_volume,\n            floatTag: item.close > item.open ? 'increase' : 'decrease' ,\n            APY: 0,\n            reward: 0,\n            rewardToken: '',\n        } as TradeFloat\n    })\n\n    return { data }\n}\n\nexport function* getPostsSaga({payload}:any) {\n    try {\n        // @ts-ignore\n        const { tickerKey,tickerKeys } = payload;\n        console.log('getPostsSaga tickerKey',tickerKey, tickerKeys)\n        if(tickerKey || (tickerKeys && tickerKeys.length)) {\n            const {data}  = yield call(getTickersApi,tickerKey?[tickerKey]:tickerKeys);\n            yield put(getTickerStatus({tickerMap:data}));\n\n        }else{\n            throw new CustomError(ErrorMap.NO_TOKEN_KEY_LIST);\n        }\n    } catch (err) {\n        yield put(getTickerStatus(err));\n    }\n}\n\nfunction* tickerSaga() {\n    yield all([takeLatest(getTicker, getPostsSaga)]);\n}\nfunction* tickersSaga() {\n    yield all([takeLatest(getTickers, getPostsSaga)]);\n}\n\nexport const tickerForks = [\n    fork(tickerSaga),\n    fork(tickersSaga),\n]\n ","import { all, call, fork, put, takeLatest } from \"redux-saga/effects\"\nimport { updateSystem, getSystemStatus, updateRealTimeObj } from './reducer'\nimport { ENV, NETWORK, NETWORKEXTEND } from \"./interface\"\nimport store from '../index';\nimport { reset } from '../account/reducer';\nimport { ChainId } from 'loopring-sdk';\nimport { exchangeAPI } from '../apis/api';\nimport { updateRealTimeAmmMap } from '../Amm/AmmMap';\n\n\nconst getSystemsApi = async <R extends object>(system:any)=> {\n    //TODO get some other reuqired id...... put into system\n\n    const { chainId } = system\n    const env =  window.location.hostname === 'localhost'? ENV.DEV :ChainId.GORLI === chainId ?  ENV.UAT : ENV.PROD\n    const network = ChainId.GORLI === chainId ? ChainId.GORLI: ChainId.MAINNET === chainId ?  ChainId.MAINNET: NETWORKEXTEND.NONETWORK\n    const faitPrices = (await exchangeAPI().getFiatPrice({ legal: 'CNY' })).fiatPrices\n    const gasPrice = (await exchangeAPI().getGasPrice()).gasPrice / 1e+9\n    const baseURL = env === ENV.PROD ? 'https://api3.loopring.io' : 'https://uat2.loopring.io';\n    const forex = faitPrices['USDC']\n    let {__timer__} = store.getState().system\n    __timer__ = (()=>{\n        if(__timer__ && __timer__ !== -1){\n            clearInterval(__timer__)\n        }\n        __timer__ = setInterval(async()=>{\n            const faitPrices = (await exchangeAPI().getFiatPrice({ legal: 'CNY' })).fiatPrices\n            const gasPrice = (await exchangeAPI().getGasPrice()).gasPrice / 1e+9\n            const forex = faitPrices['USDC']\n            store.dispatch(updateRealTimeObj({faitPrice: faitPrices, gasPrice,forex}))\n            store.dispatch(updateRealTimeAmmMap)\n        },900000)\n        return __timer__//15*60*1000\n    })();\n    store.dispatch(reset(undefined))\n    return { data: { network, env, baseURL, faitPrice: faitPrices, gasPrice, forex} , __timer__ }\n}\n\nexport function* getUpdateSystem({payload}:any) {\n    try {\n        // @ts-ignore\n        const { system } = payload;\n        // console.log('getPostsSaga systemKey',systemKey, systemKeys)\n        const { data,__timer__}  = yield call(getSystemsApi, system);\n\n        yield put(getSystemStatus({system:data,__timer__}));\n        //TODO check wallect store\n\n\n\n    } catch (err) {\n        yield put(getSystemStatus(err));\n    }\n}\n\n\nfunction* systemSaga() {\n    yield all([takeLatest(updateSystem, getUpdateSystem)]);\n}\n\n\nexport const systemForks = [\n    fork(systemSaga),\n]\n ","import { all, put, fork, select, takeEvery } from \"redux-saga/effects\"\n// import machine from \"../state_machine/fsm/machine\"\n// import { TRANSITION } from \"../state_machine/fsm/actionTypes\"\n// import { helloSaga } from \"./sagas\"\nimport { tokenSaga } from './token/saga';\nimport walletSaga from './wallet/saga';\nimport { ammForks } from './Amm';\nimport { tickerForks } from './ticker/saga';\nimport { systemForks } from './system/saga';\n\n\n// https://css-tricks.com/finite-state-machines-with-react/\n// https://musing-rosalind-2ce8e7.netlify.com/?machine=%7B%22initial%22%3A%22initial%22%2C%22states%22%3A%7B%22initial%22%3A%7B%22on%22%3A%7B%22LOGIN%22%3A%22loggedIn%22%2C%22LOGOUT%22%3A%22loggedOut%22%7D%7D%2C%22loggedOut%22%3A%7B%22on%22%3A%7B%22SUBMIT%22%3A%22loading%22%7D%7D%2C%22loading%22%3A%7B%22on%22%3A%7B%22SUCCESS%22%3A%22loggedIn%22%2C%22FAIL%22%3A%22loggedOut%22%7D%7D%2C%22loggedIn%22%3A%7B%22onEntry%22%3A%5B%22SET_TOKEN%22%5D%2C%22onExit%22%3A%5B%22CLEAR_TOKEN%22%5D%2C%22on%22%3A%7B%22LOGOUT%22%3A%22loggedOut%22%7D%7D%7D%7D\n\n// function* machineHandler(event: any, action: any) {\n//\n//   // @ts-ignore\n//   const currentAppState = yield select((state) => { state.account.status })\n//   const nextAppState = machine.transition(currentAppState, event)\n//\n//   yield put({\n//     type: \"APP_STATE/\" + nextAppState.value,\n//     payload: {\n//       value: nextAppState.value\n//     }\n//   });\n//\n//   console.debug(\"-> from \" + currentAppState + \" to \" + nextAppState);\n//\n//   for (let i = 0; i < nextAppState.actions.length; i++) {\n//     yield put({\n//       type: nextAppState.actions[i],\n//       payload: action\n//     });\n//   }\n// }\n\n// function* watchTransition() {\n//   yield takeEvery(TRANSITION, function*(action: any) {\n//     yield machineHandler(action.event, action.payload);\n//   });\n// }\n\nfunction* mySaga() {\n  yield all([\n    // fork(helloSaga),\n    // fork(watchTransition),\n    ...tokenSaga,\n    fork(walletSaga),\n    ...systemForks,\n    ...ammForks,\n    ...tickerForks\n\n  ]);\n}\n\nexport default mySaga;\n","import { configureStore, combineReducers, getDefaultMiddleware } from '@reduxjs/toolkit'\n\nimport { useDispatch } from 'react-redux'\nimport { save, load } from 'redux-localstorage-simple'\n\nimport createSagaMiddleware from 'redux-saga'\n\n// We'll use redux-logger just as an example of adding another middleware\nimport logger from 'redux-logger'\n\n// And use redux-batch as an example of adding enhancers\nimport { reduxBatch } from '@manaflair/redux-batch'\nimport { updateVersion } from './global/actions'\n\nimport accountSlice from './account/reducer'\nimport tradingSlice from './trading/reducer'\nimport transactionlice from './transactions/reducer'\n\n\nimport { modalsSlice, setLanguage, settingsSlice } from '@loopring-web/component-lib';\nimport { ammReducer } from './Amm';\nimport { tokenMapSlice } from './token';\nimport { walletSlice } from './wallet';\nimport mySaga from './rootSaga';\nimport { tickerMapSlice } from './ticker';\nimport { systemSlice } from './system';\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst reducer = combineReducers({\n  account: accountSlice.reducer,\n  settings: settingsSlice.reducer,\n  system: systemSlice.reducer,\n  trading: tradingSlice.reducer,\n  transactions: transactionlice.reducer,\n  modals: modalsSlice.reducer,\n  amm:ammReducer,\n  tokenMap: tokenMapSlice.reducer,\n  walletMap: walletSlice.reducer,\n  tickerMap: tickerMapSlice.reducer\n})\n\n//\n\nconst PERSISTED_KEYS: string[] = ['settings']\n\nconst store = configureStore({\n  reducer,\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  middleware: [...getDefaultMiddleware({ thunk: false,serializableCheck:false, }), save({ states: PERSISTED_KEYS }), sagaMiddleware, ],\n  // middleware: [...getDefaultMiddleware({ thunk: true }), ],\n  devTools: process.env.NODE_ENV !== 'production',\n  enhancers: [reduxBatch],\n  preloadedState: load({ states: PERSISTED_KEYS })\n})\nstore.dispatch(updateVersion())\nstore.dispatch(setLanguage(store.getState().settings.language))\n// @ts-ignore\nsagaMiddleware.run(mySaga, store.dispatch);\n\n// The store has been created with these options:\n// - The slice reducers were automatically passed to combineReducers()\n// - redux-thunk and redux-logger were added as middleware\n// - The Redux DevTools Extension is disabled for production\n// - The middleware, batch, and devtools enhancers were composed together\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport type RootState = ReturnType<typeof reducer>\n\nexport default store\n","import { useMemo, useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Web3Provider } from '@ethersproject/providers'\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from 'networks/web3_connectors'\n\nimport { ChainId, NetworkContextName } from 'loopring-sdk'\n\n/*\nimport EXCHANGE_ABI from 'config/abis/exchange_3_6.json'\nimport ERC20_ABI from 'config/abis/erc20.json'\nimport DEPOSIT_ABI from 'config/abis/deposit.json'\n\nimport Web3 from 'web3'\n*/\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3React<Web3Provider>()\n  const contextNetwork = useWeb3React<Web3Provider>(NetworkContextName)\n  return context.active ? context : contextNetwork\n}\n\nexport function useEtherscan() {\n  const { chainId } = useActiveWeb3React()\n\n  const [etherscanUrl, setEtherscanUrl] = useState<string>('')\n\n  useEffect(() => {\n    switch(chainId) {\n      case ChainId.MAINNET:\n        setEtherscanUrl('https://etherscan.io/address/')\n        break\n      default:\n        setEtherscanUrl('https://goerli.etherscan.io/address/')\n    }\n  }, [chainId])\n\n  return {\n    etherscanUrl,\n  }\n}\n\nexport function useEagerConnect() {\n\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        console.log('useEagerConnect isAuthorized')\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        console.log('useEagerConnect NOT isAuthorized')\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(onReConnectInjected: any = undefined, suppress: boolean = false) {\n  const { active, error, activate, chainId, } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n\n    const reConnectInjected = () => {\n      console.log('--------------------------> reConnectInjected')\n      activate(injected)\n      if (onReConnectInjected) {\n        onReConnectInjected()\n      }\n    }\n\n    if (ethereum && ethereum.on && !active && !error) {\n\n      const handleChainChanged = (chainId: string | number) => {\n        console.log('Handling \\'chainChanged\\' event with payload', chainId)\n        reConnectInjected()\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log('---------------------------------------------')\n        console.log('Handling \\'accountsChanged\\' event with payload', accounts)\n        console.log('before reset accounts.length=', accounts.length)\n        if (accounts.length > 0) {\n          console.log('before reset!!!!!!!!!!!!!!!!1')\n          reConnectInjected()\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n  }, [active, error, chainId, activate, dispatch])\n}\n\nexport function useBlockNumber() {\n  const { library, chainId } = useActiveWeb3React()\n\n  const [blockNumber, setBlockNumber] = useState<number>()\n\n  useEffect((): any => {\n      if (!!library) {\n          let stale = false\n\n          library\n              .getBlockNumber()\n              .then((blockNumber: number) => {\n                  if (!stale) {\n                      setBlockNumber(blockNumber)\n                  }\n              })\n              .catch(() => {\n                  if (!stale) {\n                      setBlockNumber(-1)\n                  }\n              })\n\n          const updateBlockNumber = (blockNumber: number) => {\n              setBlockNumber(blockNumber)\n          }\n          library.on('block', updateBlockNumber)\n\n          return () => {\n              stale = true\n              library.removeListener('block', updateBlockNumber)\n              setBlockNumber(undefined)\n          }\n      }\n  }, [library, chainId])\n\n  return {\n      blockNumber,\n  }\n}\n\nexport function useBalance() {\n  const { account, library, chainId } = useActiveWeb3React()\n\n  const [balance, setBalance] = useState<number>()\n  useEffect((): any => {\n      if (!!account && !!library) {\n          let stale = false\n\n          library\n              .getBalance(account)\n              .then((balance: any) => {\n                  if (!stale) {\n                      setBalance(balance)\n                  }\n              })\n              .catch(() => {\n                  if (!stale) {\n                      setBalance(0)\n                  }\n              })\n\n          return () => {\n              stale = true\n              setBalance(0)\n          }\n      }\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return {\n      balance,\n  }\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\nimport { AuthereumConnector } from '@web3-react/authereum-connector'\n\nconst POLLING_INTERVAL = 12000\n\nconst RPC_URLS: { [chainId: number]: string } = {\n  1: process.env.REACT_APP_RPC_URL_1 as string,\n  5: process.env.REACT_APP_RPC_URL_5 as string\n}\n\nconsole.log('RPC_URLS 1:', RPC_URLS[1])\nconsole.log('RPC_URLS 5:', RPC_URLS[5])\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 5,] })\n\nexport const network = new NetworkConnector({\n  urls: { \n    1: RPC_URLS[1], \n    5: RPC_URLS[5] \n  },\n  defaultChainId: 1\n})\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: RPC_URLS[1] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n\nexport const walletlink = new WalletLinkConnector({\n  url: RPC_URLS[1],\n  appName: 'Loopring DEX'\n})\n\nexport const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'dummy@abc.xyz',\n  manifestAppUrl: 'http://localhost:1234'\n})\n\nexport const authereum = new AuthereumConnector({ chainId: 42 })\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  AmmMapStates } from './interface';\nimport { STATUS } from '../../constant';\nimport { AmmPoolStat } from 'loopring-sdk';\nimport { setAmmState } from './saga';\n\n\nconst initialState:Required<AmmMapStates<object,object>>  = {\n    ammMap:{},\n    __timer__:-1,\n    status:'UNSET',\n    errorMessage:null,\n}\nconst ammMapSlice:Slice = createSlice({\n    name: 'ammMap',\n    initialState,\n    reducers: {\n        getAmmMap(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getAmmMapStatus(state, action: PayloadAction<AmmMapStates<any,any>>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            if(state.ammMap)  {\n                state.ammMap = {...action.payload.ammMap};\n            }\n            state.__timer__  =   action.payload.__timer__ ?  action.payload.__timer__: state.__timer__;\n            state.status = STATUS.DONE\n        },\n        updateRealTimeAmmMap(state, action: PayloadAction<{ammPoolStats?:{[key:string]:AmmPoolStat} }>){\n            state.status = STATUS.PENDING\n          \n\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n    },\n});\nexport { ammMapSlice };\nexport const { getAmmMap, getAmmMapStatus, statusUnset, updateRealTimeAmmMap } = ammMapSlice.actions\n","import { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport store from 'stores'\n\nimport { getLibrary } from 'utils/web3_tools'\nimport { NetworkContextName } from 'loopring-sdk'\n\nimport { getTheme, i18n, provider, ProviderComposer } from \"@loopring-web/component-lib/static-resource\"\nimport { ThemeProvider as MuThemeProvider } from '@material-ui/core'\nimport LocalizationProvider from '@material-ui/pickers/LocalizationProvider'\n\nimport MomentUtils from '@material-ui/lab/AdapterMoment'\n\nimport { ThemeProvider } from \"@emotion/react\"\n\nimport { I18nextProvider } from \"react-i18next\"\n\n\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\nconst providers = [\n    provider(LocalizationProvider as any, {dateAdapter: MomentUtils}),\n    provider(I18nextProvider as any, {i18n:i18n}),\n    provider(MuThemeProvider as any, {theme: getTheme('dark')}),\n    provider(ThemeProvider as any, {theme: getTheme('dark')}),\n    provider(Provider as any, {store}),\n]\n\nReactDOM.render(\n// @ts-ignore\n    <ProviderComposer providers={providers}>\n        <Web3ReactProvider getLibrary={getLibrary}>\n            <Web3ProviderNetwork getLibrary={getLibrary}>\n                <App/>\n            </Web3ProviderNetwork>\n        </Web3ReactProvider>\n    </ProviderComposer>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nif (process.env.NODE_ENV !== 'production') {\n    reportWebVitals(console.log)\n}\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\n\nimport { TradingInterval, ChainId, ExchangeInfo, TokenInfo, TickerData, getBaseQuote } from 'loopring-sdk'\n\nexport interface TradingInfo {\n  chainId: number\n  symbol: string\n  symbol_base: string | undefined\n  symbol_quote: string | undefined\n  interval: TradingInterval\n  ammPoolStats: any\n  ammPoolConf: any\n  ammActivityRules: any\n  markets: any\n  marketTrades: any\n  tickerMap: {[key: string]: TickerData}\n  tokens: {[key: string]: [value: TokenInfo]}\n  exchangeInfo?: ExchangeInfo\n}\n\nconst defaultSymbol = process.env.REACT_APP_TEST_SYMBOL ? process.env.REACT_APP_TEST_SYMBOL : 'LRC-ETH'\nconst defaultInterval = process.env.REACT_APP_TEST_INTERVAL ? process.env.REACT_APP_TEST_INTERVAL : TradingInterval.hr1\n\nconst { base, quote } = getBaseQuote(defaultSymbol)\n\nconst initialState = {\n  chainId: ChainId.GORLI,\n  symbol: defaultSymbol,\n  symbol_base: base,\n  symbol_quote: quote,\n  interval: defaultInterval,\n  ammPoolConf: {},\n  ammActivityRules: {},\n  ammPoolStats: {},\n  markets: [],\n  marketTrades: {},\n  tokens: {},\n  tickerMap: {},\n  refreshRate: 1000,\n  refreshRateSlow: 3000,\n} as TradingInfo\n\nconst tradingSlice:Slice = createSlice({\n  name: 'trading',\n  initialState,\n  reducers: {\n    setChainId(state, action: PayloadAction<number>) {\n      state.chainId = action.payload\n    },\n    changeSymbol(state, action: PayloadAction<any>) {\n      state.symbol = action.payload\n      const { base, quote } = getBaseQuote(state.symbol)\n      state.symbol_base = base\n      state.symbol_quote = quote\n    },\n    changeTradingInterval(state, action: PayloadAction<any>) {\n      state.interval = action.payload\n    },\n    setTickerMap(state, action: PayloadAction<any>) {\n      state.tickerMap = action.payload\n    },\n    setAmmPoolStats(state, action: PayloadAction<any>) {\n      state.ammPoolStats = action.payload\n    },\n    setAmmActivityRules(state, action: PayloadAction<any>) {\n      state.ammActivityRules = action.payload\n    },\n    setAmmPoolConf(state, action: PayloadAction<any>) {\n      state.ammPoolConf = action.payload\n    },\n    setMarketTrades(state, action: PayloadAction<any>) {\n      state.marketTrades = action.payload\n    },\n    setMarkets(state, action: PayloadAction<any>) {\n      state.markets = action.payload\n    },\n    setTokens(state, action: PayloadAction<{}>) {\n      state.tokens = action.payload\n    },\n    setExchangeInfo(state, action: PayloadAction<ExchangeInfo>) {\n      state.exchangeInfo = action.payload\n    },\n  },\n})\n\nexport const {\n  setChainId, \n  setAmmPoolStats,\n  setAmmActivityRules,\n  setMarketTrades, \n  setTickerMap, \n  setAmmPoolConf, \n  changeSymbol, \n  changeTradingInterval, \n  setMarkets, \n  setTokens, \n  setExchangeInfo, \n} = tradingSlice.actions\n\nexport default tradingSlice\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport {  TickerStates } from './interface';\nimport { STATUS } from '../constant';\nimport { CoinKey } from '@loopring-web/component-lib/src/static-resource';\n\nconst initialState:Required<TickerStates>  = {\n    tickerMap:{},\n    status:'UNSET',\n    errorMessage:null,\n}\nconst tickerMapSlice:Slice = createSlice({\n    name: 'tickerMap',\n    initialState,\n    reducers: {\n        getTicker(state, action:PayloadAction<CoinKey<any>>) {\n            state.status = STATUS.PENDING\n        },\n        getTickers(state, action:PayloadAction<Array<CoinKey<any>>>) {\n            state.status = STATUS.PENDING\n        },\n        getTickerStatus(state, action: PayloadAction<TickerStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.tickerMap = {...state.tickerMap,...action.payload.tickerMap};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n\n    },\n});\nexport { tickerMapSlice };\nexport const { getTicker,getTickers, getTickerStatus, statusUnset } = tickerMapSlice.actions;","import { useDispatch, useSelector } from 'react-redux'\nimport { AmmMapStates } from './interface';\nimport { ammMapSlice } from './reducer';\n\nexport const useAmmMap = <R extends object,I extends object>(): AmmMapStates<R,I> & {\n    updateAmmMap:()=> void,\n    statusUnset:()=> void,\n} => {\n    const ammMap:AmmMapStates<R,I>= useSelector((state: any) => state.amm.ammMap)\n    const dispatch = useDispatch();\n    const updateAmmMap = () => {\n        dispatch(ammMapSlice.actions.getAmmMap(undefined))\n    }\n    const statusUnset = ()=>{\n        dispatch(ammMapSlice.actions.statusUnset(undefined))\n    }\n    return {\n        ...ammMap,\n        statusUnset,\n        updateAmmMap\n    }\n}\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport { SystemStatus } from './interface';\nimport { STATUS } from '../constant';\n\nconst initialState: Required<SystemStatus> = {\n    system: {},\n    __timer__: -1,\n    status: 'UNSET',\n    errorMessage: null,\n}\nconst systemSlice: Slice = createSlice({\n    name: 'system',\n    initialState,\n    reducers: {\n        updateSystem(state, action: PayloadAction<Partial<{ chainId: 1 | 5 | 'unknown' }>>) {\n            state.status = STATUS.PENDING\n        },\n        updateRealTimeObj(state, action: PayloadAction<Partial<{ faitPrice: any, gasPrice: number ,forex:number}>>) {\n            state.system = {\n                ...state.system,\n                forex: action.payload.forex? action.payload.forex : state.system.forex,\n                faitPrice: action.payload.faitPrice ? action.payload.faitPrice : state.system.faitPrice,\n                gasPrice: action.payload.gasPrice ? action.payload.gasPrice : state.system.gasPrice,\n            };\n\n        },\n        getSystemStatus(state, action: PayloadAction<Partial<SystemStatus>>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status = STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.system = {...state.system, ...action.payload.system};\n            state.__timer__ = action.payload.__timer__;\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n\n    },\n});\nexport { systemSlice };\nexport const {updateSystem, getSystemStatus, statusUnset,updateRealTimeObj} = systemSlice.actions;","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport { AmmActivityMapStates } from './interface';\nimport { STATUS } from '../../constant';\n\n\nconst initialState:Required<AmmActivityMapStates>  = {\n    ammActivityMap:{},\n    status:'UNSET',\n    errorMessage:null,\n}\nconst ammActivityMapSlice:Slice = createSlice({\n    name: 'ammActivityMap',\n    initialState,\n    reducers: {\n        getAmmActivityMap(state, action:PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getAmmActivityMapStatus(state, action: PayloadAction<AmmActivityMapStates>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status =  STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            state.ammActivityMap = {...action.payload.ammActivityMap};\n            state.status = STATUS.DONE\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n\n    },\n});\nexport { ammActivityMapSlice };\nexport const { getAmmActivityMap, getAmmActivityMapStatus, statusUnset } = ammActivityMapSlice.actions\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit'\nimport { TokenMapStates } from './interface';\nimport { STATUS } from '../constant';\nimport { TokenPairs } from 'loopring-sdk/dist/defs/loopring_defs';\n\nconst initialState: TokenMapStates<Object> = {\n    coinMap: {},\n    addressIndex: undefined,\n    tokenMap: undefined,\n    idIndex: undefined,\n    status: 'UNSET',\n    errorMessage: null,\n}\nconst tokenMapSlice: Slice = createSlice({\n    name: 'tokenMap',\n    initialState,\n    reducers: {\n        getTokenMap(state, action: PayloadAction<string | undefined>) {\n            state.status = STATUS.PENDING\n        },\n        getTokenMapStatus(state, action: PayloadAction<TokenMapStates<Object>>) {\n            // @ts-ignore\n            if (action.error) {\n                state.status = STATUS.ERROR\n                // @ts-ignore\n                state.errorMessage = action.error\n            }\n            const {tokenMap, addressIndex, idIndex, coinMap} = action.payload;\n            if (tokenMap) { state.tokenMap = tokenMap }\n            if (addressIndex) { state.addressIndex = addressIndex }\n            if (idIndex) { state.idIndex = idIndex }\n            if (coinMap) { state.coinMap = coinMap }\n            // if (tokenPairsMap) {state.tokenPairsMap = tokenPairsMap }\n            state.status = STATUS.DONE;\n        },\n        getTokenPairMap(state, action: PayloadAction<{tokenPairs: TokenPairs }>) {\n            const {tokenPairs} = action.payload;\n            const tokenPairsMap =  Reflect.ownKeys(tokenPairs).reduce((prev,key)=>{\n                // @ts-ignore\n                return prev[key as string] =  tokenPairs[key as string].tokenList\n            }, {} )\n            if (tokenPairsMap) {state.tokenPairsMap = tokenPairsMap }\n            // state.status = STATUS.PENDING\n        },\n        statusUnset: state => {\n            state.status = STATUS.UNSET\n        }\n\n    },\n});\nexport { tokenMapSlice };\nexport const {getTokenMap, getTokenMapStatus,getTokenPairMap, statusUnset} = tokenMapSlice.actions;","import { StateBase } from '../interface';\nimport { ChainId } from 'loopring-sdk';\n\nexport enum ENV {\n    DEV='DEV',\n    UAT='UAT',\n    PROD='PROD',\n}\nexport enum NETWORKEXTEND {\n    NONETWORK = 'unknown'\n}\nexport type NETWORK = NETWORKEXTEND | ChainId\n\n\nexport type System = {\n    env:keyof typeof ENV,\n    chainId: 1|5|'unknown'\n    network:keyof NETWORK,\n    baseURL: string,\n    faitPrice:any,\n    gasPrice:number,\n    forex:number,\n\n\n}\n\nexport type SystemStatus = {\n    system:System | {}\n    __timer__:number\n}  & StateBase\n\n\n\n","import { useDispatch, useSelector } from 'react-redux'\nimport { tickerMapSlice } from './reducer';\nimport { TickerStates } from './interface';\nimport { CoinKey } from '@loopring-web/component-lib/src/static-resource';\n\nexport function useTicker(): TickerStates & {\n    updateTickers:(tickerKeys:Array<CoinKey<any>>)=>void,\n    updateTicker:(tickerKey:CoinKey<any>)=>void,\n    statusUnset:()=>void,\n} {\n    const tickerMap:TickerStates = useSelector((state: any) => state.tickerMap)\n    const dispatch = useDispatch();\n    const updateTicker = (tickerKey:CoinKey<any>) => {\n        dispatch(tickerMapSlice.actions.getTicker({tickerKey}))\n    }\n    const updateTickers = (tickerKeys:Array<CoinKey<any>>) => {\n        dispatch(tickerMapSlice.actions.getTickers({tickerKeys}))\n    }\n    const statusUnset = ()=>{\n        dispatch(tickerMapSlice.actions.statusUnset(undefined))\n    }\n    return {\n        ...tickerMap,\n        statusUnset,\n        updateTickers,\n        updateTicker,\n    }\n\n}\n","export enum AccountStatus {\n    UNKNOWN = 'UNKNOWN',\n    UNCONNNECTED = 'UNCONNNECTED',\n    CONNECTED = 'CONNECTED',\n    NOACCOUNT = 'NOACCOUNT',\n    DEPOSITING = 'DEPOSITING',\n    DEPOSIT_TO_CONFIREM = 'DEPOSIT_TO_CONFIREM',\n    UNACTIVATED = 'UNACTIVATED',\n    ARPROVING = 'ARPROVING',\n    APPROV_TO_CONFIRM = 'APPROV_TO_CONFIRM',\n    LOCKED = 'LOCKED',\n    ACTIVATED = 'ACTIVATED',\n}\n\nexport enum StatusChangeEvent {\n    Reset = 'Reset',\n    Connecting = 'Connecting',\n    HasPubkey = 'HasPubkey',\n    HasNoPubkey = 'HasNoPubkey',\n    ErrorResponse = 'ErrorResponse',\n    FinishDeposit = 'FinishDeposit',\n    DepositConfirmed = 'DepositConfirmed',\n    IsSmartWallet = 'IsSmartWallet',\n    ApproveSubmit = 'ApproveSubmit',\n    ApproveConfirmed = 'ApproveConfirmed',\n    Unlock = 'Unlock',\n    Lock = 'Lock',\n}\n\nexport const AccountMachineSpec = (initialState: AccountStatus = AccountStatus.UNCONNNECTED) => \n{\n    return {\n        initialState: initialState,\n        states: {\n            UNCONNNECTED: {\n                Connecting: AccountStatus.CONNECTED,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            CONNECTED: {\n                HasPubkey: AccountStatus.LOCKED,\n                HasNoPubkey: AccountStatus.UNACTIVATED,\n                ErrorResponse: AccountStatus.NOACCOUNT,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            NOACCOUNT: {\n                ErrorResponse: AccountStatus.NOACCOUNT,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            DEPOSITING: {\n                FinishDeposit: AccountStatus.DEPOSIT_TO_CONFIREM,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            DEPOSIT_TO_CONFIREM: {\n                HasPubkey: AccountStatus.ACTIVATED,\n                HasNoPubkey: AccountStatus.DEPOSIT_TO_CONFIREM,\n                ErrorResponse: AccountStatus.DEPOSIT_TO_CONFIREM,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            UNACTIVATED: {\n                IsSmartWallet: AccountStatus.ARPROVING,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            ARPROVING: {\n                ApproveSubmit: AccountStatus.APPROV_TO_CONFIRM,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            APPROV_TO_CONFIRM: {\n                ApproveConfirmed: AccountStatus.ACTIVATED,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            LOCKED: {\n                Unlock: AccountStatus.ACTIVATED,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n            ACTIVATED: {\n                Lock: AccountStatus.LOCKED,\n                Reset: AccountStatus.UNCONNNECTED,\n            },\n        },\n    }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { BigNumber } from '@ethersproject/bignumber'\n\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\n\nimport { UnsupportedChainIdError } from '@web3-react/core'\n\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\n\nimport { ChainId } from 'loopring-sdk'\n\nexport function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 10000\n  return library\n}\n\nexport function getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return 'You\\'re connected to an unsupported network.'\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected ||\n    error instanceof UserRejectedRequestErrorWalletConnect\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\nexport function transactionChecker(web3: any, address: string) {\n  const account = address.toLowerCase()\n\n  const subscription = web3.eth.subscribe('pendingTransactions', (err: any, res: any) => {\n    if (err) {\n      console.error(err)\n    }\n  })\n\n  return function watchTransactions() {\n    console.log('Watch Transactions...')\n    subscription.on('data', (txHash: any) => {\n      setTimeout(async () => {\n        try {\n          let tx = await web3.eth.getTransaction(txHash)\n          if (tx.to && tx.to.toLowerCase() === account) {\n            const value = web3.utils.fromWei(tx.value, 'ether')\n            if (value > 0) {\n              console.log('watchTransactions value:', value)\n            }\n          }\n        } catch (err) {\n          console.error(err)\n        }\n      }, 60 * 1000)\n    })\n  }\n}\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\n  1: '',\n  5: 'goerli.',\n}\n\nexport function getEtherscanLink(\n  chainId: ChainId,\n  data: string,\n  type: 'transaction' | 'token' | 'address' | 'block'\n): string {\n  const prefix = `https://${ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[1]}etherscan.io`\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/token/${data}`\n    }\n    case 'block': {\n      return `${prefix}/block/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport async function isContract(web3: any, address: string) {\n  const code = await web3.eth.getCode(address)\n  return code && code.length > 2\n}\n\nexport function getShortAddr(address: string) {\n    if (!address || address === undefined || address === null || address.trim() === '') {\n        console.log('getShortAddr got empty!')\n        return undefined\n    }\n    const convertAddr = address.substr(0, 6) + '...' + address.substr(address.length - 4)\n    return convertAddr\n}\n","import { debounce } from 'lodash'\nimport React, { useEffect } from 'react'\nimport { UserStorage } from 'storage'\n\nimport { useCheckAccStatus, } from 'stores/account/hook'\n\nimport { \n  useUpdateChainId,\n  useUpdateExchangeInfo, \n  useUpdateExchangeMarkets, \n  useUpdateTokens, \n  useUpdateAmmPoolConf,\n  useUpdateAmmActivityRules,\n  useUpdateAmmPoolStats,\n} from 'stores/trading/hook'\n\nenum WindowEvent {\n  Click = 'click',\n  Scroll = 'scroll',\n  Mouseover = 'mouseover',\n}\n\nconst events = [WindowEvent.Click, WindowEvent.Scroll]\n\nconst forceReset = debounce(() => { UserStorage.checkTimeout(true) }, 100)\n\nexport const GlobalProvider = ({ children }: { children: React.ReactNode }) => {\n\n  useUpdateExchangeInfo()\n  useUpdateExchangeMarkets()\n  useUpdateTokens()\n  useUpdateAmmPoolConf()\n  useUpdateAmmActivityRules()\n  useUpdateAmmPoolStats()\n  useUpdateChainId()\n\n  useCheckAccStatus()\n\n  useEffect(() => {\n\n    events.forEach((event: string) => {\n      document.addEventListener(event, forceReset)\n    })\n\n    return () => {\n\n      events.forEach((event: string) => {\n        document.removeEventListener(event, forceReset)\n      })\n    }\n\n  }, [])\n\n  return (\n    <React.Fragment>\n      { children}\n    </React.Fragment>\n  )\n\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport { network } from 'networks/web3_connectors'\n\nimport { useEagerConnect, useInactiveListener } from 'hooks/web3/useWeb3'\nimport { reset, setAccountStatus } from 'stores/account/reducer'\n\nimport { ChainId, NetworkContextName } from 'loopring-sdk'\n\n// import Loader from 'components/modals/Loader'\nimport { useDispatch } from 'react-redux'\nimport { AccountStatus } from 'state_machine/account_machine_spec'\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 20rem;\n`\n\nconst Message = styled.h2`\n  color: ${({ theme }) => theme.colorBase.error};\n`\n\nexport function Web3ReactManager({ children }: { children: JSX.Element }) {\n  const { t } = useTranslation()\n  const { active } = useWeb3React()\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React(NetworkContextName)\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\n  useEffect(() => {\n    if (triedEager && !networkActive && !networkError && !active) {\n      activateNetwork(network)\n    }\n  }, [triedEager, networkActive, networkError, activateNetwork, active])\n\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  \n  const dispatch = useDispatch()\n\n  const onReConnectInjected = () => {\n    console.log('onReConnectInjected')\n    dispatch(reset(undefined))\n    dispatch(setAccountStatus(AccountStatus.UNCONNNECTED))\n  }\n  \n  useInactiveListener(onReConnectInjected, !triedEager)\n\n  // handle delayed loader state\n  const [showLoader, setShowLoader] = useState(false)\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowLoader(true)\n    }, 600)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [])\n\n  // on page load, do nothing until we've tried to connect to the injected connector\n  if (!triedEager) {\n    return null\n  }\n\n  // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\n  if (!active && networkError) {\n    return (\n      <MessageWrapper>\n        <Message>{t('unknownError')}</Message>\n      </MessageWrapper>\n    )\n  }\n\n  // if neither context is active, spin\n  if (!active && !networkActive) {\n    return showLoader ? (\n      <MessageWrapper>\n        {/*<Loader />*/}\n      </MessageWrapper>\n    ) : null\n  }\n\n  return children\n}\n","import React from 'react'\n\nexport const DevWrapper = ({ children }: { children: React.ReactNode }) => {\n\n  return (\n    <React.Fragment>\n      {\n        process.env.NODE_ENV !== 'production' ? (\n          <>\n          {children}\n          </>\n        ) : null\n      }\n    </React.Fragment>\n  )\n\n}\n\n","import { useDispatch, useSelector } from 'react-redux'\nimport { tokenMapSlice } from './reducer';\nimport { TokenMapStates } from './interface';\n\nexport function useTokenMap<R extends object>(): TokenMapStates<R> & {\n    updateTokenMap:()=>void,\n    statusUnset:()=>void,\n} {\n    const tokenMap:TokenMapStates<R> = useSelector((state: any) => state.tokenMap)\n    const dispatch = useDispatch();\n    const updateTokenMap = () => {\n        dispatch(tokenMapSlice.actions.getTokenMap(undefined))\n    }\n    const statusUnset = ()=>{\n        dispatch(tokenMapSlice.actions.statusUnset(undefined))\n    }\n    return {\n        ...tokenMap,\n        statusUnset,\n        updateTokenMap,\n    }\n\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { AmmActivityMapStates } from './interface';\nimport { ammActivityMapSlice } from './reducer';\n\nexport function useAmmActivityMap(): AmmActivityMapStates & {\n    updateAmmActivityMap:()=> void,\n    statusUnset:()=> void,\n} {\n    const ammActivityMap:AmmActivityMapStates = useSelector((state: any) => state.amm.ammActivityMap)\n    const dispatch = useDispatch();\n    const updateAmmActivityMap = () => {\n        dispatch(ammActivityMapSlice.actions.getAmmActivityMap(undefined))\n    }\n    const statusUnset = ()=>{\n        dispatch(ammActivityMapSlice.actions.statusUnset(undefined))\n    }\n    return {\n        ...ammActivityMap,\n        statusUnset,\n        updateAmmActivityMap\n    }\n\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { systemSlice } from './reducer';\nimport { System, SystemStatus } from './interface';\n\nexport function useSystem(): SystemStatus & {\n    updateSystem:(system:Partial<System>)=>void,\n    statusUnset:()=>void,\n} {\n    const system:SystemStatus = useSelector((state: any) => state.system)\n    const dispatch = useDispatch();\n    const updateSystem = (system:Partial<System>) => {\n        dispatch(systemSlice.actions.updateSystem({system}))\n    }\n    const statusUnset = ()=>{\n        dispatch(systemSlice.actions.statusUnset(undefined))\n    }\n    return {\n        ...system,\n        statusUnset,\n        updateSystem,\n    }\n\n}\n","import { useDeepCompareEffect } from \"react-use\"\n\nexport function useCustomDCEffect(action: any, deps: any[] | undefined | null) {\n    useDeepCompareEffect(action, [deps || {}])\n}\n","export enum STATUS {\n    UNSET='UNSET',\n    PENDING='PENDING',\n    ERROR='ERROR',   // success failed timeout is Done\n    DONE='DONE',   // success failed timeout is Done\n}\n","import { WsAPI, ExchangeAPI, AmmpoolAPI, UserAPI, DEFAULT_TIMEOUT, } from 'loopring-sdk'\nimport store, { RootState } from 'stores'\nimport { useSelector } from 'react-redux'\n\nimport { useMemo } from 'react'\n\nfunction useApi(ApiClass: any, timeout = DEFAULT_TIMEOUT) {\n    // const chainId = store.getState().trading.chainId\n    // return new ApiClass(chainId, timeout)\n\n  const { chainId, } = useSelector((state: RootState) => state.trading)\n\n  const genApi = () => {\n      if (!chainId) {\n          return undefined\n      }\n\n      return new ApiClass(chainId, timeout)\n  }\n\n  const api = useMemo(genApi, [ApiClass, chainId, timeout])\n\n  return api\n}\n\nexport function useWsAPI() {\n    return useApi(WsAPI) as WsAPI\n}\n\nexport function useExchangeAPI() {\n    return useApi(ExchangeAPI) as ExchangeAPI\n}\n\nexport function useAmmpoolAPI() {\n    return useApi(AmmpoolAPI) as AmmpoolAPI\n}\n\nexport function useUserAPI() {\n    return useApi(UserAPI) as UserAPI\n}\n","import * as fm from 'loopring-sdk'\nimport BigNumber from 'bignumber.js'\n\nimport { CoinInfo, CoinMap, } from '@loopring-web/component-lib/static-resource'\n\nimport { utils } from 'ethers'\nimport { TokenInfo } from 'loopring-sdk'\n\nconst MULTI_FACTOR = 10000\n\nexport enum SwapStatus {\n    Normal = 'Normal',\n    EmptyInput = 'EmptyInput',\n    ExceedUserBalance = 'ExceedUserBalance',\n    ExceedPoolBalance = 'ExceedPoolBalance',\n    Loading = 'Loading',\n}\n\nexport const checkStatus = (baseAmt: any, MaxBaseAmt: any, quoteAmt: any, MaxQuoteAmt: any) => {\n    let newStatus = SwapStatus.Normal\n\n    baseAmt = new BigNumber(baseAmt)\n    MaxBaseAmt = new BigNumber(MaxBaseAmt)\n    quoteAmt = new BigNumber(quoteAmt)\n    MaxQuoteAmt = new BigNumber(MaxQuoteAmt)\n\n    const zero = new BigNumber(0)\n\n    if (baseAmt.gt(MaxBaseAmt)) {\n        newStatus = SwapStatus.ExceedUserBalance\n    } else if (quoteAmt.gt(MaxQuoteAmt)) {\n        newStatus = SwapStatus.ExceedPoolBalance\n    } else if (baseAmt.eq(zero) || quoteAmt.eq(zero)) {\n        newStatus = SwapStatus.EmptyInput\n    }\n\n    const isNormal = newStatus === SwapStatus.Normal\n\n    return {\n        isNormal,\n    }\n\n}\n\nexport function getIcon(symbol: string, tokens: any) {\n    const token: any = tokens[symbol]\n    return getIconByTokenInfo(token)\n}\n\nexport function getIconByTokenInfo(token: TokenInfo) {\n    if (token) {\n        const addr = utils.getAddress(token.address)\n        const path = `https://exchange.loopring.io/assets/images/ethereum/assets/${addr}/logo.png`\n        return path\n    }\n    return ''\n}\n\nexport function makeCoinInfo(token: TokenInfo) {\n    if (token) {\n        const info: CoinInfo<any> = {\n            icon: getIconByTokenInfo(token),\n            name: token.symbol,\n            simpleName: token.symbol,\n            description: token.name,\n            company: token.name,\n        }\n        return info\n    }\n    return undefined\n}\n\nexport const getLeft = (pairs: any, tokens: any) => {\n    if (pairs) {\n\n        const left = Reflect.ownKeys(pairs)\n\n        let coinMapLeft: CoinMap<any, CoinInfo<any>> = {}\n\n        //https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png\n\n        left.forEach((key: any) => {\n            coinMapLeft[key] = {\n                icon: getIcon(key, tokens),\n                name: key,\n                simpleName: key,\n                description: '',\n                company: ''\n            }\n        })\n\n        return {\n            left,\n            coinMapLeft,\n        }\n    }\n\n    return undefined\n}\n\nexport const getRight = (pairs: any, left: any, tokens: any) => {\n    if (pairs) {\n        const right = pairs[left].tokenList\n\n        let coinMapRight: CoinMap<any, CoinInfo<any>> = {}\n\n        if (right) {\n            right.forEach((key: any) => {\n                coinMapRight[key] = {\n                    icon: getIcon(key, tokens),\n                    name: key,\n                    simpleName: key,\n                    description: '',\n                    company: ''\n                }\n            })\n\n            return {\n                right,\n                coinMapRight,\n            }\n        }\n    }\n    return undefined\n}\n\nexport const getToken = (tokens: any, token: any) => {\n    if (!tokens) {\n        throw Error('no tokens list!')\n    }\n    return tokens[token]\n}\n\nexport const getTokenInfoByToken = (ammBalance: any, tokens: any, token: any) => {\n\n    const tokenInfo = getToken(tokens, token)\n\n    // console.log(' tokenInfo:', tokenInfo, ' tokens:', tokens, ' token:', token)\n    const tokenVol = ammBalance.pooledMap[tokenInfo.tokenId].volume\n    const reserve = fm.toBig(tokenVol)\n\n    // console.log(' tokenInfo:', tokenInfo, ' tokenVol:', tokenVol)\n\n    return {\n        tokenInfo, tokenVol, reserve,\n    }\n}\n\nconst getKey = (base: any, quote: any) => {\n    // const isLRCETH = (base === 'LRC' && quote === 'ETH') || (base === 'ETH' && quote === 'LRC')\n\n    if (!base || !quote) {\n        return {\n            key: undefined,\n            key_bak: undefined,\n            isOK: false,\n        }\n    }\n\n    const isLRCETH = false\n    const key = isLRCETH ? 'LRCETH-Pool' : ('AMM-' + base + '-' + quote)\n    const key_bak = isLRCETH ? 'LRCETH-Pool' : ('AMM-' + quote + '-' + base)\n    return {\n        key,\n        key_bak,\n        isOK: true,\n    }\n}\n\nconst getInfoByKey = (raw_data: any, keyPair: any) => {\n    const {\n        key,\n        key_bak,\n    } = keyPair\n\n    if (raw_data[key]) return raw_data[key]\n    return raw_data[key_bak]\n}\n\nexport const getBalances = (ammpools: any, ammPoolsBalances: any, base: any, quote: any, tokens: any) => {\n\n    const { ammInfo,\n        ammBalance,\n    } = getAmmInfo(ammpools, ammPoolsBalances, base, quote)\n\n    const baseToken = getToken(tokens, base)\n    const quoteToken = getToken(tokens, quote)\n\n    const baseBalance = ammBalance.pooledMap[baseToken.tokenId]\n    const quoteBalance = ammBalance.pooledMap[quoteToken.tokenId]\n\n    return {\n        ammInfo,\n        ammBalance,\n        baseBalance,\n        quoteBalance,\n    }\n\n}\n\nexport const getAmmInfoOnly = (ammpools: any, base: any, quote: any) => {\n\n    const keyPair = getKey(base, quote)\n    // console.log('keyPair:', keyPair)\n\n    const ammInfo = getInfoByKey(ammpools, keyPair)\n\n    if (!ammInfo) {\n        throw Error('no ammInfo!')\n    }\n\n    return {\n        ammInfo,\n    }\n\n}\n\nexport const getAmmInfo = (ammpools: any, ammPoolsBalances: any, base: any, quote: any) => {\n\n    const keyPair = getKey(base, quote)\n\n    const ammInfo = getInfoByKey(ammpools, keyPair)\n    const ammBalance = getInfoByKey(ammPoolsBalances, keyPair)\n\n    if (!ammInfo || !ammBalance) {\n        throw Error('no ammInfo! no ammBalance!')\n    }\n\n    const feeBips = parseInt(ammInfo.feeBips)\n\n    return {\n        ammInfo,\n        ammBalance,\n        feeBips,\n    }\n\n}\n\nconst getAmt = (rawAmt: any, tokenInfo: any) => {\n    if (rawAmt === undefined) {\n        rawAmt = 0\n    }\n\n    return fm.toBig(rawAmt).times('1e' + tokenInfo.decimals)\n}\n\nexport const applySlippageTolerance = (\n    tokens: any,\n    token: any,\n    value: any,\n    slippageTolerance: number = 0.01\n) => {\n    const tokenInfo = getToken(tokens, token)\n    const f = 1e7\n    const feeFactor = fm.toBig(f * (1 - slippageTolerance))\n    const amount = fm.toBig(value).times('1e' + tokenInfo.decimals)\n    const outInWei = amount.times(feeFactor).dividedBy(f)\n    const out = fromWEI(tokens, token, outInWei)\n\n    return {\n        outInWei,\n        out,\n    }\n}\n\nexport const applyOrderFee = (tokens: any, token: any, value: any, feeBip: any) => {\n    const tokenInfo = getToken(tokens, token)\n    const feeFactor = fm.toBig(MULTI_FACTOR - feeBip)\n    const amount = fm.toBig(value).times('1e' + tokenInfo.decimals)\n    const appliedAmount = amount.times(feeFactor).dividedBy(MULTI_FACTOR)\n    return appliedAmount\n}\n\nexport function fromWEI(tokens: any, symbol: any, valueInWEI: any, precision?: any, ceil?: any) {\n    try {\n        const tokenInfo = getToken(tokens, symbol)\n        const precisionToFixed = precision ? precision : tokenInfo.precision\n        const value = fm.toBig(valueInWEI).div('1e' + tokenInfo.decimals)\n        return fm.toFixed(value, precisionToFixed, ceil)\n    } catch (error) {\n        return 0\n    }\n}\n\n\nexport function toWEI(tokens: any, symbol: any, value: any, rm: any = 3) {\n    const tokenInfo = getToken(tokens, symbol)\n    if (typeof tokenInfo === 'undefined') {\n        return 0\n    }\n\n    return fm.toBig(value)\n        .times('1e' + tokenInfo.decimals)\n        .toFixed(0, rm)\n}\n\nexport const getAmountOut = (amt: any, ammpools: any, ammPoolsBalances: any, tokens: any,\n    base: any, quote: any, takerRate: number, currentPrice: number) => {\n\n    if (amt === undefined) {\n        amt = 0\n    }\n\n    const { ammBalance, feeBips, } = getAmmInfo(ammpools, ammPoolsBalances, base, quote)\n\n    const { tokenInfo: baseTokenInfo, reserve: reserveIn } = getTokenInfoByToken(ammBalance, tokens, base)\n    const { tokenInfo: quoteTokenInfo, reserve: reserveOut } = getTokenInfoByToken(ammBalance, tokens, quote)\n\n    const amountIn = getAmt(amt, baseTokenInfo)\n    const feeBipsFactor = fm.toBig(MULTI_FACTOR - feeBips)\n    const amountInWithFee = amountIn.times(feeBipsFactor)\n    const numerator = amountInWithFee.times(reserveOut)\n    const denominator = reserveIn.times(MULTI_FACTOR).plus(amountInWithFee)\n    const amountOutInWei: any = numerator.dividedBy(denominator)\n\n    let quoteAmt: any = fromWEI(tokens, quote, amountOutInWei)\n\n    const _amount1ApplyOrderFeeInWei = applyOrderFee(tokens, quote, quoteAmt, takerRate + feeBips)\n\n    let _amount1ApplyOrderFee = Number(fromWEI(tokens, quote, _amount1ApplyOrderFeeInWei))\n\n    let priceImpact = 0\n    if (_amount1ApplyOrderFee < 0) {\n        _amount1ApplyOrderFee = 0\n        quoteAmt = null\n    } else {\n        const newPrice = Number(quoteAmt) / Number(amt)\n        priceImpact = (newPrice - currentPrice) / currentPrice\n    }\n\n    // console.log('got:', ammBalance)\n\n    return {\n        quoteAmt,\n        _amount1ApplyOrderFeeInWei,\n        _amount1ApplyOrderFee,\n        priceImpact,\n    }\n\n}\n\nexport const getAmountOut_Reverse = (amt: any, ammpools: any, ammPoolsBalances: any, tokens: any,\n    base: any, quote: any, takerRate: number, currentPrice: number) => {\n\n    if (amt === undefined) {\n        amt = 0\n    }\n\n    // console.log('amt:', amt, 'ammpools:', ammpools, 'ammPoolsBalances:', ammPoolsBalances, ' base:', base, ' quote:', quote)\n\n    const { ammBalance, feeBips, } = getAmmInfo(ammpools, ammPoolsBalances, base, quote)\n\n    const { tokenInfo: baseTokenInfo, reserve: reserveIn } = getTokenInfoByToken(ammBalance, tokens, base)\n    const { tokenInfo: quoteTokenInfo, reserve: reserveOut } = getTokenInfoByToken(ammBalance, tokens, quote)\n\n    const amountOut = getAmt(amt, quoteTokenInfo)\n\n    if (amountOut.gt(reserveOut)) {\n        return {\n            baseAmt: 0,\n            _amount1ApplyOrderFeeInWei: 0,\n            _amount1ApplyOrderFee: 0,\n            priceImpact: 0,\n            hasError: false,\n        }\n    }\n\n    const numerator = amountOut.times(reserveIn).times(MULTI_FACTOR)\n    const feeBipsFactor = fm.toBig(MULTI_FACTOR - feeBips)\n\n    // If amountOut is larger than reserveOut?\n    // It's handled before getAmountOut_reserve\n    const reserveOutSubAmountOut = reserveOut.minus(amountOut)\n\n    const denominator = feeBipsFactor.times(reserveOutSubAmountOut)\n    const amountInInWei = numerator.dividedBy(denominator)\n\n    let baseAmt: any = fromWEI(tokens, quote, amountInInWei)\n\n    const _amount1ApplyOrderFeeInWei = applyOrderFee(tokens, quote, amt, takerRate + feeBips)\n\n    let _amount1ApplyOrderFee = Number(fromWEI(tokens, quote, _amount1ApplyOrderFeeInWei))\n\n    let priceImpact = 0\n    if (_amount1ApplyOrderFee < 0) {\n        _amount1ApplyOrderFee = 0\n        baseAmt = null\n    } else {\n        const newPrice = Number(amt) / Number(baseAmt)\n        priceImpact = (newPrice - currentPrice) / currentPrice\n    }\n\n    // console.log('got:', ammBalance)\n\n    return {\n        baseAmt,\n        _amount1ApplyOrderFeeInWei,\n        _amount1ApplyOrderFee,\n        priceImpact,\n        hasError: false,\n    }\n\n}\n\n/*\nexport const getAmountIn = (amt: any, ammpools: any, ammPoolsBalances: any, tokens: any, base: any, quote: any) => {\n\n    const { ammBalance, feeBips, } = getAmmInfo(ammpools, ammPoolsBalances, base, quote)\n\n    const { tokenInfo: baseTokenInfo, reserve: reserveIn } = getTokenInfoByToken(ammBalance, tokens, base)\n    const { tokenInfo: quoteTokenInfo, reserve: reserveOut } = getTokenInfoByToken(ammBalance, tokens, quote)\n\n    const amountOut = getAmt(amt, quoteTokenInfo)\n    const numerator = reserveIn.times(amountOut).times(MULTI_FACTOR)\n    const denominator = reserveOut.minus(amountOut).times(MULTI_FACTOR - feeBips)\n    const amountIn = numerator.dividedBy(denominator).plus(1)\n\n    // const baseAmt = amountIn.dividedBy('1e' + baseTokenInfo.decimals).toString()\n    const baseAmt = fromWEI(tokens, base, amountIn)\n\n    let amountInShown: any = ''\n    if (baseAmt !== 'NaN') {\n        amountInShown = baseAmt\n    }\n\n    return {\n        amountIn,\n        amountInShown,\n    }\n}\n*/\n","import { useTokenMap } from './stores/token';\nimport { useAmmMap } from './stores/Amm/AmmMap';\nimport React  from 'react';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect';\nimport { useSystem, NETWORK, NETWORKEXTEND } from './stores/system';\nimport { ChainId } from 'loopring-sdk';\n\n/**\n * @description call it when bootstrap the page or change the network\n */\nexport function useInit(){\n    const systemState = useSystem();\n    const tokenState = useTokenMap();\n    const ammMapState = useAmmMap();\n\n    useCustomDCEffect(async() => {\n\n        const handleChainChanged = (chainId: 1|5|'unknown') => {\n    \n            // const network = chainId == ChainId.GORLI ? NETWORK.Goerli : NETWORK.MAIN\n            systemState.updateSystem({ chainId })\n\n        }\n\n        const provider: any = await detectEthereumProvider()\n        if (provider) {\n            const chainId = await provider.request({ method: 'eth_chainId' });\n    \n            provider.on('chainChanged', handleChainChanged)\n\n            handleChainChanged(chainId)\n            \n        } else {\n            systemState.updateSystem({chainId:ChainId.MAINNET})\n            console.log('web3 is not found')\n        }\n\n    }, [])\n\n    React.useEffect(() => {\n        switch (systemState.status) {\n            case \"ERROR\":\n                systemState.statusUnset();\n                //TODO show error at button page show error  some retry dispat again\n                break;\n            case \"DONE\":\n                systemState.statusUnset();\n                //TODO do some static information update\n                tokenState.updateTokenMap();\n                break;\n            default:\n                break;\n\n        }\n    },[\n        systemState.status,\n        systemState.statusUnset,\n        tokenState.updateTokenMap]);\n\n\n    React.useEffect(() => {\n        switch (tokenState.status) {\n            case \"ERROR\":\n                tokenState.statusUnset();\n                //TODO show error at button page show error  some retry dispat again\n                break;\n            case \"DONE\":\n                tokenState.statusUnset();\n                ammMapState.updateAmmMap()\n                break;\n            default:\n                break;\n\n        }\n    },[tokenState.status,\n           tokenState.statusUnset,\n        ammMapState.updateAmmMap]);\n\n    React.useEffect(() => {\n        switch (ammMapState.status) {\n            case \"ERROR\":\n                ammMapState.statusUnset();\n                //TODO show error at button page show error  some retry dispat again\n                break;\n            case \"DONE\":\n                ammMapState.statusUnset();\n                break;\n            default:\n                break;\n\n        }\n    },[ammMapState.status,\n        ammMapState.statusUnset]);\n    return {\n        systemState: systemState,\n    }\n\n}\n","export enum Theme {\n    dark = 'dark',\n    light = 'light',\n}\n\nexport enum LangType {\n    en = 'en_US',\n    cn = 'zh_CN',\n}\n\nexport enum SystemStatus {\n    NORMAL,\n    ERROR,\n    UNKNOWN,\n}\n\nexport enum MODAL_TYPE {\n    UNKNOWN,\n    LOADING,\n    WALLET,\n}\n","import { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\"\n\nimport {\n    setShowDeposit,\n    setShowResetAccount,\n    setShowTransfer,\n    setShowWithdraw,\n} from '@loopring-web/component-lib'\nimport { useTranslation } from \"react-i18next\";\nimport store from 'stores'\nimport { AccountStatus } from \"state_machine/account_machine_spec\";\n\nexport function useModals() {\n\n    const dispatch = useDispatch()\n\n    const { t } = useTranslation('common')\n\n    const ShowDeposit = useCallback((isShow: boolean)=>{\n        const isNoAccount = store.getState().account.status === AccountStatus.NOACCOUNT\n\n        console.log('isNoAccount: ', isNoAccount, t('depositTitleAndActive'))\n        const action = {\n            isShow,\n            props: {\n                title: isNoAccount ? t('depositTitleAndActive') : t('depositTitle'),\n                description: 'depositAndActiveDescription'\n            }\n        }\n        dispatch(setShowDeposit(action))\n    }, [dispatch, t])\n    const ShowTransfer = useCallback((isShow: boolean)=>dispatch(setShowTransfer({isShow})), [dispatch])\n    const ShowWithdraw = useCallback((isShow: boolean)=>dispatch(setShowWithdraw({isShow})), [dispatch])\n    const ShowResetAccount = useCallback((isShow: boolean)=>dispatch(setShowResetAccount({isShow})), [dispatch])\n\n    return {\n        ShowDeposit,\n        ShowTransfer,\n        ShowWithdraw,\n        ShowResetAccount,\n    }\n}","import { REFRESH_RATE } from \"loopring-sdk\"\n\nexport function PromiseJob(fetchPromise: any, setFunc: any, field?: string, prefix: any = 'PromiseJob') {\n\n    let mounted = true\n\n    const handler = () => {\n        if (fetchPromise()) {\n            fetchPromise().then((data: any) => {\n                if (mounted) {\n                    setFunc(field ? data[field] : data)\n                } else {\n                    console.log(prefix + ' unmounted!')\n                }\n            }).catch((reason: any) => {\n                console.error(reason)\n            })\n        }\n    }\n\n    const cleanUp = () => {\n        mounted = false\n    }\n\n    return {\n        handler,\n        cleanUp,\n    }\n\n}\n\n\nexport function PromiseJobInTimer(fetchPromise: any, setFunc: any, field?: string, prefix: any = 'PromiseJobInTimer', timeout: number = REFRESH_RATE) {\n\n    let mounted = true\n\n    const handler = () => {\n\n        mounted = true\n\n        const fetchFunc = () => {\n            if (fetchPromise()) {\n                fetchPromise().then((data: any) => {\n                    if (mounted) {\n                        setFunc(field ? data[field] : data)\n                    } else {\n                        console.log(prefix + ' unmounted!')\n                    }\n                }).catch((reason: any) => {\n                    console.error(reason)\n                })\n            }\n        }\n\n        fetchFunc()\n\n        const id = setInterval(fetchFunc, timeout)\n\n        return id\n    }\n\n    const cleanUp = (handler: any) => {\n        mounted = false\n        if (handler) clearInterval(handler)\n    }\n\n    return {\n        handler,\n        cleanUp,\n    }\n\n}\n","import { useEffect } from 'react'\nimport { PromiseJob, PromiseJobInTimer } from '../../utils/hook_tools'\nimport { REFRESH_RATE_SLOW } from \"loopring-sdk\"\n\nexport function usePromiseJob(fetchPromise: any, setFunc: any, field? :string, prefix: any = undefined, dependencies: any[] = []) {\n\n  const {\n    handler,\n    cleanUp,\n  } = PromiseJob(fetchPromise, setFunc, field, prefix)\n\n  useEffect(() => {\n    handler()\n    return () => cleanUp()\n  }, [...dependencies])\n\n}\n\nexport function usePromiseJobInTimer(fetchPromise: any, setFunc: any, field? :string, prefix: any = undefined, dependencies: any[] = [], timeout: number= REFRESH_RATE_SLOW) {\n\n  const {\n    handler,\n    cleanUp,\n  } = PromiseJobInTimer(fetchPromise, setFunc, field, prefix, timeout)\n\n  useEffect(() => {\n    const id = handler()\n    return () => cleanUp(id)\n  }, [...dependencies])\n\n}\n","import { useState, } from 'react'\n\nimport { TradesData, TickerData, DepthData, \n  TokensResponse,\n  MarketsResponse, } from 'loopring-sdk'\n\nimport { usePromiseJob } from 'hooks/common/useCommon'\nimport { useExchangeAPI, } from './useApi'\n\nexport function useGetGas() {\n\n  const [gas, setGas] = useState<any>()\n\n  const api = useExchangeAPI()\n\n  const fetchData = () => {\n    if (!api) {\n      return undefined\n    }\n    return api.getGasPrice()\n  }\n\n  usePromiseJob(fetchData, setGas, undefined, 'useGetGas', [api])\n\n  return { gas }\n\n}\n\nexport function useGetMixMarkets() {\n\n  const [markets, setMarkets] = useState<MarketsResponse>()\n    const api = useExchangeAPI()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getMixMarkets()\n    }\n  \n    usePromiseJob(fetchData, setMarkets, undefined, 'useGetMarkets', [api])\n    \n    return { markets }\n\n}\n\nexport function useGetMarkets() {\n\n  const [markets, setMarkets] = useState<MarketsResponse>()\n    const api = useExchangeAPI()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getMarkets()\n    }\n  \n    usePromiseJob(fetchData, setMarkets, undefined, 'useGetMarkets', [api])\n    \n    return { markets }\n\n}\n\nexport function useGetExchangeInfo() {\n\n  const [exchangeInfo, setExchangeInfo] = useState<any>()\n    const api = useExchangeAPI()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getExchangeInfo()\n    }\n  \n    usePromiseJob(fetchData, setExchangeInfo, 'exchangeInfo', 'useGetExchangeInfo', [api])\n    \n    return { exchangeInfo }\n\n}\n\nexport function useGetTokens() {\n\n  const [tokens, setTokens] = useState<TokensResponse>()\n    const api = useExchangeAPI()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getTokens()\n    }\n  \n    usePromiseJob(fetchData, setTokens, undefined, 'useGetTokens', [api])\n    \n    return { tokens }\n\n}\n\n\nexport function useTrades(symbol: string) {\n\n  const [trades, setTrades] = useState<TradesData>()\n\n  const api = useExchangeAPI()\n\n  const fetchData = () => {\n    if (!api) {\n      return undefined\n    }\n    return api.getMarketTrades({\n      market: symbol\n    })\n  }\n\n  usePromiseJob(fetchData, setTrades, undefined, 'useTrades', [api, symbol])\n\n  return { trades, }\n\n}\n\nexport function useTickerMap(market: string) {\n\n  const [tickerMap, setTickerMap] = useState<{[key: string]: TickerData}>()\n\n  const api = useExchangeAPI()\n\n  const fetchData = () => {\n    if (!api) {\n      return undefined\n    }\n    return api.getTicker({\n      market\n    })\n  }\n\n  usePromiseJob(fetchData, setTickerMap, 'tickMap', 'useTickerMap', [api, market])\n\n  return { tickerMap, }\n\n}\n\nexport function useDepth(symbol: string) {\n\n  const api = useExchangeAPI()\n\n  const [depth, setDepth] = useState<DepthData>()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getDepth({\n        market: [symbol]\n      })\n    }\n  \n    usePromiseJob(fetchData, setDepth, 'depth', 'useDepth', [api, symbol])\n\n  return { depth, }\n\n}\n","import { useState, useCallback } from 'react'\n\nimport { useAccount } from 'stores/account/hook'\n\nimport { OrdersData, REFRESH_RATE, dumpError400, } from 'loopring-sdk'\n\nimport { useUserAPI } from './useApi'\n\nimport { getToken, fromWEI } from 'utils/swap_calc_utils'\n\nimport * as fm from 'loopring-sdk'\n\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nexport function useOrders() {\n\n  const acc = useAccount().account\n\n  const api = useUserAPI()\n\n  const [orders, setOrders] = useState<OrdersData>()\n\n  useCustomDCEffect(() => {\n\n    if (!acc || !api) {\n      return\n    }\n\n    let mounted = true\n\n    const exit = (id: any) => {\n      mounted = false\n      clearInterval(id)\n    }\n\n    if (acc && acc.accountId > 0) {\n\n      const id: any = setInterval(async () => {\n        try {\n          const { raw_data } = (await api.getOrders({\n            accountId: acc.accountId\n          }, acc.apiKey))\n          if (mounted) {\n            setOrders(raw_data)\n          }\n        } catch (err) {\n          return exit(id)\n        }\n      }, REFRESH_RATE)\n\n      return exit(id)\n\n    }\n  }, [acc, api])\n\n  return {\n    orders,\n  }\n\n}\n\nexport function useGetUserBalancesByToken(token: any) {\n\n  const api = useUserAPI()\n\n  //const [balance, setBalance] = useState<any>({total: '0', locked: '0', availableInWei: '0'})\n\n  const [balance, setBalance] = useState<any>('0')\n\n  const { apiKey, accountId } = useAccount()\n\n  // console.log('enter! useGetUserBalances tokens:', tokens, 'symbol:', symbol, 'apiKey:', apiKey, ' accountId:', accountId )\n\n  useCustomDCEffect(() => {\n    if (!api || !apiKey || !accountId || !token) {\n      return\n    }\n\n    api.getUserBalances({\n      accountId,\n      tokens: token.tokenId\n    }, apiKey).then((data) => {\n      const total = fm.toBig(data.userBalances[token.tokenId].total)\n      const locked = fm.toBig(data.userBalances[token.tokenId].locked)\n      const availableInWei = total.minus(locked)\n      /*\n      setBalance({\n        total: data[0].total, \n        locked: data[0].locked, \n        availableInWei: availableInWei.toString(),\n        available: fromWEI(tokens, symbol, availableInWei)\n      })\n      */\n      setBalance(availableInWei.toString())\n    }).catch((reason: any) => {\n      dumpError400(reason, 'getUserBalances tokenId:' + token.tokenId)\n    })\n\n  }, [api, apiKey, accountId, token,])\n\n  return {\n    balance,\n    setBalance,\n  }\n\n}\n\nexport function useGetUserBalances(tokens: any, toList: boolean = false) {\n\n  const api = useUserAPI()\n\n  //const [balance, setBalance] = useState<any>({total: '0', locked: '0', availableInWei: '0'})\n\n  const [balances, setBalances] = useState<any>(undefined)\n\n  const { apiKey, accountId } = useAccount()\n\n  // console.log('enter! useGetUserBalances tokens:', tokens, 'symbol:', symbol, 'apiKey:', apiKey, ' accountId:', accountId )\n\n  useCustomDCEffect(() => {\n\n    if (!api || !apiKey || !accountId || !tokens) {\n      return\n    }\n\n    let tokenList: any[] = []\n\n    const keys = Reflect.ownKeys(tokens)\n\n    let tokenMap: any = {}\n\n    keys.forEach((item: any) => {\n      const token = tokens[item]\n      tokenList.push(token.tokenId)\n      tokenMap[token.tokenId] = token\n    })\n\n    api.getUserBalances({\n      accountId,\n      tokens: tokenList.join(',')\n    }, apiKey).then((data) => {\n\n      let balances: any = {\n        map: tokenMap,\n        tokenId: {},\n        symbol: {},\n      }\n\n      data.raw_data.forEach((item: any) => {\n        const total = fm.toBig(item.total)\n        const locked = fm.toBig(item.locked)\n        const availableInWei = total.minus(locked)\n\n        console.log('item:', item)\n\n        const token = tokenMap[item.tokenId]\n\n        balances.tokenId[item.tokenId] = availableInWei.toString()\n        balances.symbol[token.symbol] = availableInWei.toString()\n      })\n\n      setBalances(balances)\n\n    }).catch((reason: any) => {\n      dumpError400(reason, 'getUserBalances tokenId:' + tokens.tokenId)\n    })\n\n  }, [api, apiKey, accountId, tokens,])\n\n  return {\n    balances,\n    setBalances,\n  }\n\n}\n\nexport function useGetUserBalance(tokens: any, symbol: any) {\n\n  const api = useUserAPI()\n\n  //const [balance, setBalance] = useState<any>({total: '0', locked: '0', availableInWei: '0'})\n\n  const [balance, setBalance] = useState<any>('0')\n\n  const { apiKey, accountId } = useAccount()\n\n  useCustomDCEffect(() => {\n    if (!api || !apiKey || !accountId || !tokens || !symbol) {\n      return\n    }\n\n    const tokenInfo = getToken(tokens, symbol)\n\n    api.getUserBalances({\n      accountId,\n      tokens: tokenInfo.tokenId\n    }, apiKey).then((data) => {\n      const total = fm.toBig(data.userBalances[tokenInfo.tokenId].total)\n      const locked = fm.toBig(data.userBalances[tokenInfo.tokenId].locked)\n      const availableInWei = total.minus(locked)\n      \n      setBalance(availableInWei.toString())\n\n    }).catch((reason: any) => {\n      dumpError400(reason, 'getUserBalances tokenId:' + tokens.tokenId)\n    })\n\n  }, [api, apiKey, accountId, tokens, symbol,])\n\n  return {\n    balance,\n    setBalance,\n  }\n\n}","import React, { useCallback } from 'react'\n\nimport { useTranslation, WithTranslation, withTranslation } from 'react-i18next'\n\nimport {\n    gatewayList as DefaultGatewayList,\n    headerMenuData, HeaderMenuTabStatus,\n    headerToolBarData, HeadMenuTabKey,\n    ButtonComponentsMap, LanguageKeys,\n    WalletStatus, HideIcon,\n    GatewayItem, ViewIcon, ThemeKeys, LockIcon, UnLockIcon,\n} from '@loopring-web/component-lib/src/static-resource'\n\nimport { useAccount, useUnlock, useConnect, } from 'stores/account/hook'\n\nimport { getShortAddr } from 'utils/web3_tools'\n\nimport { AccountStatus } from 'state_machine/account_machine_spec'\n\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport { Theme, } from 'defs/common_defs'\n\nimport { Button, SwapProps, useSettings } from '@loopring-web/component-lib'\n\nimport store from 'stores'\n\nimport { ConnectorNames } from 'loopring-sdk'\nimport { IconButton, Typography } from '@material-ui/core';\nimport { AccountInfoProps } from '@loopring-web/component-lib/components/block';\nimport { useEtherscan } from 'hooks/web3/useWeb3'\n\nimport { useModals } from 'hooks/modal/useModals'\n\nimport {useState } from 'react'\nimport Web3 from 'web3'\n\nimport { AmmData, AmmInData, CoinInfo, CoinMap, IBData, TradeCalcData, WalletCoin, WalletMap, } from '@loopring-web/component-lib/static-resource'\nimport { AmmProps } from '@loopring-web/component-lib'\n\nimport { useExchangeAPI, useUserAPI } from 'hooks/exchange/useApi'\n\nimport { fromWEI, getIcon } from 'utils/swap_calc_utils'\nimport { useWeb3Account } from 'stores/account/hook'\nimport { useGetExchangeInfo, useGetTokens } from 'hooks/exchange/useExchangeAPI'\n\nimport * as contract from 'loopring-sdk'\n\nimport { Lv2Account } from 'defs/account_defs'\n\nimport {\n    ExchangeAPI,\n    dumpError400,\n    GetNextStorageIdRequest,\n    GetOffchainFeeAmtRequest,\n    OffchainFeeReqType,\n    OffChainWithdrawalRequestV3,\n    OriginTransferRequestV3,\n    TokenInfo,\n    VALID_UNTIL,\n} from 'loopring-sdk'\n\nimport { useGetUserBalances } from 'hooks/exchange/useUserAPI'\n\nimport {\n    DepositProps,\n    ResetProps,\n    SwitchData,\n    TradeBtnStatus,\n    TransferProps,\n    WithdrawProps,\n} from '@loopring-web/component-lib'\n\nimport { WithdrawType, WithdrawTypes } from '@loopring-web/component-lib/src/static-resource'\nimport { ButtonProps } from '@loopring-web/component-lib/components/basic-lib/index';\nimport { CoinType } from '@loopring-web/component-lib/static'\n\nexport const useHeader = () => {\n    const { i18n,t } = useTranslation(['common','layout'])\n    const { setTheme,themeMode,language, setLanguage } = useSettings();\n    const { ShowDeposit } = useModals()\n\n    const [open, setOpen] = React.useState(false)\n\n    const [openConnect, setOpenConnect] = React.useState(false)\n\n    const forceUpdate = React.useReducer((bool) => !bool, false)[1]\n    const { account } = useAccount()\n\n    const { lock, unlock } = useUnlock()\n\n    const { connect } = useConnect()\n\n    const { etherscanUrl } = useEtherscan()\n\n    const gatewayList: GatewayItem[] = [\n        {\n            ...DefaultGatewayList[0],\n            handleSelect: () => {\n                console.log('try to connect to ', ConnectorNames.Injected)\n                connect(ConnectorNames.Injected, true)\n                setOpen(false)\n            }\n        },\n        /*\n        {\n            key: ConnectorNames.WalletConnect,\n            imgSrc: '',\n            handleSelect: () => {\n                connect(ConnectorNames.WalletConnect)\n                setOpen(false)\n            }\n        },\n        {\n            key: ConnectorNames.Ledger,\n            imgSrc: '',\n            handleSelect: () => {\n                connect(ConnectorNames.Ledger)\n                setOpen(false)\n            }\n        },\n        {\n            key: ConnectorNames.Trezor,\n            imgSrc: '',\n            handleSelect: () => {\n                connect(ConnectorNames.Trezor)\n                setOpen(false)\n            }\n        },\n        */\n    ]\n    const [showAccountInfo, setShowAccountInfo] = React.useState(account?.accAddr ? true : false)\n    const [accountInfoProps, setAccountInfoProps] = React.useState<undefined|AccountInfoProps>(undefined)\n    //const theme: any = useTheme()\n\n    const onNotification = React.useCallback(async () => {\n        console.log('onNotification click')\n    }, [])\n\n    const onWalletBtnConnect = React.useCallback(async () => {\n        const acc = store.getState().account\n        console.log(`onWalletBtnConnect click: ${acc.status}`)\n\n        switch (acc.status) {\n            case AccountStatus.NOACCOUNT:\n                ShowDeposit(true)\n                break\n            case AccountStatus.UNCONNNECTED:\n                setOpen(true)\n                break\n                /*\n            case AccountStatus.CONNECTED:\n\n                break\n            case AccountStatus.LOCKED:\n                console.log('onWalletBtnConnect try to unlock')\n                await unlock(acc)\n                break\n            case AccountStatus.ACTIVATED:\n                console.log('onWalletBtnConnect try to lock')\n                await lock(acc)\n                break\n                */\n\n            default:\n                console.log('setOpenConnect(true)')\n                setOpenConnect(true)\n                break\n        }\n    }, [setOpen, lock, unlock, ShowDeposit])\n\n    const onThemeBtnClick = React.useCallback(async (themeMode:ThemeKeys) => {\n        if (themeMode === Theme.dark) {\n            setTheme(Theme.light)\n        } else {\n            setTheme(Theme.dark)\n        }\n    }, [setTheme])\n\n    const onLangBtnClick = (lang: LanguageKeys) => {\n        //i18n.changeLanguage(lang);\n        setLanguage(lang);\n    }\n\n    // const [advanceOpen,setAdvanceOpen] = React.useState(false)\n\n    // const handleViewAccountInfo =  React.useCallback((event: React.MouseEvent) => {\n    //     event.stopPropagation();\n    //     event.preventDefault();\n    //     if (showAccountInfo) {\n    //         // headerMenuData[ NavListIndex.layer2 ].iconBtn.view = false;\n    //         setShowAccountInfo(false);\n    //     } else {\n    //         // headerMenuData[ NavListIndex.layer2 ].iconBtn.view = true;\n    //         setShowAccountInfo(true);\n    //     }\n    // },[setShowAccountInfo, showAccountInfo])\n\n    // useCustomCompareEffect(()=>{\n    //     if(language!==i18n.language)  {\n    //         headerToolBarData[ButtonComponentsMap.Language] = { ...headerToolBarData[ButtonComponentsMap.Language], language: i18n.language}\n    //     }\n    // },[language],(prevDeps,curDeps)=> prevDeps!== curDeps)\n    //init componment\n    useCustomDCEffect(() => {\n\n\n        headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n            ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n            handleClick: onWalletBtnConnect,\n        }\n\n        // headerToolBarData[ButtonComponentsMap.Notification] = { ...headerToolBarData[ButtonComponentsMap.Theme], themeMode: theme.mode, handleClick: onNotification }\n        // headerToolBarData.update(ButtonComponentsMap.WalletConnect,value=>{\n        //   return {...value, handleClick:onWalletBtnConnect}});\n        headerToolBarData[ButtonComponentsMap.Theme] = { ...headerToolBarData[ButtonComponentsMap.Theme], themeMode, handleClick: onThemeBtnClick }\n        // headerToolBarData.update(ButtonComponentsMap.Theme,value=>{\n        //   return {...value, themeMode:theme.mode, handleClick:onThemeBtnClick}});\n\n        headerToolBarData[ButtonComponentsMap.Language] = { ...headerToolBarData[ButtonComponentsMap.Language], handleChange: onLangBtnClick }\n        // headerToolBarData.update(ButtonComponentsMap.Language,value=>{\n        //  return  {...value, language:i18n.language, handleClick:onThemeBtnClick}});\n    }, [themeMode, language, i18n, onWalletBtnConnect, onThemeBtnClick, onLangBtnClick, onNotification, t]);\n\n\n    const UnlockBtn = ({onClick}:{onClick:({...props}:any)=>void})=>{\n        return <Button className={'unlock'}  startIcon={<LockIcon fontSize={'large'}/>}  onClick={(event)=>onClick(event)} variant={'outlined'} >\n            <Typography variant={'body2'} marginTop={1/2}>   {t('labelUnLock')} </Typography>\n        </Button>\n    }\n    const LockBtn = ({onClick}:{onClick:({...props}:any)=>void})=>{\n        return  <Button className={'lock'}  startIcon={<UnLockIcon fontSize={'large'}/>}  onClick={(event)=>onClick(event)} variant={'outlined'} >\n            <Typography variant={'body2'} marginTop={1/2}>  {t('labelLock')} </Typography>\n        </Button>\n    }\n\n\n    useCustomDCEffect(() => {\n\n        if (!account) {\n            console.log('account'+account+'* exit')\n            setAccountInfoProps(undefined)\n            return\n        }\n\n        const { status } = account\n\n        const addr = getShortAddr(account?.accAddr)\n\n\n\n        // if((addr && accountInfoProps && accountInfoProps.address !== addr) || addr ){\n        //     //TODO getAccount detail info\n        //\n        // }else if(addr) {\n        //     setAccountInfoProps(undefined)\n        // }\n\n        const updateHeaderMenuWhenHasAccountInfo =  ({status}:{status:keyof  typeof AccountStatus})=>{\n            headerMenuData[HeadMenuTabKey.Layer2] = {\n                ...headerMenuData[HeadMenuTabKey.Layer2],\n                status: HeaderMenuTabStatus.default\n            }\n            let props;\n            if(status === AccountStatus.ACTIVATED) {\n                props = {\n                    addressShort: addr?addr:'',\n                    address: account?.accAddr,\n                    level: 'VIP 1',\n                    etherscanLink: etherscanUrl + account?.accAddr,\n                    //TODO: changed by account status\n                    mainBtn: <LockBtn onClick={(event)=>{console.log(event) }}/>,\n                    connectBy:''\n                }\n                setShowAccountInfo(true)\n            }else if(status === AccountStatus.LOCKED) {\n                props = {\n                    addressShort: addr?addr:'',\n                    address: account?.accAddr,\n                    level: 'VIP 1',\n                    etherscanLink: etherscanUrl + account?.accAddr,\n                    //TODO: changed by account status\n                    mainBtn: <UnlockBtn onClick={(event)=>{console.log(event) }}/>,\n                    connectBy:''\n                }\n                setShowAccountInfo(true)\n            }else if(status === AccountStatus.UNACTIVATED\n                || status === AccountStatus.NOACCOUNT\n                || status === AccountStatus.DEPOSITING\n                || status === AccountStatus.DEPOSIT_TO_CONFIREM\n                || status === AccountStatus.ARPROVING\n                || status === AccountStatus.APPROV_TO_CONFIRM\n            )  {\n                props = {\n                    addressShort: addr?addr:'',\n                    address: account?.accAddr,\n                    //TODO: level\n                    level: 'VIP 1',\n                    etherscanLink: etherscanUrl + account?.accAddr,\n                    //TODO: changed by account status\n                    connectBy:''\n                }\n                setShowAccountInfo(true)\n            } else  {\n                setShowAccountInfo(false)\n            }\n\n\n            setAccountInfoProps(props)\n            // setShowAccountInfo(true);\n        }\n        switch (status) {\n            case AccountStatus.UNCONNNECTED:\n                headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n                    ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n                    label: 'Connect Wallet',\n                    status: WalletStatus.default\n                }\n                headerMenuData[HeadMenuTabKey.Layer2] = {\n                    //TODO:  HeaderMenuTabStatus.hidden\n                    ...headerMenuData[HeadMenuTabKey.Layer2], status: HeaderMenuTabStatus.hidden\n                }\n                setShowAccountInfo(false)\n                break\n            case AccountStatus.LOCKED:\n                headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n                    ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n                    label: addr,\n                    status: WalletStatus.connect\n                };\n\n                updateHeaderMenuWhenHasAccountInfo({status});\n                break\n            case AccountStatus.ACTIVATED:\n                headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n                    ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n                    label: addr,\n                    status: WalletStatus.unlock\n                }\n\n                updateHeaderMenuWhenHasAccountInfo({status});\n                break\n            case AccountStatus.UNACTIVATED:\n            case AccountStatus.NOACCOUNT:\n                headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n                    ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n                    // TODO got cache address if no show Connect Wallet\n                    label: addr,\n                    status: WalletStatus.noAccount\n                }\n\n                updateHeaderMenuWhenHasAccountInfo({status});\n                break\n            case AccountStatus.DEPOSITING:\n            case AccountStatus.DEPOSIT_TO_CONFIREM:\n            case AccountStatus.ARPROVING:\n            case AccountStatus.APPROV_TO_CONFIRM:\n                headerToolBarData[ButtonComponentsMap.WalletConnect] = {\n                    ...headerToolBarData[ButtonComponentsMap.WalletConnect],\n                    label: addr,\n                    status: WalletStatus.accountPending\n                }\n                updateHeaderMenuWhenHasAccountInfo({status});\n\n                break\n        }\n        forceUpdate()\n    }, [account, showAccountInfo, etherscanUrl, setAccountInfoProps])\n\n    return {\n        headerToolBarData,\n        headerMenuData,\n        gatewayList,\n        open,\n        setOpen,\n        openConnect,\n        setOpenConnect,\n        setShowAccountInfo,\n        account,\n        showAccountInfo,\n        accountInfoProps,\n\n    }\n\n}\n\nexport function useCoinMap(exchangeApi: ExchangeAPI, tokens: any) {\n\n    const [coinMap, setCoinMap] = useState<CoinMap<any, CoinInfo<any>>>({})\n\n    useCustomDCEffect(async () => {\n\n        if (!exchangeApi || !tokens) {\n            return\n        }\n\n        const keys = Reflect.ownKeys(tokens)\n\n        let coinMap: CoinMap<any, CoinInfo<any>> = {}\n\n        keys.forEach((key: any) => {\n\n            if (!(key as string).startsWith('LP-')) {\n                coinMap[ key ] = {\n                    icon: getIcon(key, tokens),\n                    name: key,\n                    simpleName: key,\n                    description: '',\n                    company: '',\n                }\n            }\n\n        })\n\n        setCoinMap(coinMap)\n\n    }, [exchangeApi, tokens])\n\n    return {\n        coinMap,\n    }\n\n}\n\nexport function useLv1WalletMap(exchangeApi: ExchangeAPI, account: Lv2Account, tokens: any) {\n\n    const [walletMap, setWalletMap] = useState<WalletMap<any, WalletCoin<any>>>({})\n\n    useCustomDCEffect(async () => {\n\n        if (!exchangeApi || !account || !account.accAddr || !tokens) {\n            return\n        }\n\n        let walletMap: WalletMap<any, WalletCoin<any>> = {}\n\n        const {tokenBalances} = await exchangeApi.getTokenBalances({\n            owner: account.accAddr, token: ''\n        }, tokens)\n\n        const keys = Reflect.ownKeys(tokenBalances)\n\n        keys.forEach((item: any) => {\n            const balance = tokenBalances[ item ]\n            walletMap[ item ] = {\n                belong: item,\n                count: fromWEI(tokens, item, balance) as number,\n            }\n        })\n\n        setWalletMap(walletMap)\n\n    }, [exchangeApi, account, tokens])\n\n    return {\n        walletMap,\n    }\n\n}\n\nexport function useLv2WalletMap(tokens: any) {\n\n    const {balances} = useGetUserBalances(tokens)\n\n    const [walletMap, setWalletMap] = useState<WalletMap<any, WalletCoin<any>>>({})\n\n    useCustomDCEffect(() => {\n        let walletMap: WalletMap<any, WalletCoin<any>> = {}\n        if (balances && balances.symbol) {\n            const keys = Reflect.ownKeys(balances.symbol)\n\n            keys.forEach((item: any) => {\n                const balance = balances.symbol[ item ]\n                walletMap[ item ] = {\n                    belong: item,\n                    count: fromWEI(tokens, item, balance) as number,\n                }\n            })\n        }\n\n        console.log('lv2:', walletMap)\n\n        setWalletMap(walletMap)\n    }, [balances, tokens])\n\n    return {\n        walletMap,\n    }\n\n}\n\nexport function useChargeFeeList(tokenSymbol: string | undefined, requestType: OffchainFeeReqType) {\n\n    const api = useUserAPI()\n\n    const {accountId, apiKey,} = useAccount()\n\n    const [chargeFeeList, setChargeFeeList] = useState<any>([])\n\n    useCustomDCEffect(async () => {\n\n        console.log('!!!!!!!!!useCustomDCEffect useChargeFeeList:', tokenSymbol, accountId)\n\n        if (!accountId || !tokenSymbol) {\n            return\n        }\n\n        let chargeFeeList: any[] = []\n\n        try {\n\n            const request: GetOffchainFeeAmtRequest = {\n                accountId,\n                tokenSymbol,\n                requestType,\n            }\n\n            const response = await api.getOffchainFeeAmt(request, apiKey)\n\n            if (response) {\n                response.raw_data.fees.forEach((item: any, index: number) => {\n                    chargeFeeList.push({belong: item.token, fee: item.fee})\n                })\n\n                setChargeFeeList(chargeFeeList)\n            }\n            console.log('response:', response)\n\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n\n        setChargeFeeList(chargeFeeList)\n\n    }, [accountId, apiKey, tokenSymbol])\n\n    return {\n        chargeFeeList,\n    }\n\n}\n\nexport function useModalProps() {\n\n    const {\n        ShowDeposit,\n        ShowTransfer,\n        ShowWithdraw,\n        ShowResetAccount,\n    } = useModals()\n\n    const {chainId, isConnected, connector,} = useWeb3Account()\n\n    const {exchangeInfo} = useGetExchangeInfo()\n\n    const {account, apiKey, accountId, eddsaKey,} = useAccount()\n\n    const {tokens: tokensAll} = useGetTokens()\n\n    const tokens = tokensAll?.tokenSymbolMap\n\n    const userApi = useUserAPI()\n\n    const exchangeApi = useExchangeAPI()\n\n    const {coinMap} = useCoinMap(exchangeApi, tokens)\n\n    const {walletMap: walletMap_Lv1} = useLv1WalletMap(exchangeApi, account, tokens)\n\n    const {walletMap: walletMap_Lv2} = useLv2WalletMap(tokens)\n\n    const deposit = useCallback(async (token: string, amt: any) => {\n\n        if (!tokens || !isConnected || !connector || !exchangeInfo?.exchangeAddress || !exchangeInfo?.depositAddress) {\n            console.log(`exchangeInfo:${exchangeInfo} deposit exit!!!!!`)\n            return\n        }\n\n        try {\n            const tokenInfo: TokenInfo = tokens[ token ]\n\n            const provider = await connector.getProvider()\n            const web3 = new Web3(provider as any)\n\n            let sendByMetaMask = account.connectName === ConnectorNames.Injected\n            sendByMetaMask = true\n\n            const gasPrice = (await exchangeApi.getGasPrice()).gasPrice / 1e+9\n            const gasLimit = 350000\n\n            const nonce = await contract.getNonce(web3, account.accAddr)\n\n            console.log('gasPrice:', gasPrice)\n            console.log('account.connectName:', account.connectName, ' tokenInfo:', tokenInfo)\n\n            const response = await contract.approveMax(web3, account.accAddr, tokenInfo.address,\n                exchangeInfo?.depositAddress, gasPrice, gasLimit, chainId, nonce, sendByMetaMask)\n\n            console.log('response:', response)\n\n            const fee = 0\n\n            const response2 = await contract.deposit(web3, account.accAddr,\n                exchangeInfo?.exchangeAddress, tokenInfo, amt, fee,\n                gasPrice, gasLimit, chainId, nonce + 1, sendByMetaMask)\n\n            console.log('response2:', response2)\n\n\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [chainId, isConnected, connector, account, exchangeInfo, tokens, exchangeApi])\n\n    const withdraw = useCallback(async (token: string, amt: any) => {\n\n        console.log('withdraw apiKey:', apiKey, ' exchangeInfo:', exchangeInfo, ' exchangeAddr:', exchangeInfo.exchangeAddress)\n\n        if (!account || !account.accountId || !account.accAddr\n            || !connector || !chainId || !apiKey || !exchangeInfo\n            || !exchangeInfo.exchangeAddress) {\n            console.log('return directly!!!!!', account, connector, chainId, apiKey, exchangeInfo)\n            return\n        }\n\n        amt = '5500000000000000000'\n\n        const fee = '5500000000000000000'\n\n        console.log('exchangeAddress:', exchangeInfo.exchangeAddress)\n\n        try {\n\n            const request: GetNextStorageIdRequest = {\n                accountId: account.accountId,\n                sellTokenId: 1\n            }\n\n            const storageId = await userApi.getNextStorageId(request, apiKey)\n\n            const request2: OffChainWithdrawalRequestV3 = {\n                exchange: exchangeInfo.exchangeAddress,\n                owner: account.accAddr,\n                to: account.accAddr,\n                accountId: account.accountId,\n                storageId: storageId.offchainId,\n                token: {\n                    tokenId: '1',\n                    volume: '100000000000000000000',\n                },\n                maxFee: {\n                    tokenId: '1',\n                    volume: '9400000000000000000',\n                },\n                extraData: '',\n                minGas: 0,\n                validUntil: VALID_UNTIL,\n            }\n\n            const provider = await connector.getProvider()\n            const web3 = new Web3(provider as any)\n\n            const response = await userApi.submitOffchainWithdraw(request2, web3, chainId, ConnectorNames.Injected,\n                account.eddsaKey, apiKey, false)\n\n            console.log(response)\n\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [apiKey, account, connector, exchangeInfo, chainId, userApi])\n\n    const transfer = useCallback(async (amt: number, payeeAddr: string = '0xb6AdaC3e924B4985Ad74646FEa3610f14cDFB79c') => {\n\n        if (!connector || !apiKey || !chainId || !accountId || !account?.accAddr) {\n            return\n        }\n\n        const request: GetNextStorageIdRequest = {\n            accountId,\n            sellTokenId: 1\n        }\n        const storageId = await userApi.getNextStorageId(request, apiKey)\n\n        console.log(`amt: ${amt} storageId:${JSON.stringify(storageId)}`)\n\n        try {\n\n            const provider = await connector.getProvider()\n            const web3 = new Web3(provider as any)\n\n            let walletType = account.connectName\n            walletType = ConnectorNames.Injected\n\n            const payeeAcc = await exchangeApi.getAccount({owner: payeeAddr})\n\n            let payeeId = 0\n            if (payeeAcc) {\n                payeeId = payeeAcc.accInfo.accountId\n            }\n\n            const request2: OriginTransferRequestV3 = {\n                exchange: exchangeInfo.exchangeAddress,\n                payerAddr: account.accAddr,\n                payerId: accountId,\n                payeeAddr,\n                payeeId,\n                storageId: storageId.offchainId,\n                token: {\n                    tokenId: '1',\n                    volume: '100000000000000000000',\n                },\n                maxFee: {\n                    tokenId: '1',\n                    volume: '9400000000000000000',\n                },\n                validUntil: VALID_UNTIL,\n            }\n\n            console.log(`request2:${JSON.stringify(request2)}`)\n\n            const response = await userApi.submitInternalTransfer(request2, web3, chainId, walletType,\n                eddsaKey, apiKey, false)\n\n            console.log(response)\n\n        } catch (reason) {\n            dumpError400(reason)\n        }\n\n    }, [apiKey, accountId, account, connector, exchangeInfo, chainId, eddsaKey, userApi, exchangeApi])\n\n    const [depositValue, setDepositValue] = useState<IBData<any>>({\n        belong: undefined,\n        tradeValue: 0,\n        balance: 0\n    } as IBData<unknown>)\n\n    // deposit\n\n    let depositProps: DepositProps<any, any> = {\n        tradeData: {belong: undefined},\n        coinMap: coinMap,\n        walletMap: walletMap_Lv1,\n        depositBtnStatus: TradeBtnStatus.AVAILABLE,\n        onDepositClick: (tradeData: any) => {\n            console.log('1. onDepositClick', depositValue)\n            if (depositValue && depositValue.belong) {\n                deposit(depositValue.belong.toString(), depositValue.tradeValue)\n            }\n            ShowDeposit(false)\n        },\n        handlePanelEvent: async (data: SwitchData<any>, switchType: 'Tomenu' | 'Tobutton') => {\n            return new Promise((res) => {\n                if (data?.tradeData?.belong) {\n                    if (depositValue !== data.tradeData) {\n                        setDepositValue(data.tradeData)\n                    }\n                    setTokenSymbol(data.tradeData.belong)\n                } else {\n                    setDepositValue({belong: undefined, tradeValue: 0, balance: 0} as IBData<unknown>)\n                }\n                res();\n            })\n        },\n    }\n\n    // withdraw\n    const [withdrawValue, setWithdrawValue] = useState<IBData<any>>({\n        belong: undefined,\n        tradeValue: 0,\n        balance: 0\n    } as IBData<unknown>);\n\n    const [tokenSymbol, setTokenSymbol] = useState<string>('')\n    const {chargeFeeList: withdrawalFeeList} = useChargeFeeList(tokenSymbol, OffchainFeeReqType.OFFCHAIN_WITHDRAWAL)\n\n    let withdrawProps: WithdrawProps<any, any> = {\n        tradeData: {belong: undefined},\n        coinMap: coinMap,\n        walletMap: walletMap_Lv2,\n        withdrawBtnStatus: TradeBtnStatus.AVAILABLE,\n        onWithdrawClick: (tradeData: any) => {\n            console.log('Swap button click', withdrawValue)\n            if (withdrawValue && withdrawValue.belong) {\n                withdraw(withdrawValue.belong.toString(), withdrawValue.tradeValue)\n            }\n            ShowWithdraw(false)\n        },\n\n        handlePanelEvent: async (data: SwitchData<any>, switchType: 'Tomenu' | 'Tobutton') => {\n            return new Promise((res: any) => {\n                if (data?.tradeData?.belong) {\n                    if (withdrawValue !== data.tradeData) {\n                        setWithdrawValue(data.tradeData)\n                    }\n                    setTokenSymbol(data.tradeData.belong)\n                } else {\n                    setWithdrawValue({belong: undefined, tradeValue: 0, balance: 0} as IBData<unknown>);\n                }\n                res();\n            })\n        },\n        withdrawType: WithdrawType.Fast,\n        withdrawTypes: WithdrawTypes,\n        chargeFeeToken: 'ETH',\n        chargeFeeTokenList: withdrawalFeeList,\n        handleOnAddressChange: (value: any) => {\n            console.log('handleOnAddressChange', value);\n        },\n        handleAddressError: (_value: any) => {\n            return {error: true, message: 'any error'}\n        }\n    }\n    // console.log(coinMap)\n    // transfer\n    const [transferValue, setTransferValue] = useState<IBData<any>>({\n        belong: undefined,\n        tradeValue: 0,\n        balance: 0\n    } as IBData<unknown>)\n\n    const [transferTokenSymbol, setTransferTokenSymbol] = useState<string>('')\n    const {chargeFeeList: transferFeeList} = useChargeFeeList(transferTokenSymbol, OffchainFeeReqType.TRANSFER)\n\n    let transferProps: TransferProps<any, any> = {\n        tradeData: {belong: undefined},\n        coinMap: coinMap,\n        walletMap: walletMap_Lv2,\n        transferBtnStatus: TradeBtnStatus.AVAILABLE,\n        onTransferClick: (tradeData: any) => {\n            console.log('onTransferClick:', transferValue);\n            if (transferValue && transferValue.belong) {\n                transfer(transferValue.tradeValue)\n            }\n\n            ShowTransfer(false)\n        },\n\n        handlePanelEvent: async (data: SwitchData<any>, switchType: 'Tomenu' | 'Tobutton') => {\n            return new Promise((res: any) => {\n                if (data?.tradeData?.belong) {\n                    if (transferValue !== data.tradeData) {\n                        setTransferValue(data.tradeData)\n                    }\n                    setTransferTokenSymbol(data.tradeData.belong)\n                } else {\n                    setTransferValue({belong: undefined, tradeValue: 0, balance: 0} as IBData<unknown>)\n                }\n                // else{\n                //     setTransferValue({ belong: undefined, amt: 0 })\n                // }\n\n                res();\n            })\n        },\n\n        chargeFeeToken: 'ETH',\n        chargeFeeTokenList: transferFeeList,\n        handleOnAddressChange: (value: any) => {\n            console.log('handleOnAddressChange', value);\n        },\n        handleAddressError: (_value: any) => {\n            return {error: true, message: 'any error'}\n        }\n    }\n\n    // reset\n    const [resetValue, setResetValue] = useState<IBData<any>>({\n        belong: undefined,\n        tradeValue: 0,\n        balance: 0\n    } as IBData<unknown>)\n\n\n    let resetProps: ResetProps<any, any> = {\n        tradeData: {belong: undefined},\n        coinMap: coinMap,\n        walletMap: walletMap_Lv2,\n        resetBtnStatus: TradeBtnStatus.AVAILABLE,\n        onResetClick: (tradeData: any) => {\n            console.log('onResetClick', resetValue)\n            if (resetValue && resetValue.belong) {\n            }\n\n            ShowResetAccount(false)\n        },\n        handlePanelEvent: async (data: SwitchData<any>, switchType: 'Tomenu' | 'Tobutton') => {\n            return new Promise((res) => {\n                if (data?.tradeData?.belong) {\n                    if (resetValue !== data.tradeData) {\n                        setResetValue(data.tradeData)\n                    }\n                } else {\n                    setResetValue({belong: undefined, tradeValue: 0, balance: 0} as IBData<unknown>)\n                }\n\n                res();\n            })\n        },\n        fee: {count: 234, price: 123}\n    }\n\n     const tradeCalcData: TradeCalcData<CoinType> = {\n        coinSell: 'ETH', //name\n        coinBuy: 'LRC',\n        BtoS: 0,\n        StoB: 0,\n        sellCoinInfoMap: coinMap,\n        buyCoinInfoMap: coinMap,\n        walletMap: {},\n        slippage: 0.5,\n        slippageTolerance: [0.1, 0.5, 1, 'slippage:N'],\n        priceImpact: '12',\n        minimumReceived: '1%',\n        fee: '1%'\n    }\n     const ammCalcData: AmmInData<CoinType> = {\n        myCoinA: {belong:'ETH',balance:1000,tradeValue:0},\n        myCoinB: {belong:'LRC',balance:1000,tradeValue:0},\n        AtoB:50,\n        coinInfoMap: coinMap,\n        slippage: 0.5,\n        slippageTolerance: [0.1, 0.5, 1, 'slippage:N'],\n        fee: '1%'\n    }\n    \n\n    let swapProps: SwapProps<IBData<string>, string, any> = {\n        swapTradeData: {sell: {belong: undefined}, buy: {belong: undefined}, slippage: ''} as any,\n        tradeCalcData,\n        onSwapClick: (tradeData) => {\n            console.log('Swap button click', tradeData);\n        },\n        handleSwapPanelEvent: async (data: any, switchType: any) => {\n            console.log(data, switchType)\n        },\n    };\n    let ammProps: AmmProps<AmmData<IBData<any>>, any, AmmInData<any>> = {\n        ammDepositData:{coinA: {belong: 'ETH',balance:0.3,tradeValue:0}, coinB:  {belong: 'LRC',balance:1000,tradeValue:0},slippage: '',},\n        ammWithdrawData:{coinA: {belong: 'ETH',balance:0.3,tradeValue:0}, coinB:  {belong: 'LRC',balance:1000,tradeValue:0},slippage: '',},\n        // tradeCalcData,\n        ammCalcData:ammCalcData,\n        handleDepositEvent: (data,type) => {\n            console.log('handleDepositEvent',data,type) ;\n        },\n        handleWithDrawEvent:  (data,type) => {\n            console.log('handleWithDrawEvent',data,type) ;\n        },\n        onAmmWithdrawClick: (data)=>{\n            console.log('onAmmWithdrawClick',data) ;\n        },\n        onAmmDepositClick: (data)=>{\n            console.log('onAmmDepositClick',data) ;\n        }\n    }\n\n    return {\n        depositProps, withdrawProps, transferProps, resetProps, ammProps, swapProps,\n    }\n}\n","export function deepClone(data: any) {\n    if (!data || !(data instanceof Object) || (typeof data == \"function\")) {\n        return data || undefined\n    }\n    let constructor = data.constructor\n    let result = new constructor()\n    for (let key in data) {\n        if (data.hasOwnProperty(key)) {\n            result[key] = deepClone(data[key])\n        }\n    }\n    return result\n}\n\nexport function copyToClipBoard(text: string){ //复制到剪切板\n\n    if(document.execCommand){\n        var textarea =document.createElement('textarea')\n        document.body.appendChild(textarea)\n        textarea.value=text\n        textarea.select()\n        document.execCommand(\"Copy\")\n        document.body.removeChild(textarea)\n\t}\n\n\tif((window as any).clipboardData){\n        (window as any).clipboardData.setData(\"Text\", text)\n        return true\n    }\n\treturn false\n}","import { WithTranslation, withTranslation } from 'react-i18next';\nimport { Box, Modal } from '@material-ui/core';\nimport { ModalCloseButton, ModalContentStyled, ModalQRCode } from '@loopring-web/component-lib';\nimport React from 'react';\nimport { AccountInfo, AccountInfoProps } from '@loopring-web/component-lib';\n\nexport const ModalAccountInfo = withTranslation('common')(({\n                                                               onClose,\n                                                               open,\n                                                               t,\n                                                               ...rest\n                                                           }: { open:boolean, onClose:(e:any)=>void} & AccountInfoProps & WithTranslation) => {\n\n\n    return <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"Account information\"\n        aria-describedby=\"show layer2 address, unlock/locked loopring wallet, copy address\"\n    >\n        <ModalContentStyled style={{boxShadow: '24'}}>\n            <Box paddingTop={3} paddingBottom={3} display={'flex'} flexDirection={'column'} minWidth='var(--modal-width)'>\n                <ModalCloseButton onClose={onClose} {...{...rest, t}} />\n                <AccountInfo {...rest}/>\n            </Box>\n\n        </ModalContentStyled>\n    </Modal>\n})","import React, { useCallback, useState, } from 'react'\n\nimport {\n    Header as HeaderUI,\n    HideOnScroll,\n    ModalWalletConnect,\n    AccountInfo,\n    ModalCloseButton,\n} from '@loopring-web/component-lib'\n\nimport { headerRoot } from '@loopring-web/component-lib/src/static-resource'\n\nimport { useLocation } from 'react-router-dom'\n\nimport { Box, Collapse, Container, Toolbar, Snackbar, Alert, } from '@material-ui/core'\n\nimport { useHeader } from './hook'\n\nimport { useDisconnect, } from 'stores/account/hook'\nimport { ModalPanel, ModalQRCode, } from '@loopring-web/component-lib';\nimport { useGetExchangeInfo } from 'hooks/exchange/useExchangeAPI'\nimport { useModalProps } from './hook'\n\nimport { copyToClipBoard } from 'utils/obj_tools'\nimport { ModalAccountInfo } from '../../pages/AccountPage';\nimport { useTranslation } from 'react-i18next';\n\nconst Header = ({ ...rest }: any) => {\n\n    const {\n        depositProps,\n        withdrawProps,\n        transferProps,\n        resetProps,\n        ammProps,\n        swapProps,\n    } = useModalProps()\n\n    const location = useLocation()\n\n    const {\n        headerToolBarData,\n        headerMenuData,\n        gatewayList,\n        open,\n        setOpen,\n        openConnect,\n        setOpenConnect,\n        setShowAccountInfo,\n        account,\n        accountInfoProps,\n        showAccountInfo\n    } = useHeader()\n\n    const { exchangeInfo } = useGetExchangeInfo()\n\n    const { disconnect } = useDisconnect()\n\n    const onSwitch = useCallback(() => {\n        setOpen(true)\n    }, [setOpen])\n\n    const [openQRCode, setOpenQRCode] = useState(false)\n\n    const [copyToastOpen, setCopyToastOpen] = useState(false);\n    const {t} = useTranslation('commom')\n\n    const closeCopyToast = () => { setCopyToastOpen(false) }\n\n    return (<>\n        <Snackbar open={copyToastOpen} autoHideDuration={2500} onClose={closeCopyToast}>\n            <Alert onClose={closeCopyToast} severity=\"success\">\n                {t('Address Copied to Clipboard!')}\n        </Alert>\n        </Snackbar>\n\n        <ModalQRCode open={openQRCode} onClose={() => setOpenQRCode(false)} title={'ETH Address'}\n            description={account.accAddr} url={account.accAddr} />\n\n        <ModalPanel transferProps={transferProps} withDrawProps={withdrawProps} \n        depositProps={depositProps} resetProps={resetProps} ammProps={ammProps} swapProps={swapProps}/>\n\n        <HideOnScroll>\n            {process.env.NODE_ENV !== 'production' && JSON.stringify(account?.status)}\n            {process.env.NODE_ENV !== 'production' && ' exchangeAddress:' + JSON.stringify(exchangeInfo?.exchangeAddress)}\n\n            <HeaderUI {...rest} headerMenuData={headerMenuData} headerToolBarData={headerToolBarData}\n                selected={location.pathname === '/' ? headerRoot : location.pathname}></HeaderUI>\n\n        </HideOnScroll>\n        <Toolbar />\n\n        <ModalWalletConnect {...{ ...rest, gatewayList, open, onClose: () => setOpen(false) }} />\n        {<ModalAccountInfo\n            open={openConnect}\n            onClose={() => {setOpenConnect(false)}}\n            onCopy={() => {\n                copyToClipBoard(account.accAddr);\n                setCopyToastOpen(true)\n            }}\n            onViewQRCode={() => {\n                setOpenQRCode(true)\n            }}\n            onDisconnect={() => {\n                disconnect();\n                setShowAccountInfo(false);\n            }}\n            onSwitch={onSwitch}\n            {...{...accountInfoProps, ...rest}}></ModalAccountInfo>}\n    </>)\n}\n\n\nexport default Header\n\n\n\n","import styled from '@emotion/styled/macro'\n\nimport { MarketBlock, QuoteTable, TablePaddingX } from '@loopring-web/component-lib'\n\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { coinMap } from '@loopring-web/component-lib/static'\nimport { FloatTag } from '@loopring-web/component-lib/src/static-resource'\nimport { Box, Grid } from '@material-ui/core'\nimport { useQuote } from './hook'\n\nconst  RowStyled = styled(Grid)`\n      & .MuiGrid-root:not(:last-of-type) > div{\n        margin-right: ${({theme}) => theme.unit * 3}px;\n      }\n` as typeof Grid\nconst  TableWrapStyled = styled(Grid)`\n  &{\n    background-color: ${({theme}) => theme.colorBase.background().default};\n    ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\n    .rdg{\n      height: 100%;\n    }\n  }\n  ${({theme}) => TablePaddingX({pLeft:theme.unit * 3,pRight:theme.unit * 3})}\n` as typeof Grid\n\nconst QuotePage = withTranslation('common')((rest: WithTranslation) => {\n\n    const { tickList, big4 } = useQuote()\n\n    const formattedRawData = tickList.map((o: any) => ({\n        pair: !!o[0].length ? {\n            first: o[0][0],\n            last: o[0][1]\n        }: {\n            first: '--',\n            last: '--'\n        },\n        lastPrice: Number.isFinite(o[2]) ? o[2] : '--',\n        change: Number.isFinite(o[3]) ? o[3] : '--',\n        high: Number.isFinite(o[4]) ? o[4] : '--',\n        low: Number.isFinite(o[5]) ? o[5] : '--',\n        volumn: Number.isFinite(o[6]) ? o[6] : '--'\n    }))\n    \n    let props: any = {\n        ...rest,\n        buyData: coinMap.ETH,\n        sellData: coinMap.LRC,\n        tradeFloat: {priceDollar: +123, priceYuan: 2343232, percent: '+15%', timeUnit: \"24h\",\n            volume: 112312312,\n            floatTag:FloatTag.increase},\n\n    }\n\n    const onVisibleRowsChange=(data: any) => {\n        console.log(data)\n    }\n\n    return <Box display={'flex'} flexDirection={'column'} flex={1}>\n\n        <RowStyled container >\n            <Grid item xs={3} >\n                <MarketBlock {...{...props,tradeFloat: {priceDollar: 123,priceYuan: 2343232, percent: '0%', timeUnit: \"24h\",floatTag:FloatTag.none}}} />\n            </Grid>\n            <Grid item xs={3} >\n                <MarketBlock {...{...props,tradeFloat: {priceDollar: 123,priceYuan: 2343232, percent: '-15%', timeUnit: \"24h\",floatTag:FloatTag.decrease}}} />\n            </Grid>\n            <Grid item xs={3} >\n                <MarketBlock {...{...props}}></MarketBlock>\n            </Grid>\n            <Grid item xs={3} >\n                <MarketBlock {...{...props}}></MarketBlock>\n            </Grid>\n        </RowStyled>\n        <TableWrapStyled container marginY={3} paddingY={2} flex={1}>\n            <Grid item xs={12} display={'flex'}>\n                <QuoteTable onVisibleRowsChange={onVisibleRowsChange} rawData={formattedRawData} {...{ ...rest }} />\n            </Grid>\n        </TableWrapStyled>\n    </Box>\n\n\n})\n\nexport default QuotePage\n","import { QuoteTableRawDataItem } from \"@loopring-web/component-lib\"\nimport { TickerData } from \"loopring-sdk\"\nimport { useExchangeAPI } from \"hooks/exchange/useApi\"\nimport { useCustomDCEffect } from \"hooks/common/useCustomDCEffect\"\n\nimport { useState } from \"react\"\n\nconst amtCol = 5\n\nexport function useQuote() {\n\n    const [tickList, setTickList] = useState<any>([])\n\n    const [big4, setBig4] = useState<any>([])\n\n    const exchangeApi = useExchangeAPI()\n\n    useCustomDCEffect(async() => {\n\n        if (!exchangeApi) {\n            return\n        }\n\n        let mounted = true\n\n        const refresh = async () => {\n\n            const { tickList } = await exchangeApi.getAllTickers()\n\n            let ticks: any[] = []\n\n            tickList.forEach((item: TickerData) => {\n                const item2: QuoteTableRawDataItem = {\n                    pair: {\n                        first: item.base as string,\n                        last: item.quote as string,\n                    },\n                    lastPrice: item.quote_token_volume / item.base_token_volume,\n                    change: (item.close - item.open) / item.open,\n                    high: item.high,\n                    low: item.low,\n                    volume: item.base_token_volume,\n                }\n                const rowData: any = [[item.base, item.quote], [item.close, item.close],\n                item.change, item.high, item.low, item.base_token_volume, item.base_token_amt, item.base, item.quote]\n                ticks.push(rowData)\n            })\n            \n            ticks = ticks.sort((a: any, b: any) => {\n                let res = 0\n                if (!isNaN(b[amtCol]) && !isNaN(a[amtCol])) {\n                    res = b[amtCol] - a[amtCol]\n                }\n\n                return res\n            })\n\n            if (mounted) {\n                setBig4(ticks.slice(0, 4))\n                setTickList(ticks)\n            }\n        }\n\n        await refresh()\n\n        /*\n\n        const handler = setInterval(async() => {\n            await refresh()\n        }, 3000)\n        */\n\n        return () => {\n            /*\n            if (handler) {\n                clearInterval(handler)\n            }\n            */\n            mounted = false\n        }\n\n    }, [exchangeApi])\n\n    return {\n        tickList,\n        big4,\n    }\n\n}\n","import { SwapPanel as SwapPanelUi } from '@loopring-web/component-lib'\n\nconst SwapPanel = ({swapProps,...rest}: any) => {\n\n    return (<SwapPanelUi {...{\n        ...swapProps\n        , ...rest\n    }}> </SwapPanelUi>\n    )\n\n}\n\nexport default SwapPanel\n","import { useState, } from 'react'\n\nimport { usePromiseJob } from 'hooks/common/useCommon'\nimport { useAmmpoolAPI, } from './useApi'\n\nimport { AmmPoolConfResponse } from 'loopring-sdk'\n\nexport function useGetAmmPools() {\n\n  const [ammpools, setAmmpools] = useState<AmmPoolConfResponse>()\n\n  const api = useAmmpoolAPI()\n\n    const fetchData = () => {\n      if (!api) {\n        return undefined\n      }\n      return api.getAmmPoolConf()\n    }\n  \n    usePromiseJob(fetchData, setAmmpools, undefined, 'useGetAmmPools', [api])\n\n  return { ammpools }\n\n}\n\nexport function useGetAmmPoolsBalances() {\n\n  const [ammPoolsBalances, setAmmPoolsBalances] = useState<any>()\n\n  const api = useAmmpoolAPI()\n\n  const fetchData = () => {\n    if (!api) {\n      return undefined\n    }\n    return api.getAmmPoolBalances()\n  }\n\n  usePromiseJob(fetchData, setAmmPoolsBalances, undefined, 'useGetAmmPoolsBalances', [api])\n\n  return { ammPoolsBalances }\n\n}\n","import { useCallback, useMemo, useState, useRef, useEffect } from 'react'\n\nimport { useWsAPI, } from './useApi'\n\nimport { ChainId, getAccountArg, getCandlestickArg, getAmmpoolArg, \n    getTickerArg, WsProps } from 'loopring-sdk'\nimport store from 'stores'\n\nconst stateArr = [\n    { key: 0, value: 'Connecting' },\n    { key: 1, value: 'Connected' },\n    { key: 2, value: 'Closing' },\n    { key: 3, value: 'Closed' }\n]\n\nexport const useWebsocket = ({ topics, verify, needApiKey, apiKey, }: { topics: any, needApiKey: boolean, apiKey: string|undefined, verify: boolean, }) => {\n    const ws = useRef<WebSocket | null>(null)\n    const [wsData, setMessage] = useState<any>(undefined)\n    const [readyState, setReadyState] = useState({ key: 0, value: 'Connecting' })\n\n    const chainId = store.getState().trading.chainId\n\n    const api = useWsAPI()\n\n    const creatWebSocket = () => {\n\n        if (!api || !chainId) {\n            return\n        }\n\n        api.getWsKey().then((wsApiKey: any) => {\n            let basePath: string = 'wss://ws.'\n            switch (chainId) {\n                case ChainId.MAINNET:\n                    basePath += process.env.REACT_APP_API_URL\n                    break\n                default:\n                    basePath += process.env.REACT_APP_API_URL_UAT\n                    basePath = 'wss://ws.uat2.loopring.io'\n            }\n\n            basePath += '/v3/ws?wsApiKey=' + wsApiKey\n    \n            try {\n                ws.current = new WebSocket(basePath)\n\n                const subTopics = (topics: any) => {\n                    let data: any = {\n                        op: 'sub',\n                        unsubscribeAll: 'true',\n                        topics: topics,\n                    }\n            \n                    if (needApiKey && apiKey) {\n                        data.apiKey = apiKey\n                    }\n            \n                    const flat_txt = JSON.stringify(data)\n                    sendMessage(flat_txt)\n                }\n    \n                ws.current.onopen = (_e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                    subTopics(topics)\n                }\n                \n                ws.current.onclose = (e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                }\n                \n                ws.current.onerror = (e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                }\n    \n                ws.current.onmessage = (e) => {\n                    setMessage(e.data)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n\n        })\n\n    }\n\n    const webSocketInit = () => {\n        if (!ws.current || ws.current.readyState === 3) {\n            creatWebSocket()\n        }\n    }\n\n    const closeWebSocket = () => {\n        ws.current?.close()\n    }\n\n    const sendMessage = (msg: any) => {\n        ws.current?.send(msg)\n    }\n\n    const reconnect = () => {\n        try {\n            closeWebSocket()\n            ws.current = null\n            creatWebSocket()\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n\n        verify && webSocketInit()\n        return () => {\n            ws.current?.close()\n        }\n    }, [ws, verify, webSocketInit])\n\n    return {\n        wsData,\n        readyState,\n        sendMessage,\n        closeWebSocket,\n        reconnect,\n    }\n}\n\nexport function useWs(topics: any, needApiKey: boolean, apiKey?: string, verify: boolean = true) {\n    const [socketData, setSocketData] = useState({})\n\n    const [isLocalPage, setIsLocalPage] = useState<boolean>(true)\n\n    useEffect(() => {\n\n        let mounted = true\n\n        const checkIsLocalPage = () => {\n            console.log('enter checkIsLocalPage')\n            document.addEventListener('visibilitychange', function () {\n                // page invisible trigger!\n                let isLocalPage = true\n                if (document.visibilityState === 'hidden') {\n                    isLocalPage = false\n                }\n                if (mounted) {\n                    setIsLocalPage(isLocalPage)\n                } else {\n                    console.log('unmounted! dont setIsLocalPage!')\n                }\n            })\n        }\n\n        checkIsLocalPage()\n\n        return () => {\n            mounted = false\n        }\n\n    }, [])\n\n    const { wsData, readyState, closeWebSocket, reconnect, sendMessage, } = useWebsocket({\n        topics,\n        apiKey,\n        needApiKey,\n        verify,\n    })\n\n    useEffect(() => {\n    \n        if (needApiKey && !apiKey) {\n            return\n        }\n\n        if (!verify) {\n            return\n        }\n\n        if (wsData === 'ping') {\n            try {\n                sendMessage('pong')\n            } catch (err) {\n                console.log(err)\n            }\n        } else {\n            if (wsData) {\n                setSocketData(JSON.parse(wsData))\n            }\n        }\n        \n        // if closed and is currente page then, reconnect.\n        if (readyState.key === 3 && isLocalPage) {\n            reconnect()\n        }\n        // if not current page, close it.\n        if (!isLocalPage) {\n            closeWebSocket()\n        }\n\n    }, [wsData, readyState, isLocalPage, verify, apiKey])\n\n    return {\n        socketData,\n    }\n}\n\nexport function useAmmpoolWs(apiKey: string) {\n\n    let topics: any[] = []\n\n    topics.push(getTickerArg('LRC-ETH'))\n\n    topics.push(getAmmpoolArg('0x18920d6E6Fb7EbE057a4DD9260D6D95845c95036'))\n\n    const needApiKey = false\n\n    const { socketData } = useWs(topics, needApiKey, apiKey)\n\n    return {\n        socketData,\n    }\n\n}\n","import { useState, } from 'react'\n\nimport { getAccountArg, getCandlestickArg, \n  getAmmpoolArg, getTickerArg, getOrderArg, WsTopicType, } from 'loopring-sdk'\n\nimport { useWs } from './useWebsocketApi'\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport { useGetMarkets } from \"hooks/exchange/useExchangeAPI\"\n\nfunction useHandleSocketData(data: any) {\n  const [account, setAccount] = useState<any>()\n  const [ammPool, setAmmPool] = useState<any>()\n  const [order, setOrder] = useState<any>()\n  const [ticker, setTicker] = useState<any>()\n\n  useCustomDCEffect(() => {\n\n      // console.log('useCustomDCEffect ws!~ data:', data)\n\n      if (!data) {\n        return\n      }\n\n      if (data.op) {\n        return\n      }\n\n      if (!data.topic || !data.topic.topic) {\n        return\n      }\n\n      switch(data.topic.topic) {\n        case WsTopicType.Account:\n          // console.log(',data.data:', data.data)\n          setAccount(data.data)\n          break\n        case WsTopicType.Ammpool:\n          let ammPool = {\n            baseAmt: data.data[0][0],\n            quoteAmt: data.data[0][1],\n            timestamp: data.data[1],\n          }\n          // console.log(',ammPool:', ammPool)\n          setAmmPool(ammPool)\n          break\n        case WsTopicType.Candlestick:\n          break\n        case WsTopicType.Order:\n          setOrder(data.data)\n          break\n        case WsTopicType.OrderBook:\n          break\n        case WsTopicType.Ticker:\n          setTicker(data.data)\n          break\n        case WsTopicType.Trade:\n          break\n        default:\n          throw Error('Unknown WsTopicType:' + data.topic.topic)\n      }\n  }, [data])\n\n  return {\n    account,\n    ammPool,\n    order,\n    ticker,\n  }\n}\n\nexport function useSwapPageWs(poolAddress: string, market: string, apiKey: string) {\n\n  let topics: any[] = []\n\n  topics.push(getAccountArg())\n  topics.push(getOrderArg(market))\n  topics.push(getAmmpoolArg(poolAddress))\n\n  const { socketData } = useWs(topics, true, apiKey, !!poolAddress && !!market && !!apiKey)\n\n  return useHandleSocketData(socketData)\n\n}\n\nexport function useQuotePageWs() {\n\n  const { markets } = useGetMarkets()\n\n  let topics: any[] = []\n\n  if (markets) {\n\n    const keys = Reflect.ownKeys(markets.markets)\n\n    let c = 0\n  \n    keys.every((item: any) => {\n      c += 1\n      topics.push(getTickerArg(item))\n      if (c >= 20) {\n        return false\n      }\n\n      return true\n    })\n\n  }\n\n  const { socketData } = useWs(topics, false)\n\n  return useHandleSocketData(socketData)\n\n}\n","export enum OrderHandling {\n    processed = 'processed',\n    no_such_order = 'no_such_order',\n    too_many_times = 'too_many_times',\n}\n\n// export enum PriceChartType {\n//     h24 = '24hrs',\n//     w1 = '1week',\n//     all = 'all',\n// }\n","import { useCallback, useState, } from 'react'\n\nimport BigNumber from 'bignumber.js'\n\nimport { useGetAmmPools, useGetAmmPoolsBalances } from 'hooks/exchange/useAmmpoolAPI'\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\nimport { useGetMixMarkets, useGetTokens } from 'hooks/exchange/useExchangeAPI'\n\nimport { getBaseQuote, OrderStatus, OrderType, SubmitOrderRequestV3, dumpError400, getExistedMarket, } from 'loopring-sdk'\n\nimport { useGetExchangeInfo } from 'hooks/exchange/useExchangeAPI'\n\nimport { useGetUserBalances } from 'hooks/exchange/useUserAPI'\n\nimport { useAccount } from 'stores/account/hook'\nimport { useUserAPI } from 'hooks/exchange/useApi'\n\nimport { useSwapPageWs } from 'hooks/exchange/useWsAPI'\n\nimport {\n  applySlippageTolerance,\n  checkStatus,\n  fromWEI,\n  getAmmInfo,\n  getAmountOut,\n  getAmountOut_Reverse,\n  getBalances,\n  getLeft,\n  getRight,\n  getToken,\n  toWEI,\n} from 'utils/swap_calc_utils'\n\nimport {\n  CoinInfo,\n  CoinMap,\n  IBData,\n  TradeCalcData,\n  WalletCoin,\n  WalletMap,\n} from '@loopring-web/component-lib/static-resource'\n\nimport { AccountStatus } from 'state_machine/account_machine_spec'\n\nimport { deepClone } from 'utils/obj_tools'\n\nimport * as fm from 'loopring-sdk'\n\nimport { UserStorage } from 'storage'\n\nimport { OrderHandling } from 'defs/swap_defs'\n\nimport { SwapProps, SwapTradeData, } from '@loopring-web/component-lib'\nimport { SwapType } from '@loopring-web/component-lib/components/panel/Interface'\nimport { useRouteMatch } from 'react-router'\n\nexport function useCoinMap(base: string) {\n\n  const { ammpools } = useGetAmmPools()\n\n  const { tokens } = useGetTokens()\n\n  const [left, setLeft] = useState<CoinMap<any, CoinInfo<any>>>({})\n\n  const [right, setRight] = useState<CoinMap<any, CoinInfo<any>>>({})\n\n  useCustomDCEffect(() => {\n  \n    if (!ammpools || !tokens) {\n        return\n    }\n  \n    const left = getLeft(ammpools.pairs, tokens)\n  \n    if (left) {\n        setLeft(left.coinMapLeft)\n  \n        const right = getRight(ammpools.pairs, base, tokens)\n  \n        if (right) {\n            setRight(right.coinMapRight)\n        }\n  \n    }\n  \n  }, [ammpools, tokens, base])\n\n  return {\n      left,\n      right,\n      setLeft,\n      setRight,\n  }\n\n}\n\nexport function useSwapNew() {\n\n  // get trading pair from url path.\n  const match: any = useRouteMatch(\":symbol\")\n\n  //const symbol =  ad?.hasOwnProperty()?'':undefined;\n   const symbol =  match?.params.symbol ?? undefined;\n\n  // user info\n  const { apiKey, eddsaKey, accountId, account: globalAcc, } = useAccount()\n\n  // total info of exchange/tokens/markets/ammpools\n  const { markets } = useGetMixMarkets()\n\n  const { tokens } = useGetTokens()\n\n  const { exchangeInfo } = useGetExchangeInfo()\n\n  const { ammpools } = useGetAmmPools()\n\n  const { ammPoolsBalances } = useGetAmmPoolsBalances()\n\n  // state for shown elements\n  const [base, setBase] = useState<any>('')\n\n  const [quote, setQuote] = useState<any>('')\n\n  const {\n      left,\n      right,\n      setRight,\n  } = useCoinMap(base)\n\n  const [market, setMarket] = useState<any>()\n\n  const [poolAddress, setPoolAddress] = useState<string>('')\n\n  const { balances, setBalances } = useGetUserBalances(tokens?.tokenSymbolMap)\n\n  const [balance, setBalance] = useState<any>(0)\n  const [availToShow, setAvailToShow] = useState<any>(0)\n\n  const [fee, setFee] = useState(0)\n  const [takerRate, setTakerRate] = useState(10)\n\n  const [currentPrice, setCurrentPrice] = useState<number>(0)\n\n  const [ammOrder, setAmmOrder] = useState<string>(UserStorage.getAmmOrder())\n\n  const [slippageTolerance, setSlippageTolerance] = useState(0.01)\n\n  const [priceImpact, setPriceImpact] = useState(0)\n\n  const [baseAmt, setBaseAmt] = useState<string | number>()\n\n  const [quoteAmt, setQuoteAmt] = useState<number>(0)\n\n  const [amount1ApplyOrderFee, setAmount1ApplyOrderFee] = useState(0)\n\n  const minimumReceived = quoteAmt ? quoteAmt * (1 - slippageTolerance) : 0\n\n  // const quoteUserBalance = useGetUserBalances(tokens, quote)\n  const [quoteBalance, setQuoteBalance] = useState<any>(0)\n  const [quoteToShow, setQuoteToShow] = useState<any>(0)\n\n  const [swapProps, setSwapProps] = useState<any>({})\n\n  // apis\n  const userApi = useUserAPI()\n\n  const [walletMap, setWalletMap] = useState<WalletMap<any, WalletCoin<any>>>({})\n  \n  //websocket update\n\n  const {\n    account,\n    ammPool,\n    order,\n  } = useSwapPageWs(poolAddress, market, apiKey)\n\n  // set base and quote according to the url matcher.\n  // e.g. /trading/lite/LRC-USDT base => LRC quote => USDT\n  useCustomDCEffect(() => {\n    console.log('----------------!!!!!!!!!!!', symbol)\n\n    if (!symbol) {\n\n    console.log('----------------getBaseQuote LRC_ETH')\n      setBase('LRC')\n      setQuote('ETH')\n    } else {\n      const { base, quote } = getBaseQuote(symbol)\n\n      if (base && quote) {\n\n        console.log('getBaseQuote base:', base, ' quote:', quote)\n\n        setBase(base)\n        setQuote(quote)\n      }\n    }\n\n  }, [symbol, markets, setBase, setQuote, setMarket])\n\n  // setMarket when base or quote changed.\n  useCustomDCEffect(() => {\n\n    if (!markets) {\n      return\n    }\n\n    const { marketArr } = markets\n\n    setMarket(getExistedMarket(marketArr, base, quote))\n\n  }, [markets, setMarket, base, quote])\n\n  // update pooladdress\n  useCustomDCEffect(() => {\n  \n    if (!base || !quote || !ammpools || !ammPoolsBalances) {\n      return\n    }\n  \n    const { ammInfo, } = getAmmInfo(ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, base, quote)\n  \n    console.log('ammInfo.market:', ammInfo.market)\n  \n    // setMarket(ammInfo.market)\n    setPoolAddress(ammInfo.address)\n  \n  }, [base, quote, ammpools, ammPoolsBalances,])\n\n  useCustomDCEffect(() => {\n\n      if (!balances || !base || !tokens) {\n          return\n      }\n\n      if (globalAcc.status === AccountStatus.ACTIVATED) {\n\n          const balance = balances.symbol[base]\n          setBalance(balance)\n          setAvailToShow(fromWEI(tokens.tokenSymbolMap, base, balance))\n\n          // const quoteBalance = balances.symbol[quote]\n          // setQuoteBalance(quoteBalance)\n          // setQuoteToShow(fromWEI(tokens, quote, quoteBalance))\n\n      } else {\n\n          setBalance(0)\n          setAvailToShow(0)\n\n          // setQuoteBalance(0)\n          // setQuoteToShow(0)\n\n      }\n\n  }, [balances, base, tokens, globalAcc.status])\n\n\n  useCustomDCEffect(() => {\n    if (!account || !tokens || !base) {\n        return\n    }\n\n    if (globalAcc.status === AccountStatus.ACTIVATED) {\n\n        const currentBalance = balances.tokenId[account.tokenId]\n        const totalAmount = fm.toBig(account.totalAmount)\n        const amountLocked = fm.toBig(account.amountLocked)\n        const newAvailable = totalAmount.minus(amountLocked)\n\n        if (!newAvailable.eq(fm.toBig(currentBalance))) {\n            const avail = fromWEI(tokens.tokenSymbolMap, base, newAvailable.toString())\n\n            const balancesTmp = deepClone(balances)\n            balancesTmp.tokenId[account.tokenId] = newAvailable.toString()\n            const token = balancesTmp.map[account.tokenId]\n            balancesTmp.symbol[token.symbol] = newAvailable.toString()\n            setBalances(balancesTmp)\n        }\n\n    } else {\n        setBalances(undefined)\n    }\n\n}, [account, tokens, base, globalAcc.status])\n\nuseCustomDCEffect(() => {\n\n    if (!tokens) {\n        return\n    }\n\n    let walletMap: WalletMap<any, WalletCoin<any>> = {}\n\n    if (globalAcc.status === AccountStatus.ACTIVATED) {\n        if (balances && balances.symbol) {\n            const keys = Reflect.ownKeys(balances.symbol)\n\n            keys.forEach((item: any) => {\n                const balance = balances.symbol[item]\n                walletMap[item] = {\n                    belong: item,\n                    count: fromWEI(tokens.tokenSymbolMap, item, balance) as number,\n                }\n            })\n        }\n\n    }\n\n    setWalletMap(walletMap)\n\n}, [balances, tokens, globalAcc.status])\n\nuseCustomDCEffect(() => {\n\n  if (!base || !quote || !ammpools || !ammPoolsBalances || !tokens) {\n      console.log('return!!! --->setQuoteBalance')\n      return\n  }\n\n  const {\n      ammInfo,\n      baseBalance,\n      quoteBalance,\n  } = getBalances(ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, base, quote, tokens.tokenSymbolMap)\n\n  setFee(ammInfo.feeBips)\n  // setQuoteBalance(quoteBalance.volume)\n  // setQuoteToShow(quoteShow)\n\n  if (baseBalance.volume > 0) {\n      setCurrentPrice(quoteBalance.volume / baseBalance.volume)\n  } else {\n      setCurrentPrice(0)\n  }\n\n}, [tokens, base, quote, ammpools, ammPoolsBalances,])\n\nuseCustomDCEffect(async () => {\n\n  if (!apiKey && !accountId && !userApi && !ammOrder) {\n      return\n  }\n\n  const fn = (accountId: number, orderHash: string, apiKey: string, count = 0) => {\n      // console.log('orderHash:', orderHash, ' count:', count)\n      return new Promise((resolve, reject) => {\n          if (orderHash) {\n              userApi.getOrderDetails({\n                  accountId,\n                  orderHash\n              }, apiKey).then((order) => {\n                  console.log('order.status:', order.orderDetail.status)\n                  if (order.orderDetail.status === OrderStatus.processed) {\n                      UserStorage.clearAmmOrder()\n                      return resolve(OrderHandling.processed)\n                  } else {\n                      if (count < 10) {\n                          setTimeout(() => {\n                              fn(accountId, UserStorage.getAmmOrder(), apiKey, count++)\n                          }, 1000)\n                      } else {\n                          reject(OrderHandling.too_many_times)\n                      }\n                  }\n              }).catch(() => {\n                  UserStorage.clearAmmOrder()\n                  return reject(OrderHandling.no_such_order)\n              })\n          }\n      })\n  }\n\n  fn(accountId, UserStorage.getAmmOrder(), apiKey).then((result) => {\n      console.log('then:', result)\n  }).catch((reason) => {\n      dumpError400(reason)\n  })\n\n  return () => {\n  }\n\n}, [apiKey, accountId, ammOrder, userApi])\n\nuseCustomDCEffect(() => {\n\n  if (!userApi || !accountId || !apiKey || !base || !quote || !ammpools || !ammPoolsBalances || !tokens) {\n      return\n  }\n\n  let mounted = true\n\n  const { ammInfo, } = getBalances(ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, base, quote, tokens.tokenSymbolMap)\n\n  userApi.getUserFeeRate({\n      accountId,\n      markets: ammInfo.market\n  }, apiKey).then((response) => {\n      if (mounted) {\n          setTakerRate(response.userFreeRateMap[ammInfo.market].takerRate)\n      } else {\n          console.log('setTakerRate unmounted!')\n      }\n  }).catch((reason) => {\n      dumpError400(reason, 'after getUserFeeRate')\n  })\n\n  return () => {\n      mounted = false\n  }\n\n}, [tokens, userApi, accountId, apiKey, base, quote, ammpools, ammPoolsBalances, globalAcc.status])\n\nconst onBaseAmtInputChange = useCallback((event: any) => {\n\n  if (!ammpools || !ammPoolsBalances || !tokens) {\n      return\n  }\n\n  let baseAmtVal = event.tradeValue as number\n\n  // console.log('onBaseAmtInputChange baseAmtVal:', baseAmtVal, ' baseAmt:', baseAmt)\n  if (baseAmtVal !== undefined && baseAmtVal === baseAmt) {\n      console.log('return directly')\n      return\n  } else if (baseAmtVal === undefined) {\n      baseAmtVal = 0\n  }\n\n  const {\n      quoteAmt: quoteAmtVal,\n      _amount1ApplyOrderFee,\n      priceImpact,\n  } = getAmountOut(baseAmtVal, ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, \n    tokens.tokenSymbolMap, base, quote, takerRate, currentPrice)\n\n  const { isNormal, } = checkStatus(baseAmtVal, balance, quoteAmtVal, fromWEI(tokens.tokenSymbolMap, quote, quoteBalance))\n\n  if (isNormal) {\n      setBaseAmt(baseAmtVal)\n      setQuoteAmt(quoteAmtVal)\n      setAmount1ApplyOrderFee(_amount1ApplyOrderFee)\n      setPriceImpact(priceImpact)\n  } else {\n      setQuoteAmt(0)\n      setAmount1ApplyOrderFee(0)\n      setPriceImpact(0)\n  }\n\n  return quoteAmtVal\n\n}, [tokens, baseAmt, balance, quoteBalance, ammpools, ammPoolsBalances, base, quote, takerRate, currentPrice])\n\nconst onQuoteAmtInputChange = useCallback((event: any) => {\n\n  if (!ammpools || !ammPoolsBalances || !tokens) {\n      return\n  }\n\n  let quoteAmtVal = event.tradeValue as number\n\n  // console.log('onQuoteAmtInputChange quoteAmtVal:', quoteAmtVal, ' quoteAmt:', quoteAmt)\n  if (quoteAmtVal !== undefined && quoteAmtVal === quoteAmt) {\n      // console.log('return directly')\n      return\n  } else if (quoteAmtVal === undefined) {\n      quoteAmtVal = 0\n  }\n\n  const {\n      baseAmt: baseAmtVal,\n      _amount1ApplyOrderFee,\n      priceImpact,\n      hasError,\n  } = getAmountOut_Reverse(quoteAmtVal, ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, \n    tokens.tokenSymbolMap, base, quote, takerRate, currentPrice)\n\n  const { isNormal, } = checkStatus(baseAmtVal, balance, quoteAmtVal, fromWEI(tokens.tokenSymbolMap, quote, quoteBalance))\n\n  if (!hasError && isNormal) {\n      setBaseAmt(baseAmtVal)\n      setQuoteAmt(quoteAmtVal)\n      setAmount1ApplyOrderFee(_amount1ApplyOrderFee)\n      setPriceImpact(priceImpact)\n  } else {\n      setBaseAmt(0)\n      setAmount1ApplyOrderFee(0)\n      setPriceImpact(0)\n  }\n\n  return baseAmtVal\n\n}, [tokens, quoteAmt, balance, quoteBalance, ammpools, ammPoolsBalances, base, quote, takerRate, currentPrice])\n\nconst onSwap = useCallback(() => {\n  console.log('try to swap ', baseAmt, base, ' -> ', quoteAmt, quote)\n\n  const swap = async () => {\n\n      if (!exchangeInfo?.exchangeAddress) {\n          throw Error('no exchangeAddress!')\n      }\n\n      if (!baseAmt || !quoteAmt || !ammpools || !tokens) {\n          // throw Error('no baseAmt or quoteAmt!')\n          console.log('no baseAmt or quoteAmt!')\n          return\n      }\n\n      const {\n          ammInfo,\n          feeBips,\n      } = getAmmInfo(ammpools.ammpools, ammPoolsBalances.ammpoolsbalances, base, quote)\n\n      const allOrNone = false\n\n      const baseToken = getToken(tokens.tokenSymbolMap, base)\n\n      const quoteToken = getToken(tokens.tokenSymbolMap, quote)\n\n      // const storageId = await authKeyApi.getNextStorageId(accountId, baseToken.tokenId, apiKey)\n\n      let orderId: number\n      try {\n\n          const storageId = await userApi.getNextStorageId({\n              accountId,\n              sellTokenId: baseToken.tokenId\n          }, apiKey\n          )\n          // console.log('storageId:', storageId)\n\n          orderId = storageId.orderId\n\n      } catch (reason) {\n          dumpError400(reason, 'getNextStorageId')\n          throw Error('getNextStorageId failed')\n      }\n\n      // const validUntil = Math.ceil(new Date().getTime() / 1000) + 3600 * 1000\n      const validUntil = 1700000000\n\n      const amount0InBigNumber = toWEI(tokens.tokenSymbolMap, base, baseAmt)\n      const amount1WithSlippage = applySlippageTolerance(\n          tokens.tokenSymbolMap,\n          quote,\n          amount1ApplyOrderFee,\n          slippageTolerance,\n      )\n\n      const amount1InBigNumber = new BigNumber(amount1WithSlippage.outInWei).toFixed()\n\n      try {\n\n          console.log('amount0InBigNumber:', amount0InBigNumber, ' amount1InBigNumber:', amount1InBigNumber)\n\n          const request: SubmitOrderRequestV3 = {\n              exchange: exchangeInfo?.exchangeAddress,\n              accountId,\n              storageId: orderId,\n              sellToken: {\n                  tokenId: baseToken.tokenId,\n                  volume: amount0InBigNumber.toString()\n              },\n              buyToken: {\n                  tokenId: quoteToken.tokenId,\n                  volume: amount1InBigNumber.toString()\n              },\n              allOrNone,\n              validUntil,\n              maxFeeBips: 60,\n              fillAmountBOrS: false,\n              orderType: OrderType.ClassAmm,\n              eddsaSignature: '',\n          }\n\n          const response = await userApi.submitOrder(request, eddsaKey, apiKey)\n\n          console.log('response:', response)\n\n          UserStorage.setAmmOrder(response.raw_data.hash)\n          setAmmOrder(response.raw_data.hash)\n\n      } catch (reason) {\n          dumpError400(reason, 'submitOrderV3')\n      }\n\n  }\n\n  swap()\n\n}, [accountId, ammPoolsBalances, ammpools, amount1ApplyOrderFee, apiKey,\n  base, baseAmt, eddsaKey, exchangeInfo?.exchangeAddress,\n  quote, quoteAmt, slippageTolerance, tokens, userApi])\n\nuseCustomDCEffect(() => {\n\n  const tradeCalcData: TradeCalcData<any> = {\n      coinSell: base, //name\n      coinBuy: quote,\n      StoB: parseFloat(currentPrice?.toFixed(4)),\n      BtoS: 0,\n      sellCoinInfoMap: left,\n      buyCoinInfoMap: right,\n      walletMap: walletMap,\n      slippage: slippageTolerance * 100,   //TODO which number is selected, from localstorage;\n      slippageTolerance: [0.1, 0.5, 1, 'slippage:N'],    //TODO getLocalstorage Customer slippage\n      priceImpact: `${(Math.abs(priceImpact) * 100).toFixed(2)}%`,\n      minimumReceived: minimumReceived.toFixed(7),\n      fee: `${(Math.abs(fee + takerRate) / 100).toFixed(2)}%`,\n  }\n\n  const swapProps: SwapProps<IBData<any>, string, any> = {\n      swapTradeData: {\n          sell: {\n              belong: base,\n              balance: availToShow,\n              tradeValue: baseAmt as any,\n          }, buy: {\n              belong: quote,\n              balance: quoteToShow,\n              tradeValue: quoteAmt,\n          },\n          slippage: slippageTolerance,\n          __cache__: {}\n      },\n      tradeCalcData,\n\n      onSwapClick: (tradeData: SwapTradeData<any>) => {\n          onSwap()\n      },\n\n      handleSwapPanelEvent: async (swapData, switchType) => {\n          return new Promise((res) => {\n\n              console.log('swapData:', swapData)\n\n              const { type, tradeData, to, } = swapData\n              let right = undefined\n              switch (switchType) {\n                  case SwapType.SEll_CLICK:\n                      break\n                  case SwapType.BUY_CLICK:\n                      break\n                  case SwapType.SELL_SELECTED:\n                      const quoteAmtVal = onBaseAmtInputChange(tradeData?.sell);\n                      if (quoteAmtVal !== undefined) {\n                          tradeData.buy = { ...tradeData.buy, tradeValue: quoteAmtVal }\n                      }\n                      setBase(tradeData.sell.belong)\n                      right = getRight(ammpools?.pairs, tradeData.sell.belong, tokens?.tokenSymbolMap)\n\n                      console.log('right:', right)\n\n                      if (right) {\n                          setRight(right.coinMapRight)\n                          setQuote(right.right[0])\n                      } else {\n                          setQuote(undefined)\n                      }\n                      break\n                  case SwapType.BUY_SELECTED:\n                      console.log()\n                      onQuoteAmtInputChange(tradeData?.buy)\n                      setQuote(tradeData.buy.belong)\n                      break\n                  case SwapType.EXCHANGE_CLICK:\n                      setBaseAmt(0)\n                      setQuoteAmt(0)\n\n                      tradeData.buy = { ...tradeData.buy, balance: availToShow, tradeValue: 0 }\n                      tradeData.sell = { ...tradeData.sell, balance: quoteToShow, tradeValue: 0 }\n\n                      // console.log('balances:', balances.symbol)\n                      console.log('sell:', tradeData.sell)\n                      console.log('buy:', tradeData.buy)\n\n                      console.log('availToShow:', availToShow)\n                      console.log('quoteToShow:', quoteToShow)\n\n                      setBase(tradeData.sell?.belong)\n                      right = getRight(ammpools?.pairs, tradeData.sell.belong, tokens?.tokenSymbolMap)\n                      if (right) {\n                          console.log('right:', right.right[0])\n                          setRight(right.coinMapRight)\n                          setQuote(right.right[0])\n                      } else {\n                          setQuote(tradeData.buy?.belong)\n                      }\n                      break\n                  default:\n                      break\n              }\n\n              res()\n          })\n      },\n  }\n\n  setSwapProps(swapProps)\n\n}, [slippageTolerance,\n  priceImpact,\n  fee,\n  takerRate,\n  left,\n  right,\n  walletMap,\n  minimumReceived, availToShow, quoteToShow, baseAmt, quoteAmt, currentPrice,\n  onBaseAmtInputChange,\n  onQuoteAmtInputChange,\n  onSwap])\n\n  // return-----\n  return {\n    base,\n    quote,\n    tokens,\n    markets,\n    market,\n    poolAddress,\n    swapProps,\n  }\n\n}\n","import { useCallback, useState } from 'react'\n\nimport { useExchangeAPI } from 'hooks/exchange/useApi'\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport { TradingInterval, Candlestick, GetCandlestickRequest, GetDepthRequest, GetTickerRequest, dumpError400 } from 'loopring-sdk'\nimport { fromWEI } from 'utils/swap_calc_utils'\n\nimport { ChartUnit } from '@loopring-web/component-lib/static-resource'\n\nimport { ChartType } from '@loopring-web/component-lib'\n\nimport { TGItemData, TGItemJSXInterface, } from '@loopring-web/component-lib'\n\nimport { IGetDepthDataParams } from '@loopring-web/component-lib/components/charts/scaleAreaChart/data'\n\nconst toggleData: TGItemData[] = [\n  {\n    value: ChartType.Trend,\n    key: ChartType.Trend,\n    label: 'label' + ChartType.Trend\n  },\n  {\n    value: ChartType.Depth,\n    key: ChartType.Depth,\n    label: 'label' + ChartType.Depth\n  },\n]\n\nexport function useBasicInfo(props: any, t: any) {\n  const tgItemJSXs: TGItemJSXInterface[] = toggleData.map(({ value, label, key }) => {\n    return { value, tlabel: t(label), key, JSX: <>{t(label)}</> }\n  })\n\n  // console.log('useBasicInfo: ', props)\n\n  const { base, quote, market, tokens } = props\n\n  const [chartType, setChartType] = useState<ChartType>(ChartType.Trend)\n\n  const [change, setChange] = useState(0)\n\n  const [volume, setVolume] = useState('')\n\n  const [chartUnit, setChartUnit] = useState(ChartUnit.D1)\n\n  const [originData, setOriginData] = useState<any>(undefined)\n\n  const handleChange = useCallback((_e: React.MouseEvent, value: any) => {\n    // Settings.setChartType(value)\n    console.log('handleChange:', value)\n    setOriginData(undefined)\n    setChartType(value)\n  }, [setOriginData, setChartType])\n\n  const exchangeApi = useExchangeAPI()\n\n  useCustomDCEffect(async () => {\n\n    if (!exchangeApi || !market || !tokens || !quote) {\n      return\n    }\n\n    let mounted = true\n\n    try {\n\n      const request: GetTickerRequest = {\n        market: market.market,\n      }\n\n      const ticker = await exchangeApi.getTicker(request)\n      if (mounted) {\n\n        if (ticker.tickList[0].change) {\n          setChange(ticker.tickList[0].change)\n        }\n\n        if (ticker.tickList[0].base_token_volume) {\n          const baseVol = fromWEI(tokens.tokenSymbolMap, base, ticker.tickList[0].base_token_volume) as string\n          setVolume(baseVol)\n        }\n      }\n    }\n    catch (reason) {\n      dumpError400(reason, 'ChartPanel getCandlestick')\n    }\n\n    return () => {\n      mounted = false\n    }\n\n  }, [exchangeApi, market, tokens, base,])\n\n  const tgItemJSXsPriceChart: TGItemJSXInterface[] = Object.keys(ChartUnit).reduce((pre, item) => {\n    // @ts-ignore\n    const tGItemData: TGItemData = { value: ChartUnit[item], key: ChartUnit[item], label: 'label' + ChartUnit[item] };\n    pre.push({ value: tGItemData.value, tlabel: t(tGItemData.label ? tGItemData.label : tGItemData.key), key: tGItemData.key, JSX: <>{t(tGItemData.label ? tGItemData.label : tGItemData.key)}</> })\n    return pre\n  }, [] as TGItemJSXInterface[])\n\n  useCustomDCEffect(async () => {\n\n    let mounted = true\n\n    if (!exchangeApi || !market) {\n      return\n    }\n\n    if (chartType === ChartType.Trend) {\n      const request: GetCandlestickRequest = {\n        market: market.market,\n        interval: TradingInterval.min15,\n        limit: 96\n      }\n\n      try {\n        const candlesticks = await exchangeApi.getCandlestick(request)\n\n        if (mounted) {\n          const originData = candlesticks.candlesticks.map((item: Candlestick) => {\n            return {\n              timeStamp: item.timeStamp,\n              low: item.low,\n              high: item.high,\n              open: item.open,\n              close: item.close,\n              volume: item.quoteVol,\n            }\n          })\n          // console.log('candlesticks originData: ', originData)\n          setOriginData(originData)\n        }\n      }\n      catch (reason) {\n        dumpError400(reason, 'ChartPanel getCandlestick')\n      }\n\n    } else {\n      const request: GetDepthRequest = {\n        market: [market.market],\n      }\n\n      try {\n\n        const depth = await exchangeApi.getDepth(request)\n        console.log('depth:', depth)\n        if (mounted) {\n          const originData: IGetDepthDataParams = {\n            bidsPrices: depth.depth.bids_prices,\n            bidsAmtTotals: depth.depth.bids_amtTotals,\n            asksPrices: depth.depth.asks_prices,\n            asksAmtTotals: depth.depth.asks_amtTotals,\n          }\n          setOriginData(originData)\n        }\n\n      } catch (reason) {\n        dumpError400(reason)\n      }\n\n    }\n\n    return () => {\n      mounted = false\n    }\n\n  }, [exchangeApi, market, chartType])\n\n  return {\n    change,\n    volume,\n    chartUnit,\n    chartType,\n    tgItemJSXs,\n    tgItemJSXsPriceChart,\n    handleChange,\n    originData,\n  }\n}","import { ChartUnit } from '@loopring-web/component-lib/static-resource'\n\nimport { ScaleAreaChart } from '@loopring-web/component-lib'\nimport { Box, Grid } from \"@material-ui/core\"\n\nimport { ToggleButtonGroup, useSettings } from '@loopring-web/component-lib'\nimport { WithTranslation } from 'react-i18next'\nimport { TradeTitle } from '@loopring-web/component-lib/components/block'\nimport { getThousandFormattedNumbers, UpColor } from '@loopring-web/component-lib/src/static-resource';\nimport { useBasicInfo } from './hook'\n\nconst BasicInfoPanel = ({ props, swapProps, t, ...rest }: any & WithTranslation) => {\n\n  const {\n    change,\n    chartType,\n    tgItemJSXs,\n    tgItemJSXsPriceChart,\n    handleChange,\n    originData,\n  } = useBasicInfo(props, t)\n  const {upColor} = useSettings();\n  return <>{swapProps.swapTradeData ?\n          <>\n                <Grid item xs={8}>\n                  <TradeTitle {...{\n                    ...rest, t, tradeCalcData:swapProps.tradeCalcData, tradeFloat: {\n                      priceDollar: getThousandFormattedNumbers(change,8),\n                      percent: '+15%',\n                      timeUnit: \"24h\",\n                      volume:'',\n                    }\n                  }}></TradeTitle>\n                </Grid>\n                <Grid item xs={4} display={'flex'} justifyContent={'flex-end'} alignItems={'flex-end'}>\n                  <ToggleButtonGroup exclusive {...{ ...rest, t, tgItemJSXs, value: chartType }}\n                                                 handleChange={handleChange} />\n                </Grid>\n            </> : undefined}\n\n\n            <Grid item xs={12} >\n              <Box minHeight={256} maxHeight={256} display={'block'} style={{ height: '100%', width: '100%' }} >\n                <ScaleAreaChart type={chartType} data={originData ?? []} riseColor={upColor as keyof typeof UpColor}  handleMove={() => { }} />\n              </Box>\n            </Grid>\n            <Grid item xs={12} height={24} display={'flex'} justifyContent={'flex-end'}>\n              <ToggleButtonGroup exclusive {...{ ...rest, t, tgItemJSXs: tgItemJSXsPriceChart,\n                value: ChartUnit.D1, size: 'small' }}\n                                 handleChange={() => undefined} />\n            </Grid>\n       </>\n\n};\n\nexport default BasicInfoPanel\n","import { useState } from 'react'\n\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport styled from '@emotion/styled'\n\nimport {\n  TradeTable,\n  FormControlLabel,\n} from '@loopring-web/component-lib'\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport { CheckedIcon, CheckBoxIcon } from '@loopring-web/component-lib/static-resource'\nimport { withRouter, RouteComponentProps } from 'react-router'\nimport { Box, Paper } from '@material-ui/core';\n\nconst StylePaper = styled(Box)`\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    background-color: ${({ theme }) => theme.colorBase.background().default};\n    border-radius: ${({ theme }) => theme.unit}px;\n    padding: 20px;\n    .tableWrapper {\n        margin-top: ${({ theme }) => theme.unit * 1.5}px;\n        border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n        border-radius: ${({ theme }) => theme.unit}px;\n        padding: 26px;\n    }\n` as typeof Box;\n\n\nconst applyProps = (index: number) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\n\nconst TradePanel = withTranslation('common')(withRouter(({ trades, isAllTrade, setIsAllTrade, t, location }:\n  { trades: any, isAllTrade: boolean, setIsAllTrade: any } & WithTranslation & RouteComponentProps) => {\n\n  const [value, setValue] = useState(0)\n  const handleChange = (event: any, newValue: any) => {\n    setValue(newValue)\n  }\n\n  const StyledTabsWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: ${({ theme }) => theme.unit * 4}px;\n  `\n\n  const StyledFormControlLabel = styled(FormControlLabel)`\n    position: absolute;\n    top: 0;\n    right: ${({ theme }) => theme.unit}px;\n    margin: ${({ theme }) => theme.unit}px 0 0 0;\n  `\n\n  const handleCheckboxChange = () => {\n    setIsAllTrade((flag: boolean) => !flag)\n  }\n\n  return (\n    <StyledTabsWrapper>\n      <StyledFormControlLabel\n        control={<Checkbox checked={isAllTrade} size={'small'} checkedIcon={<CheckedIcon />}\n          icon={<CheckBoxIcon />} color={'default'} onChange={handleCheckboxChange} />}\n        label={t('labelTradePanelHideOtherPairs')} />\n\n      <Tabs value={value}\n        onChange={handleChange}\n        aria-label=\"tabs switch\">\n        <Tab label={t('labelMyTrade')} {...applyProps(0)} />\n        <Tab label={t('labelRecent')}   {...applyProps(1)} />\n      </Tabs>\n\n     <StylePaper marginTop={2}>\n       <TradeTable rawData={trades} />\n     </StylePaper>\n\n    </StyledTabsWrapper>\n  )\n}))\n\nexport default TradePanel\n","import { useState } from 'react'\n\nimport TradePanelUi from './TradePanel'\nimport { useGetMyTrades, useGetRecentTrades, } from './hooks'\n\nconst TradePanel = (props: any) => {\n\n  const { market, poolAddress, base, quote } = props\n\n  console.log('TradePanel market:', market)\n\n  const { myTrades } = useGetMyTrades(market)\n\n  const { recentTrades } = useGetRecentTrades(poolAddress)\n\n  const [isAllTrade, setIsAllTrade] = useState(false)\n\n  return (\n    <TradePanelUi trades={isAllTrade? recentTrades: myTrades} isAllTrade={isAllTrade} \n    setIsAllTrade={setIsAllTrade} />\n  )\n\n}\n\nexport default TradePanel\n","import { useState } from 'react'\n\nimport { useAmmpoolAPI, useUserAPI } from 'hooks/exchange/useApi'\nimport { useAccount } from 'stores/account/hook'\n\nimport { AmmTrade, FilledType, dumpError400 } from 'loopring-sdk'\n\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\n\nimport { AccountStatus } from 'state_machine/account_machine_spec'\n\nimport { RawDataTradeItem } from '@loopring-web/component-lib'\n\nexport function useGetMyTrades(market: any) {\n\n  const { apiKey, accountId, account, } = useAccount()\n\n  const userApi = useUserAPI()\n\n  const [myTrades, setMyTrades] = useState<any>([])\n\n  useCustomDCEffect(async () => {\n    if (!userApi || !accountId || !apiKey || !market) {\n      return\n    }\n\n    let tradesNew: any = []\n\n    if (account.status === AccountStatus.ACTIVATED) {\n\n      try {\n\n        const trades = await userApi.getUserTrades({\n          accountId,\n          market: market.amm,\n          fillTypes: FilledType.amm,\n        }, apiKey)\n\n        trades.trades.forEach((item: any) => {\n          const itemTmp: RawDataTradeItem = {\n\n            side: item[2],\n            amount: {\n              from: {\n                key: market?.baseShow,\n                value: item[2]\n              },\n              to: {\n                key: market?.quoteShow,\n                value: item[3]\n              }\n            },\n            price: {\n              key: market?.baseShow,\n              value: item[4]\n            },\n            fee: {\n              key: market?.baseShow,\n              value: item[6]\n            },\n            time: item[0]\n          }\n          tradesNew.push(itemTmp)\n          // tradesNew.push([item[2], item[3], item[4], item[6], item[0]])\n        })\n\n        console.log('market:', market, ' trades:', trades.trades, ' tradesNew:', tradesNew)\n\n      } catch (reason) {\n        dumpError400(reason)\n      }\n\n    }\n\n    setMyTrades(tradesNew)\n\n  }, [userApi, accountId, apiKey, market, account.status])\n\n  return {\n    myTrades,\n  }\n}\n\nexport function useGetRecentTrades(ammPoolAddress: string) {\n\n  const ammPoolApi = useAmmpoolAPI()\n\n  const [recentTrades, setRecentTrades] = useState<any>([])\n\n  useCustomDCEffect(() => {\n    if (!ammPoolApi || !ammPoolAddress) {\n      return\n    }\n\n    ammPoolApi.getAmmPoolTrades({\n      ammPoolAddress\n    }).then((trades) => {\n      let tradesNew: any = []\n      trades.raw_data.trades.forEach((item: AmmTrade) => {\n        // tradesNew.push([item.side, item.price, item.feeAmount, item.createdAt])\n      })\n\n      console.log('useGetRecentTrades trades:', trades.raw_data.trades, ' tradesNew:', tradesNew)\n      setRecentTrades(tradesNew)\n    }).catch((reason) => {\n      dumpError400(reason)\n    })\n\n  }, [ammPoolApi, ammPoolAddress])\n\n  return {\n    recentTrades,\n  }\n}\n","import { Box, Grid, } from '@material-ui/core'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport SwapPanel from './panel/SwapPanel'\nimport { useSwapNew, } from './hook'\nimport BasicInfoPanel from './panel/BasicInfoPanel'\nimport TradePanel from './panel/TradePanel'\nimport styled from 'styled-components'\n\nconst FixedStyle = styled(Box)`\n  @media only screen and (min-height: 680px ) and (min-width:1024px){\n    position: fixed;\n  }\n`\n\nconst SwapPage = withTranslation('common')(({ ...rest }: WithTranslation) => {\n\n    const { base, quote, tokens, market, poolAddress, swapProps } = useSwapNew()\n\n    const props = { base, quote, tokens, market }\n\n    return <>\n        <Grid container marginRight={3} alignContent={'flex-start'} >\n            <BasicInfoPanel {...{ ...rest, swapProps, props }} />\n            <TradePanel market={market} poolAddress={poolAddress} />\n        </Grid>\n\n        <Box display={'flex'} style={{ minWidth: 'var(--swap-box-width)' }} >\n            <FixedStyle>\n                <SwapPanel {...{\n                    ...rest, swapProps\n                }} />\n            </FixedStyle>\n\n        </Box>\n\n    </>\n});\n\n\nexport default SwapPage\n","import { useMemo, } from \"react\"\n\nimport { useActiveWeb3React } from \"../web3/useWeb3\"\n\nimport { WsAPI, ExchangeAPI, AmmpoolAPI, UserAPI, DEFAULT_TIMEOUT, } from 'loopring-sdk'\n\nfunction useApi(ApiClass: any, timeout = DEFAULT_TIMEOUT) {\n\n  const { chainId, active, } = useActiveWeb3React()\n\n    const genApi = () => {\n        if (!active || !chainId) {\n            return undefined\n        }\n\n        return new ApiClass(chainId, timeout)\n    }\n\n    const api = useMemo(genApi, [ApiClass, chainId, active])\n\n    return api\n}\n\nexport function useWsAPI() {\n    return useApi(WsAPI) as WsAPI\n}\n\nexport function useExchangeAPI() {\n    return useApi(ExchangeAPI) as ExchangeAPI\n}\n\nexport function useAmmpoolAPI() {\n    return useApi(AmmpoolAPI) as AmmpoolAPI\n}\n\nexport function useUserAPI() {\n    return useApi(UserAPI) as UserAPI\n}\n","import { useCallback, useMemo, useState, useRef, useEffect } from 'react'\n\nimport { useActiveWeb3React } from '../web3/useWeb3'\nimport { useWsAPI, } from './useApi2'\n\nimport { ChainId, getAccountArg, getCandlestickArg, \n    getAmmpoolArg, getTickerArg, WsProps } from 'loopring-sdk'\n\nconst stateArr = [\n    { key: 0, value: 'Connecting' },\n    { key: 1, value: 'Connected' },\n    { key: 2, value: 'Closing' },\n    { key: 3, value: 'Closed' }\n]\n\nexport const useWebsocket = ({ topics, verify, needApiKey, apiKey, }: { topics: any, needApiKey: boolean, apiKey: string|undefined, verify: boolean, }) => {\n    const ws = useRef<WebSocket | null>(null)\n    const [wsData, setMessage] = useState<any>(undefined)\n    const [readyState, setReadyState] = useState({ key: 0, value: 'Connecting' })\n\n    const { chainId, } = useActiveWeb3React()\n\n    const api = useWsAPI()\n\n    const creatWebSocket = () => {\n\n        if (!api || !chainId) {\n            return\n        }\n\n        api.getWsKey().then((wsApiKey: any) => {\n            let basePath: string = 'wss://ws.'\n            switch (chainId) {\n                case ChainId.MAINNET:\n                    basePath += process.env.REACT_APP_API_URL\n                    break\n                default:\n                    basePath += process.env.REACT_APP_API_URL_UAT\n                    basePath = 'wss://ws.uat2.loopring.io'\n            }\n\n            basePath += '/v3/ws?wsApiKey=' + wsApiKey\n    \n            try {\n                ws.current = new WebSocket(basePath)\n\n                const subTopics = (topics: any) => {\n                    let data: any = {\n                        op: 'sub',\n                        unsubscribeAll: 'true',\n                        topics: topics,\n                    }\n            \n                    if (needApiKey && apiKey) {\n                        data.apiKey = apiKey\n                    }\n            \n                    const flat_txt = JSON.stringify(data)\n                    sendMessage(flat_txt)\n                }\n    \n                ws.current.onopen = (_e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                    subTopics(topics)\n                }\n                \n                ws.current.onclose = (e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                }\n                \n                ws.current.onerror = (e) => {\n                    setReadyState(stateArr[ws.current?.readyState ?? 0])\n                }\n    \n                ws.current.onmessage = (e) => {\n                    setMessage(e.data)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n\n        })\n\n        \n    }\n\n    const webSocketInit = () => {\n        if (!ws.current || ws.current.readyState === 3) {\n            creatWebSocket()\n        }\n    }\n\n    const closeWebSocket = () => {\n        ws.current?.close()\n    }\n\n    const sendMessage = (msg: any) => {\n        ws.current?.send(msg)\n    }\n\n    const reconnect = () => {\n        try {\n            closeWebSocket()\n            ws.current = null\n            creatWebSocket()\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n\n        verify && webSocketInit()\n        return () => {\n            ws.current?.close()\n        }\n    }, [ws, verify])\n\n    return {\n        wsData,\n        readyState,\n        sendMessage,\n        closeWebSocket,\n        reconnect,\n    }\n}\n\nexport function useWs(topics: any, needApiKey: boolean, apiKey?: string, verify: boolean = true) {\n    const [socketData, setSocketData] = useState({})\n\n    const [isLocalPage, setIsLocalPage] = useState<boolean>(true)\n\n    useEffect(() => {\n\n        let mounted = true\n\n        const checkIsLocalPage = () => {\n            console.log('enter checkIsLocalPage')\n            document.addEventListener('visibilitychange', function () {\n                // page invisible trigger!\n                let isLocalPage = true\n                if (document.visibilityState === 'hidden') {\n                    isLocalPage = false\n                }\n                if (mounted) {\n                    setIsLocalPage(isLocalPage)\n                } else {\n                    console.log('unmounted! dont setIsLocalPage!')\n                }\n            })\n        }\n\n        checkIsLocalPage()\n\n        return () => {\n            mounted = false\n        }\n\n    }, [])\n\n    const { wsData, readyState, closeWebSocket, reconnect, sendMessage, } = useWebsocket({\n        topics,\n        apiKey,\n        needApiKey,\n        verify,\n    })\n\n    useEffect(() => {\n    \n        if (needApiKey && !apiKey) {\n            return\n        }\n\n        if (!verify) {\n            return\n        }\n\n        if (wsData === 'ping') {\n            try {\n                sendMessage('pong')\n            } catch (err) {\n                console.log(err)\n            }\n        } else {\n            if (wsData) {\n                setSocketData(JSON.parse(wsData))\n            }\n        }\n        \n        // if closed and is currente page then, reconnect.\n        if (readyState.key === 3 && isLocalPage) {\n            reconnect()\n        }\n        // if not current page, close it.\n        if (!isLocalPage) {\n            closeWebSocket()\n        }\n\n    }, [wsData, readyState, isLocalPage, verify, apiKey])\n\n    return {\n        socketData,\n    }\n}\n\nexport function useAmmpoolWs(apiKey: string) {\n\n    let topics: any[] = []\n\n    topics.push(getTickerArg('LRC-ETH'))\n\n    topics.push(getAmmpoolArg('0x18920d6E6Fb7EbE057a4DD9260D6D95845c95036'))\n\n    const needApiKey = false\n\n    const { socketData } = useWs(topics, needApiKey, apiKey)\n\n    return {\n        socketData,\n    }\n\n}\n","import { useRef } from 'react'\n\n// import Qrcode from 'components/qrcodes/Qrcode'\n\n\nimport { useAccount } from 'stores/account/hook'\n\nimport { useGetExchangeInfo, useGetGas, useGetMarkets, useGetTokens } from 'hooks/exchange/useExchangeAPI'\n\nimport { useAmmpoolWs } from 'hooks/common/useWebsocketApi'\n\nconst DebugPage = () => {\n\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const { account, isNoAccount, apiKey } = useAccount()\n\n  const {socketData} = useAmmpoolWs(apiKey)\n\n  const { markets } = useGetMarkets()\n\n  const { exchangeInfo } = useGetExchangeInfo()\n\n  const { tokens } = useGetTokens()\n\n  const { gas } = useGetGas()\n\n  const gasPrice = gas?.data\n\n  console.log('account:', account)\n  console.log('exchangeInfo:', exchangeInfo)\n  console.log('tokens:', tokens)\n\n  const showAddr = account.accAddr ? account.accAddr : ''\n\n  return (\n    <div>\n      Debug\n      <div>account:{JSON.stringify(account)}</div>\n      <div>eddsaKey:{account.eddsaKey}</div>\n      <div>wsdata: {JSON.stringify(socketData)}</div>\n      <div>----------------------------</div>\n      <div>markets:{JSON.stringify(markets)}</div>\n      <div>----------------------------</div>\n      <div>depositAddress:{exchangeInfo?.depositAddress}</div>\n      <div>exchangeAddress:{exchangeInfo?.exchangeAddress}</div>\n      <div>----------------------------</div>\n      {/*<div>exchangeInfo:{JSON.stringify(exchangeInfo)}</div>\n      <div>----------------------------</div>*/}\n      <div>tokens:{JSON.stringify(tokens)}</div>\n      <div>----------------------------</div>\n\n      {/*{isNoAccount() && <Qrcode value={showAddr} size={300} />}*/}\n      {/*<input type='input' ref={inputRef} width=\"150px\" />*/}\n      {/*<DepositBtn onClick={deposit} />*/}\n    </div>\n  )\n\n}\n\nexport default DebugPage\n","import React from 'react'\nimport { TransactionTable } from '@loopring-web/component-lib'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { Box, Paper } from '@material-ui/core'\nimport styled from '@emotion/styled'\nimport { useGetTxs } from './hooks'\n\nconst StylePaper = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  flex: 1;\n  background-color: ${({ theme }) => theme.colorBase.background().default};\n  border-radius: ${({ theme }) => theme.unit}px;\n  padding: 20px;\n\n  .title {\n    font-family: Gilroy-Medium;\n    font-size: ${({ theme }) => theme.unit * 3}px;\n    line-height: 19px;\n  }\n\n  .tableWrapper {\n    display: flex;\n    margin-top: 20px;\n    border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n    border-radius: ${({ theme }) => theme.unit}px;\n    padding: 26px;\n    flex: 1;\n    \n    .rdg {\n      flex: 1;\n    }\n  }\n` as typeof Paper;\n\nconst TxPanel = withTranslation('common')((rest:WithTranslation<'common'>) => {\n    const container = React.useRef(null);\n    const [pageSize, setPageSize] = React.useState(10);\n    React.useEffect(() => {\n        // @ts-ignore\n        let height = container?.current?.offsetHeight;\n        if (height) {\n            setPageSize(Math.floor((height - 120) / 44) - 2);\n        }\n    }, [container, pageSize]);\n    const { txs } = useGetTxs()\n\n    const txList = txs !== undefined ? txs: []\n    \n    return (\n        <StylePaper ref={container}>\n            <div className=\"title\">Transactions</div>\n            <div className=\"tableWrapper\">\n                <TransactionTable {...{\n                  rawData: txList,\n                  pagination: {\n                    pageSize: pageSize\n                  },\n                  ...rest\n                }} />\n            </div>\n        </StylePaper>\n    )\n})\n\nexport default TxPanel\n","import { useState } from 'react'\n\nimport { useAmmpoolAPI, useUserAPI } from \"hooks/exchange/useApi\"\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\nimport { useAccount } from 'stores/account/hook'\nimport { TransactionStatus, RawDataTransactionItem } from '@loopring-web/component-lib'\n\nimport { TxStatus } from 'loopring-sdk'\nimport { TransactionTradeTypes } from '@loopring-web/component-lib/components/tableList/transactionsTable/Interface';\n\nexport function useGetTxs() {\n\n    const { accountId, apiKey } = useAccount()\n\n    const userApi = useUserAPI()\n\n    const [txs, setTxs] = useState<RawDataTransactionItem[]>()\n\n    useCustomDCEffect(async() => {\n\n        if (!userApi || !accountId || !apiKey) {\n            return\n        }\n\n        const txs = await userApi.getUserTranferList({ accountId }, apiKey)\n\n        let tmpTx: RawDataTransactionItem[] = []\n\n        txs.transactions.forEach((item: any, index: number) => {\n            tmpTx.push({from: {\n                    address: item.senderAddress,\n                    env: ''\n                },\n                to: {\n                    address: item.receiverAddress,\n                    env: ''\n                },\n                amount: item.amount,\n                fee: {\n                    unit: item.feeTokenSymbol,\n                    value: item.feeAmount\n                },\n                memo: item.symbol,\n                time: item.timestamp,\n                txnHash: item.hash,\n                status: item.status,\n                token:item.token,\n                tradeType:TransactionTradeTypes.allTypes,\n            })\n        })\n\n        setTxs(tmpTx)\n\n    }, [accountId, apiKey, userApi])\n\n    return {\n        txs,\n    }\n}\n","import { useState, useEffect, useRef } from 'react'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { PriceTag } from '@loopring-web/component-lib/static-resource'\nimport { Box, Paper, Typography } from '@material-ui/core'\nimport styled from '@emotion/styled'\nimport { AssetTitleProps, AssetTitle, AssetsTable, DoughnutChart, ScaleAreaChart, ChartType, ToggleButtonGroup } from '@loopring-web/component-lib'\nimport { useModals } from 'hooks/modal/useModals'\nimport { useGetUserBalances } from 'hooks/exchange/useUserAPI'\nimport { useGetTokens } from 'hooks/exchange/useExchangeAPI'\n\nconst StylePaper = styled(Box)`\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    background-color: ${({ theme }) => theme.colorBase.background().default};\n    border-radius: ${({ theme }) => theme.unit}px;\n    padding: 20px;\n\n    .title {\n        font-family: Gilroy-Medium;\n        font-size: ${({ theme }) => theme.unit * 3}px;\n        line-height: 19px;\n    }\n\n    .tableWrapper {\n        margin-top: ${({ theme }) => theme.unit * 1.5}px;\n        border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n        border-radius: ${({ theme }) => theme.unit}px;\n        padding: 26px;\n    }\n` as typeof Box;\n\nconst StyledChartWrapper = styled(Box)`\n    height: 225px;\n    > div {\n        position: relative;\n        width: calc(50% - 6px);\n        height: 100%;\n        background-color: ${({ theme }) => theme.colorBase.background().default};\n        border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n        border-radius: ${({ theme }) => theme.unit}px;\n        padding: ${({ theme }) => theme.unit * 2.5}px ${({ theme }) => theme.unit * 3}px;\n    }\n`\n\nconst StyledBtnGroupWrapper = styled(Box)`\n    position: absolute;\n    z-index: 10000;\n    right: ${({ theme }) => theme.unit * 3}px;\n    bottom: ${({ theme }) => theme.unit * 2.5}px;\n`\n\nconst toggleData = [\n    {value: '24 H', key: '24 H'},\n    {value: '1 W', key: '1 W'},\n    {value: 'ALL', key: 'ALL'},\n]\n\nconst DoughnutData = [\n    {\n        name: 'LP Token',\n        value: 12898.0\n    },\n    {\n        name: 'LRC',\n        value: 12898.50\n    },\n    {\n        name: 'ETH',\n        value: 36547.00\n    },\n    {\n        name: 'DOT',\n        value: 23898.09\n    },\n    {\n        name: 'BTC',\n        value: 3489\n    },\n    {\n        name: 'CRV',\n        value: 180.09\n    },\n    {\n        name: 'ALICE',\n        value: 150.7\n    },\n    {\n        name: 'LINA',\n        value: 230.5\n    },\n]\n\nconst testTrendData:any = [\n    {\n        timeStamp: 150,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 160,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 170,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 180,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 190,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 200,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 210,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 220,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 230,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n    {\n        timeStamp: 240,\n        low: Math.random() + 1,\n        high: Math.random() + 6,\n        open: Math.random() + 3,\n        close: Math.random() + 4,\n        volume: (Math.random() + 4) * 1500,\n    },\n]\n\nconst AssetPanel = withTranslation('common')(({t,...rest}: WithTranslation) => {\n    const container = useRef(null);\n    const [pageSize, setPageSize] = useState(10);\n    \n    const [chartPeriod, setChartPeriod] = useState('24 H')\n\n    useEffect(() => {\n        // @ts-ignore\n        let height = container?.current?.offsetHeight;\n        if (height) {\n            setPageSize(Math.floor((height - 120) / 44) - 1);\n        }\n    }, [container, pageSize]);\n\n    const {\n        ShowDeposit,\n        ShowTransfer,\n        ShowWithdraw,\n        ShowResetAccount,\n    } = useModals()\n\n    const onShowDeposit = () => {\n        ShowDeposit(true)\n    }\n\n    const onShowTransfer = () => {\n        ShowTransfer(true)\n    }\n\n    const onShowWithdraw = () => {\n        ShowWithdraw(true)\n    }\n\n    const AssetTitleProps: AssetTitleProps = {\n        assetInfo: {\n            totalAsset: 123456.789,\n            priceTag: PriceTag.Dollar,\n        },\n        onShowDeposit,\n        onShowTransfer,\n        onShowWithdraw,\n    }\n\n    const { tokens: tokensAll } = useGetTokens()\n\n    const tokens = tokensAll?.tokenSymbolMap\n\n    const { balances } = useGetUserBalances(tokens)\n\n    return (\n        <>\n            <Box>\n                <AssetTitle  {...{\n                    t,\n                    ...rest,\n                    ...AssetTitleProps\n                }} />\n            </Box>\n\n            {/*<div className=\"title\">{t('labelAssetsTitle')}</div>*/}\n\n            <StyledChartWrapper display={'flex'} justifyContent={'space-between'} alignItems={'center'} marginTop={2}>\n                <Paper component={'div'}>\n                    <Typography component=\"span\" color=\"textSecondary\" variant=\"body1\">Asset Distribution</Typography>\n                    <DoughnutChart data={DoughnutData} />\n                </Paper>\n                <Paper component={'div'}>\n                    <Typography component=\"span\" color=\"textSecondary\" variant=\"body1\">Total Assets</Typography>\n                    <ScaleAreaChart type={ChartType.Trend} data={testTrendData} />\n                    <StyledBtnGroupWrapper>\n                        <ToggleButtonGroup exclusive size=\"small\" {...{...rest, t, data: toggleData, value: chartPeriod, setValue: setChartPeriod}} />\n                    </StyledBtnGroupWrapper>\n                </Paper>\n            </StyledChartWrapper>\n            <StylePaper marginTop={2}>\n                <div className=\"tableWrapper\" ref={container}>\n                    <AssetsTable {...{\n                        rawData: [],\n                        pagination: {\n                            pageSize: pageSize\n                        }\n                    }} />\n                </div>\n            </StylePaper>\n        </>\n    )\n})\n\nexport default AssetPanel\n","import React from 'react'\nimport { TradeTable } from '@loopring-web/component-lib'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport styled from '@emotion/styled'\nimport { Box, Paper } from '@material-ui/core'\nimport { useGetTxs } from './hooks'\n\nconst StylePaper = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  flex: 1;\n  background-color: ${({ theme }) => theme.colorBase.background().default};\n  border-radius: ${({ theme }) => theme.unit}px;\n  padding: 20px;\n\n  .title {\n    font-family: Gilroy-Medium;\n    font-size: ${({ theme }) => theme.unit * 3}px;\n    line-height: 19px;\n  }\n\n  .tableWrapper {\n    display: flex;\n    flex: 1;\n    margin-top: 20px;\n    border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n    border-radius: ${({ theme }) => theme.unit}px;\n    padding: 26px;\n\n    .rdg {\n      flex: 1;\n    }\n  }\n` as typeof Paper;\n\nconst TradePanel = withTranslation('common')((rest:WithTranslation<'common'>) => {\n    const container = React.useRef(null);\n    const [pageSize, setPageSize] = React.useState(10);\n    React.useEffect(() => {\n        // @ts-ignore\n        let height = container?.current?.offsetHeight;\n        if (height) {\n            setPageSize(Math.floor((height - 120) / 44) - 2);\n        }\n    }, [container, pageSize]);\n\n    const { txs } = useGetTxs()\n\n    const txList = txs !== undefined ? txs: []\n\n    return (\n        <>\n            <StylePaper ref={container}>\n                <div className=\"title\">Trades</div>\n                <div className=\"tableWrapper\">\n                    <TradeTable {...{\n                      // rawData: txList,\n                      rawData: [],\n                      pagination: {\n                        pageSize: pageSize\n                      },\n                      ...rest}}/>\n                </div>\n            </StylePaper>\n        </>\n    )\n})\n\nexport default TradePanel\n","import { useState } from 'react'\n\nimport { useAmmpoolAPI, useUserAPI } from \"hooks/exchange/useApi\"\nimport { useCustomDCEffect } from 'hooks/common/useCustomDCEffect'\nimport { useAccount } from 'stores/account/hook'\nimport { TransactionStatus, RawDataTransactionItem } from '@loopring-web/component-lib'\n\nimport { TxStatus } from 'loopring-sdk'\nimport { TransactionTradeTypes } from '@loopring-web/component-lib/components/tableList/transactionsTable/Interface';\n\n/*\n    {\n        from: {\n            address: '0x5e8cxxxxxe741',\n            env: 'Ethereum'\n        },\n        to: 'My Loopring',\n        amount: 25987.09324,\n        fee: {\n            unit: 'ETH',\n            value: 0.0993\n        },\n        memo: 'NoteNoteNoteNoteNoteNoteNote',\n        time: 3,\n        txnHash: '0x2b21xxxxxxx02',\n        status: TransactionStatus.success\n    },\n */\n\nexport function useGetTxs() {\n\n    const { accountId, apiKey } = useAccount()\n\n    const userApi = useUserAPI()\n\n    const [txs, setTxs] = useState<RawDataTransactionItem[]>()\n\n    useCustomDCEffect(async() => {\n\n        if (!userApi || !accountId || !apiKey) {\n            return\n        }\n\n        const txs = await userApi.getUserTranferList({ accountId }, apiKey)\n\n        let tmpTx: RawDataTransactionItem[] = []\n\n        txs.transactions.forEach((item: any, index: number) => {\n            tmpTx.push({from: {\n                    address: item.senderAddress,\n                    env: ''\n                },\n                to: {\n                    address: item.receiverAddress,\n                    env: ''\n                },\n                amount: item.amount,\n                fee: {\n                    unit: item.feeTokenSymbol,\n                    value: item.feeAmount\n                },\n                memo: item.symbol,\n                time: item.timestamp,\n                txnHash: item.hash,\n                status: item.status,\n                token:item.token,\n                tradeType:TransactionTradeTypes.allTypes,\n            })\n        })\n\n        setTxs(tmpTx)\n\n    }, [accountId, apiKey, userApi])\n\n    return {\n        txs,\n    }\n}\n","\nimport React from 'react'\nimport { OrderHistoryTable } from '@loopring-web/component-lib'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { Box, Paper } from '@material-ui/core'\nimport styled from '@emotion/styled'\n\n// const rawDataOrderHistory: any[] = [\n//     ['Sell', [{type: 'out', key: 'ETH', value: 25}, {type: 'in', key: 'LRC', value: 100}], 0.12, [{\n//         type: 'out',\n//         key: 'ETH',\n//         value: 25\n//     }, {type: 'in', key: 'LRC', value: 100}], 0.0054, 3, 'Filled'],\n//     ['Buy', [{type: 'out', key: 'ETH', value: 25}, {type: 'in', key: 'LRC', value: 100}], 0.12, [{\n//         type: 'out',\n//         key: 'ETH',\n//         value: 25\n//     }, {type: 'in', key: 'LRC', value: 100}], 0.0054, 3, 'Filled'],\n//     ['Buy', [{type: 'out', key: 'ETH', value: 25}, {type: 'in', key: 'LRC', value: 100}], 0.12, [{\n//         type: 'out',\n//         key: 'ETH',\n//         value: 25\n//     }, {type: 'in', key: 'LRC', value: 100}], 0.0054, 3, 'Cancelled'],\n//     ['Sell', [{type: 'out', key: 'ETH', value: 25}, {type: 'in', key: 'LRC', value: 100}], 0.12, [{\n//         type: 'out',\n//         key: 'ETH',\n//         value: 25\n//     }, {type: 'in', key: 'LRC', value: 100}], 0.0054, 3, 'Filled'],\n//     ['Sell', [{type: 'out', key: 'ETH', value: 25}, {type: 'in', key: 'LRC', value: 100}], 0.12, [{\n//         type: 'out',\n//         key: 'ETH',\n//         value: 25\n//     }, {type: 'in', key: 'LRC', value: 100}], 0.0054, 3, 'Cancelled'],\n// ]\n\nconst StylePaper = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    background-color: ${({ theme }) => theme.colorBase.background().default};\n    border-radius: ${({ theme }) => theme.unit}px;\n    padding: 20px;\n\n    .title {\n        font-family: Gilroy-Medium;\n        font-size: ${({ theme }) => theme.unit * 3}px;\n        line-height: 19px;\n    }\n\n    .tableWrapper {\n        display: flex;\n        flex: 1;\n        margin-top: 20px;\n        border: 1px solid ${({ theme }) => theme.colorBase.borderColor};\n        border-radius: ${({ theme }) => theme.unit}px;\n        padding: 26px;\n\n        .rdg {\n            flex: 1;\n        }\n    }\n` as typeof Paper;\n\nconst OrderPanel = withTranslation('common')((rest: WithTranslation) => {\n    const container = React.useRef(null);\n    const [pageSize, setPageSize] = React.useState(10);\n    React.useEffect(() => {\n        // @ts-ignore\n        let height = container?.current?.offsetHeight;\n        if (height) {\n            setPageSize(Math.floor((height - 120) / 44) - 2);\n        }\n    }, [container, pageSize]);\n\n    return (\n        <>\n            <StylePaper ref={container}>\n                <div className=\"title\">Order History</div>\n                <div className=\"tableWrapper\">\n                    <OrderHistoryTable {...{\n                        pagination: {\n                            pageSize: pageSize\n                        },\n                        rawData: [],\n                        ...rest\n                    }} />\n                </div>\n            </StylePaper>\n        </>\n    )\n})\n\nexport default OrderPanel\n","import styled from '@emotion/styled';\nimport { Box, Button, Divider, Grid, Switch, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { UpColor, Currency, DropDownIcon } from '@loopring-web/component-lib/src/static-resource';\nimport {\n    BtnLanguage,\n    OutlineSelect,\n    OutlineSelectItem, QRCodePanel,\n    TypographyStrong, useSettings\n} from '@loopring-web/component-lib';\nimport { Trans, useTranslation, WithTranslation, withTranslation } from 'react-i18next';\nimport { useTheme } from '@emotion/react';\nimport { LanguageKeys } from '@loopring-web/component-lib/static-resource';\n\n// const MuiModalStyled = styled(MuiModal)`\n//   //background: ${({theme}) => theme.colorBase.background().secondary};\n//   // .MuiBackdrop-root{\n//   //   z-index: -1;\n//   //   background-color: ${({theme}) => theme.colorBase.background().outline};\n//   // }\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n// ` as typeof MuiModal;\n// const BlockStyled = styled(Box)`\n//   ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\n//   background: ${({theme}) => theme.colorBase.background().secondary};\n//   max-height: var(--panel-setting-height);\n//   max-width: var(--panel-setting-width);\n//   display: flex;\n//   justify-content: space-around;\n//   align-items: center;\n//   overflow: scroll;\n//   padding: ${({theme}) => theme.unit*8}px\n// `;\n\nconst StyledPaper = styled(Grid)`\n  width: 100%;\n  height: 100%;\n  background-color: ${({theme}) => theme.colorBase.background().default};\n  ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\n`\n\nconst StyledSwitch = styled(Switch)(({theme}) => ({\n    \"& .Mui-checked\": {\n        color: theme.colorBase.textPrimary,\n        '& + .MuiSwitch-track.MuiSwitch-track': {\n            border: `solid ${theme.colorBase.success}`,\n        },\n        '& .MuiSwitch-thumb': {\n            backgroundColor: theme.colorBase.success,\n        }\n    },\n    '& .MuiSwitch-track': {\n        border: `solid ${theme.colorBase.error}`,\n        opacity: 1\n    },\n    '& .MuiSwitch-thumb': {\n        backgroundColor: theme.colorBase.error,\n    }\n}));\n\nexport const BtnCurrency = ({t, currency, label, handleChange}: any) => {\n    const [state, setState] = React.useState<string>(currency ? currency : Currency.dollar);\n    const _handleChange = React.useCallback((event: React.ChangeEvent<any>) => {\n        setState(event.target.value);\n        if (handleChange) {\n\n            handleChange(event.target.value)\n        }\n    }, [handleChange])\n    return <OutlineSelect aria-label={t(label)} IconComponent={DropDownIcon}\n                          labelId=\"language-selected\"\n                          id=\"language-selected\"\n                          value={state} autoWidth\n                          onChange={_handleChange}>\n        <OutlineSelectItem value={Currency.dollar}>$ {t('labelUSDollar')}</OutlineSelectItem>\n            <OutlineSelectItem value={Currency.yen}>¥ {t('labelCNYYuan')}</OutlineSelectItem>\n    </OutlineSelect>\n}\n\nconst StyledDivider = styled(Divider)`\n  margin: ${({theme}) => theme.unit}px 0 ${({theme}) => theme.unit}px 0px;\n`\nconst DividerBlock = styled(Divider)`\n  margin: 0;\n  flex: 1;\n  width: 1px;\n  height: ${({theme}) => theme.unit * 3}px;\n  background: ${({theme}) => theme.colorBase.focus};\n`\n\n\n\nexport const SettingPanel = withTranslation(['common', 'layout'])(({t,i18n, ...rest}: & WithTranslation) => {\n    const theme = useTheme();\n    const {setUpColor,setLanguage,setCurrency,currency,upColor} = useSettings()\n    const language = i18n.language;\n    const handleOnLanguageChange = (lang: LanguageKeys) => {\n        setLanguage(lang);\n        i18n.changeLanguage(lang);\n    }\n    const handleOnCurrencyChange = (value: any) => {\n        setCurrency(value);\n    }\n    const handleColorChange = (e:any) => {\n        if(e.target.checked){\n            setUpColor(UpColor.green) ;\n        }else{\n            setUpColor(UpColor.red);\n        }\n    }\n    return <Grid container direction={'column'} justifyContent={'space-between'} alignItems={'stretch'} flexWrap={'nowrap'}>\n        <Typography variant={'h4'} component={'h3'} marginY={1} paddingLeft={2}>{t('labelTitleSecurity')}</Typography>\n        <StyledPaper item xs={12} display={'flex'} flexDirection={'column'} marginBottom={2} paddingY={2}>\n            <Box component={'section'} display={'flex'} flexDirection={'column'}>\n                <Typography variant={'h5'} component={'h4'} paddingX={2}>{t('labelTitleResetL2Keypair')}</Typography>\n                <StyledDivider/>\n                <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n                      alignItems={'flex-start'} paddingX={2} marginBottom={2}>\n                    <Grid item xs={8} display={'flex'} flexDirection={'column'}>\n                        <Typography variant={'body1'} component={'p'}>\n                            <Trans i18nKey=\"resetDescription\">\n                                Create a new signing key for layer-2 authentication (no backup needed). This will\n                                <TypographyStrong component={'span'}>cancel all your pending orders</TypographyStrong>.\n                            </Trans>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} display={'flex'} flexDirection={'column'} justifyContent={'space-evenly'}\n                          alignItems={'flex-end'} alignSelf={'stretch'}>\n                        <Button variant={'outlined'} size={'medium'} color={'primary'}>{t('labelBtnReset')}</Button>\n                    </Grid>\n                    <Grid item xs={12} display={'flex'} flexDirection={'row'} justifyContent={'flex-end'}\n                          alignItems={'center'} alignSelf={'stretch'}>\n                        <Typography variant={'body2'} component={'p'}\n                                    paddingTop={1}>{t('labelHadChangPassword', {passDay: '14 hours'})}</Typography>\n                    </Grid>\n\n                </Grid>\n            </Box>\n            <Box component={'section'} display={'flex'} flexDirection={'column'}>\n                <Typography variant={'h5'} component={'h4'} paddingX={2}>{t('labelTitleExportAccount')}</Typography>\n                <StyledDivider/>\n                <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n                      alignItems={'flex-start'} paddingX={2} marginBottom={2}>\n                    <Grid item xs={7} display={'flex'} flexDirection={'column'}>\n                        <Typography variant={'body1'} component={'p'}>{t('descriptionExportAccount')}</Typography>\n                    </Grid>\n                    <Grid item xs={5} display={'flex'} flexDirection={'column'} justifyContent={'space-evenly'}\n                          alignItems={'flex-end'} alignSelf={'stretch'}>\n                        <Grid item> <Button variant={'outlined'} size={'medium'}\n                                            color={'primary'}>{t('labelBtnExportAccount')}</Button></Grid>\n                    </Grid>\n                </Grid>\n            </Box>\n        </StyledPaper>\n\n        <Typography variant={'h4'} component={'h3'} marginY={1} paddingLeft={2}>{t('labelTitlePreferences')}</Typography>\n        <StyledPaper item xs={12} display={'flex'} flexDirection={'column'} marginBottom={2} paddingY={2}>\n            <Box component={'section'} display={'flex'} flexDirection={'column'}>\n                {/*<Typography variant={'h5'} component={'h4'} paddingX={2}>{t('labelTitleLayout')}</Typography>*/}\n                {/*<StyledDivider/>*/}\n                <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n                      alignItems={'flex-start'} paddingX={2} marginBottom={2}>\n                    <Grid item xs={7} display={'flex'} flexDirection={'column'}>\n                        <Typography variant={'body1'} component={'p'}>{t('labelLanguage')}</Typography>\n                    </Grid>\n                    <Grid item xs={5} display={'flex'} flexDirection={'column'} justifyContent={'space-evenly'}\n                          alignItems={'flex-end'} alignSelf={'stretch'}>\n                        <Grid item>\n                            <BtnLanguage {...{\n                                t, ...rest,\n                                language,\n                                label: 'languageSetting',\n                                handleChange: handleOnLanguageChange\n                            }}></BtnLanguage>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n                      alignItems={'flex-start'} paddingX={2} marginBottom={2}>\n                    <Grid item xs={7} display={'flex'} flexDirection={'column'}>\n                        <Typography variant={'body1'} component={'p'}>{t('labelCurrency')}</Typography>\n                    </Grid>\n                    <Grid item xs={5} display={'flex'} flexDirection={'column'} justifyContent={'space-evenly'}\n                          alignItems={'flex-end'} alignSelf={'stretch'}>\n                        <Grid item>\n                            <BtnCurrency {...{\n                                t, ...rest,\n                                currency,\n                                label: 'currencySetting',\n                                handleChange: handleOnCurrencyChange\n                            }}></BtnCurrency>\n\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container display={'flex'} flexDirection={'row'} justifyContent={'stretch'}\n                      alignItems={'flex-start'} paddingX={2}>\n                    <Grid item xs={7} display={'flex'} flexDirection={'column'}>\n                        <Typography variant={'body1'} component={'p'}>{t('labelColors')}</Typography>\n                    </Grid>\n                    <Grid item xs={5} display={'flex'} flexDirection={'row'} justifyContent={'flex-end'}\n                          alignItems={'center'} alignSelf={'stretch'}>\n                        <Typography variant={'body1'} component={'span'} paddingX={2}>\n                            <Trans i18nKey=\"whichColorIsUp\">\n                                <span style={{\n                                    textTransform: 'capitalize',\n                                    color: upColor === UpColor.green ? theme.colorBase.success : theme.colorBase.error\n                                }}>{{up: upColor === UpColor.green ? t('labelgreen') : t('labelred')}} up</span>\n                                and <span style={{\n                                textTransform: 'capitalize',\n                                color: upColor === UpColor.green ? theme.colorBase.error : theme.colorBase.success\n                            }}>{{down: upColor === UpColor.green ? t('labelred') : t('labelgreen')}} down</span>\n                            </Trans>\n                        </Typography>\n                        <StyledSwitch checked={upColor === UpColor.green} color=\"default\"\n                                      onChange={handleColorChange}/>\n                    </Grid>\n                </Grid>\n            </Box>\n\n        </StyledPaper>\n\n    </Grid>\n})\n\n// export const SettingPage = ({open,onClose}: { open:boolean, onClose:(e:any)=>void})=>{\n//     return  <MuiModalStyled\n//         open={open}\n//         onClose={onClose}\n//         aria-labelledby=\"modal-modal-title\"\n//         aria-describedby=\"modal-modal-description\"\n//     >\n//         <BlockStyled >\n//            <SettingPanel/>\n//         </BlockStyled>\n//     </MuiModalStyled>\n// }\n\n\n","import { useRouteMatch } from 'react-router'\n\nimport { Box, Paper } from '@material-ui/core'\nimport {\n    DepositPanel,\n    SubMenu,\n    SubMenuList as BasicSubMenuList,\n} from '@loopring-web/component-lib'\nimport { useTranslation, withTranslation } from 'react-i18next'\nimport styled from '@emotion/styled'\nimport { subMenuLayer2 } from '@loopring-web/component-lib/src/static-resource'\n\nimport TxPanel from './TxPanel'\nimport AssetPanel from './AssetPanel'\nimport TradePanel from './TradePanel'\nimport OrderPanel from './OrderPanel'\nimport { SettingPanel } from '../SettingPage';\nimport store from '../../stores';\nimport { AccountStatus } from '../../state_machine/account_machine_spec';\nimport { useModalProps } from '../../layouts/header/hook';\n\nexport const subMenu = subMenuLayer2;\nconst BoxStyle = styled(Box)`\n  ${({theme})=>`\n    background-color: ${theme.colorBase.background().default};\n    width: 100%;\n    min-width:auto;\n    ${theme.border.defaultFrame({c_key: 'blur'})};\n    & > div{\n      background-color:initial;\n      border:0;\n      width:auto;\n      min-width: var(--swap-box-width);\n      max-width: 520px;\n    }\n    `\n  }\n   \n` as typeof Box\n\nconst SubMenuList = withTranslation(['layout','common'], { withRef: true })(BasicSubMenuList);\nexport const Layer2Page = () => {\n\n    let match: any = useRouteMatch(\"/layer2/:item\")\n    const {status: accStatus} = store.getState().account;\n    const {t,...rest} = useTranslation()\n    const selected = match?.params.item ?? 'assets';\n    const {depositProps} = useModalProps()\n\n    return <>  { accStatus === AccountStatus.NOACCOUNT\n    || accStatus === AccountStatus.DEPOSITING\n    || accStatus === AccountStatus.DEPOSIT_TO_CONFIREM ?\n        <BoxStyle display={'flex'} flexWrap={'wrap'} alignItems={'center'} justifyContent={'center'} alignContent={'flex-start'}>\n            <DepositPanel  {...{\n                ...rest, ...depositProps,\n                title: t('depositTitleAndActive'),\n                description: 'depositAndActiveDescription'\n            }} > </DepositPanel>\n        </BoxStyle>: <>\n            <Box width={'200px'} display={'flex'} justifyContent={'stretch'} marginRight={3}>\n                <SubMenu>\n                    <SubMenuList selected={selected} subMenu={subMenu as any} />\n                </SubMenu>\n            </Box>\n            <Box minHeight={420} display={'flex'} alignItems={'stretch'} flexDirection={'column'} marginTop={0} flex={1}>\n                {selected === 'assets' && <AssetPanel />}\n                {selected === 'transactions' && <TxPanel />}\n                {selected === 'trades' && <TradePanel />}\n                {selected === 'orders' && <OrderPanel />}\n                {selected === 'setting' && <SettingPanel />}\n            </Box>\n        </>\n    }\n        </>\n\n\n\n}\n","import React from 'react';\nimport { useAmmMap } from '../../../stores/Amm/AmmMap';\nimport {\n    AmmDetail,\n    CustomError,\n    ErrorMap,\n\n} from '@loopring-web/component-lib/src/static-resource';\nimport {  useTicker } from '../../../stores/ticker';\nimport { PoolsRow } from '@loopring-web/component-lib';\nimport { deepClone } from '../../../utils/obj_tools';\nimport { STATUS } from '../../../stores/constant';\n\nexport function useAmmMapUI<R extends object,I extends object>({pageSize}:{pageSize:number}) {\n    const [rawData,setRawData] = React.useState<Array<AmmDetail<any>>|[]>([]);\n    const [page,setPage] = React.useState<number>(1);\n    // const [_ammTradeMap,setAmmTradeMap]  = React.useState<{[key in keyof R]?:PoolsRow<I>}>({});\n    const {\n        ammMap,\n        status: ammMapStatus,\n        errorMessage: errorAmmMap,\n        statusUnset:ammMapStatusUnset,\n        updateAmmMap,\n    } = useAmmMap();\n    const {\n        tickerMap,\n        status: tickerStatus,\n        errorMessage: errorTickerMap,\n        statusUnset: tickerStatusUnset ,\n        updateTickers,\n    } = useTicker();\n    const updateRawData = ()=>{\n        try {\n            const _ammMap:PoolsRow<I>  = deepClone(ammMap);\n            for (let tickerMapKey in tickerMap) {\n                _ammMap[tickerMapKey].tradeFloat =  tickerMap[tickerMapKey]\n            }\n            let data = (ammMap && ammMap !== {}) ? Object.keys(ammMap).map((ammKey:string) => {\n                // @ts-ignore\n                return _ammMap[ammKey]\n            }):[]\n            setRawData(data)\n        }catch (error){\n            throw new CustomError({...ErrorMap.NO_TOKEN_MAP,options:error})\n        }\n\n    }\n\n\n\n    const updateTickersUI = React.useCallback((_page)=>  {\n        // if(page !== _page)  {\n            setPage(_page);\n            if(ammMap && Object.keys(ammMap).length>0){\n                // console.log('page get ticker',Object.keys(ammMap).length,page - 1 , page - 1 * pageSize + pageSize);\n                const keys = []\n                for (let i =  ( page - 1) * pageSize; i<Object.keys(ammMap).length && i <  (page - 1) * pageSize + pageSize   ;i++ ){\n                    keys.push(Object.keys(ammMap)[i]);\n                }\n                updateTickers(keys);\n            }\n        // }\n        // else{\n        //\n        // }\n    },[ammMap,page,pageSize,updateTickers])\n    React.useEffect(() => {\n        switch (tickerStatus) {\n            case \"ERROR\":\n                console.log(\"ERROR\",'get ticker error,ui');\n                tickerStatusUnset()\n                break;\n            case \"PENDING\":\n                break;\n            case \"DONE\":\n                tickerStatusUnset()\n                updateRawData()\n                break;\n            default:\n                break;\n        }\n    }, [tickerStatus, tickerStatusUnset]);\n\n    // init AmmMap at begin\n    React.useEffect(() => {\n        if (!ammMap || Object.keys(ammMap).length === 0) {\n            updateAmmMap();\n        } else{\n            updateTickersUI(page)\n        }\n    },[]);\n\n\n\n    React.useEffect(() => {\n        switch (ammMapStatus) {\n            case \"ERROR\":\n                console.log(\"ERROR\",'get ammMap error,ui');\n                ammMapStatusUnset();\n                break;\n            case STATUS.PENDING:\n                console.log(\"PENDING\",'get ammMap error,ui');\n                // ammMapStatusUnset();\n                break;\n            case STATUS.DONE:\n                ammMapStatusUnset();\n                updateTickersUI(1)\n                break;\n            default :\n                break;\n        }\n    }, [ammMapStatus,ammMapStatusUnset,updateTickersUI]);\n    return {\n        page,\n        rawData,\n        updateTickersUI,\n    }\n}\n\n// export function useTickerUI({pageState:number,pageSize:}) {\n//\n//     React.useEffect(() => {\n//         if (!tickerMap || Object.keys(tickerMap).length === 0) {\n//             updateAmmMap();\n//         }else{\n//\n//         }\n//     }, [ammMap, updateAmmMap]);\n//     React.useEffect(() => {\n//         switch (ammMapStatus) {\n//             case \"ERROR\":\n//                 console.log(\"ERROR\");\n//                 ammMapStatusUnset()\n//                 break;\n//             case \"PENDING\":\n//                 ammMapStatusUnset()\n//                 break;\n//             default:\n//                 break;\n//         }\n//     }, [ammMapStatus, ammMapStatusUnset]);\n//     return {\n//         ammMapObj: {\n//             ammMap,\n//             status: ammMapStatus,\n//             errorMessage: errorAmmMap\n//         }\n//     }\n// }","import { WithTranslation, withTranslation } from 'react-i18next'\nimport { Box, } from '@material-ui/core'\nimport styled from '@emotion/styled'\n\nimport React from 'react';\nimport { useAmmMapUI } from './hook';\n\nimport { PoolsTable } from '@loopring-web/component-lib';\n\nconst StylePaper = styled(Box)`\n  width: 100%;\n  height: 100%;\n  flex: 1;\n  background-color: ${({theme}) => theme.colorBase.background().default};\n  border-radius: ${({theme}) => theme.unit}px;\n\n  .rdg {\n    flex: 1;\n  }\n\n` as typeof Box;\n\n\nexport const PoolsPanel = withTranslation('common')(<R, I>({t, ...rest}: WithTranslation) => {\n    const container = React.useRef(null);\n    const [pageSize, setPageSize] = React.useState(10);\n    const {updateTickersUI,rawData, page} = useAmmMapUI({pageSize});\n\n    React.useEffect(() => {\n        // @ts-ignore\n        let height = container?.current?.offsetHeight;\n        if (height) {\n            setPageSize(Math.floor((height - 120) / 44) - 1);\n        }\n    }, [container, pageSize]);\n\n    const handlePageChange = React.useCallback((page) =>{\n        updateTickersUI(page)\n    },[updateTickersUI]);\n    return (\n        <>\n            <StylePaper display={'flex'} flexDirection={'column'} ref={container}>\n                <PoolsTable {...{\n                    rawData,\n                    handlePageChange,\n                    page,\n                    pagination: {\n                        pageSize\n                    }\n                }} />\n            </StylePaper>\n        </>\n    )\n})\n\n","import { AmmPanel, AmmPanelType, AmmProps } from '@loopring-web/component-lib';\nimport { AmmData, AmmInData, IBData } from '@loopring-web/component-lib/static-resource';\n\nexport const AmmPanelView = <T extends AmmData<C extends IBData<I> ? C : IBData<I>>, I,\n    ACD extends AmmInData<I>,\n    C = IBData<I>>({ammProps,...rest}: { ammProps:AmmProps<T ,I,ACD> } & any) => {\n    return <>\n        <AmmPanel {...{...rest,...ammProps, tabSelected: AmmPanelType.Deposit}} > 123</AmmPanel>\n    </>\n\n}","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    AmmProps,\n    ButtonListRightStyled,\n    TradeBtnStatus,\n    TradeTitle,\n    useSettings,\n    Button,\n    TradeTable, AmmTradeType, AmmRecordTableProps, AmmRecordTable\n} from '@loopring-web/component-lib';\nimport {\n    AmmData,\n    AmmInData,\n    CoinInfo,\n    FloatTag,\n    getThousandFormattedNumbers,\n    IBData,\n    LinkedIcon,\n    AmmDetailExtendProps,\n    PriceTag,\n    Currency, CheckedIcon, CheckBoxIcon\n} from '@loopring-web/component-lib/static-resource';\nimport { Box, Breadcrumbs, Grid, Hidden, Link, Typography, } from '@material-ui/core';\nimport { AmmPanelView } from '../AmmPanel';\nimport { useSwapNew } from '../../SwapPage/hook';\nimport { useBasicInfo } from '../../SwapPage/panel/BasicInfoPanel/hook';\nimport moment from 'moment';\nimport styled from '@emotion/styled/';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { MyAmmLP } from '@loopring-web/component-lib/src/static-resource';\nimport { AmmRecordRow } from '@loopring-web/component-lib/components/tableList/ammRecordTable/Interface';\n\nconst Style = styled.div`\n  color: #fff;\n`\n//TODO: FIXED:  demo data\nconst tradeData: any = {\n    coinA: {belong: 'ETH', balance: 0.3, tradeValue: 0},\n    coinB: {belong: 'LRC', balance: 1000, tradeValue: 0}\n};\nconst coinMap = {\n    ETH: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'ETH',\n        simpleName: 'ETH',\n        description: '',\n        company: 'ETH'\n    },\n    LRC: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'LRC',\n        simpleName: 'LRC',\n        description: '',\n        company: 'LRC'\n    },\n    USTD: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'USTD',\n        simpleName: 'USTD',\n        description: '',\n        company: 'USTD'\n    }\n}\nconst ammCalcData = {\n    myCoinA: {belong: 'ETH', balance: 1000, tradeValue: 0},\n    myCoinB: {belong: 'LRC', balance: 1000, tradeValue: 0},\n    AtoB: 50,\n    coinInfoMap: coinMap,\n    slippage: 0.5,\n    slippageTolerance: [0.1, 0.5, 1, 'slippage:N'],\n    fee: '1%'\n};\n\n//TODO: FIXED:  demo data end\nlet ammProps: AmmProps<AmmData<IBData<any>>, any, AmmInData<any>> = {\n    ammDepositData: tradeData,\n    ammWithdrawData: tradeData,\n    // tradeCalcData,\n    ammCalcData,\n    handleDepositEvent: (data, type) => {\n        console.log('handleDepositEvent', data, type);\n    },\n    handleWithDrawEvent: (data, type) => {\n        console.log('handleWithDrawEvent', data, type);\n    },\n    onAmmWithdrawClick: (data) => {\n        console.log('onAmmWithdrawClick', data);\n    },\n    onAmmDepositClick: (data) => {\n        console.log('onAmmDepositClick', data);\n    }\n}\n\nlet btnShowTradeStatus: keyof typeof TradeBtnStatus = TradeBtnStatus.AVAILABLE;\nconst onShowTrade = () => {\n};\n\nconst coinPairInfo: AmmDetailExtendProps<AmmInData<any>, any> = {\n    // tradeCalcData:,\n    ammCalcData: ammCalcData,\n    activity: {\n        totalRewards:1232141,\n        myRewards:122,\n        rewardToken:coinMap.USTD  as CoinInfo<any>,\n        duration: {\n            from: new Date('2021-1-1'),\n            to: new Date()\n        }\n    },\n    coinAInfo: coinMap[ 'ETH' ] as CoinInfo<any>,\n    coinBInfo: coinMap[ 'LRC' ] as CoinInfo<any>,\n    tradeFloat: {\n        percent: 1000,\n        timeUnit: '24h',\n        priceYuan: 100,\n        priceDollar: 1.23123,\n        floatTag: FloatTag.increase,\n        // tagNew: false,\n    },\n    amountDollar: 197764.89,\n    amountYuan: 194.89,\n    totalLPToken: 12132131,\n    totalA: 0.002,\n    totalB: 12344,\n    rewardToken: 'LRC',\n    rewardValue: 13,\n    feeA:121,\n    feeB:1232,\n    isNew: true,\n    isActivity: false,\n}\nconst myAmm: MyAmmLP<any> = {\n    feeA:122,\n    feeB:21,\n    feeDollar: 0.0012,\n    feeYuan:  0.0312,\n    reward:123,\n    rewardToken: coinMap.USTD as CoinInfo<any>,\n    balanceA:12131,\n    balanceB:0.0012,\n    balanceYuan: 1232131,\n    balanceDollar:232,\n}\nconst ammRecordArray:AmmRecordRow<any>[] = [\n    {\n        type: AmmTradeType.add,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-1, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.remove,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-100, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-15, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-3, 'hours').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-75, 'second').toDate().getTime()\n    }\n]\n\n\n\n\n//******************** page code ************************//\nconst BoxStyled = styled(Box)`\n  ${({theme}) => theme.border.defaultFrame({c_key: 'blur'})};\n  background-color: ${({theme}) => theme.colorBase.background().default};\n`;\nconst StylePaper = styled(Box)`\n  width: 100%;\n  height: 100%;\n  flex: 1;\n  background-color: ${({theme}) => theme.colorBase.background().default};\n  border-radius: ${({theme}) => theme.unit}px;\n\n  .rdg {\n    flex: 1;\n  }\n\n` as typeof Box;\n\nconst applyProps = (index: number) => {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `tabpanel-${index}`,\n    }\n}\n\nexport const CoinPairPanel = withTranslation('common')(({t, ...rest}: any) => {\n    //TODO: checkRouter\n\n    const { currency } = useSettings();\n    const { base, quote, tokens, market, swapProps } = useSwapNew();\n\n    console.log('CoinPairPanel base:', base, ' quote:', quote)\n\n    const { change } = useBasicInfo({base, quote, tokens, market}, t);\n    const [value,setValue] = React.useState<0|1>(0);\n    const [page, setPage] = React.useState(rest?.page ? rest.page : 1);\n    const handleChange = (event: any, newValue: 0|1) => {\n        setValue(newValue);\n        setPage(1);\n    }\n    const _handlePageChange = React.useCallback((page: number) => {\n        setPage(page);\n        // updateData({actionType: ActionType.page, currPage: page})\n    }, [])\n\n    return <>\n\n        <Grid container >\n            <Grid item xs={8}>\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link color=\"textSecondary\" href=\"/#/liquidity/pools\">\n                        {t('labelAmmList')}\n                    </Link>\n                    <Typography color={'textSecondary'} display={'flex'} alignItems={'center'}\n                                justifyContent={'center'}\n                    >{tradeData.coinA.belong}-{tradeData.coinB.belong}</Typography>\n                </Breadcrumbs>\n            </Grid>\n            <Grid item xs={4} alignItems={'center'} justifyContent={'flex-end'} display={'flex'}>\n                <Link href=\"/#/liquidity/pools\" variant={'h5'}>\n                    {t('labelBack')}\n                </Link>\n            </Grid>\n        </Grid>\n        <Grid container marginTop={3}>\n            <Grid item xs={7}>\n                \n            <TradeTitle {...{\n                    ...rest, t, tradeCalcData: swapProps.tradeCalcData, tradeFloat: {\n                      priceDollar: getThousandFormattedNumbers(change,8),\n                      percent: '+15%',\n                      timeUnit: \"24h\",\n                      volume:'',\n                    },\n                    isNew: false\n                  }}></TradeTitle>\n            </Grid>\n        </Grid>\n        <Box flex={1} display={'flex'} alignItems={'stretch'} flexDirection=\"row\" marginTop={3}>\n            <Box flex={1} display={'flex'}>\n                <Grid container spacing={2} wrap={'nowrap'}>\n                    <Grid item md={5} xs={12} paddingRight={2} display={'flex'} flexDirection={'column'}\n                          alignItems={'stretch'} justifyContent={'space-between'}>\n                        <BoxStyled paddingY={3} paddingX={1 / 2 * 5} display={'flex'} flexDirection={'column'}>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'}>\n                                <Typography component={'span'}\n                                            style={{textTransform: 'capitalize'}}>{t('labelLiquidity')}</Typography>\n                                <Typography component={'span'}\n                                            style={{textTransform: 'uppercase'}}>{t('labelAPY')}</Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textPrimary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1}>\n                                <>\n                                    <Typography component={'span'}> {typeof coinPairInfo.amountDollar === 'undefined' ? 'N/A' :\n                                        currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(coinPairInfo.amountDollar) : PriceTag.Yuan + getThousandFormattedNumbers(coinPairInfo.amountYuan?coinPairInfo.amountYuan:0)}\n                                    </Typography>\n                                    <Typography\n                                        component={'span'}> {coinPairInfo.tradeFloat ? coinPairInfo.tradeFloat.APY : 'N/A'}%\n                                    </Typography>\n                                </>\n\n\n                            </Typography>\n\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={2}>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>\n                                    <Hidden mdDown>{t('labelLPTotal')}</Hidden>{t('labelLPTokens')}</Typography>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>{coinPairInfo.totalLPToken}</Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1}>\n\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>\n                                    <Hidden\n                                        mdDown>{t('labelLPTotal')}</Hidden>{coinPairInfo.ammCalcData?.myCoinA.belong}\n                                </Typography>\n\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>{coinPairInfo.totalA}</Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1}>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>\n                                    <Hidden\n                                        mdDown>{t('labelLPTotal')}</Hidden>{coinPairInfo.ammCalcData?.myCoinB.belong}\n                                </Typography>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}>{coinPairInfo.totalB}</Typography>\n                            </Typography>\n\n                        </BoxStyled>\n                        <BoxStyled paddingY={3} paddingX={1 / 2 * 5} display={'flex'} flexDirection={'column'}>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} alignItems={'center'}>\n                                <Typography component={'span'} color={'textSecondary'} variant={'body2'}>\n                                    {coinPairInfo.tradeFloat.timeUnit} {t('labelVolume')}\n                                </Typography>\n                                <Typography component={'span'} color={'textSecondary'}>\n                                    {t('labelFee')} {/* ' : '*/}\n                                </Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1} alignItems={'center'}>\n                                <Typography component={'span'} variant={'h4'} color={'textPrimary'}>\n                                    {currency === Currency.dollar ? PriceTag.Dollar + getThousandFormattedNumbers(coinPairInfo.tradeFloat.priceDollar)\n                                        : PriceTag.Yuan + getThousandFormattedNumbers(coinPairInfo.tradeFloat.priceYuan)}\n                                </Typography>\n                                <Typography noWrap textAlign={'center'} component={'span'} color={'textSecondary'}\n                                            variant={'body2'} textOverflow={'ellipsis'} display={'flex'}\n                                            alignItems={'center'}>\n                                    <Typography component={'span'} color={'inherit'} variant={'inherit'}\n                                                display={'flex'} flexDirection={'column'}>\n                                        <Typography component={'span'} color={'inherit'} variant={'inherit'}>\n                                            {coinPairInfo.ammCalcData?.myCoinA.belong}\n                                        </Typography>\n                                        <Typography component={'span'} color={'inherit'} variant={'inherit'}>\n                                            {coinPairInfo.feeA}\n                                        </Typography>\n                                    </Typography>\n                                    <Typography component={'span'} color={'inherit'} variant={'h5'}\n                                                paddingX={1}>{' + '}</Typography>\n                                    <Typography component={'span'} color={'inherit'} variant={'inherit'}\n                                                display={'flex'} flexDirection={'column'}>\n                                        <Typography component={'span'} color={'inherit'} variant={'inherit'}>\n                                            {coinPairInfo.ammCalcData?.myCoinB.belong}\n                                        </Typography>\n                                        <Typography component={'span'} color={'inherit'} variant={'inherit'}>\n                                            {coinPairInfo.feeB}\n                                        </Typography>\n                                    </Typography>\n                                </Typography>\n                            </Typography>\n                        </BoxStyled>\n                        <BoxStyled paddingY={3} paddingX={1 / 2 * 5} display={'flex'} flexDirection={'column'}>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'}>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}> {t('labelMyPoolShare')}</Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1}>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}> {myAmm.balanceA? myAmm.balanceA : 'N/A' } {coinPairInfo.ammCalcData?.myCoinA.belong} </Typography>\n                                <Typography component={'span'} color={'textSecondary'}\n                                            variant={'h5'}> -- </Typography>\n                            </Typography>\n                            <Typography component={'p'} color={'textSecondary'} display={'flex'}\n                                        justifyContent={'space-between'} marginTop={1}>\n                                <Typography component={'span'}\n                                            color={'textSecondary'}> {myAmm.balanceB? myAmm.balanceA : 'N/A'} {coinPairInfo.ammCalcData?.myCoinB.belong}</Typography>\n                                <Typography component={'span'} color={'textSecondary'}\n                                            variant={'h5'}> -- </Typography>\n                            </Typography>\n                        </BoxStyled>\n                        <BoxStyled paddingY={3} paddingX={1 / 2 * 5} display={'flex'}\n                                   flexDirection={'column'}>\n\n                            <Box display={'flex'} flexDirection={'row'} justifyContent={'space-between'}>\n                                <Typography display={'flex'} flexDirection={'column'} component={'div'}>\n                                    <Typography variant={'body2'} component={'h5'} color={'textSecondary'}>\n                                        {t('labelReward')}\n                                    </Typography>\n                                    <Typography variant={'body1'} component={'span'} color={'textPrimary'}>\n                                        {typeof coinPairInfo.activity === 'undefined'? 'N/A': <>\n                                            <Typography component={'span'}>{coinPairInfo.activity.totalRewards} </Typography>\n                                            <Typography component={'span'}>{coinPairInfo.activity.rewardToken.simpleName}</Typography>\n                                        </> }\n                                    </Typography>\n                                </Typography>\n                                <Typography display={'flex'} flexDirection={'column'} alignItems={'flex-end'}\n                                            component={'div'}>\n                                    <Typography variant={'body2'} component={'h5'} color={'textSecondary'}>\n                                        {t('labelMyReward')}\n                                    </Typography>\n                                    <Typography variant={'body1'} component={'span'} color={'textPrimary'}>\n                                        {typeof coinPairInfo.activity === 'undefined'? 'N/A':<>\n                                            <Typography component={'span'}> {myAmm.reward} </Typography>\n                                            <Typography component={'span'}> {coinPairInfo.activity.rewardToken.simpleName}</Typography></>}\n\n                                    </Typography>\n                                </Typography>\n                            </Box>\n                            <Typography alignSelf={'flex-start'} variant={'body2'} color={'textSecondary'}\n                                        component=\"span\" marginTop={1}>\n                                {t('labelDate')}:\n                                {typeof coinPairInfo.activity === 'undefined'? 'N/A': moment(coinPairInfo.activity.duration.from).format('L') + ' - ' + moment(coinPairInfo.activity.duration.to).format('L')}\n                            </Typography>\n\n                        </BoxStyled>\n                    </Grid>\n                    <Hidden mdDown>\n                        <Grid item md={7} paddingRight={2}>\n\n\n                        </Grid>\n                    </Hidden>\n                </Grid>\n            </Box>\n            <Box display={'flex'}>\n                <AmmPanelView ammProps={ammProps}></AmmPanelView>\n            </Box>\n        </Box>\n        <Grid container marginTop={3} >\n            <Grid item xs={12}>\n                <Tabs value={value}\n                      onChange={handleChange}\n                      aria-label=\"tabs switch\">\n                    <Tab label={t('labelAll')} {...applyProps(0)} />\n                    <Tab label={t('labelMe')} {...applyProps(1)} />\n                </Tabs>\n\n                <StylePaper marginTop={2}>\n                    <AmmRecordTable rawData={ammRecordArray} handlePageChange={_handlePageChange} page={page} />\n                </StylePaper>\n            </Grid>\n\n        </Grid>\n\n    </>\n})\n\n\n\n","import { AmmProps } from '@loopring-web/component-lib';\nimport React from 'react';\nimport { AmmData, AmmInData, IBData, AmmCardProps } from '@loopring-web/component-lib/static-resource';\nimport { AmmCard } from '@loopring-web/component-lib/components/block/AmmCard';\nimport { ButtonProps, Grid } from '@material-ui/core';\nimport { AmmDetail, FloatTag } from '@loopring-web/component-lib/src/static-resource';\nimport { useAmmMiningUI } from './hook';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { withTranslation } from 'react-i18next';\n\nconst AmmCardWrap = React.memo(React.forwardRef((props,ref) => {\n    return <AmmCard ref={ref} {...props} ></AmmCard>\n}))  as React.ComponentType<AmmDetail<IBData<any>>>;\n\nexport const AmmMiningView =  withTranslation('common')(<T extends AmmData<C extends IBData<I> ? C : IBData<I>>, I,\n    ACD extends AmmInData<I>,\n    C = IBData<I>>({ammProps,t,...rest}: { ammProps:AmmProps<T ,I,ACD> } & any) => {\n    const {ammActivities} = useAmmMiningUI();\n    const [value,setValue] = React.useState<0|1>(0);\n    const handleChange = (event: any, newValue: 0|1) => {\n        setValue(newValue);\n    }\n    return <Grid container spacing={2}>\n       <Grid item xs={12}>\n           <Tabs value={value}\n                 onChange={handleChange}\n                 aria-label=\"tabs switch\">\n               <Tab label={t('labelCurrentActivities')}  />\n               <Tab label={t('labelPastActivities')}  />\n           </Tabs>\n       </Grid>\n\n        {ammActivities.map((item,index)=>{\n            return  <Grid item xs={12} sm={6} lg={4}  key={index}>\n                <AmmCardWrap {...item}/>\n            </Grid>\n        }) }\n\n    </Grid>\n})\n\n\n// const ref = React.createRef();\n// const ammInfo: AmmCardProps<any> = {\n//     // ammCalcData,\n//\n//     coinAInfo:  {\n//         icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n//         name: 'ETH',\n//         simpleName: 'ETH',\n//         description: '',\n//         company: 'ETH'\n//     },\n//     coinBInfo: {\n//         icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n//         name: 'LRC',\n//         simpleName: 'LRC',\n//         description: '',\n//         company: 'LRC'\n//     },\n//     activity:{\n//         totalRewards:241232132,\n//         myRewards:1232.123,\n//         rewardToken: {\n//             icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n//             name: 'LRC',\n//             simpleName: 'LRC',\n//             description: '',\n//             company: 'LRC'\n//         },\n//         duration: {\n//             from: new Date('2021-1-1'),\n//             to: new Date()\n//         },\n//     },\n//     amountDollar: 197764.89,\n//     amountYuan: 194.89,\n//     tradeFloat:{\n//         APY: 56,\n//         priceDollar: 123,\n//         priceYuan: 2343232,\n//         percent: '0%',\n//         chartUnit: \"24h\",\n//         volume: Number('112312312'),\n//         floatTag: FloatTag.none\n//     },\n//     totalLPToken: 12132131,\n//     totalA: 0.002,\n//     totalB: 12344,\n//     myRewardA: 11,\n//     myRewardB: 13,\n//     PoolSharedA: 10,\n//     PoolSharedB: 12,\n//     isNew:false,\n//     isActivity:true,\n// }","import React from 'react';\nimport { useAmmMap } from '../../../stores/Amm/AmmMap';\nimport {\n    CustomError,\n    ErrorMap,\n} from '@loopring-web/component-lib/src/static-resource';\nimport {  useTicker } from '../../../stores/ticker';\nimport { PoolsRow } from '@loopring-web/component-lib';\nimport { deepClone } from '../../../utils/obj_tools';\nimport { STATUS } from '../../../stores/constant';\nimport { useAmmActivityMap } from '../../../stores/Amm/AmmActivityMap';\nimport { AmmCardProps } from '@loopring-web/component-lib/static-resource';\n\nexport function useAmmMiningUI<R extends object,I>():{ammActivities:Array<AmmCardProps<I>>} {\n    const [data,setData] = React.useState<Array<AmmCardProps<I>>>([]);\n    const {\n        ammMap,\n        status: ammMapStatus,\n        errorMessage: errorAmmMap,\n        statusUnset:ammMapStatusUnset,\n        updateAmmMap,\n    } = useAmmMap();\n    const {\n        ammActivityMap,\n        status:  ammActivityStatus,\n        errorMessage: errorAmmActivityMap,\n        statusUnset:  ammActivityStatusUnset ,\n        updateAmmActivityMap,\n    } = useAmmActivityMap();\n    const {\n        tickerMap,\n        status: tickerStatus,\n        errorMessage: errorTickerMap,\n        statusUnset: tickerStatusUnset ,\n        updateTickers,\n    } = useTicker();\n    const updateRawData = React.useCallback(()=>{\n        try {\n            const _ammActivityMap:PoolsRow<I>  = deepClone(ammActivityMap);\n            let mapArray = [];\n            for (let key in  ammActivityMap) {\n                _ammActivityMap[key] =  {\n                    // @ts-ignore\n                    ...deepClone(ammMap[key]),\n                    activity:  _ammActivityMap[key],\n                    tradeFloat:tickerMap && tickerMap[key]\n                }\n                mapArray.push(_ammActivityMap[key])\n            }\n            setData(mapArray);\n        }catch (error){\n            throw new CustomError({...ErrorMap.NO_TOKEN_MAP,options:error})\n        }\n    }, [ammActivityMap, tickerMap, ammMap])\n\n    const updateTickersUI = React.useCallback(()=>  {\n            if(ammActivityMap && Object.keys(ammActivityMap).length>0){\n                updateTickers(Object.keys(ammActivityMap));\n            }\n    },[ammActivityMap,updateTickers])\n    React.useEffect(() => {\n        switch (tickerStatus) {\n            case \"ERROR\":\n                console.log(\"ERROR\",'get ticker error,ui');\n                tickerStatusUnset()\n                break;\n            case \"PENDING\":\n                break;\n            case \"DONE\":\n                tickerStatusUnset()\n                updateRawData()\n                break;\n            default:\n                break;\n        }\n    }, [tickerStatus, tickerStatusUnset, updateRawData]);\n    React.useEffect(() => {\n        switch (ammActivityStatus) {\n            case \"ERROR\":\n                console.log(\"ERROR\",'get ammMap error,ui');\n                ammActivityStatusUnset();\n                break;\n            case STATUS.PENDING:\n                console.log(\"PENDING\",'get ammMap error,ui');\n                // ammMapStatusUnset();\n                break;\n            case STATUS.DONE:\n                if(ammMapStatus !== STATUS.PENDING) {\n                    ammActivityStatusUnset();\n                    ammMapStatusUnset();\n                    updateTickersUI();\n                }\n                break;\n            default :\n                break;\n        }\n    }, [ammMapStatus, ammActivityStatus, ammActivityStatusUnset, ammMapStatusUnset, updateTickersUI]);\n    // init AmmMap at begin\n    React.useEffect(() => {\n        if (!ammMap || Object.keys(ammMap).length === 0) {\n            updateAmmMap();\n        }\n        if(!ammActivityMap || Object.keys(ammActivityMap).length === 0){\n            updateAmmActivityMap();\n        } else {\n            updateTickersUI();\n        }\n    },[]);\n\n\n\n\n    return {\n        ammActivities:data,\n        // updateTickersUI,\n    }\n}\n\n// export function useTickerUI({pageState:number,pageSize:}) {\n//\n//     React.useEffect(() => {\n//         if (!tickerMap || Object.keys(tickerMap).length === 0) {\n//             updateAmmMap();\n//         }else{\n//\n//         }\n//     }, [ammMap, updateAmmMap]);\n//     React.useEffect(() => {\n//         switch (ammMapStatus) {\n//             case \"ERROR\":\n//                 console.log(\"ERROR\");\n//                 ammMapStatusUnset()\n//                 break;\n//             case \"PENDING\":\n//                 ammMapStatusUnset()\n//                 break;\n//             default:\n//                 break;\n//         }\n//     }, [ammMapStatus, ammMapStatusUnset]);\n//     return {\n//         ammMapObj: {\n//             ammMap,\n//             status: ammMapStatus,\n//             errorMessage: errorAmmMap\n//         }\n//     }\n// }","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Grid, Typography } from '@material-ui/core'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport {\n    AmmRecordTable,\n    AmmTradeType,\n    ChartType,\n    ScaleAreaChart,\n    TablePaddingX,\n    ToggleButtonGroup,\n    useSettings\n} from '@loopring-web/component-lib'\nimport { MyPoolRow as Row, MyPoolTable } from '@loopring-web/component-lib/components/tableList/myPoolTable';\nimport {\n    CoinInfo,\n    Currency,\n    getThousandFormattedNumbers,\n    PriceTag\n} from '@loopring-web/component-lib/src/static-resource';\nimport { AmmRecordRow } from '@loopring-web/component-lib/components/tableList/ammRecordTable/Interface';\nimport moment from 'moment';\n\n\n//TODO: FIXED:  demo data\nconst coinMap = {\n    ETH: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'ETH',\n        simpleName: 'ETH',\n        description: '',\n        company: 'ETH'\n    },\n    LRC: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'LRC',\n        simpleName: 'LRC',\n        description: '',\n        company: 'LRC'\n    },\n    USTD: {\n        icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n        name: 'USTD',\n        simpleName: 'USTD',\n        description: '',\n        company: 'USTD'\n    }\n}\nconst ammRecordArray:AmmRecordRow<any>[] = [\n    {\n        type: AmmTradeType.add,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-1, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.remove,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-100, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-15, 'days').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-3, 'hours').toDate().getTime()\n    },\n    {\n        type: AmmTradeType.swap,\n        coinA: coinMap[ 'ETH' ] as CoinInfo<any>,\n        coinB: coinMap[ 'LRC' ] as CoinInfo<any>,\n        totalDollar: 12,\n        totalYuan: 194.89,\n        amountA: 122,\n        amountB: 231,\n        time: moment().add(-75, 'second').toDate().getTime()\n    }\n]\nconst rawData: Row<any>[] = [\n    {\n        feeA:122,\n        feeB:21,\n        feeDollar: 0.0012,\n        feeYuan:  0.0312,\n        reward:123,\n        rewardToken:{\n            icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n            name: 'USDT',\n            simpleName: 'USDT',\n            description: '',\n            company: 'USDT'\n        },\n        balanceA:12131,\n        balanceB:0.0012,\n        balanceYuan: 1232131,\n        balanceDollar: 232,\n        ammDetail:  {\n            coinAInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'ETH',\n                simpleName: 'ETH',\n                description: '',\n                company: 'ETH'\n            },\n            coinBInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'LRC',\n                simpleName: 'LRC',\n                description: '',\n                company: 'LRC'\n            },\n            amountDollar: 12,\n            amountYuan: 194.89,\n            totalLPToken: 12132131,\n            totalA: 0.002,\n            totalB: 12344,\n            isNew: true,\n            isActivity: false,\n        }\n    },\n    {\n        feeA:122,\n        feeB:21,\n        feeDollar: 0.0012,\n        feeYuan:  0.0312,\n        reward:123,\n        rewardToken:{\n            icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n            name: 'USDT',\n            simpleName: 'USDT',\n            description: '',\n            company: 'USDT'\n        },\n        balanceA:12131,\n        balanceB:0.0012,\n        balanceYuan: 1232131,\n        balanceDollar: 232,\n        ammDetail:  {\n            coinAInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'ETH',\n                simpleName: 'ETH',\n                description: '',\n                company: 'ETH'\n            },\n            coinBInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'LRC',\n                simpleName: 'LRC',\n                description: '',\n                company: 'LRC'\n            },\n            amountDollar: 12,\n            amountYuan: 194.89,\n            totalLPToken: 12132131,\n            totalA: 0.002,\n            totalB: 12344,\n            isNew: true,\n            isActivity: false,\n        }\n    },\n    {\n        feeA:122,\n        feeB:21,\n        feeDollar: 0.0012,\n        feeYuan:  0.0312,\n        reward:123,\n        rewardToken:{\n            icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n            name: 'USDT',\n            simpleName: 'USDT',\n            description: '',\n            company: 'USDT'\n        },\n        balanceA:12131,\n        balanceB:0.0012,\n        balanceYuan: 1232131,\n        balanceDollar: 232,\n        ammDetail:  {\n            coinAInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'ETH',\n                simpleName: 'ETH',\n                description: '',\n                company: 'ETH'\n            },\n            coinBInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'LRC',\n                simpleName: 'LRC',\n                description: '',\n                company: 'LRC'\n            },\n            amountDollar: 12,\n            amountYuan: 194.89,\n            totalLPToken: 12132131,\n            totalA: 0.002,\n            totalB: 12344,\n            isNew: true,\n            isActivity: false,\n        }\n    },\n    {\n        feeA:122,\n        feeB:21,\n        feeDollar: 0.0012,\n        feeYuan:  0.0312,\n        reward:123,\n        rewardToken:{\n            icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n            name: 'USDT',\n            simpleName: 'USDT',\n            description: '',\n            company: 'USDT'\n        },\n        balanceA:12131,\n        balanceB:0.0012,\n        balanceYuan: 1232131,\n        balanceDollar: 232,\n        ammDetail:  {\n            coinAInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'ETH',\n                simpleName: 'ETH',\n                description: '',\n                company: 'ETH'\n            },\n            coinBInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'LRC',\n                simpleName: 'LRC',\n                description: '',\n                company: 'LRC'\n            },\n            amountDollar: 12,\n            amountYuan: 194.89,\n            totalLPToken: 12132131,\n            totalA: 0.002,\n            totalB: 12344,\n            isNew: true,\n            isActivity: false,\n        }\n    },\n    {\n        feeA:122,\n        feeB:21,\n        feeDollar: 0.0012,\n        feeYuan:  0.0312,\n        reward:123,\n        rewardToken:{\n            icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n            name: 'USDT',\n            simpleName: 'USDT',\n            description: '',\n            company: 'USDT'\n        },\n        balanceA:12131,\n        balanceB:0.0012,\n        balanceYuan: 1232131,\n        balanceDollar: 232,\n        ammDetail:  {\n            coinAInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x9A0aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'ETH',\n                simpleName: 'ETH',\n                description: '',\n                company: 'ETH'\n            },\n            coinBInfo: {\n                icon: 'https://exchange.loopring.io/assets/images/ethereum/assets/0x565aBA393aac4dFbFf4333B06c407458002C6183/logo.png',\n                name: 'LRC',\n                simpleName: 'LRC',\n                description: '',\n                company: 'LRC'\n            },\n            amountDollar: 12,\n            amountYuan: 194.89,\n            totalLPToken: 12132131,\n            totalA: 0.002,\n            totalB: 12344,\n            isNew: true,\n            isActivity: false,\n        }\n    },\n]\n\n\nconst toggleData = [\n    {value: '24 H', key: '24 H'},\n    {value: '1 W', key: '1 W'},\n    {value: 'ALL', key: 'ALL'},\n]\n\nconst StylePaper = styled(Box)`\n    width: 100%;\n    height: 100%;\n    flex: 1;\n` as typeof Box;\n\nconst StyleWrapper = styled(Grid)`\n  position: relative;\n  width: 100%;\n  background-color: ${({theme}) => theme.colorBase.background().default};\n  border-radius: ${({theme}) => theme.unit}px;\n` as typeof Grid\n\n\n\n// const StyleGrid = styled(Grid)`\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: space-around;\n// ` as typeof Grid\n\n\n\n\nconst StyledBtnGroupWrapper = styled(Box)`\n    position: absolute;\n    z-index: 99;\n    top: ${({ theme }) => theme.unit}px;\n    width: 100%;\n` as typeof Box\n\nconst  TableWrapStyled = styled(Grid)`\n  &{\n    background-color: ${({theme}) => theme.colorBase.background().default};\n    ${({theme}) => theme.border.defaultFrame({c_key: 'blur', d_R: 1})};\n  }\n \n  ${({theme}) => TablePaddingX({pLeft:theme.unit * 3,pRight:theme.unit * 3})}\n` as typeof Grid\n\nexport const LiquidityOverview = withTranslation('common')(({ t, ...rest }: WithTranslation) => {\n    const [chartPeriod, setChartPeriod] = React.useState('ALL');\n    const [page, setPage] = React.useState(  1);\n    const {currency} = useSettings();\n    const {totalDollar,totalYuan,totalFeeDollar,totalFeeYuan, totalMiningDollar, totalMiningYuan} = {\n        totalDollar :1000,\n        totalYuan:33,\n        totalFeeDollar:323,totalFeeYuan:12, totalMiningDollar:232, totalMiningYuan:35}\n\n    const _handlePageChange = React.useCallback((page: number) => {\n        setPage(page);\n        // updateData({actionType: ActionType.page, currPage: page})\n    }, [])\n    return (\n        <>\n            <StyleWrapper container  spacing={1} padding={3} margin={0} >\n                <Grid display={'flex'} flexDirection={'column'} justifyContent={'space-around'} item sm={3}>\n                    <Typography variant={'body1'} component={'h5'} color={'textSecondary'}>{t('labelTotalPositionValue')}</Typography>\n                    <Typography variant={'h4'} marginTop={1}>\n                        {totalDollar === undefined ? 'N/A' : currency === Currency.dollar ?  PriceTag.Dollar + getThousandFormattedNumbers(totalDollar)\n                            :  PriceTag.Yuan + getThousandFormattedNumbers(totalYuan as number)}\n                    </Typography>\n                </Grid>\n                <Grid display={'flex'} flexDirection={'column'} justifyContent={'space-around'} item sm={3}>\n                    <Typography variant={'body1'} component={'h5'} color={'textSecondary'}>{t('labelFeeRewards')}</Typography>\n                    <Typography variant={'h4'} marginTop={1}>\n                        {totalFeeDollar === undefined ? 'N/A' : currency === Currency.dollar ?  PriceTag.Dollar + getThousandFormattedNumbers(totalFeeDollar)\n                            :  PriceTag.Yuan + getThousandFormattedNumbers(totalFeeYuan as number)}\n                    </Typography>\n                </Grid>\n                <Grid display={'flex'} flexDirection={'column'} justifyContent={'space-around'} item sm={3}>\n                    <Typography variant={'body1'} component={'h5'} color={'textSecondary'}>{t('labelMiningRewards')}</Typography>\n                    <Typography variant={'h4'} marginTop={1}>\n                        {totalMiningDollar === undefined ? 'N/A' : currency === Currency.dollar ?  PriceTag.Dollar + getThousandFormattedNumbers(totalMiningDollar)\n                            :  PriceTag.Yuan + getThousandFormattedNumbers(totalMiningYuan as number)}\n                    </Typography>\n                </Grid>\n            </StyleWrapper>\n            <StyleWrapper container marginY={2} height={340} >\n                    <StyledBtnGroupWrapper display={'flex'} padding={3} justifyContent={'space-between'}>\n                        <Typography variant={'body1'} component={'h5'} color={'textSecondary'}>{t('labelLiquidityValue')}</Typography>\n                        <Box marginRight={-1}>\n                            <ToggleButtonGroup  exclusive size=\"small\" {...{ ...rest, t, data: toggleData, value: chartPeriod, setValue: setChartPeriod}} />\n                        </Box>\n                    </StyledBtnGroupWrapper>\n                    <ScaleAreaChart type={ChartType.Trend} data={[]} />\n            </StyleWrapper>\n            <Typography paddingLeft={2} variant={'h4'} >{t('labelMyAmm')}</Typography>\n            <TableWrapStyled container marginY={2} paddingY={2} flex={1} height={568}>\n                <Grid item xs={12} display={'flex'} flexDirection={'column'} >\n                    <MyPoolTable\n\n                        rawData={rawData}\n                        pagination= {{pageSize: 5}}\n                        handleDeposit={(row:any)=>{console.log()}}\n                        handleWithdraw={(row:any)=>{console.log()}}\n                        handlePageChange={()=>{}}\n                    />\n                </Grid>\n            </TableWrapStyled>\n            <Typography paddingLeft={2} variant={'h4'} >{t('labelMyAmmRecord')}</Typography>\n            <TableWrapStyled container marginY={2} paddingY={2} flex={1}>\n                <Grid item xs={12} display={'flex'} flexDirection={'column'}>\n                    <AmmRecordTable rawData={ammRecordArray} handlePageChange={_handlePageChange} page={page} />\n                </Grid>\n            </TableWrapStyled>\n        </>\n    )\n})","import { useRouteMatch } from 'react-router'\n\nimport { Box } from '@material-ui/core'\nimport {\n    SubMenu,\n    SubMenuList as BasicSubMenuList,\n} from '@loopring-web/component-lib'\nimport { withTranslation } from 'react-i18next'\nimport { subMenuLiquidity } from '@loopring-web/component-lib/src/static-resource'\nimport { PoolsPanel } from './PoolsPanel'\nimport { CoinPairPanel } from './CoinPairPanel';\nimport { AmmMiningView } from './AmmMining';\nimport { LiquidityOverview } from './LiquidityOverview'\n// import { useAmmPool } from './hook'\n\nexport const subMenu = subMenuLiquidity\n\nconst SubMenuList = withTranslation(['layout','common'], { withRef: true })(BasicSubMenuList);\nexport const LiquidityPage = () => {\n\n    // const { ammFee } = useAmmPool('LRC', 'ETH')\n    //\n    // console.log('--- > ammFee:', ammFee)\n    //\n    let match: any = useRouteMatch(['/liquidity/:item',':next/']);\n    const selected = match?.params.item ?? 'pools'\n    let matchPair: any = useRouteMatch(['/liquidity/:item/:next/:symbol']);\n    let symbol:any = undefined\n    if (matchPair && matchPair?.params?.next && matchPair.params.item === 'pools') {\n       if(!matchPair.params.symbol){\n           symbol='LRC-ETH';\n       }else{\n           symbol=matchPair.params.symbol;\n       }\n    }\n    \n    return (\n        <>\n            { symbol && <Box display={'flex'} flexDirection={'column'}  flex={1} alignSelf={'flex-start'}>\n              <CoinPairPanel />\n            </Box>\n            }\n            {!symbol && <>  <Box width={'200px'} display={'flex'} justifyContent={'stretch'} marginRight={3}>\n                    <SubMenu>\n                        <SubMenuList selected={selected} subMenu={subMenu as any} />\n                    </SubMenu>\n                </Box>\n                <Box  minHeight={420}  display={'flex'} alignItems={'stretch'} justifyContent={'stretch'} flexDirection=\"column\" marginTop={0} flex={1}>\n                    {(selected === 'pools' && !symbol ) && <PoolsPanel />}\n                    {(selected === 'amm-mining' && !symbol ) && <AmmMiningView />}\n                    {(selected === 'my-liquidity' && !symbol ) && <LiquidityOverview />}\n                    {selected === 'orderBook-Mining' && <AmmMiningView />}\n                    {/*{selected === 'orders' && <OrderPanel />}*/}\n                </Box>\n             </>\n            }\n        </>\n    )\n\n}\n","import { HashRouter as Router, Route, Switch, } from 'react-router-dom'\n\nimport Header from 'layouts/header'\n\nimport QuotePage from 'pages/QuotePage'\nimport SwapPage from 'pages/SwapPage'\n\nimport DebugPage from 'pages/DebugPage'\n\nimport Container from '@material-ui/core/Container'\nimport { Box } from '@material-ui/core'\nimport { DevWrapper } from '../provider/'\nimport { Layer2Page } from '../pages/Layer2Page'\nimport { LiquidityPage } from '../pages/LiquidityPage'\n\nconst RouterView = () => {\n    // const SwapPageWrap = ()=> <SwapPage />\n    // const QuotePageWrap = ()=> <SwapPage />\n    return <Router>\n        <Header/>\n\n        {/*<Box style={{marginTop: `var(--header-height)`}} flex={1} display={'flex'}>*/}\n        <Container maxWidth=\"lg\" style={{minHeight:'calc(100% - 64px - 32px)',display:'flex',flexDirection:'column'}}>\n            {/*style={{height: '100%' }}*/}\n            <Box display={'flex'} flex={1} alignItems={'stretch'} flexDirection={'row'} marginTop={3}  >\n                <Switch>\n                    <Route exact component={SwapPage} path='/'/>\n                    <Route exact component={QuotePage} path='/markets'/>\n                    <Route component={SwapPage} path='/trading/lite'/>\n                    <Route component={SwapPage} path='/trading/lite(/:symbol)'/>\n\n                    <Route exact component={Layer2Page} path='/layer2'/>\n                    <Route exact component={Layer2Page} path='/layer2/assets'/>\n                    <Route exact component={Layer2Page} path='/layer2/transactions'/>\n                    <Route exact component={Layer2Page} path='/layer2/trades'/>\n                    <Route exact component={Layer2Page} path='/layer2/orders'/>\n                    <Route exact component={Layer2Page} path='/layer2/setting'/>\n\n                    <Route exact component={LiquidityPage} path='/liquidity'/>\n                    <Route exact component={LiquidityPage} path='/liquidity/pools/*'/>\n                    <Route exact component={LiquidityPage} path='/liquidity/pools'/>\n                    {/*<Route exact component={LiquidityPage} path='/liquidity/pools/coinPair(/:symbol)'/>*/}\n                    <Route exact component={LiquidityPage} path='/liquidity/amm-mining'/>\n                    <Route exact component={LiquidityPage} path='/liquidity/my-liquidity'/>\n                    <Route exact component={LiquidityPage} path='/liquidity/orderBook-Mining'/>\n                    <Route exact component={LiquidityPage} path='/liquidity/maker-rebates'/>\n\n                    <DevWrapper>\n                        <Route exact path='/debug'>\n                            <DebugPage/>\n                        </Route>\n                    </DevWrapper>\n\n                </Switch>\n            </Box>\n        </Container>\n        {/*</Box>*/}\n\n    </Router>\n}\n\nexport default RouterView\n"],"sourceRoot":""}